<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>malloc (2 samples, 0.30%)</title><rect x="92.8" y="405" width="3.5" height="15.0" fill="rgb(246,93,47)" rx="2" ry="2" />
<text  x="95.78" y="415.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.30%)</title><rect x="84.0" y="373" width="3.5" height="15.0" fill="rgb(244,8,4)" rx="2" ry="2" />
<text  x="86.97" y="383.5" ></text>
</g>
<g >
<title>silk_encode_frame_FLP (38 samples, 5.67%)</title><rect x="985.7" y="245" width="66.9" height="15.0" fill="rgb(214,4,5)" rx="2" ry="2" />
<text  x="988.70" y="255.5" >silk_en..</text>
</g>
<g >
<title>webrtc::AudioEncoder::Encode(unsigned int, rtc::ArrayView&lt;short const, -4711l&gt;, rtc::BufferT&lt;unsigned char, false&gt;*) (47 samples, 7.01%)</title><rect x="969.9" y="341" width="82.7" height="15.0" fill="rgb(226,187,25)" rx="2" ry="2" />
<text  x="972.85" y="351.5" >webrtc::A..</text>
</g>
<g >
<title>vpx_sub_pixel_variance16x16_ssse3 (1 samples, 0.15%)</title><rect x="388.7" y="181" width="1.7" height="15.0" fill="rgb(246,11,0)" rx="2" ry="2" />
<text  x="391.66" y="191.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_half_loop (8 samples, 1.19%)</title><rect x="404.5" y="181" width="14.1" height="15.0" fill="rgb(214,109,16)" rx="2" ry="2" />
<text  x="407.51" y="191.5" ></text>
</g>
<g >
<title>webrtc::ReceiveStatisticsProxy::OnRenderedFrame(webrtc::VideoFrame const&amp;) (1 samples, 0.15%)</title><rect x="962.8" y="229" width="1.8" height="15.0" fill="rgb(233,36,39)" rx="2" ry="2" />
<text  x="965.81" y="239.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (1 samples, 0.15%)</title><rect x="1103.7" y="469" width="1.8" height="15.0" fill="rgb(241,104,29)" rx="2" ry="2" />
<text  x="1106.70" y="479.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.15%)</title><rect x="1112.5" y="437" width="1.8" height="15.0" fill="rgb(232,168,17)" rx="2" ry="2" />
<text  x="1115.51" y="447.5" ></text>
</g>
<g >
<title>mach_msg (28 samples, 4.18%)</title><rect x="1124.8" y="437" width="49.3" height="15.0" fill="rgb(213,33,16)" rx="2" ry="2" />
<text  x="1127.84" y="447.5" >mach..</text>
</g>
<g >
<title>mach_msg_trap (6 samples, 0.90%)</title><rect x="17.0" y="437" width="10.6" height="15.0" fill="rgb(235,178,51)" rx="2" ry="2" />
<text  x="20.04" y="447.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.15%)</title><rect x="1093.1" y="453" width="1.8" height="15.0" fill="rgb(233,116,32)" rx="2" ry="2" />
<text  x="1096.13" y="463.5" ></text>
</g>
<g >
<title>vp8_cal_sad (9 samples, 1.34%)</title><rect x="297.1" y="197" width="15.8" height="15.0" fill="rgb(220,155,41)" rx="2" ry="2" />
<text  x="300.07" y="207.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (4 samples, 0.60%)</title><rect x="621.1" y="213" width="7.1" height="15.0" fill="rgb(254,102,31)" rx="2" ry="2" />
<text  x="624.13" y="223.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.15%)</title><rect x="783.2" y="85" width="1.7" height="15.0" fill="rgb(254,168,45)" rx="2" ry="2" />
<text  x="786.16" y="95.5" ></text>
</g>
<g >
<title>webrtc::EncoderSimulcastProxy::GetEncoderInfo() const (1 samples, 0.15%)</title><rect x="117.4" y="325" width="1.8" height="15.0" fill="rgb(229,193,4)" rx="2" ry="2" />
<text  x="120.43" y="335.5" ></text>
</g>
<g >
<title>compute_mdcts (1 samples, 0.15%)</title><rect x="973.4" y="245" width="1.7" height="15.0" fill="rgb(245,5,43)" rx="2" ry="2" />
<text  x="976.37" y="255.5" ></text>
</g>
<g >
<title>vp8_pack_bitstream (66 samples, 9.85%)</title><rect x="642.3" y="261" width="116.2" height="15.0" fill="rgb(219,185,2)" rx="2" ry="2" />
<text  x="645.27" y="271.5" >vp8_pack_bitst..</text>
</g>
<g >
<title>vp8e_encode (374 samples, 55.82%)</title><rect x="119.2" y="293" width="658.7" height="15.0" fill="rgb(211,19,10)" rx="2" ry="2" />
<text  x="122.19" y="303.5" >vp8e_encode</text>
</g>
<g >
<title>vpx_post_proc_down_and_across_mb_row_sse2.acrossnextcol (12 samples, 1.79%)</title><rect x="790.2" y="229" width="21.1" height="15.0" fill="rgb(229,62,52)" rx="2" ry="2" />
<text  x="793.21" y="239.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::UnregisterTaskSource(scoped_refptr&lt;base::internal::TaskSource&gt;) (1 samples, 0.15%)</title><rect x="38.2" y="453" width="1.7" height="15.0" fill="rgb(233,59,26)" rx="2" ry="2" />
<text  x="41.18" y="463.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (4 samples, 0.60%)</title><rect x="342.9" y="181" width="7.0" height="15.0" fill="rgb(225,39,5)" rx="2" ry="2" />
<text  x="345.87" y="191.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.15%)</title><rect x="783.2" y="149" width="1.7" height="15.0" fill="rgb(205,79,28)" rx="2" ry="2" />
<text  x="786.16" y="159.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (582 samples, 86.87%)</title><rect x="48.7" y="453" width="1025.1" height="15.0" fill="rgb(232,6,49)" rx="2" ry="2" />
<text  x="51.75" y="463.5" >base::internal::TaskTracker::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool)</text>
</g>
<g >
<title>base::HistogramSamples::IncreaseSumAndCount(long long, int) (1 samples, 0.15%)</title><rect x="1109.0" y="405" width="1.7" height="15.0" fill="rgb(218,197,6)" rx="2" ry="2" />
<text  x="1111.99" y="415.5" ></text>
</g>
<g >
<title>base::WaitableEvent::PeekPort(unsigned int, bool) (8 samples, 1.19%)</title><rect x="13.5" y="469" width="14.1" height="15.0" fill="rgb(235,23,52)" rx="2" ry="2" />
<text  x="16.52" y="479.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (7 samples, 1.04%)</title><rect x="837.8" y="213" width="12.3" height="15.0" fill="rgb(246,94,8)" rx="2" ry="2" />
<text  x="840.76" y="223.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::OnWorkerBecomesIdleLockRequired(base::internal::WorkerThread*) (4 samples, 0.60%)</title><rect x="1107.2" y="453" width="7.1" height="15.0" fill="rgb(207,228,18)" rx="2" ry="2" />
<text  x="1110.22" y="463.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (2 samples, 0.30%)</title><rect x="80.4" y="293" width="3.6" height="15.0" fill="rgb(238,62,3)" rx="2" ry="2" />
<text  x="83.45" y="303.5" ></text>
</g>
<g >
<title>vp8_mv_bit_cost (1 samples, 0.15%)</title><rect x="482.0" y="197" width="1.8" height="15.0" fill="rgb(242,143,3)" rx="2" ry="2" />
<text  x="485.00" y="207.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetSleepTimeout() (1 samples, 0.15%)</title><rect x="1174.1" y="469" width="1.8" height="15.0" fill="rgb(213,32,51)" rx="2" ry="2" />
<text  x="1177.15" y="479.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.15%)</title><rect x="783.2" y="69" width="1.7" height="15.0" fill="rgb(210,220,5)" rx="2" ry="2" />
<text  x="786.16" y="79.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.15%)</title><rect x="779.6" y="213" width="1.8" height="15.0" fill="rgb(206,90,7)" rx="2" ry="2" />
<text  x="782.64" y="223.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::DecrementNumIncompleteTaskSources() (1 samples, 0.15%)</title><rect x="38.2" y="437" width="1.7" height="15.0" fill="rgb(229,13,8)" rx="2" ry="2" />
<text  x="41.18" y="447.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::SendToNetwork(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType) (2 samples, 0.30%)</title><rect x="784.9" y="213" width="3.5" height="15.0" fill="rgb(229,45,7)" rx="2" ry="2" />
<text  x="787.93" y="223.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (3 samples, 0.45%)</title><rect x="850.1" y="213" width="5.3" height="15.0" fill="rgb(232,150,22)" rx="2" ry="2" />
<text  x="853.09" y="223.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3 (1 samples, 0.15%)</title><rect x="209.0" y="165" width="1.8" height="15.0" fill="rgb(216,185,43)" rx="2" ry="2" />
<text  x="212.01" y="175.5" ></text>
</g>
<g >
<title>vp8_quantize_mb (11 samples, 1.64%)</title><rect x="214.3" y="197" width="19.4" height="15.0" fill="rgb(215,44,50)" rx="2" ry="2" />
<text  x="217.30" y="207.5" ></text>
</g>
<g >
<title>transient_analysis (3 samples, 0.45%)</title><rect x="978.7" y="245" width="5.2" height="15.0" fill="rgb(235,192,30)" rx="2" ry="2" />
<text  x="981.66" y="255.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3.vp8_filter_block1d8_v4_ssse3_loop (2 samples, 0.30%)</title><rect x="210.8" y="165" width="3.5" height="15.0" fill="rgb(252,56,20)" rx="2" ry="2" />
<text  x="213.78" y="175.5" ></text>
</g>
<g >
<title>vp8_loop_filter_vertical_edge_uv_sse2 (1 samples, 0.15%)</title><rect x="628.2" y="229" width="1.7" height="15.0" fill="rgb(213,146,25)" rx="2" ry="2" />
<text  x="631.18" y="239.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.15%)</title><rect x="1072.0" y="437" width="1.8" height="15.0" fill="rgb(250,39,38)" rx="2" ry="2" />
<text  x="1075.00" y="447.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs (3 samples, 0.45%)</title><rect x="464.4" y="181" width="5.3" height="15.0" fill="rgb(246,141,27)" rx="2" ry="2" />
<text  x="467.39" y="191.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (3 samples, 0.45%)</title><rect x="760.3" y="245" width="5.3" height="15.0" fill="rgb(228,126,13)" rx="2" ry="2" />
<text  x="763.27" y="255.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_y_sse2 (2 samples, 0.30%)</title><rect x="617.6" y="229" width="3.5" height="15.0" fill="rgb(237,207,36)" rx="2" ry="2" />
<text  x="620.61" y="239.5" ></text>
</g>
<g >
<title>webrtc::GoogCcNetworkController::OnSentPacket(webrtc::SentPacket) (1 samples, 0.15%)</title><rect x="112.1" y="357" width="1.8" height="15.0" fill="rgb(207,203,44)" rx="2" ry="2" />
<text  x="115.15" y="367.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.15%)</title><rect x="115.7" y="261" width="1.7" height="15.0" fill="rgb(214,145,37)" rx="2" ry="2" />
<text  x="118.67" y="271.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Reset() (8 samples, 1.19%)</title><rect x="13.5" y="485" width="14.1" height="15.0" fill="rgb(225,173,24)" rx="2" ry="2" />
<text  x="16.52" y="495.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (2 samples, 0.30%)</title><rect x="235.4" y="197" width="3.6" height="15.0" fill="rgb(249,89,50)" rx="2" ry="2" />
<text  x="238.43" y="207.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.15%)</title><rect x="783.2" y="133" width="1.7" height="15.0" fill="rgb(218,103,45)" rx="2" ry="2" />
<text  x="786.16" y="143.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.15%)</title><rect x="1052.6" y="293" width="1.8" height="15.0" fill="rgb(213,24,19)" rx="2" ry="2" />
<text  x="1055.63" y="303.5" ></text>
</g>
<g >
<title>webrtc::RateStatistics::EraseOld(long long) (1 samples, 0.15%)</title><rect x="788.4" y="213" width="1.8" height="15.0" fill="rgb(243,142,45)" rx="2" ry="2" />
<text  x="791.45" y="223.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.15%)</title><rect x="783.2" y="117" width="1.7" height="15.0" fill="rgb(217,45,31)" rx="2" ry="2" />
<text  x="786.16" y="127.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (6 samples, 0.90%)</title><rect x="203.7" y="181" width="10.6" height="15.0" fill="rgb(248,19,26)" rx="2" ry="2" />
<text  x="206.73" y="191.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (12 samples, 1.79%)</title><rect x="834.2" y="229" width="21.2" height="15.0" fill="rgb(246,176,12)" rx="2" ry="2" />
<text  x="837.24" y="239.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (5 samples, 0.75%)</title><rect x="142.1" y="229" width="8.8" height="15.0" fill="rgb(220,226,17)" rx="2" ry="2" />
<text  x="145.09" y="239.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.30%)</title><rect x="84.0" y="405" width="3.5" height="15.0" fill="rgb(245,113,53)" rx="2" ry="2" />
<text  x="86.97" y="415.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (4 samples, 0.60%)</title><rect x="76.9" y="357" width="7.1" height="15.0" fill="rgb(239,176,17)" rx="2" ry="2" />
<text  x="79.93" y="367.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.15%)</title><rect x="783.2" y="101" width="1.7" height="15.0" fill="rgb(236,196,9)" rx="2" ry="2" />
<text  x="786.16" y="111.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (13 samples, 1.94%)</title><rect x="191.4" y="197" width="22.9" height="15.0" fill="rgb(228,66,10)" rx="2" ry="2" />
<text  x="194.40" y="207.5" >v..</text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.15%)</title><rect x="59.3" y="309" width="1.8" height="15.0" fill="rgb(217,89,40)" rx="2" ry="2" />
<text  x="62.31" y="319.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.30%)</title><rect x="323.5" y="181" width="3.5" height="15.0" fill="rgb(208,120,7)" rx="2" ry="2" />
<text  x="326.49" y="191.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::RtpPacketSenderProxy::InsertPacket(webrtc::RtpPacketSender::Priority, unsigned int, unsigned short, long long, unsigned long, bool) (1 samples, 0.15%)</title><rect x="1057.9" y="293" width="1.8" height="15.0" fill="rgb(224,85,16)" rx="2" ry="2" />
<text  x="1060.91" y="303.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (1 samples, 0.15%)</title><rect x="836.0" y="213" width="1.8" height="15.0" fill="rgb(227,83,46)" rx="2" ry="2" />
<text  x="839.00" y="223.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.15%)</title><rect x="1103.7" y="421" width="1.8" height="15.0" fill="rgb(206,195,39)" rx="2" ry="2" />
<text  x="1106.70" y="431.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetIOAllowed(bool) (5 samples, 0.75%)</title><rect x="54.0" y="437" width="8.8" height="15.0" fill="rgb(212,50,28)" rx="2" ry="2" />
<text  x="57.03" y="447.5" ></text>
</g>
<g >
<title>vp8_estimate_entropy_savings (3 samples, 0.45%)</title><rect x="608.8" y="261" width="5.3" height="15.0" fill="rgb(232,205,15)" rx="2" ry="2" />
<text  x="611.81" y="271.5" ></text>
</g>
<g >
<title>silk_NLSF_encode (1 samples, 0.15%)</title><rect x="1029.7" y="181" width="1.8" height="15.0" fill="rgb(242,115,52)" rx="2" ry="2" />
<text  x="1032.73" y="191.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.15%)</title><rect x="32.9" y="453" width="1.8" height="15.0" fill="rgb(250,102,28)" rx="2" ry="2" />
<text  x="35.90" y="463.5" ></text>
</g>
<g >
<title>silk_NSQ_del_dec_c (23 samples, 3.43%)</title><rect x="987.5" y="213" width="40.5" height="15.0" fill="rgb(241,192,49)" rx="2" ry="2" />
<text  x="990.46" y="223.5" >sil..</text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.15%)</title><rect x="779.6" y="69" width="1.8" height="15.0" fill="rgb(216,82,4)" rx="2" ry="2" />
<text  x="782.64" y="79.5" ></text>
</g>
<g >
<title>vp8_hex_search (7 samples, 1.04%)</title><rect x="469.7" y="197" width="12.3" height="15.0" fill="rgb(245,204,52)" rx="2" ry="2" />
<text  x="472.67" y="207.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.15%)</title><rect x="1079.0" y="453" width="1.8" height="15.0" fill="rgb(247,143,38)" rx="2" ry="2" />
<text  x="1082.04" y="463.5" ></text>
</g>
<g >
<title>vp8_encode_bool (1 samples, 0.15%)</title><rect x="666.9" y="229" width="1.8" height="15.0" fill="rgb(236,39,12)" rx="2" ry="2" />
<text  x="669.93" y="239.5" ></text>
</g>
<g >
<title>all (670 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(249,56,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (1 samples, 0.15%)</title><rect x="341.1" y="165" width="1.8" height="15.0" fill="rgb(251,139,37)" rx="2" ry="2" />
<text  x="344.10" y="175.5" ></text>
</g>
<g >
<title>vp8_short_walsh4x4_sse2 (1 samples, 0.15%)</title><rect x="239.0" y="197" width="1.7" height="15.0" fill="rgb(212,84,42)" rx="2" ry="2" />
<text  x="241.96" y="207.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (3 samples, 0.45%)</title><rect x="48.7" y="437" width="5.3" height="15.0" fill="rgb(245,22,3)" rx="2" ry="2" />
<text  x="51.75" y="447.5" ></text>
</g>
<g >
<title>vpx_skin_pixel (1 samples, 0.15%)</title><rect x="767.3" y="261" width="1.8" height="15.0" fill="rgb(232,208,8)" rx="2" ry="2" />
<text  x="770.31" y="271.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.15%)</title><rect x="75.2" y="389" width="1.7" height="15.0" fill="rgb(234,93,3)" rx="2" ry="2" />
<text  x="78.16" y="399.5" ></text>
</g>
<g >
<title>base::debug::CollectStackTrace(void**, unsigned long) (1 samples, 0.15%)</title><rect x="55.8" y="405" width="1.8" height="15.0" fill="rgb(210,91,15)" rx="2" ry="2" />
<text  x="58.79" y="415.5" ></text>
</g>
<g >
<title>webrtc::video_coding::RtpFrameObject::~RtpFrameObject() (1 samples, 0.15%)</title><rect x="964.6" y="357" width="1.7" height="15.0" fill="rgb(239,162,8)" rx="2" ry="2" />
<text  x="967.57" y="367.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (4 samples, 0.60%)</title><rect x="76.9" y="373" width="7.1" height="15.0" fill="rgb(211,221,4)" rx="2" ry="2" />
<text  x="79.93" y="383.5" ></text>
</g>
<g >
<title>vp8_mv_pred (1 samples, 0.15%)</title><rect x="483.8" y="197" width="1.7" height="15.0" fill="rgb(239,136,37)" rx="2" ry="2" />
<text  x="486.76" y="207.5" ></text>
</g>
<g >
<title>silk_gains_quant (1 samples, 0.15%)</title><rect x="1050.9" y="213" width="1.7" height="15.0" fill="rgb(229,25,4)" rx="2" ry="2" />
<text  x="1053.87" y="223.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_zero_loop (1 samples, 0.15%)</title><rect x="436.2" y="181" width="1.8" height="15.0" fill="rgb(210,117,36)" rx="2" ry="2" />
<text  x="439.21" y="191.5" ></text>
</g>
<g >
<title>compute_theta (1 samples, 0.15%)</title><rect x="976.9" y="181" width="1.8" height="15.0" fill="rgb(222,49,38)" rx="2" ry="2" />
<text  x="979.90" y="191.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.15%)</title><rect x="193.2" y="181" width="1.7" height="15.0" fill="rgb(215,12,38)" rx="2" ry="2" />
<text  x="196.16" y="191.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (1 samples, 0.15%)</title><rect x="202.0" y="165" width="1.7" height="15.0" fill="rgb(221,83,49)" rx="2" ry="2" />
<text  x="204.97" y="175.5" ></text>
</g>
<g >
<title>vpx_dc_predictor_16x16_sse2.loop (2 samples, 0.30%)</title><rect x="485.5" y="197" width="3.5" height="15.0" fill="rgb(225,71,40)" rx="2" ry="2" />
<text  x="488.52" y="207.5" ></text>
</g>
<g >
<title>base::Histogram::ranges(unsigned int) const (2 samples, 0.30%)</title><rect x="48.7" y="421" width="3.6" height="15.0" fill="rgb(217,136,18)" rx="2" ry="2" />
<text  x="51.75" y="431.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (2 samples, 0.30%)</title><rect x="371.0" y="165" width="3.6" height="15.0" fill="rgb(221,214,35)" rx="2" ry="2" />
<text  x="374.04" y="175.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.15%)</title><rect x="59.3" y="389" width="1.8" height="15.0" fill="rgb(216,167,8)" rx="2" ry="2" />
<text  x="62.31" y="399.5" ></text>
</g>
<g >
<title>vp8_fast_quantize_b_ssse3 (9 samples, 1.34%)</title><rect x="217.8" y="181" width="15.9" height="15.0" fill="rgb(224,159,44)" rx="2" ry="2" />
<text  x="220.82" y="191.5" ></text>
</g>
<g >
<title>WebRtcOpus_Encode (47 samples, 7.01%)</title><rect x="969.9" y="309" width="82.7" height="15.0" fill="rgb(206,208,36)" rx="2" ry="2" />
<text  x="972.85" y="319.5" >WebRtcOpu..</text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (1 samples, 0.15%)</title><rect x="779.6" y="245" width="1.8" height="15.0" fill="rgb(234,159,30)" rx="2" ry="2" />
<text  x="782.64" y="255.5" ></text>
</g>
<g >
<title>silk_process_NLSFs_FLP (1 samples, 0.15%)</title><rect x="1029.7" y="213" width="1.8" height="15.0" fill="rgb(234,102,31)" rx="2" ry="2" />
<text  x="1032.73" y="223.5" ></text>
</g>
<g >
<title>vp8_build_intra_predictors_mby_s (2 samples, 0.30%)</title><rect x="293.6" y="197" width="3.5" height="15.0" fill="rgb(247,3,29)" rx="2" ry="2" />
<text  x="296.55" y="207.5" ></text>
</g>
<g >
<title>vp8cx_pick_filter_level_fast (4 samples, 0.60%)</title><rect x="635.2" y="245" width="7.1" height="15.0" fill="rgb(215,0,23)" rx="2" ry="2" />
<text  x="638.22" y="255.5" ></text>
</g>
<g >
<title>vp8_write_mvprobs (1 samples, 0.15%)</title><rect x="756.7" y="245" width="1.8" height="15.0" fill="rgb(234,179,43)" rx="2" ry="2" />
<text  x="759.75" y="255.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (4 samples, 0.60%)</title><rect x="621.1" y="229" width="7.1" height="15.0" fill="rgb(247,192,31)" rx="2" ry="2" />
<text  x="624.13" y="239.5" ></text>
</g>
<g >
<title>vp8_copy_and_extend_frame (5 samples, 0.75%)</title><rect x="769.1" y="245" width="8.8" height="15.0" fill="rgb(241,10,10)" rx="2" ry="2" />
<text  x="772.07" y="255.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (2 samples, 0.30%)</title><rect x="934.6" y="213" width="3.5" height="15.0" fill="rgb(251,112,16)" rx="2" ry="2" />
<text  x="937.63" y="223.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_other_loop (1 samples, 0.15%)</title><rect x="283.0" y="181" width="1.7" height="15.0" fill="rgb(251,69,48)" rx="2" ry="2" />
<text  x="285.99" y="191.5" ></text>
</g>
<g >
<title>vp8_loop_filter_row_normal (10 samples, 1.49%)</title><rect x="941.7" y="229" width="17.6" height="15.0" fill="rgb(230,229,27)" rx="2" ry="2" />
<text  x="944.67" y="239.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.15%)</title><rect x="59.3" y="373" width="1.8" height="15.0" fill="rgb(215,62,12)" rx="2" ry="2" />
<text  x="62.31" y="383.5" ></text>
</g>
<g >
<title>encode_mvcomponent (1 samples, 0.15%)</title><rect x="665.2" y="229" width="1.7" height="15.0" fill="rgb(226,16,1)" rx="2" ry="2" />
<text  x="668.16" y="239.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.15%)</title><rect x="1094.9" y="453" width="1.8" height="15.0" fill="rgb(245,162,50)" rx="2" ry="2" />
<text  x="1097.90" y="463.5" ></text>
</g>
<g >
<title>webrtc::RateStatistics::Update(unsigned long, long long) (1 samples, 0.15%)</title><rect x="788.4" y="229" width="1.8" height="15.0" fill="rgb(207,138,39)" rx="2" ry="2" />
<text  x="791.45" y="239.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_full_2x_sse2 (8 samples, 1.19%)</title><rect x="172.0" y="197" width="14.1" height="15.0" fill="rgb(241,218,10)" rx="2" ry="2" />
<text  x="175.03" y="207.5" ></text>
</g>
<g >
<title>silk_find_pred_coefs_FLP (1 samples, 0.15%)</title><rect x="1029.7" y="229" width="1.8" height="15.0" fill="rgb(239,17,52)" rx="2" ry="2" />
<text  x="1032.73" y="239.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.30%)</title><rect x="92.8" y="389" width="3.5" height="15.0" fill="rgb(205,34,54)" rx="2" ry="2" />
<text  x="95.78" y="399.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (4 samples, 0.60%)</title><rect x="76.9" y="341" width="7.1" height="15.0" fill="rgb(224,12,48)" rx="2" ry="2" />
<text  x="79.93" y="351.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (3 samples, 0.45%)</title><rect x="1087.9" y="469" width="5.2" height="15.0" fill="rgb(225,145,8)" rx="2" ry="2" />
<text  x="1090.85" y="479.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;base::internal::Task&gt;::front() (1 samples, 0.15%)</title><rect x="43.5" y="437" width="1.7" height="15.0" fill="rgb(220,23,39)" rx="2" ry="2" />
<text  x="46.46" y="447.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (3 samples, 0.45%)</title><rect x="1094.9" y="469" width="5.3" height="15.0" fill="rgb(229,88,30)" rx="2" ry="2" />
<text  x="1097.90" y="479.5" ></text>
</g>
<g >
<title>backtrace (1 samples, 0.15%)</title><rect x="55.8" y="389" width="1.8" height="15.0" fill="rgb(233,186,7)" rx="2" ry="2" />
<text  x="58.79" y="399.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (6 samples, 0.90%)</title><rect x="837.8" y="197" width="10.5" height="15.0" fill="rgb(225,229,44)" rx="2" ry="2" />
<text  x="840.76" y="207.5" ></text>
</g>
<g >
<title>-[NSAutoreleasePool drain] (1 samples, 0.15%)</title><rect x="10.0" y="485" width="1.8" height="15.0" fill="rgb(249,75,42)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>tiny_free_list_remove_ptr (1 samples, 0.15%)</title><rect x="75.2" y="373" width="1.7" height="15.0" fill="rgb(240,97,53)" rx="2" ry="2" />
<text  x="78.16" y="383.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_half_loop (2 samples, 0.30%)</title><rect x="279.5" y="181" width="3.5" height="15.0" fill="rgb(237,34,53)" rx="2" ry="2" />
<text  x="282.46" y="191.5" ></text>
</g>
<g >
<title>vpx_sad16x16_sse2 (1 samples, 0.15%)</title><rect x="489.0" y="197" width="1.8" height="15.0" fill="rgb(227,108,37)" rx="2" ry="2" />
<text  x="492.04" y="207.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (1 samples, 0.15%)</title><rect x="45.2" y="421" width="1.8" height="15.0" fill="rgb(253,88,35)" rx="2" ry="2" />
<text  x="48.22" y="431.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::SendToNetwork(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType) (3 samples, 0.45%)</title><rect x="1054.4" y="309" width="5.3" height="15.0" fill="rgb(216,150,45)" rx="2" ry="2" />
<text  x="1057.39" y="319.5" ></text>
</g>
<g >
<title>silk_NLSF_decode (1 samples, 0.15%)</title><rect x="1029.7" y="165" width="1.8" height="15.0" fill="rgb(221,7,46)" rx="2" ry="2" />
<text  x="1032.73" y="175.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3.filter_block1d8_h4_rowloop_ssse3 (1 samples, 0.15%)</title><rect x="235.4" y="181" width="1.8" height="15.0" fill="rgb(249,174,50)" rx="2" ry="2" />
<text  x="238.43" y="191.5" ></text>
</g>
<g >
<title>vp8_loopfilter_frame (16 samples, 2.39%)</title><rect x="614.1" y="261" width="28.2" height="15.0" fill="rgb(243,96,45)" rx="2" ry="2" />
<text  x="617.09" y="271.5" >v..</text>
</g>
<g >
<title>_pthread_mutex_firstfit_wake (1 samples, 0.15%)</title><rect x="1096.7" y="421" width="1.7" height="15.0" fill="rgb(247,133,33)" rx="2" ry="2" />
<text  x="1099.66" y="431.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.15%)</title><rect x="339.3" y="165" width="1.8" height="15.0" fill="rgb(236,131,35)" rx="2" ry="2" />
<text  x="342.34" y="175.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (1 samples, 0.15%)</title><rect x="779.6" y="261" width="1.8" height="15.0" fill="rgb(218,207,34)" rx="2" ry="2" />
<text  x="782.64" y="271.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.15%)</title><rect x="1059.7" y="341" width="1.7" height="15.0" fill="rgb(253,113,30)" rx="2" ry="2" />
<text  x="1062.67" y="351.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (3 samples, 0.45%)</title><rect x="334.1" y="165" width="5.2" height="15.0" fill="rgb(215,98,20)" rx="2" ry="2" />
<text  x="337.06" y="175.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.15%)</title><rect x="61.1" y="405" width="1.7" height="15.0" fill="rgb(216,224,33)" rx="2" ry="2" />
<text  x="64.07" y="415.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.15%)</title><rect x="1096.7" y="453" width="1.7" height="15.0" fill="rgb(214,59,27)" rx="2" ry="2" />
<text  x="1099.66" y="463.5" ></text>
</g>
<g >
<title>objc_autoreleasePoolPush (1 samples, 0.15%)</title><rect x="1177.7" y="437" width="1.7" height="15.0" fill="rgb(234,122,42)" rx="2" ry="2" />
<text  x="1180.67" y="447.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (3 samples, 0.45%)</title><rect x="87.5" y="421" width="5.3" height="15.0" fill="rgb(253,33,17)" rx="2" ry="2" />
<text  x="90.49" y="431.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::CanGetWorkLockRequired(base::internal::WorkerThread*) (9 samples, 1.34%)</title><rect x="1105.5" y="469" width="15.8" height="15.0" fill="rgb(239,104,27)" rx="2" ry="2" />
<text  x="1108.46" y="479.5" ></text>
</g>
<g >
<title>vp8_pack_tokens (49 samples, 7.31%)</title><rect x="670.4" y="245" width="86.3" height="15.0" fill="rgb(213,119,3)" rx="2" ry="2" />
<text  x="673.45" y="255.5" >vp8_pack_t..</text>
</g>
<g >
<title>small_free_list_remove_ptr_no_clear (1 samples, 0.15%)</title><rect x="73.4" y="389" width="1.8" height="15.0" fill="rgb(237,123,6)" rx="2" ry="2" />
<text  x="76.40" y="399.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelSend::SendData(webrtc::AudioFrameType, unsigned char, unsigned int, unsigned char const*, unsigned long) (4 samples, 0.60%)</title><rect x="1052.6" y="341" width="7.1" height="15.0" fill="rgb(238,135,16)" rx="2" ry="2" />
<text  x="1055.63" y="351.5" ></text>
</g>
<g >
<title>vp8_lookahead_push (5 samples, 0.75%)</title><rect x="769.1" y="261" width="8.8" height="15.0" fill="rgb(218,157,1)" rx="2" ry="2" />
<text  x="772.07" y="271.5" ></text>
</g>
<g >
<title>operator delete(void*) (1 samples, 0.15%)</title><rect x="103.3" y="373" width="1.8" height="15.0" fill="rgb(250,198,12)" rx="2" ry="2" />
<text  x="106.34" y="383.5" ></text>
</g>
<g >
<title>vp8_deblock (21 samples, 3.13%)</title><rect x="790.2" y="245" width="37.0" height="15.0" fill="rgb(249,46,7)" rx="2" ry="2" />
<text  x="793.21" y="255.5" >vp8..</text>
</g>
<g >
<title>write_component_probs (1 samples, 0.15%)</title><rect x="756.7" y="229" width="1.8" height="15.0" fill="rgb(216,14,48)" rx="2" ry="2" />
<text  x="759.75" y="239.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.15%)</title><rect x="1098.4" y="453" width="1.8" height="15.0" fill="rgb(232,56,7)" rx="2" ry="2" />
<text  x="1101.42" y="463.5" ></text>
</g>
<g >
<title>vp8cx_encode_inter_macroblock (257 samples, 38.36%)</title><rect x="150.9" y="229" width="452.6" height="15.0" fill="rgb(246,143,15)" rx="2" ry="2" />
<text  x="153.90" y="239.5" >vp8cx_encode_inter_macroblock</text>
</g>
<g >
<title>webrtc::AudioEncoderOpusImpl::EncodeImpl(unsigned int, rtc::ArrayView&lt;short const, -4711l&gt;, rtc::BufferT&lt;unsigned char, false&gt;*) (47 samples, 7.01%)</title><rect x="969.9" y="325" width="82.7" height="15.0" fill="rgb(209,148,14)" rx="2" ry="2" />
<text  x="972.85" y="335.5" >webrtc::A..</text>
</g>
<g >
<title>vp8_tree_probs_from_distribution (3 samples, 0.45%)</title><rect x="608.8" y="245" width="5.3" height="15.0" fill="rgb(209,143,18)" rx="2" ry="2" />
<text  x="611.81" y="255.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__tree_iterator&lt;webrtc::RtpPacketHistory::StoredPacket*, std::__Cr::__tree_node&lt;webrtc::RtpPacketHistory::StoredPacket*, void*&gt;*, long&gt;, bool&gt; std::__Cr::__tree&lt;webrtc::RtpPacketHistory::StoredPacket*, webrtc::RtpPacketHistory::MoreUseful, std::__Cr::allocator&lt;webrtc::RtpPacketHistory::StoredPacket*&gt; &gt;::__emplace_unique_key_args&lt;webrtc::RtpPacketHistory::StoredPacket*, webrtc::RtpPacketHistory::StoredPacket*&gt;(webrtc::RtpPacketHistory::StoredPacket* const&amp;, webrtc::RtpPacketHistory::StoredPacket*&amp;&amp;) (1 samples, 0.15%)</title><rect x="1054.4" y="277" width="1.7" height="15.0" fill="rgb(210,216,2)" rx="2" ry="2" />
<text  x="1057.39" y="287.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.15%)</title><rect x="119.2" y="277" width="1.8" height="15.0" fill="rgb(240,20,37)" rx="2" ry="2" />
<text  x="122.19" y="287.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::Encode(webrtc::VideoFrame const&amp;, std::__Cr::vector&lt;webrtc::VideoFrameType, std::__Cr::allocator&lt;webrtc::VideoFrameType&gt; &gt; const*) (381 samples, 56.87%)</title><rect x="119.2" y="325" width="671.0" height="15.0" fill="rgb(225,68,41)" rx="2" ry="2" />
<text  x="122.19" y="335.5" >webrtc::LibvpxVp8Encoder::Encode(webrtc::VideoFrame const&amp;, std::__Cr::vector&lt;webrtc::VideoF..</text>
</g>
<g >
<title>silk_inner_product_FLP (1 samples, 0.15%)</title><rect x="1028.0" y="197" width="1.7" height="15.0" fill="rgb(249,168,0)" rx="2" ry="2" />
<text  x="1030.97" y="207.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (2 samples, 0.30%)</title><rect x="31.1" y="469" width="3.6" height="15.0" fill="rgb(221,51,23)" rx="2" ry="2" />
<text  x="34.13" y="479.5" ></text>
</g>
<g >
<title>webrtc::GoogCcNetworkController::OnTransportPacketsFeedback(webrtc::TransportPacketsFeedback) (2 samples, 0.30%)</title><rect x="113.9" y="357" width="3.5" height="15.0" fill="rgb(206,46,3)" rx="2" ry="2" />
<text  x="116.91" y="367.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*) (2 samples, 0.30%)</title><rect x="1100.2" y="469" width="3.5" height="15.0" fill="rgb(235,111,13)" rx="2" ry="2" />
<text  x="1103.18" y="479.5" ></text>
</g>
<g >
<title>base::mac::ScopedNSAutoreleasePool::ScopedNSAutoreleasePool() (4 samples, 0.60%)</title><rect x="1175.9" y="485" width="7.1" height="15.0" fill="rgb(214,65,17)" rx="2" ry="2" />
<text  x="1178.91" y="495.5" ></text>
</g>
<g >
<title>_pthread_start (670 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(251,60,15)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >_pthread_start</text>
</g>
<g >
<title>check_dot_artifact_candidate (2 samples, 0.30%)</title><rect x="274.2" y="197" width="3.5" height="15.0" fill="rgb(250,151,10)" rx="2" ry="2" />
<text  x="277.18" y="207.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::MaybeScheduleAdjustMaxTasksLockRequired(base::internal::ThreadGroupImpl::ScopedWorkersExecutor*) (1 samples, 0.15%)</title><rect x="1101.9" y="453" width="1.8" height="15.0" fill="rgb(232,83,24)" rx="2" ry="2" />
<text  x="1104.94" y="463.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.60%)</title><rect x="76.9" y="389" width="7.1" height="15.0" fill="rgb(241,12,37)" rx="2" ry="2" />
<text  x="79.93" y="399.5" ></text>
</g>
<g >
<title>vp8_decode_mode_mvs (3 samples, 0.45%)</title><rect x="927.6" y="229" width="5.3" height="15.0" fill="rgb(210,49,8)" rx="2" ry="2" />
<text  x="930.58" y="239.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.15%)</title><rect x="115.7" y="245" width="1.7" height="15.0" fill="rgb(247,68,6)" rx="2" ry="2" />
<text  x="118.67" y="255.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.15%)</title><rect x="85.7" y="325" width="1.8" height="15.0" fill="rgb(205,152,30)" rx="2" ry="2" />
<text  x="88.73" y="335.5" ></text>
</g>
<g >
<title>webrtc::VCMEncodedFrame::~VCMEncodedFrame() (1 samples, 0.15%)</title><rect x="964.6" y="341" width="1.7" height="15.0" fill="rgb(237,179,12)" rx="2" ry="2" />
<text  x="967.57" y="351.5" ></text>
</g>
<g >
<title>webrtc::media_optimization::VCMLossProtectionLogic::UpdatePacketsPerFrame(float, long long) (1 samples, 0.15%)</title><rect x="781.4" y="229" width="1.8" height="15.0" fill="rgb(222,194,29)" rx="2" ry="2" />
<text  x="784.40" y="239.5" ></text>
</g>
<g >
<title>base::internal::TaskTrackerPosix::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (583 samples, 87.01%)</title><rect x="47.0" y="469" width="1026.8" height="15.0" fill="rgb(252,212,49)" rx="2" ry="2" />
<text  x="49.99" y="479.5" >base::internal::TaskTrackerPosix::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool)</text>
</g>
<g >
<title>tiny_size (1 samples, 0.15%)</title><rect x="98.1" y="357" width="1.7" height="15.0" fill="rgb(233,98,21)" rx="2" ry="2" />
<text  x="101.06" y="367.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.15%)</title><rect x="61.1" y="341" width="1.7" height="15.0" fill="rgb(248,99,31)" rx="2" ry="2" />
<text  x="64.07" y="351.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.15%)</title><rect x="1059.7" y="261" width="1.7" height="15.0" fill="rgb(250,49,29)" rx="2" ry="2" />
<text  x="1062.67" y="271.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3.filter_block1d8_h4_rowloop_ssse3 (1 samples, 0.15%)</title><rect x="850.1" y="197" width="1.8" height="15.0" fill="rgb(242,24,37)" rx="2" ry="2" />
<text  x="853.09" y="207.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_other_loop (4 samples, 0.60%)</title><rect x="392.2" y="181" width="7.0" height="15.0" fill="rgb(234,76,12)" rx="2" ry="2" />
<text  x="395.18" y="191.5" ></text>
</g>
<g >
<title>extend_plane (1 samples, 0.15%)</title><rect x="765.6" y="245" width="1.7" height="15.0" fill="rgb(235,33,36)" rx="2" ry="2" />
<text  x="768.55" y="255.5" ></text>
</g>
<g >
<title>vpx_variance16x16_avx2 (3 samples, 0.45%)</title><rect x="288.3" y="181" width="5.3" height="15.0" fill="rgb(213,108,29)" rx="2" ry="2" />
<text  x="291.27" y="191.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3.vp8_filter_block1d8_v6_ssse3_loop (1 samples, 0.15%)</title><rect x="853.6" y="197" width="1.8" height="15.0" fill="rgb(228,1,39)" rx="2" ry="2" />
<text  x="856.61" y="207.5" ></text>
</g>
<g >
<title>vp8_post_proc_frame (21 samples, 3.13%)</title><rect x="790.2" y="261" width="37.0" height="15.0" fill="rgb(216,31,25)" rx="2" ry="2" />
<text  x="793.21" y="271.5" >vp8..</text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.15%)</title><rect x="1093.1" y="405" width="1.8" height="15.0" fill="rgb(229,128,25)" rx="2" ry="2" />
<text  x="1096.13" y="415.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::GetEncodedPartitions(webrtc::VideoFrame const&amp;, bool) (6 samples, 0.90%)</title><rect x="779.6" y="309" width="10.6" height="15.0" fill="rgb(219,145,19)" rx="2" ry="2" />
<text  x="782.64" y="319.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::AssertNoLockHeldOnCurrentThread() (1 samples, 0.15%)</title><rect x="1103.7" y="453" width="1.8" height="15.0" fill="rgb(235,148,35)" rx="2" ry="2" />
<text  x="1106.70" y="463.5" ></text>
</g>
<g >
<title>quant_partition (1 samples, 0.15%)</title><rect x="976.9" y="197" width="1.8" height="15.0" fill="rgb(212,52,0)" rx="2" ry="2" />
<text  x="979.90" y="207.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.15%)</title><rect x="87.5" y="389" width="1.8" height="15.0" fill="rgb(216,117,41)" rx="2" ry="2" />
<text  x="90.49" y="399.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.15%)</title><rect x="1096.7" y="437" width="1.7" height="15.0" fill="rgb(231,153,41)" rx="2" ry="2" />
<text  x="1099.66" y="447.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::MallocImpl(base::allocator::AllocatorDispatch const*, unsigned long, void*) (1 samples, 0.15%)</title><rect x="76.9" y="325" width="1.8" height="15.0" fill="rgb(235,197,2)" rx="2" ry="2" />
<text  x="79.93" y="335.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_other_loop (1 samples, 0.15%)</title><rect x="286.5" y="181" width="1.8" height="15.0" fill="rgb(241,117,32)" rx="2" ry="2" />
<text  x="289.51" y="191.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.15%)</title><rect x="91.0" y="405" width="1.8" height="15.0" fill="rgb(236,54,19)" rx="2" ry="2" />
<text  x="94.01" y="415.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::GetNumQueuedCanRunBestEffortTaskSources() const (1 samples, 0.15%)</title><rect x="1100.2" y="453" width="1.7" height="15.0" fill="rgb(228,181,46)" rx="2" ry="2" />
<text  x="1103.18" y="463.5" ></text>
</g>
<g >
<title>vpx_subtract_block_sse2.loop_8 (2 samples, 0.30%)</title><rect x="600.0" y="213" width="3.5" height="15.0" fill="rgb(239,192,12)" rx="2" ry="2" />
<text  x="603.00" y="223.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.15%)</title><rect x="1093.1" y="421" width="1.8" height="15.0" fill="rgb(216,201,46)" rx="2" ry="2" />
<text  x="1096.13" y="431.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (4 samples, 0.60%)</title><rect x="76.9" y="405" width="7.1" height="15.0" fill="rgb(250,158,24)" rx="2" ry="2" />
<text  x="79.93" y="415.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetWaitAllowed(bool) (5 samples, 0.75%)</title><rect x="87.5" y="437" width="8.8" height="15.0" fill="rgb(243,136,3)" rx="2" ry="2" />
<text  x="90.49" y="447.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.15%)</title><rect x="1059.7" y="325" width="1.7" height="15.0" fill="rgb(253,198,11)" rx="2" ry="2" />
<text  x="1062.67" y="335.5" ></text>
</g>
<g >
<title>base::debug::CollectStackTrace(void**, unsigned long) (2 samples, 0.30%)</title><rect x="62.8" y="405" width="3.6" height="15.0" fill="rgb(238,49,38)" rx="2" ry="2" />
<text  x="65.84" y="415.5" ></text>
</g>
<g >
<title>base::internal::DelayedTaskManager::AddDelayedTask(base::internal::Task, base::OnceCallback&lt;void (base::internal::Task)&gt;, scoped_refptr&lt;base::TaskRunner&gt;) (1 samples, 0.15%)</title><rect x="1059.7" y="309" width="1.7" height="15.0" fill="rgb(228,205,41)" rx="2" ry="2" />
<text  x="1062.67" y="319.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (1 samples, 0.15%)</title><rect x="848.3" y="197" width="1.8" height="15.0" fill="rgb(245,174,43)" rx="2" ry="2" />
<text  x="851.33" y="207.5" ></text>
</g>
<g >
<title>free (1 samples, 0.15%)</title><rect x="1065.0" y="405" width="1.7" height="15.0" fill="rgb(215,111,46)" rx="2" ry="2" />
<text  x="1067.96" y="415.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.15%)</title><rect x="39.9" y="437" width="1.8" height="15.0" fill="rgb(235,114,42)" rx="2" ry="2" />
<text  x="42.94" y="447.5" ></text>
</g>
<g >
<title>webrtc::video_coding::FrameBuffer::GetNextFrame() (2 samples, 0.30%)</title><rect x="1061.4" y="341" width="3.6" height="15.0" fill="rgb(210,73,32)" rx="2" ry="2" />
<text  x="1064.43" y="351.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (10 samples, 1.49%)</title><rect x="66.4" y="421" width="17.6" height="15.0" fill="rgb(216,170,50)" rx="2" ry="2" />
<text  x="69.36" y="431.5" ></text>
</g>
<g >
<title>free (3 samples, 0.45%)</title><rect x="66.4" y="405" width="5.2" height="15.0" fill="rgb(224,170,42)" rx="2" ry="2" />
<text  x="69.36" y="415.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (2 samples, 0.30%)</title><rect x="84.0" y="341" width="3.5" height="15.0" fill="rgb(249,186,10)" rx="2" ry="2" />
<text  x="86.97" y="351.5" ></text>
</g>
<g >
<title>vp8_receive_raw_frame (5 samples, 0.75%)</title><rect x="769.1" y="277" width="8.8" height="15.0" fill="rgb(224,147,54)" rx="2" ry="2" />
<text  x="772.07" y="287.5" ></text>
</g>
<g >
<title>default_zone_malloc (1 samples, 0.15%)</title><rect x="94.5" y="357" width="1.8" height="15.0" fill="rgb(232,6,29)" rx="2" ry="2" />
<text  x="97.54" y="367.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (1 samples, 0.15%)</title><rect x="640.5" y="213" width="1.8" height="15.0" fill="rgb(238,191,50)" rx="2" ry="2" />
<text  x="643.51" y="223.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.15%)</title><rect x="1094.9" y="437" width="1.8" height="15.0" fill="rgb(252,128,13)" rx="2" ry="2" />
<text  x="1097.90" y="447.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_half_loop (1 samples, 0.15%)</title><rect x="390.4" y="181" width="1.8" height="15.0" fill="rgb(221,31,33)" rx="2" ry="2" />
<text  x="393.42" y="191.5" ></text>
</g>
<g >
<title>objc_msgSend (4 samples, 0.60%)</title><rect x="1183.0" y="501" width="7.0" height="15.0" fill="rgb(250,46,33)" rx="2" ry="2" />
<text  x="1185.96" y="511.5" ></text>
</g>
<g >
<title>base::Histogram::ranges(unsigned int) const (1 samples, 0.15%)</title><rect x="1107.2" y="421" width="1.8" height="15.0" fill="rgb(215,217,5)" rx="2" ry="2" />
<text  x="1110.22" y="431.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.15%)</title><rect x="1112.5" y="421" width="1.8" height="15.0" fill="rgb(244,153,26)" rx="2" ry="2" />
<text  x="1115.51" y="431.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::~Transaction() (1 samples, 0.15%)</title><rect x="11.8" y="469" width="1.7" height="15.0" fill="rgb(215,206,1)" rx="2" ry="2" />
<text  x="14.76" y="479.5" ></text>
</g>
<g >
<title>vp8_decode_mb_tokens (39 samples, 5.82%)</title><rect x="858.9" y="229" width="68.7" height="15.0" fill="rgb(239,67,48)" rx="2" ry="2" />
<text  x="861.90" y="239.5" >vp8_dec..</text>
</g>
<g >
<title>webrtc::FecControllerDefault::UpdateWithEncodedData(unsigned long, webrtc::VideoFrameType) (1 samples, 0.15%)</title><rect x="781.4" y="245" width="1.8" height="15.0" fill="rgb(218,31,46)" rx="2" ry="2" />
<text  x="784.40" y="255.5" ></text>
</g>
<g >
<title>vp8_encode_motion_vector (2 samples, 0.30%)</title><rect x="665.2" y="245" width="3.5" height="15.0" fill="rgb(212,167,34)" rx="2" ry="2" />
<text  x="668.16" y="255.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::GetEncoderInfo() const (1 samples, 0.15%)</title><rect x="117.4" y="309" width="1.8" height="15.0" fill="rgb(223,126,36)" rx="2" ry="2" />
<text  x="120.43" y="319.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::GetBucketIndex(int) const (1 samples, 0.15%)</title><rect x="1110.7" y="405" width="1.8" height="15.0" fill="rgb(244,106,31)" rx="2" ry="2" />
<text  x="1113.75" y="415.5" ></text>
</g>
<g >
<title>copy_and_extend_plane (5 samples, 0.75%)</title><rect x="769.1" y="229" width="8.8" height="15.0" fill="rgb(217,59,52)" rx="2" ry="2" />
<text  x="772.07" y="239.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bh_y_sse2 (1 samples, 0.15%)</title><rect x="614.1" y="229" width="1.8" height="15.0" fill="rgb(230,222,45)" rx="2" ry="2" />
<text  x="617.09" y="239.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.15%)</title><rect x="39.9" y="453" width="1.8" height="15.0" fill="rgb(241,70,10)" rx="2" ry="2" />
<text  x="42.94" y="463.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3 (1 samples, 0.15%)</title><rect x="374.6" y="165" width="1.7" height="15.0" fill="rgb(243,141,22)" rx="2" ry="2" />
<text  x="377.57" y="175.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (3 samples, 0.45%)</title><rect x="196.7" y="165" width="5.3" height="15.0" fill="rgb(224,52,18)" rx="2" ry="2" />
<text  x="199.69" y="175.5" ></text>
</g>
<g >
<title>clt_mdct_forward_c (1 samples, 0.15%)</title><rect x="973.4" y="229" width="1.7" height="15.0" fill="rgb(208,56,10)" rx="2" ry="2" />
<text  x="976.37" y="239.5" ></text>
</g>
<g >
<title>vp8_decode_frame (75 samples, 11.19%)</title><rect x="827.2" y="245" width="132.1" height="15.0" fill="rgb(216,136,30)" rx="2" ry="2" />
<text  x="830.19" y="255.5" >vp8_decode_frame</text>
</g>
<g >
<title>vp8_setup_intra_recon (1 samples, 0.15%)</title><rect x="605.3" y="229" width="1.7" height="15.0" fill="rgb(249,101,29)" rx="2" ry="2" />
<text  x="608.28" y="239.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_uv_sse2 (1 samples, 0.15%)</title><rect x="957.5" y="213" width="1.8" height="15.0" fill="rgb(230,189,5)" rx="2" ry="2" />
<text  x="960.52" y="223.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::PutRtpPacket(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType, absl::optional&lt;long long&gt;) (2 samples, 0.30%)</title><rect x="1054.4" y="293" width="3.5" height="15.0" fill="rgb(243,93,2)" rx="2" ry="2" />
<text  x="1057.39" y="303.5" ></text>
</g>
<g >
<title>webrtc::PacedSender::InsertPacket(webrtc::RtpPacketSender::Priority, unsigned int, unsigned short, long long, unsigned long, bool) (1 samples, 0.15%)</title><rect x="1057.9" y="277" width="1.8" height="15.0" fill="rgb(207,151,1)" rx="2" ry="2" />
<text  x="1060.91" y="287.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderVideo::SendVideo(webrtc::VideoFrameType, signed char, unsigned int, long long, unsigned char const*, unsigned long, webrtc::RTPFragmentationHeader const*, webrtc::RTPVideoHeader const*, absl::optional&lt;long long&gt;) (4 samples, 0.60%)</title><rect x="783.2" y="245" width="7.0" height="15.0" fill="rgb(220,74,53)" rx="2" ry="2" />
<text  x="786.16" y="255.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.15%)</title><rect x="87.5" y="405" width="1.8" height="15.0" fill="rgb(226,196,10)" rx="2" ry="2" />
<text  x="90.49" y="415.5" ></text>
</g>
<g >
<title>silk_autocorrelation_FLP (1 samples, 0.15%)</title><rect x="1028.0" y="213" width="1.7" height="15.0" fill="rgb(242,131,13)" rx="2" ry="2" />
<text  x="1030.97" y="223.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderAudio::SendAudio(webrtc::AudioFrameType, signed char, unsigned int, unsigned char const*, unsigned long) (4 samples, 0.60%)</title><rect x="1052.6" y="325" width="7.1" height="15.0" fill="rgb(246,171,0)" rx="2" ry="2" />
<text  x="1055.63" y="335.5" ></text>
</g>
<g >
<title>0x7fff731fdbe0 (1 samples, 0.15%)</title><rect x="781.4" y="213" width="1.8" height="15.0" fill="rgb(230,103,9)" rx="2" ry="2" />
<text  x="784.40" y="223.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (3 samples, 0.45%)</title><rect x="166.7" y="197" width="5.3" height="15.0" fill="rgb(232,113,23)" rx="2" ry="2" />
<text  x="169.75" y="207.5" ></text>
</g>
<g >
<title>vp8_denoiser_filter_sse2 (8 samples, 1.19%)</title><rect x="349.9" y="181" width="14.1" height="15.0" fill="rgb(251,154,46)" rx="2" ry="2" />
<text  x="352.91" y="191.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_y_sse2 (3 samples, 0.45%)</title><rect x="947.0" y="213" width="5.2" height="15.0" fill="rgb(214,212,42)" rx="2" ry="2" />
<text  x="949.96" y="223.5" ></text>
</g>
<g >
<title>vp8_encode_frame (269 samples, 40.15%)</title><rect x="135.0" y="261" width="473.8" height="15.0" fill="rgb(210,123,12)" rx="2" ry="2" />
<text  x="138.04" y="271.5" >vp8_encode_frame</text>
</g>
<g >
<title>vp8_find_near_mvs_bias (3 samples, 0.45%)</title><rect x="464.4" y="197" width="5.3" height="15.0" fill="rgb(254,71,50)" rx="2" ry="2" />
<text  x="467.39" y="207.5" ></text>
</g>
<g >
<title>vpx_codec_encode (374 samples, 55.82%)</title><rect x="119.2" y="309" width="658.7" height="15.0" fill="rgb(205,75,10)" rx="2" ry="2" />
<text  x="122.19" y="319.5" >vpx_codec_encode</text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (2 samples, 0.30%)</title><rect x="1075.5" y="453" width="3.5" height="15.0" fill="rgb(222,132,34)" rx="2" ry="2" />
<text  x="1078.52" y="463.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_uv_sse2 (3 samples, 0.45%)</title><rect x="629.9" y="229" width="5.3" height="15.0" fill="rgb(251,203,31)" rx="2" ry="2" />
<text  x="632.94" y="239.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;base::internal::Task&gt;::pop_front() (1 samples, 0.15%)</title><rect x="45.2" y="437" width="1.8" height="15.0" fill="rgb(210,42,34)" rx="2" ry="2" />
<text  x="48.22" y="447.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.15%)</title><rect x="367.5" y="165" width="1.8" height="15.0" fill="rgb(205,12,25)" rx="2" ry="2" />
<text  x="370.52" y="175.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbh_sse2 (1 samples, 0.15%)</title><rect x="369.3" y="181" width="1.7" height="15.0" fill="rgb(244,19,38)" rx="2" ry="2" />
<text  x="372.28" y="191.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskBase::Run() (3 samples, 0.45%)</title><rect x="1059.7" y="373" width="5.3" height="15.0" fill="rgb(229,140,0)" rx="2" ry="2" />
<text  x="1062.67" y="383.5" ></text>
</g>
<g >
<title>mach_msg_trap (28 samples, 4.18%)</title><rect x="1124.8" y="421" width="49.3" height="15.0" fill="rgb(224,4,50)" rx="2" ry="2" />
<text  x="1127.84" y="431.5" >mach..</text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.15%)</title><rect x="57.6" y="405" width="1.7" height="15.0" fill="rgb(212,57,32)" rx="2" ry="2" />
<text  x="60.55" y="415.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_zero_loop (3 samples, 0.45%)</title><rect x="399.2" y="181" width="5.3" height="15.0" fill="rgb(243,82,42)" rx="2" ry="2" />
<text  x="402.22" y="191.5" ></text>
</g>
<g >
<title>webrtc::RealTimeClock::TimeInMilliseconds() (1 samples, 0.15%)</title><rect x="966.3" y="341" width="1.8" height="15.0" fill="rgb(212,143,20)" rx="2" ry="2" />
<text  x="969.33" y="351.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::CullOldPackets(long long) (1 samples, 0.15%)</title><rect x="1056.1" y="277" width="1.8" height="15.0" fill="rgb(212,181,30)" rx="2" ry="2" />
<text  x="1059.15" y="287.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoSender::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (5 samples, 0.75%)</title><rect x="781.4" y="261" width="8.8" height="15.0" fill="rgb(233,225,53)" rx="2" ry="2" />
<text  x="784.40" y="271.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.15%)</title><rect x="115.7" y="309" width="1.7" height="15.0" fill="rgb(228,147,42)" rx="2" ry="2" />
<text  x="118.67" y="319.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3 (1 samples, 0.15%)</title><rect x="193.2" y="165" width="1.7" height="15.0" fill="rgb(236,209,18)" rx="2" ry="2" />
<text  x="196.16" y="175.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.30%)</title><rect x="27.6" y="469" width="3.5" height="15.0" fill="rgb(233,97,41)" rx="2" ry="2" />
<text  x="30.61" y="479.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (6 samples, 0.90%)</title><rect x="779.6" y="293" width="10.6" height="15.0" fill="rgb(209,23,2)" rx="2" ry="2" />
<text  x="782.64" y="303.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.15%)</title><rect x="1059.7" y="245" width="1.7" height="15.0" fill="rgb(212,214,45)" rx="2" ry="2" />
<text  x="1062.67" y="255.5" ></text>
</g>
<g >
<title>silk_noise_shape_quantizer_del_dec (22 samples, 3.28%)</title><rect x="989.2" y="197" width="38.8" height="15.0" fill="rgb(226,11,27)" rx="2" ry="2" />
<text  x="992.22" y="207.5" >sil..</text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (2 samples, 0.30%)</title><rect x="1109.0" y="421" width="3.5" height="15.0" fill="rgb(231,10,37)" rx="2" ry="2" />
<text  x="1111.99" y="431.5" ></text>
</g>
<g >
<title>vpx_post_proc_down_and_across_mb_row_sse2.nextcol (9 samples, 1.34%)</title><rect x="811.3" y="229" width="15.9" height="15.0" fill="rgb(246,79,41)" rx="2" ry="2" />
<text  x="814.34" y="239.5" ></text>
</g>
<g >
<title>vp8_cost_mv_ref (1 samples, 0.15%)</title><rect x="316.4" y="197" width="1.8" height="15.0" fill="rgb(205,200,25)" rx="2" ry="2" />
<text  x="319.45" y="207.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_sse2 (1 samples, 0.15%)</title><rect x="615.9" y="229" width="1.7" height="15.0" fill="rgb(244,21,0)" rx="2" ry="2" />
<text  x="618.85" y="239.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs (1 samples, 0.15%)</title><rect x="668.7" y="245" width="1.7" height="15.0" fill="rgb(229,13,38)" rx="2" ry="2" />
<text  x="671.69" y="255.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.15%)</title><rect x="1059.7" y="277" width="1.7" height="15.0" fill="rgb(226,17,30)" rx="2" ry="2" />
<text  x="1062.67" y="287.5" ></text>
</g>
<g >
<title>webrtc::RtcEventLogImpl::LogToMemory(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;) (3 samples, 0.45%)</title><rect x="106.9" y="341" width="5.2" height="15.0" fill="rgb(251,213,17)" rx="2" ry="2" />
<text  x="109.87" y="351.5" ></text>
</g>
<g >
<title>encode_mb_row (267 samples, 39.85%)</title><rect x="135.0" y="245" width="470.3" height="15.0" fill="rgb(205,219,20)" rx="2" ry="2" />
<text  x="138.04" y="255.5" >encode_mb_row</text>
</g>
<g >
<title>evaluate_inter_mode (9 samples, 1.34%)</title><rect x="277.7" y="197" width="15.9" height="15.0" fill="rgb(222,214,53)" rx="2" ry="2" />
<text  x="280.70" y="207.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (1 samples, 0.15%)</title><rect x="779.6" y="133" width="1.8" height="15.0" fill="rgb(218,219,15)" rx="2" ry="2" />
<text  x="782.64" y="143.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostDelayedTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;, unsigned int) (1 samples, 0.15%)</title><rect x="1059.7" y="357" width="1.7" height="15.0" fill="rgb(212,181,53)" rx="2" ry="2" />
<text  x="1062.67" y="367.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (1 samples, 0.15%)</title><rect x="779.6" y="117" width="1.8" height="15.0" fill="rgb(249,119,47)" rx="2" ry="2" />
<text  x="782.64" y="127.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::RtpTransportControllerSend::OnTransportFeedback(webrtc::rtcp::TransportFeedback const&amp;)::$_12&gt;::Run() (2 samples, 0.30%)</title><rect x="113.9" y="373" width="3.5" height="15.0" fill="rgb(242,107,10)" rx="2" ry="2" />
<text  x="116.91" y="383.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.15%)</title><rect x="29.4" y="453" width="1.7" height="15.0" fill="rgb(245,80,29)" rx="2" ry="2" />
<text  x="32.37" y="463.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.15%)</title><rect x="11.8" y="485" width="1.7" height="15.0" fill="rgb(218,85,24)" rx="2" ry="2" />
<text  x="14.76" y="495.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateRawExtension(int, unsigned long) (1 samples, 0.15%)</title><rect x="783.2" y="197" width="1.7" height="15.0" fill="rgb(251,215,7)" rx="2" ry="2" />
<text  x="786.16" y="207.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.15%)</title><rect x="61.1" y="357" width="1.7" height="15.0" fill="rgb(221,50,28)" rx="2" ry="2" />
<text  x="64.07" y="367.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::RunTask((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (550 samples, 82.09%)</title><rect x="96.3" y="389" width="968.7" height="15.0" fill="rgb(222,112,53)" rx="2" ry="2" />
<text  x="99.30" y="399.5" >(anonymous namespace)::WebrtcTaskQueue::RunTask((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, s..</text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (2 samples, 0.30%)</title><rect x="952.2" y="197" width="3.6" height="15.0" fill="rgb(243,165,45)" rx="2" ry="2" />
<text  x="955.24" y="207.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.15%)</title><rect x="64.6" y="373" width="1.8" height="15.0" fill="rgb(218,202,28)" rx="2" ry="2" />
<text  x="67.60" y="383.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunWorker() (666 samples, 99.40%)</title><rect x="10.0" y="501" width="1173.0" height="15.0" fill="rgb(246,78,40)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >base::internal::WorkerThread::RunWorker()</text>
</g>
<g >
<title>free_tiny (2 samples, 0.30%)</title><rect x="1066.7" y="405" width="3.5" height="15.0" fill="rgb(230,5,11)" rx="2" ry="2" />
<text  x="1069.72" y="415.5" ></text>
</g>
<g >
<title>vp8_short_fdct8x4_sse2 (12 samples, 1.79%)</title><rect x="531.3" y="213" width="21.1" height="15.0" fill="rgb(229,24,37)" rx="2" ry="2" />
<text  x="534.31" y="223.5" ></text>
</g>
<g >
<title>silk_process_NLSFs (1 samples, 0.15%)</title><rect x="1029.7" y="197" width="1.8" height="15.0" fill="rgb(227,216,5)" rx="2" ry="2" />
<text  x="1032.73" y="207.5" ></text>
</g>
<g >
<title>vp8_encode_intra16x16mby (1 samples, 0.15%)</title><rect x="239.0" y="213" width="1.7" height="15.0" fill="rgb(206,226,50)" rx="2" ry="2" />
<text  x="241.96" y="223.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.15%)</title><rect x="779.6" y="197" width="1.8" height="15.0" fill="rgb(206,145,37)" rx="2" ry="2" />
<text  x="782.64" y="207.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_other_loop (10 samples, 1.49%)</title><rect x="418.6" y="181" width="17.6" height="15.0" fill="rgb(207,195,3)" rx="2" ry="2" />
<text  x="421.60" y="191.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (3 samples, 0.45%)</title><rect x="203.7" y="165" width="5.3" height="15.0" fill="rgb(225,184,10)" rx="2" ry="2" />
<text  x="206.73" y="175.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.15%)</title><rect x="1091.4" y="453" width="1.7" height="15.0" fill="rgb(236,70,43)" rx="2" ry="2" />
<text  x="1094.37" y="463.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.15%)</title><rect x="115.7" y="293" width="1.7" height="15.0" fill="rgb(249,154,18)" rx="2" ry="2" />
<text  x="118.67" y="303.5" ></text>
</g>
<g >
<title>free_small (2 samples, 0.30%)</title><rect x="71.6" y="405" width="3.6" height="15.0" fill="rgb(209,35,2)" rx="2" ry="2" />
<text  x="74.64" y="415.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (2 samples, 0.30%)</title><rect x="371.0" y="181" width="3.6" height="15.0" fill="rgb(243,37,26)" rx="2" ry="2" />
<text  x="374.04" y="191.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamDecoder::FrameToRender(webrtc::VideoFrame&amp;, absl::optional&lt;unsigned char&gt;, int, webrtc::VideoContentType) (1 samples, 0.15%)</title><rect x="962.8" y="261" width="1.8" height="15.0" fill="rgb(215,90,23)" rx="2" ry="2" />
<text  x="965.81" y="271.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (4 samples, 0.60%)</title><rect x="196.7" y="181" width="7.0" height="15.0" fill="rgb(252,32,40)" rx="2" ry="2" />
<text  x="199.69" y="191.5" ></text>
</g>
<g >
<title>vpx_variance16x16_avx2 (1 samples, 0.15%)</title><rect x="529.6" y="197" width="1.7" height="15.0" fill="rgb(224,198,1)" rx="2" ry="2" />
<text  x="532.55" y="207.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoSendStreamImpl::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (6 samples, 0.90%)</title><rect x="779.6" y="277" width="10.6" height="15.0" fill="rgb(211,18,13)" rx="2" ry="2" />
<text  x="782.64" y="287.5" ></text>
</g>
<g >
<title>quant_band (2 samples, 0.30%)</title><rect x="975.1" y="229" width="3.6" height="15.0" fill="rgb(237,121,12)" rx="2" ry="2" />
<text  x="978.13" y="239.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::GetLastUsedTime() const (4 samples, 0.60%)</title><rect x="1114.3" y="453" width="7.0" height="15.0" fill="rgb(252,87,26)" rx="2" ry="2" />
<text  x="1117.27" y="463.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::internal::VideoReceiveStream::StartNextDecode()::DecodeTask&gt;::Run() (100 samples, 14.93%)</title><rect x="790.2" y="373" width="176.1" height="15.0" fill="rgb(239,43,28)" rx="2" ry="2" />
<text  x="793.21" y="383.5" >webrtc::webrtc_new_clo..</text>
</g>
<g >
<title>webrtc::RateControlSettings::LibvpxVp8MinPixels() const (1 samples, 0.15%)</title><rect x="117.4" y="293" width="1.8" height="15.0" fill="rgb(226,221,40)" rx="2" ry="2" />
<text  x="120.43" y="303.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker  0x659341 (670 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(217,56,49)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >base::internal::WorkerThread::RunPooledWorker  0x659341</text>
</g>
<g >
<title>read_mvcomponent (1 samples, 0.15%)</title><rect x="931.1" y="213" width="1.8" height="15.0" fill="rgb(251,170,47)" rx="2" ry="2" />
<text  x="934.10" y="223.5" ></text>
</g>
<g >
<title>webrtc::TransportPacketsFeedback::SortedByReceiveTime() const (1 samples, 0.15%)</title><rect x="115.7" y="341" width="1.7" height="15.0" fill="rgb(230,198,27)" rx="2" ry="2" />
<text  x="118.67" y="351.5" ></text>
</g>
<g >
<title>silk_Encode (38 samples, 5.67%)</title><rect x="985.7" y="261" width="66.9" height="15.0" fill="rgb(250,108,26)" rx="2" ry="2" />
<text  x="988.70" y="271.5" >silk_En..</text>
</g>
<g >
<title>vp8_pick_inter_mode (165 samples, 24.63%)</title><rect x="240.7" y="213" width="290.6" height="15.0" fill="rgb(237,168,54)" rx="2" ry="2" />
<text  x="243.72" y="223.5" >vp8_pick_inter_mode</text>
</g>
<g >
<title>base::ScopedSetSequenceTokenForCurrentThread::ScopedSetSequenceTokenForCurrentThread(base::SequenceToken const&amp;) (1 samples, 0.15%)</title><rect x="47.0" y="437" width="1.7" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="49.99" y="447.5" ></text>
</g>
<g >
<title>base::internal::Sequence::TakeTask() (3 samples, 0.45%)</title><rect x="41.7" y="453" width="5.3" height="15.0" fill="rgb(217,157,10)" rx="2" ry="2" />
<text  x="44.70" y="463.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (3 samples, 0.45%)</title><rect x="1107.2" y="437" width="5.3" height="15.0" fill="rgb(206,161,43)" rx="2" ry="2" />
<text  x="1110.22" y="447.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.15%)</title><rect x="89.3" y="389" width="1.7" height="15.0" fill="rgb(245,106,38)" rx="2" ry="2" />
<text  x="92.25" y="399.5" ></text>
</g>
<g >
<title>webrtc::VCMInterFrameDelay::CalculateDelay(unsigned int, long long*, long long) (1 samples, 0.15%)</title><rect x="1063.2" y="325" width="1.8" height="15.0" fill="rgb(207,207,11)" rx="2" ry="2" />
<text  x="1066.19" y="335.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.15%)</title><rect x="607.0" y="213" width="1.8" height="15.0" fill="rgb(215,50,16)" rx="2" ry="2" />
<text  x="610.04" y="223.5" ></text>
</g>
<g >
<title>encode_mvcomponent (2 samples, 0.30%)</title><rect x="651.1" y="245" width="3.5" height="15.0" fill="rgb(218,41,6)" rx="2" ry="2" />
<text  x="654.07" y="255.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::BeginTransaction() (1 samples, 0.15%)</title><rect x="39.9" y="469" width="1.8" height="15.0" fill="rgb(227,14,32)" rx="2" ry="2" />
<text  x="42.94" y="479.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) (31 samples, 4.63%)</title><rect x="1121.3" y="485" width="54.6" height="15.0" fill="rgb(234,130,52)" rx="2" ry="2" />
<text  x="1124.31" y="495.5" >base:..</text>
</g>
<g >
<title>unsigned char* rtc::CopyOnWriteBuffer::data&lt;unsigned char, (void*)0&gt;() (1 samples, 0.15%)</title><rect x="783.2" y="181" width="1.7" height="15.0" fill="rgb(224,4,29)" rx="2" ry="2" />
<text  x="786.16" y="191.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (1 samples, 0.15%)</title><rect x="52.3" y="421" width="1.7" height="15.0" fill="rgb(218,16,49)" rx="2" ry="2" />
<text  x="55.27" y="431.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (1 samples, 0.15%)</title><rect x="640.5" y="197" width="1.8" height="15.0" fill="rgb(237,49,19)" rx="2" ry="2" />
<text  x="643.51" y="207.5" ></text>
</g>
<g >
<title>silk_warped_autocorrelation_FLP (11 samples, 1.64%)</title><rect x="1031.5" y="213" width="19.4" height="15.0" fill="rgb(241,114,23)" rx="2" ry="2" />
<text  x="1034.49" y="223.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.15%)</title><rect x="115.7" y="325" width="1.7" height="15.0" fill="rgb(236,171,42)" rx="2" ry="2" />
<text  x="118.67" y="335.5" ></text>
</g>
<g >
<title>celt_encode_with_ec (7 samples, 1.04%)</title><rect x="971.6" y="261" width="12.3" height="15.0" fill="rgb(250,209,31)" rx="2" ry="2" />
<text  x="974.61" y="271.5" ></text>
</g>
<g >
<title>silk_process_gains_FLP (1 samples, 0.15%)</title><rect x="1050.9" y="229" width="1.7" height="15.0" fill="rgb(219,178,21)" rx="2" ry="2" />
<text  x="1053.87" y="239.5" ></text>
</g>
<g >
<title>vp8_encode_inter16x16 (30 samples, 4.48%)</title><rect x="186.1" y="213" width="52.9" height="15.0" fill="rgb(218,221,47)" rx="2" ry="2" />
<text  x="189.12" y="223.5" >vp8_e..</text>
</g>
<g >
<title>vpx_tm_predictor_16x16_sse2.loop (1 samples, 0.15%)</title><rect x="527.8" y="197" width="1.8" height="15.0" fill="rgb(234,229,53)" rx="2" ry="2" />
<text  x="530.79" y="207.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.15%)</title><rect x="779.6" y="229" width="1.8" height="15.0" fill="rgb(230,41,50)" rx="2" ry="2" />
<text  x="782.64" y="239.5" ></text>
</g>
<g >
<title>CopyPlane (2 samples, 0.30%)</title><rect x="959.3" y="261" width="3.5" height="15.0" fill="rgb(208,22,41)" rx="2" ry="2" />
<text  x="962.28" y="271.5" ></text>
</g>
<g >
<title>mach_msg (6 samples, 0.90%)</title><rect x="17.0" y="453" width="10.6" height="15.0" fill="rgb(216,101,8)" rx="2" ry="2" />
<text  x="20.04" y="463.5" ></text>
</g>
<g >
<title>vpx_subtract_block_sse2.loop_16 (1 samples, 0.15%)</title><rect x="598.2" y="213" width="1.8" height="15.0" fill="rgb(247,178,31)" rx="2" ry="2" />
<text  x="601.24" y="223.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::voe::(anonymous namespace)::ChannelSend::ProcessAndEncodeAudio(std::__Cr::unique_ptr&lt;webrtc::AudioFrame, std::__Cr::default_delete&lt;webrtc::AudioFrame&gt; &gt;)::ProcessAndEncodeAudio&gt;::Run() (52 samples, 7.76%)</title><rect x="968.1" y="373" width="91.6" height="15.0" fill="rgb(233,217,8)" rx="2" ry="2" />
<text  x="971.09" y="383.5" >webrtc::we..</text>
</g>
<g >
<title>webrtc::(anonymous namespace)::AudioCodingModuleImpl::Add10MsData(webrtc::AudioFrame const&amp;) (51 samples, 7.61%)</title><rect x="969.9" y="357" width="89.8" height="15.0" fill="rgb(253,202,41)" rx="2" ry="2" />
<text  x="972.85" y="367.5" >webrtc::(a..</text>
</g>
<g >
<title>base::WaitableEvent::TimedWait(base::TimeDelta const&amp;) (29 samples, 4.33%)</title><rect x="1123.1" y="469" width="51.0" height="15.0" fill="rgb(248,168,15)" rx="2" ry="2" />
<text  x="1126.07" y="479.5" >base:..</text>
</g>
<g >
<title>_thread_stack_pcs (1 samples, 0.15%)</title><rect x="55.8" y="373" width="1.8" height="15.0" fill="rgb(247,97,0)" rx="2" ry="2" />
<text  x="58.79" y="383.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_y_block_sse2 (14 samples, 2.09%)</title><rect x="161.5" y="213" width="24.6" height="15.0" fill="rgb(251,216,39)" rx="2" ry="2" />
<text  x="164.46" y="223.5" >v..</text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::DidProcessTask(base::internal::RegisteredTaskSource) (5 samples, 0.75%)</title><rect x="1073.8" y="485" width="8.8" height="15.0" fill="rgb(243,127,54)" rx="2" ry="2" />
<text  x="1076.76" y="495.5" ></text>
</g>
<g >
<title>I420Copy (2 samples, 0.30%)</title><rect x="959.3" y="277" width="3.5" height="15.0" fill="rgb(245,96,43)" rx="2" ry="2" />
<text  x="962.28" y="287.5" ></text>
</g>
<g >
<title>webrtc::video_coding::FrameBuffer::StartWaitForNextFrameOnQueue() (1 samples, 0.15%)</title><rect x="966.3" y="357" width="1.8" height="15.0" fill="rgb(252,36,16)" rx="2" ry="2" />
<text  x="969.33" y="367.5" ></text>
</g>
<g >
<title>vp8_init_mode_costs (1 samples, 0.15%)</title><rect x="607.0" y="245" width="1.8" height="15.0" fill="rgb(229,15,20)" rx="2" ry="2" />
<text  x="610.04" y="255.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.15%)</title><rect x="59.3" y="341" width="1.8" height="15.0" fill="rgb(229,127,15)" rx="2" ry="2" />
<text  x="62.31" y="351.5" ></text>
</g>
<g >
<title>vp8_loop_filter_partial_frame (4 samples, 0.60%)</title><rect x="635.2" y="229" width="7.1" height="15.0" fill="rgb(212,17,28)" rx="2" ry="2" />
<text  x="638.22" y="239.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.15%)</title><rect x="1072.0" y="421" width="1.8" height="15.0" fill="rgb(234,112,44)" rx="2" ry="2" />
<text  x="1075.00" y="431.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::AllocatePacket() const (1 samples, 0.15%)</title><rect x="1052.6" y="309" width="1.8" height="15.0" fill="rgb(229,50,13)" rx="2" ry="2" />
<text  x="1055.63" y="319.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.15%)</title><rect x="47.0" y="453" width="1.7" height="15.0" fill="rgb(227,152,32)" rx="2" ry="2" />
<text  x="49.99" y="463.5" ></text>
</g>
<g >
<title>vp8_get_compressed_data (368 samples, 54.93%)</title><rect x="121.0" y="277" width="648.1" height="15.0" fill="rgb(252,164,10)" rx="2" ry="2" />
<text  x="123.96" y="287.5" >vp8_get_compressed_data</text>
</g>
<g >
<title>init_encode_frame_mb_context (1 samples, 0.15%)</title><rect x="605.3" y="245" width="1.7" height="15.0" fill="rgb(228,223,43)" rx="2" ry="2" />
<text  x="608.28" y="255.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.15%)</title><rect x="69.9" y="389" width="1.7" height="15.0" fill="rgb(208,219,19)" rx="2" ry="2" />
<text  x="72.88" y="399.5" ></text>
</g>
<g >
<title>vp8_get_frame (21 samples, 3.13%)</title><rect x="790.2" y="293" width="37.0" height="15.0" fill="rgb(254,103,10)" rx="2" ry="2" />
<text  x="793.21" y="303.5" >vp8..</text>
</g>
<g >
<title>base::internal::TaskTracker::RunSkipOnShutdown(base::internal::Task*) (554 samples, 82.69%)</title><rect x="96.3" y="437" width="975.7" height="15.0" fill="rgb(245,166,15)" rx="2" ry="2" />
<text  x="99.30" y="447.5" >base::internal::TaskTracker::RunSkipOnShutdown(base::internal::Task*)</text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_half_loop (8 samples, 1.19%)</title><rect x="438.0" y="181" width="14.1" height="15.0" fill="rgb(214,117,40)" rx="2" ry="2" />
<text  x="440.97" y="191.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::RemovePacket(std::__Cr::__map_iterator&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, void*&gt;*, long&gt; &gt;) (1 samples, 0.15%)</title><rect x="1056.1" y="261" width="1.8" height="15.0" fill="rgb(231,4,19)" rx="2" ry="2" />
<text  x="1059.15" y="271.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.15%)</title><rect x="779.6" y="165" width="1.8" height="15.0" fill="rgb(231,71,34)" rx="2" ry="2" />
<text  x="782.64" y="175.5" ></text>
</g>
<g >
<title>vp8_tokenize_mb (24 samples, 3.58%)</title><rect x="554.2" y="213" width="42.3" height="15.0" fill="rgb(221,30,51)" rx="2" ry="2" />
<text  x="557.21" y="223.5" >vp8..</text>
</g>
<g >
<title>-[NSAutoreleasePool init] (1 samples, 0.15%)</title><rect x="1177.7" y="469" width="1.7" height="15.0" fill="rgb(211,222,35)" rx="2" ry="2" />
<text  x="1180.67" y="479.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_sse2 (1 samples, 0.15%)</title><rect x="369.3" y="165" width="1.7" height="15.0" fill="rgb(247,126,39)" rx="2" ry="2" />
<text  x="372.28" y="175.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.30%)</title><rect x="84.0" y="389" width="3.5" height="15.0" fill="rgb(224,211,15)" rx="2" ry="2" />
<text  x="86.97" y="399.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (4 samples, 0.60%)</title><rect x="1073.8" y="469" width="7.0" height="15.0" fill="rgb(211,120,51)" rx="2" ry="2" />
<text  x="1076.76" y="479.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::AssertAcquired() const (1 samples, 0.15%)</title><rect x="36.4" y="453" width="1.8" height="15.0" fill="rgb(225,55,36)" rx="2" ry="2" />
<text  x="39.42" y="463.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (3 samples, 0.45%)</title><rect x="78.7" y="325" width="5.3" height="15.0" fill="rgb(244,95,2)" rx="2" ry="2" />
<text  x="81.69" y="335.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (1 samples, 0.15%)</title><rect x="374.6" y="181" width="1.7" height="15.0" fill="rgb(220,212,18)" rx="2" ry="2" />
<text  x="377.57" y="191.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::HandleEncodedFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;) (99 samples, 14.78%)</title><rect x="790.2" y="357" width="174.4" height="15.0" fill="rgb(221,208,6)" rx="2" ry="2" />
<text  x="793.21" y="367.5" >webrtc::internal::Vide..</text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.15%)</title><rect x="115.7" y="277" width="1.7" height="15.0" fill="rgb(239,52,37)" rx="2" ry="2" />
<text  x="118.67" y="287.5" ></text>
</g>
<g >
<title>webrtc::VCMDecodedFrameCallback::Decoded(webrtc::VideoFrame&amp;, absl::optional&lt;int&gt;, absl::optional&lt;unsigned char&gt;) (1 samples, 0.15%)</title><rect x="962.8" y="277" width="1.8" height="15.0" fill="rgb(254,60,31)" rx="2" ry="2" />
<text  x="965.81" y="287.5" ></text>
</g>
<g >
<title>_pthread_body (670 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(241,161,27)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >_pthread_body</text>
</g>
<g >
<title>opus_encode (47 samples, 7.01%)</title><rect x="969.9" y="293" width="82.7" height="15.0" fill="rgb(210,111,35)" rx="2" ry="2" />
<text  x="972.85" y="303.5" >opus_encode</text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (9 samples, 1.34%)</title><rect x="327.0" y="181" width="15.9" height="15.0" fill="rgb(235,133,41)" rx="2" ry="2" />
<text  x="330.01" y="191.5" ></text>
</g>
<g >
<title>webrtc::RtcEventRtcpPacketOutgoing::IsConfigEvent() const (1 samples, 0.15%)</title><rect x="110.4" y="325" width="1.7" height="15.0" fill="rgb(240,5,49)" rx="2" ry="2" />
<text  x="113.39" y="335.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.15%)</title><rect x="607.0" y="229" width="1.8" height="15.0" fill="rgb(234,7,45)" rx="2" ry="2" />
<text  x="610.04" y="239.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_y_block_sse2 (5 samples, 0.75%)</title><rect x="932.9" y="229" width="8.8" height="15.0" fill="rgb(234,86,4)" rx="2" ry="2" />
<text  x="935.87" y="239.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.15%)</title><rect x="61.1" y="421" width="1.7" height="15.0" fill="rgb(235,90,23)" rx="2" ry="2" />
<text  x="64.07" y="431.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.15%)</title><rect x="1080.8" y="453" width="1.8" height="15.0" fill="rgb(253,227,7)" rx="2" ry="2" />
<text  x="1083.81" y="463.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.15%)</title><rect x="1093.1" y="469" width="1.8" height="15.0" fill="rgb(238,140,44)" rx="2" ry="2" />
<text  x="1096.13" y="479.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.15%)</title><rect x="194.9" y="181" width="1.8" height="15.0" fill="rgb(229,163,28)" rx="2" ry="2" />
<text  x="197.93" y="191.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.30%)</title><rect x="92.8" y="421" width="3.5" height="15.0" fill="rgb(222,206,9)" rx="2" ry="2" />
<text  x="95.78" y="431.5" ></text>
</g>
<g >
<title>__psynch_mutexdrop (1 samples, 0.15%)</title><rect x="1096.7" y="405" width="1.7" height="15.0" fill="rgb(224,182,3)" rx="2" ry="2" />
<text  x="1099.66" y="415.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderVideo::SendVideoPacketAsRedMaybeWithUlpfec(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType, bool) (2 samples, 0.30%)</title><rect x="784.9" y="229" width="3.5" height="15.0" fill="rgb(254,53,31)" rx="2" ry="2" />
<text  x="787.93" y="239.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.15%)</title><rect x="59.3" y="357" width="1.8" height="15.0" fill="rgb(242,218,35)" rx="2" ry="2" />
<text  x="62.31" y="367.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (4 samples, 0.60%)</title><rect x="1114.3" y="437" width="7.0" height="15.0" fill="rgb(218,204,46)" rx="2" ry="2" />
<text  x="1117.27" y="447.5" ></text>
</g>
<g >
<title>void std::__Cr::__function::__policy_invoker&lt;void (std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)&gt;::__call_impl&lt;std::__Cr::__function::__alloc_func&lt;webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)::$_3, std::__Cr::allocator&lt;webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)::$_3&gt;, void (std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)&gt; &gt;(std::__Cr::__function::__policy_storage const*, std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;&amp;&amp;) (4 samples, 0.60%)</title><rect x="105.1" y="357" width="7.0" height="15.0" fill="rgb(252,194,27)" rx="2" ry="2" />
<text  x="108.10" y="367.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.15%)</title><rect x="1080.8" y="437" width="1.8" height="15.0" fill="rgb(219,136,43)" rx="2" ry="2" />
<text  x="1083.81" y="447.5" ></text>
</g>
<g >
<title>vp8_yv12_copy_frame_c (5 samples, 0.75%)</title><rect x="758.5" y="261" width="8.8" height="15.0" fill="rgb(237,2,52)" rx="2" ry="2" />
<text  x="761.51" y="271.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (2 samples, 0.30%)</title><rect x="952.2" y="213" width="3.6" height="15.0" fill="rgb(227,87,23)" rx="2" ry="2" />
<text  x="955.24" y="223.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (2 samples, 0.30%)</title><rect x="855.4" y="229" width="3.5" height="15.0" fill="rgb(212,90,26)" rx="2" ry="2" />
<text  x="858.37" y="239.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker() (670 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(245,111,41)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >base::internal::WorkerThread::RunPooledWorker()</text>
</g>
<g >
<title>webrtc::Timestamp::operator-(webrtc::Timestamp) const (1 samples, 0.15%)</title><rect x="113.9" y="341" width="1.8" height="15.0" fill="rgb(206,199,3)" rx="2" ry="2" />
<text  x="116.91" y="351.5" ></text>
</g>
<g >
<title>webrtc::PacedSender::InsertPacket(webrtc::RtpPacketSender::Priority, unsigned int, unsigned short, long long, unsigned long, bool) (1 samples, 0.15%)</title><rect x="784.9" y="197" width="1.8" height="15.0" fill="rgb(231,86,13)" rx="2" ry="2" />
<text  x="787.93" y="207.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.15%)</title><rect x="1052.6" y="245" width="1.8" height="15.0" fill="rgb(238,13,14)" rx="2" ry="2" />
<text  x="1055.63" y="255.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::video_coding::FrameBuffer::InsertFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;)::$_2&gt;::Run() (1 samples, 0.15%)</title><rect x="966.3" y="373" width="1.8" height="15.0" fill="rgb(232,153,53)" rx="2" ry="2" />
<text  x="969.33" y="383.5" ></text>
</g>
<g >
<title>thread_start (670 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(254,105,39)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >thread_start</text>
</g>
<g >
<title>webrtc::vcm::VideoReceiver::Decode(webrtc::VCMEncodedFrame const&amp;) (99 samples, 14.78%)</title><rect x="790.2" y="341" width="174.4" height="15.0" fill="rgb(252,212,22)" rx="2" ry="2" />
<text  x="793.21" y="351.5" >webrtc::vcm::VideoRece..</text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (554 samples, 82.69%)</title><rect x="96.3" y="421" width="975.7" height="15.0" fill="rgb(223,206,37)" rx="2" ry="2" />
<text  x="99.30" y="431.5" >base::TaskAnnotator::RunTask(char const*, base::PendingTask*)</text>
</g>
<g >
<title>opus_encode_native (47 samples, 7.01%)</title><rect x="969.9" y="277" width="82.7" height="15.0" fill="rgb(241,11,30)" rx="2" ry="2" />
<text  x="972.85" y="287.5" >opus_enco..</text>
</g>
<g >
<title>webrtc::RtpPacketHistory::PutRtpPacket(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType, absl::optional&lt;long long&gt;) (1 samples, 0.15%)</title><rect x="786.7" y="197" width="1.7" height="15.0" fill="rgb(219,198,20)" rx="2" ry="2" />
<text  x="789.69" y="207.5" ></text>
</g>
<g >
<title>vp8_decode (75 samples, 11.19%)</title><rect x="827.2" y="277" width="132.1" height="15.0" fill="rgb(206,36,46)" rx="2" ry="2" />
<text  x="830.19" y="287.5" >vp8_decode</text>
</g>
<g >
<title>vp8_idct_dequant_full_2x_sse2 (2 samples, 0.30%)</title><rect x="938.1" y="213" width="3.6" height="15.0" fill="rgb(237,178,32)" rx="2" ry="2" />
<text  x="941.15" y="223.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetSingletonAllowed(bool) (14 samples, 2.09%)</title><rect x="62.8" y="437" width="24.7" height="15.0" fill="rgb(209,43,51)" rx="2" ry="2" />
<text  x="65.84" y="447.5" >b..</text>
</g>
<g >
<title>base::internal::RegisteredTaskSource::~RegisteredTaskSource() (1 samples, 0.15%)</title><rect x="38.2" y="469" width="1.7" height="15.0" fill="rgb(236,99,24)" rx="2" ry="2" />
<text  x="41.18" y="479.5" ></text>
</g>
<g >
<title>webrtc::RoundRobinPacketQueue::Push(int, webrtc::RtpPacketToSend::Type, unsigned int, unsigned short, long long, long long, unsigned long, bool, unsigned long long) (1 samples, 0.15%)</title><rect x="784.9" y="181" width="1.8" height="15.0" fill="rgb(217,228,48)" rx="2" ry="2" />
<text  x="787.93" y="191.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.15%)</title><rect x="94.5" y="373" width="1.8" height="15.0" fill="rgb(228,85,17)" rx="2" ry="2" />
<text  x="97.54" y="383.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Decoder::ReturnFrame(vpx_image const*, unsigned int, int) (3 samples, 0.45%)</title><rect x="959.3" y="293" width="5.3" height="15.0" fill="rgb(237,10,39)" rx="2" ry="2" />
<text  x="962.28" y="303.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::IsShutdownComplete() const (4 samples, 0.60%)</title><rect x="27.6" y="485" width="7.1" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="30.61" y="495.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.15%)</title><rect x="59.3" y="325" width="1.8" height="15.0" fill="rgb(210,192,27)" rx="2" ry="2" />
<text  x="62.31" y="335.5" ></text>
</g>
<g >
<title>operator delete(void*) (1 samples, 0.15%)</title><rect x="1070.2" y="405" width="1.8" height="15.0" fill="rgb(253,135,35)" rx="2" ry="2" />
<text  x="1073.24" y="415.5" ></text>
</g>
<g >
<title>silk_NSQ_wrapper_FLP (23 samples, 3.43%)</title><rect x="987.5" y="229" width="40.5" height="15.0" fill="rgb(225,69,54)" rx="2" ry="2" />
<text  x="990.46" y="239.5" >sil..</text>
</g>
<g >
<title>base::debug::StackTrace::StackTrace() (2 samples, 0.30%)</title><rect x="62.8" y="421" width="3.6" height="15.0" fill="rgb(214,68,38)" rx="2" ry="2" />
<text  x="65.84" y="431.5" ></text>
</g>
<g >
<title>silk_noise_shape_analysis_FLP (11 samples, 1.64%)</title><rect x="1031.5" y="229" width="19.4" height="15.0" fill="rgb(218,151,32)" rx="2" ry="2" />
<text  x="1034.49" y="239.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (670 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(210,202,0)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >base::(anonymous namespace)::ThreadFunc(void*)</text>
</g>
<g >
<title>vpx_sad16x16_sse2.loop (21 samples, 3.13%)</title><rect x="490.8" y="197" width="37.0" height="15.0" fill="rgb(218,10,29)" rx="2" ry="2" />
<text  x="493.81" y="207.5" >vpx..</text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.30%)</title><rect x="84.0" y="421" width="3.5" height="15.0" fill="rgb(213,54,30)" rx="2" ry="2" />
<text  x="86.97" y="431.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetWork(base::internal::WorkerThread*) (22 samples, 3.28%)</title><rect x="1082.6" y="485" width="38.7" height="15.0" fill="rgb(211,204,15)" rx="2" ry="2" />
<text  x="1085.57" y="495.5" >bas..</text>
</g>
<g >
<title>small_malloc_from_free_list (1 samples, 0.15%)</title><rect x="783.2" y="37" width="1.7" height="15.0" fill="rgb(210,64,54)" rx="2" ry="2" />
<text  x="786.16" y="47.5" ></text>
</g>
<g >
<title>vp8_loop_filter_frame (12 samples, 1.79%)</title><rect x="614.1" y="245" width="21.1" height="15.0" fill="rgb(242,137,46)" rx="2" ry="2" />
<text  x="617.09" y="255.5" ></text>
</g>
<g >
<title>opus_custom_encoder_ctl (1 samples, 0.15%)</title><rect x="983.9" y="261" width="1.8" height="15.0" fill="rgb(249,187,37)" rx="2" ry="2" />
<text  x="986.94" y="271.5" ></text>
</g>
<g >
<title>vp8_copy32xn_sse3.block_copy_sse3_loopx4 (2 samples, 0.30%)</title><rect x="312.9" y="197" width="3.5" height="15.0" fill="rgb(235,146,54)" rx="2" ry="2" />
<text  x="315.93" y="207.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (29 samples, 4.33%)</title><rect x="1123.1" y="453" width="51.0" height="15.0" fill="rgb(208,171,41)" rx="2" ry="2" />
<text  x="1126.07" y="463.5" >base:..</text>
</g>
<g >
<title>webrtc::I420BufferInterface::ToI420() (1 samples, 0.15%)</title><rect x="777.9" y="309" width="1.7" height="15.0" fill="rgb(246,20,43)" rx="2" ry="2" />
<text  x="780.88" y="319.5" ></text>
</g>
<g >
<title>vp8_encode_bool (1 samples, 0.15%)</title><rect x="665.2" y="213" width="1.7" height="15.0" fill="rgb(238,75,31)" rx="2" ry="2" />
<text  x="668.16" y="223.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.15%)</title><rect x="779.6" y="85" width="1.8" height="15.0" fill="rgb(217,170,47)" rx="2" ry="2" />
<text  x="782.64" y="95.5" ></text>
</g>
<g >
<title>vp8dx_receive_compressed_data (75 samples, 11.19%)</title><rect x="827.2" y="261" width="132.1" height="15.0" fill="rgb(221,164,3)" rx="2" ry="2" />
<text  x="830.19" y="271.5" >vp8dx_receive_co..</text>
</g>
<g >
<title>CopyRow_ERMS (2 samples, 0.30%)</title><rect x="959.3" y="245" width="3.5" height="15.0" fill="rgb(221,113,14)" rx="2" ry="2" />
<text  x="962.28" y="255.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.15%)</title><rect x="59.3" y="405" width="1.8" height="15.0" fill="rgb(246,19,34)" rx="2" ry="2" />
<text  x="62.31" y="415.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.15%)</title><rect x="1059.7" y="229" width="1.7" height="15.0" fill="rgb(207,126,30)" rx="2" ry="2" />
<text  x="1062.67" y="239.5" ></text>
</g>
<g >
<title>DYLD-STUB$$memcpy (1 samples, 0.15%)</title><rect x="758.5" y="245" width="1.8" height="15.0" fill="rgb(209,45,34)" rx="2" ry="2" />
<text  x="761.51" y="255.5" ></text>
</g>
<g >
<title>vp8_short_inv_walsh4x4_sse2 (1 samples, 0.15%)</title><rect x="552.4" y="213" width="1.8" height="15.0" fill="rgb(243,28,52)" rx="2" ry="2" />
<text  x="555.45" y="223.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.15%)</title><rect x="1068.5" y="389" width="1.7" height="15.0" fill="rgb(250,128,3)" rx="2" ry="2" />
<text  x="1071.48" y="399.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (3 samples, 0.45%)</title><rect x="78.7" y="309" width="5.3" height="15.0" fill="rgb(209,63,39)" rx="2" ry="2" />
<text  x="81.69" y="319.5" ></text>
</g>
<g >
<title>szone_malloc (1 samples, 0.15%)</title><rect x="1052.6" y="229" width="1.8" height="15.0" fill="rgb(221,38,41)" rx="2" ry="2" />
<text  x="1055.63" y="239.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::AddRtpHeaderExtensions(webrtc::RTPVideoHeader const&amp;, absl::optional&lt;webrtc::PlayoutDelay&gt; const&amp;, webrtc::VideoFrameType, bool, bool, bool, bool, bool, webrtc::RtpPacketToSend*) (1 samples, 0.15%)</title><rect x="783.2" y="229" width="1.7" height="15.0" fill="rgb(229,45,53)" rx="2" ry="2" />
<text  x="786.16" y="239.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.15%)</title><rect x="115.7" y="229" width="1.7" height="15.0" fill="rgb(215,171,54)" rx="2" ry="2" />
<text  x="118.67" y="239.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.15%)</title><rect x="57.6" y="389" width="1.7" height="15.0" fill="rgb(237,12,3)" rx="2" ry="2" />
<text  x="60.55" y="399.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.15%)</title><rect x="61.1" y="389" width="1.7" height="15.0" fill="rgb(252,104,38)" rx="2" ry="2" />
<text  x="64.07" y="399.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;), base::internal::UnretainedWrapper&lt;(anonymous namespace)::WebrtcTaskQueue&gt;, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (550 samples, 82.09%)</title><rect x="96.3" y="405" width="968.7" height="15.0" fill="rgb(235,199,8)" rx="2" ry="2" />
<text  x="99.30" y="415.5" >base::internal::Invoker&lt;base::internal::BindState&lt;void (*)((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData..</text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.15%)</title><rect x="1073.8" y="437" width="1.7" height="15.0" fill="rgb(248,101,11)" rx="2" ry="2" />
<text  x="1076.76" y="447.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_wake (1 samples, 0.15%)</title><rect x="1080.8" y="421" width="1.8" height="15.0" fill="rgb(225,49,50)" rx="2" ry="2" />
<text  x="1083.81" y="431.5" ></text>
</g>
<g >
<title>vp8dx_get_raw_frame (21 samples, 3.13%)</title><rect x="790.2" y="277" width="37.0" height="15.0" fill="rgb(207,222,51)" rx="2" ry="2" />
<text  x="793.21" y="287.5" >vp8..</text>
</g>
<g >
<title>silk_find_pitch_lags_FLP (1 samples, 0.15%)</title><rect x="1028.0" y="229" width="1.7" height="15.0" fill="rgb(215,229,46)" rx="2" ry="2" />
<text  x="1030.97" y="239.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.15%)</title><rect x="1073.8" y="453" width="1.7" height="15.0" fill="rgb(208,136,44)" rx="2" ry="2" />
<text  x="1076.76" y="463.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_y_sse2 (2 samples, 0.30%)</title><rect x="637.0" y="213" width="3.5" height="15.0" fill="rgb(239,97,2)" rx="2" ry="2" />
<text  x="639.99" y="223.5" ></text>
</g>
<g >
<title>vp8_find_best_sub_pixel_step (50 samples, 7.46%)</title><rect x="376.3" y="197" width="88.1" height="15.0" fill="rgb(237,180,48)" rx="2" ry="2" />
<text  x="379.33" y="207.5" >vp8_find_b..</text>
</g>
<g >
<title>backtrace (2 samples, 0.30%)</title><rect x="62.8" y="389" width="3.6" height="15.0" fill="rgb(226,29,1)" rx="2" ry="2" />
<text  x="65.84" y="399.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (1 samples, 0.15%)</title><rect x="237.2" y="181" width="1.8" height="15.0" fill="rgb(233,56,35)" rx="2" ry="2" />
<text  x="240.19" y="191.5" ></text>
</g>
<g >
<title>_platform_memset$VARIANT$Haswell (1 samples, 0.15%)</title><rect x="765.6" y="229" width="1.7" height="15.0" fill="rgb(253,173,3)" rx="2" ry="2" />
<text  x="768.55" y="239.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::RtpTransportControllerSend::OnSentPacket(rtc::SentPacket const&amp;)::$_5&gt;::Run() (1 samples, 0.15%)</title><rect x="112.1" y="373" width="1.8" height="15.0" fill="rgb(237,59,38)" rx="2" ry="2" />
<text  x="115.15" y="383.5" ></text>
</g>
<g >
<title>vp8cx_mb_init_quantizer (1 samples, 0.15%)</title><rect x="596.5" y="213" width="1.7" height="15.0" fill="rgb(211,197,42)" rx="2" ry="2" />
<text  x="599.48" y="223.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.15%)</title><rect x="1077.3" y="437" width="1.7" height="15.0" fill="rgb(244,205,18)" rx="2" ry="2" />
<text  x="1080.28" y="447.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.15%)</title><rect x="59.3" y="293" width="1.8" height="15.0" fill="rgb(209,93,14)" rx="2" ry="2" />
<text  x="62.31" y="303.5" ></text>
</g>
<g >
<title>base::debug::StackTrace::StackTrace() (1 samples, 0.15%)</title><rect x="55.8" y="421" width="1.8" height="15.0" fill="rgb(217,146,52)" rx="2" ry="2" />
<text  x="58.79" y="431.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskImpl&lt;webrtc::video_coding::FrameBuffer::StartWaitForNextFrameOnQueue()::$_1&gt;::RunClosure() (2 samples, 0.30%)</title><rect x="1061.4" y="357" width="3.6" height="15.0" fill="rgb(249,158,2)" rx="2" ry="2" />
<text  x="1064.43" y="367.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunAndPopNextTask(base::internal::DecoratorWithTaskSource&lt;base::internal::TaskSource::RunIntent, base::internal::RegisteredTaskSource&gt;) (590 samples, 88.06%)</title><rect x="34.7" y="485" width="1039.1" height="15.0" fill="rgb(229,54,11)" rx="2" ry="2" />
<text  x="37.66" y="495.5" >base::internal::TaskTracker::RunAndPopNextTask(base::internal::DecoratorWithTaskSource&lt;base::internal::TaskSource::RunIntent, base::internal::Re..</text>
</g>
<g >
<title>webrtc::LibvpxVp8Decoder::Decode(webrtc::EncodedImage const&amp;, bool, long long) (99 samples, 14.78%)</title><rect x="790.2" y="309" width="174.4" height="15.0" fill="rgb(241,40,54)" rx="2" ry="2" />
<text  x="793.21" y="319.5" >webrtc::LibvpxVp8Decod..</text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3.vp8_filter_block1d8_v4_ssse3_loop (1 samples, 0.15%)</title><rect x="851.9" y="197" width="1.7" height="15.0" fill="rgb(221,179,12)" rx="2" ry="2" />
<text  x="854.85" y="207.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::GetSizeEstimateImpl(base::allocator::AllocatorDispatch const*, void*, void*) (1 samples, 0.15%)</title><rect x="68.1" y="389" width="1.8" height="15.0" fill="rgb(216,131,34)" rx="2" ry="2" />
<text  x="71.12" y="399.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_half_loop (1 samples, 0.15%)</title><rect x="284.7" y="181" width="1.8" height="15.0" fill="rgb(239,200,11)" rx="2" ry="2" />
<text  x="287.75" y="191.5" ></text>
</g>
<g >
<title>vp8_encode_bool (6 samples, 0.90%)</title><rect x="654.6" y="245" width="10.6" height="15.0" fill="rgb(221,173,54)" rx="2" ry="2" />
<text  x="657.60" y="255.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.15%)</title><rect x="61.1" y="373" width="1.7" height="15.0" fill="rgb(218,194,4)" rx="2" ry="2" />
<text  x="64.07" y="383.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.15%)</title><rect x="1080.8" y="469" width="1.8" height="15.0" fill="rgb(207,6,2)" rx="2" ry="2" />
<text  x="1083.81" y="479.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (1 samples, 0.15%)</title><rect x="341.1" y="149" width="1.8" height="15.0" fill="rgb(228,137,17)" rx="2" ry="2" />
<text  x="344.10" y="159.5" ></text>
</g>
<g >
<title>unsigned long std::__Cr::__tree&lt;webrtc::RtpPacketHistory::StoredPacket*, webrtc::RtpPacketHistory::MoreUseful, std::__Cr::allocator&lt;webrtc::RtpPacketHistory::StoredPacket*&gt; &gt;::__erase_unique&lt;webrtc::RtpPacketHistory::StoredPacket*&gt;(webrtc::RtpPacketHistory::StoredPacket* const&amp;) (1 samples, 0.15%)</title><rect x="1056.1" y="245" width="1.8" height="15.0" fill="rgb(227,169,40)" rx="2" ry="2" />
<text  x="1059.15" y="255.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::EncodeVideoFrame(webrtc::VideoFrame const&amp;, long long) (382 samples, 57.01%)</title><rect x="117.4" y="341" width="672.8" height="15.0" fill="rgb(218,180,52)" rx="2" ry="2" />
<text  x="120.43" y="351.5" >webrtc::VideoStreamEncoder::EncodeVideoFrame(webrtc::VideoFrame const&amp;, long long)</text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::OnFrame(webrtc::VideoFrame const&amp;) (1 samples, 0.15%)</title><rect x="962.8" y="245" width="1.8" height="15.0" fill="rgb(223,40,2)" rx="2" ry="2" />
<text  x="965.81" y="255.5" ></text>
</g>
<g >
<title>_CFAutoreleasePoolPush (1 samples, 0.15%)</title><rect x="1177.7" y="453" width="1.7" height="15.0" fill="rgb(250,217,11)" rx="2" ry="2" />
<text  x="1180.67" y="463.5" ></text>
</g>
<g >
<title>vp8_denoiser_filter_uv_sse2 (3 samples, 0.45%)</title><rect x="364.0" y="181" width="5.3" height="15.0" fill="rgb(232,167,19)" rx="2" ry="2" />
<text  x="367.00" y="191.5" ></text>
</g>
<g >
<title>quant_partition (2 samples, 0.30%)</title><rect x="975.1" y="213" width="3.6" height="15.0" fill="rgb(217,172,9)" rx="2" ry="2" />
<text  x="978.13" y="223.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (5 samples, 0.75%)</title><rect x="769.1" y="213" width="8.8" height="15.0" fill="rgb(223,110,37)" rx="2" ry="2" />
<text  x="772.07" y="223.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.15%)</title><rect x="1119.6" y="421" width="1.7" height="15.0" fill="rgb(240,194,46)" rx="2" ry="2" />
<text  x="1122.55" y="431.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateExtension(webrtc::RTPExtensionType, unsigned long) (1 samples, 0.15%)</title><rect x="783.2" y="213" width="1.7" height="15.0" fill="rgb(245,22,24)" rx="2" ry="2" />
<text  x="786.16" y="223.5" ></text>
</g>
<g >
<title>__psynch_mutexdrop (1 samples, 0.15%)</title><rect x="1080.8" y="405" width="1.8" height="15.0" fill="rgb(235,194,49)" rx="2" ry="2" />
<text  x="1083.81" y="415.5" ></text>
</g>
<g >
<title>vp8cx_mb_init_quantizer (1 samples, 0.15%)</title><rect x="603.5" y="229" width="1.8" height="15.0" fill="rgb(242,122,41)" rx="2" ry="2" />
<text  x="606.52" y="239.5" ></text>
</g>
<g >
<title>_platform_memset$VARIANT$Haswell (1 samples, 0.15%)</title><rect x="272.4" y="197" width="1.8" height="15.0" fill="rgb(250,111,6)" rx="2" ry="2" />
<text  x="275.42" y="207.5" ></text>
</g>
<g >
<title>vp8_short_walsh4x4_sse2 (1 samples, 0.15%)</title><rect x="233.7" y="197" width="1.7" height="15.0" fill="rgb(235,45,32)" rx="2" ry="2" />
<text  x="236.67" y="207.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.15%)</title><rect x="1103.7" y="437" width="1.8" height="15.0" fill="rgb(244,142,47)" rx="2" ry="2" />
<text  x="1106.70" y="447.5" ></text>
</g>
<g >
<title>quant_all_bands (2 samples, 0.30%)</title><rect x="975.1" y="245" width="3.6" height="15.0" fill="rgb(217,198,31)" rx="2" ry="2" />
<text  x="978.13" y="255.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_other_loop (7 samples, 1.04%)</title><rect x="452.1" y="181" width="12.3" height="15.0" fill="rgb(223,225,26)" rx="2" ry="2" />
<text  x="455.06" y="191.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (1 samples, 0.15%)</title><rect x="779.6" y="149" width="1.8" height="15.0" fill="rgb(215,214,32)" rx="2" ry="2" />
<text  x="782.64" y="159.5" ></text>
</g>
<g >
<title>webrtc::VCMGenericDecoder::Decode(webrtc::VCMEncodedFrame const&amp;, long long) (99 samples, 14.78%)</title><rect x="790.2" y="325" width="174.4" height="15.0" fill="rgb(211,212,44)" rx="2" ry="2" />
<text  x="793.21" y="335.5" >webrtc::VCMGenericDeco..</text>
</g>
<g >
<title>webrtc::VideoQualityObserver::OnRenderedFrame(webrtc::VideoFrame const&amp;, long long) (1 samples, 0.15%)</title><rect x="962.8" y="213" width="1.8" height="15.0" fill="rgb(234,221,6)" rx="2" ry="2" />
<text  x="965.81" y="223.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::ResourceOwningTask&lt;webrtc::RtcEvent&gt;::Run() (4 samples, 0.60%)</title><rect x="105.1" y="373" width="7.0" height="15.0" fill="rgb(239,172,27)" rx="2" ry="2" />
<text  x="108.10" y="383.5" ></text>
</g>
<g >
<title>free_tiny (2 samples, 0.30%)</title><rect x="99.8" y="373" width="3.5" height="15.0" fill="rgb(217,101,53)" rx="2" ry="2" />
<text  x="102.82" y="383.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (1 samples, 0.15%)</title><rect x="779.6" y="101" width="1.8" height="15.0" fill="rgb(211,202,53)" rx="2" ry="2" />
<text  x="782.64" y="111.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.30%)</title><rect x="84.0" y="357" width="3.5" height="15.0" fill="rgb(252,216,16)" rx="2" ry="2" />
<text  x="86.97" y="367.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::VideoStreamEncoder::OnFrame(webrtc::VideoFrame const&amp;)::$_9&gt;::Run() (382 samples, 57.01%)</title><rect x="117.4" y="373" width="672.8" height="15.0" fill="rgb(230,0,40)" rx="2" ry="2" />
<text  x="120.43" y="383.5" >webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::VideoStreamEncoder::OnFrame(webrtc::Vide..</text>
</g>
<g >
<title>GetCoeffs (36 samples, 5.37%)</title><rect x="864.2" y="213" width="63.4" height="15.0" fill="rgb(211,213,45)" rx="2" ry="2" />
<text  x="867.18" y="223.5" >GetCoe..</text>
</g>
<g >
<title>tiny_size (1 samples, 0.15%)</title><rect x="1065.0" y="389" width="1.7" height="15.0" fill="rgb(248,36,54)" rx="2" ry="2" />
<text  x="1067.96" y="399.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::TakeTask(base::internal::TaskSource::RunIntent) (3 samples, 0.45%)</title><rect x="41.7" y="469" width="5.3" height="15.0" fill="rgb(206,228,1)" rx="2" ry="2" />
<text  x="44.70" y="479.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.15%)</title><rect x="1059.7" y="293" width="1.7" height="15.0" fill="rgb(222,0,9)" rx="2" ry="2" />
<text  x="1062.67" y="303.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.15%)</title><rect x="1052.6" y="277" width="1.8" height="15.0" fill="rgb(233,215,28)" rx="2" ry="2" />
<text  x="1055.63" y="287.5" ></text>
</g>
<g >
<title>_thread_stack_pcs (1 samples, 0.15%)</title><rect x="62.8" y="373" width="1.8" height="15.0" fill="rgb(215,172,29)" rx="2" ry="2" />
<text  x="65.84" y="383.5" ></text>
</g>
<g >
<title>vp8_denoiser_denoise_mb (33 samples, 4.93%)</title><rect x="318.2" y="197" width="58.1" height="15.0" fill="rgb(211,188,0)" rx="2" ry="2" />
<text  x="321.21" y="207.5" >vp8_de..</text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.15%)</title><rect x="1093.1" y="437" width="1.8" height="15.0" fill="rgb(246,229,6)" rx="2" ry="2" />
<text  x="1096.13" y="447.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (2 samples, 0.30%)</title><rect x="57.6" y="421" width="3.5" height="15.0" fill="rgb(223,99,41)" rx="2" ry="2" />
<text  x="60.55" y="431.5" ></text>
</g>
<g >
<title>objc_alloc (2 samples, 0.30%)</title><rect x="1179.4" y="469" width="3.6" height="15.0" fill="rgb(220,204,29)" rx="2" ry="2" />
<text  x="1182.43" y="479.5" ></text>
</g>
<g >
<title>vp8_compute_skin_block (1 samples, 0.15%)</title><rect x="119.2" y="261" width="1.8" height="15.0" fill="rgb(243,96,24)" rx="2" ry="2" />
<text  x="122.19" y="271.5" ></text>
</g>
<g >
<title>vp8dx_bool_decoder_fill (2 samples, 0.30%)</title><rect x="924.1" y="197" width="3.5" height="15.0" fill="rgb(229,114,16)" rx="2" ry="2" />
<text  x="927.06" y="207.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.15%)</title><rect x="783.2" y="53" width="1.7" height="15.0" fill="rgb(228,99,0)" rx="2" ry="2" />
<text  x="786.16" y="63.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.15%)</title><rect x="75.2" y="405" width="1.7" height="15.0" fill="rgb(223,88,40)" rx="2" ry="2" />
<text  x="78.16" y="415.5" ></text>
</g>
<g >
<title>free (1 samples, 0.15%)</title><rect x="89.3" y="405" width="1.7" height="15.0" fill="rgb(206,213,22)" rx="2" ry="2" />
<text  x="92.25" y="415.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.15%)</title><rect x="1052.6" y="261" width="1.8" height="15.0" fill="rgb(245,31,45)" rx="2" ry="2" />
<text  x="1055.63" y="271.5" ></text>
</g>
<g >
<title>vpx_codec_decode (75 samples, 11.19%)</title><rect x="827.2" y="293" width="132.1" height="15.0" fill="rgb(231,85,32)" rx="2" ry="2" />
<text  x="830.19" y="303.5" >vpx_codec_decode</text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_uv_sse2 (1 samples, 0.15%)</title><rect x="955.8" y="213" width="1.7" height="15.0" fill="rgb(224,200,39)" rx="2" ry="2" />
<text  x="958.76" y="223.5" ></text>
</g>
<g >
<title>free (1 samples, 0.15%)</title><rect x="98.1" y="373" width="1.7" height="15.0" fill="rgb(212,101,11)" rx="2" ry="2" />
<text  x="101.06" y="383.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.15%)</title><rect x="779.6" y="181" width="1.8" height="15.0" fill="rgb(209,57,46)" rx="2" ry="2" />
<text  x="782.64" y="191.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.15%)</title><rect x="607.0" y="197" width="1.8" height="15.0" fill="rgb(250,122,39)" rx="2" ry="2" />
<text  x="610.04" y="207.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.15%)</title><rect x="36.4" y="469" width="1.8" height="15.0" fill="rgb(209,25,19)" rx="2" ry="2" />
<text  x="39.42" y="479.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::MaybeEncodeVideoFrame(webrtc::VideoFrame const&amp;, long long) (382 samples, 57.01%)</title><rect x="117.4" y="357" width="672.8" height="15.0" fill="rgb(236,16,31)" rx="2" ry="2" />
<text  x="120.43" y="367.5" >webrtc::VideoStreamEncoder::MaybeEncodeVideoFrame(webrtc::VideoFrame const&amp;, long long)</text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::CloneDataIfReferenced(unsigned long) (1 samples, 0.15%)</title><rect x="783.2" y="165" width="1.7" height="15.0" fill="rgb(209,107,19)" rx="2" ry="2" />
<text  x="786.16" y="175.5" ></text>
</g>
</g>
</svg>
