<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1142.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1125" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="1125" > </text>
<g id="frames">
<g >
<title>silk_find_pitch_lags_FLP (1 samples, 0.02%)</title><rect x="850.3" y="709" width="0.3" height="15.0" fill="rgb(243,113,38)" rx="2" ry="2" />
<text  x="853.35" y="719.5" ></text>
</g>
<g >
<title>blink::HTMLInputElement::setValue(WTF::String const&amp;, blink::TextFieldEventBehavior, blink::TextControlSetValueSelection) (2 samples, 0.04%)</title><rect x="21.1" y="517" width="0.5" height="15.0" fill="rgb(249,134,16)" rx="2" ry="2" />
<text  x="24.13" y="527.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintForegroundForFragmentsWithPhase(blink::PaintPhase, WTF::Vector&lt;blink::PaintLayerFragment, 1u, WTF::PartitionAllocator&gt; const&amp;, blink::GraphicsContext&amp;, blink::PaintLayerPaintingInfo const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="26.8" y="277" width="0.3" height="15.0" fill="rgb(253,76,6)" rx="2" ry="2" />
<text  x="29.82" y="287.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_5::__invoke(_malloc_zone_t*, void*, unsigned long) (1 samples, 0.02%)</title><rect x="961.2" y="709" width="0.2" height="15.0" fill="rgb(250,138,47)" rx="2" ry="2" />
<text  x="964.17" y="719.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="347.7" y="821" width="0.2" height="15.0" fill="rgb(243,160,10)" rx="2" ry="2" />
<text  x="350.67" y="831.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="206.2" y="741" width="0.2" height="15.0" fill="rgb(214,213,31)" rx="2" ry="2" />
<text  x="209.17" y="751.5" ></text>
</g>
<g >
<title>blink::MediaStreamAudioDeliverer&lt;blink::WebMediaStreamAudioSink&gt;::OnData(media::AudioBus const&amp;, base::TimeTicks) (1 samples, 0.02%)</title><rect x="1131.1" y="805" width="0.3" height="15.0" fill="rgb(205,40,4)" rx="2" ry="2" />
<text  x="1134.12" y="815.5" ></text>
</g>
<g >
<title>vp8cx_mb_init_quantizer (1 samples, 0.02%)</title><rect x="789.7" y="693" width="0.3" height="15.0" fill="rgb(252,189,9)" rx="2" ry="2" />
<text  x="792.74" y="703.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (4 samples, 0.08%)</title><rect x="716.8" y="885" width="1.0" height="15.0" fill="rgb(232,84,34)" rx="2" ry="2" />
<text  x="719.76" y="895.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="320.0" y="677" width="0.2" height="15.0" fill="rgb(235,117,41)" rx="2" ry="2" />
<text  x="322.97" y="687.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (12 samples, 0.25%)</title><rect x="498.1" y="693" width="2.9" height="15.0" fill="rgb(230,57,0)" rx="2" ry="2" />
<text  x="501.08" y="703.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderVideo::SendVideoPacketAsRedMaybeWithUlpfec(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType, bool) (2 samples, 0.04%)</title><rect x="961.7" y="709" width="0.5" height="15.0" fill="rgb(207,229,49)" rx="2" ry="2" />
<text  x="964.67" y="719.5" ></text>
</g>
<g >
<title>rtc::VideoBroadcaster::OnFrame(webrtc::VideoFrame const&amp;) (2 samples, 0.04%)</title><rect x="533.0" y="693" width="0.5" height="15.0" fill="rgb(238,92,12)" rx="2" ry="2" />
<text  x="535.96" y="703.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="714.5" y="821" width="0.3" height="15.0" fill="rgb(240,16,50)" rx="2" ry="2" />
<text  x="717.54" y="831.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (3 samples, 0.06%)</title><rect x="696.5" y="917" width="0.7" height="15.0" fill="rgb(243,117,54)" rx="2" ry="2" />
<text  x="699.48" y="927.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="15.7" y="613" width="0.2" height="15.0" fill="rgb(242,148,12)" rx="2" ry="2" />
<text  x="18.69" y="623.5" ></text>
</g>
<g >
<title>non-virtual thunk to cc::ProxyImpl::DidNotProduceFrame(viz::BeginFrameAck const&amp;) (1 samples, 0.02%)</title><rect x="1067.3" y="773" width="0.2" height="15.0" fill="rgb(223,103,29)" rx="2" ry="2" />
<text  x="1070.30" y="783.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::RtpTransportControllerSend::OnTransportFeedback(webrtc::rtcp::TransportFeedback const&amp;)::$_12&gt;::Run() (1 samples, 0.02%)</title><rect x="882.8" y="853" width="0.2" height="15.0" fill="rgb(231,91,7)" rx="2" ry="2" />
<text  x="885.75" y="863.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (4 samples, 0.08%)</title><rect x="336.3" y="853" width="1.0" height="15.0" fill="rgb(220,142,44)" rx="2" ry="2" />
<text  x="339.29" y="863.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (3 samples, 0.06%)</title><rect x="144.6" y="805" width="0.7" height="15.0" fill="rgb(246,157,7)" rx="2" ry="2" />
<text  x="147.57" y="815.5" ></text>
</g>
<g >
<title>media::VideoResourceUpdater::ObtainFrameResources(scoped_refptr&lt;media::VideoFrame&gt;) (2 samples, 0.04%)</title><rect x="1038.9" y="613" width="0.4" height="15.0" fill="rgb(247,167,22)" rx="2" ry="2" />
<text  x="1041.85" y="623.5" ></text>
</g>
<g >
<title>cricket::ProxyConnection::Send(void const*, unsigned long, rtc::PacketOptions const&amp;) (65 samples, 1.36%)</title><rect x="239.3" y="741" width="16.1" height="15.0" fill="rgb(213,156,8)" rx="2" ry="2" />
<text  x="242.32" y="751.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="652.7" y="645" width="0.2" height="15.0" fill="rgb(224,90,5)" rx="2" ry="2" />
<text  x="655.69" y="655.5" ></text>
</g>
<g >
<title>base::internal::WeakReferenceOwner::GetRef() const (1 samples, 0.02%)</title><rect x="176.7" y="677" width="0.3" height="15.0" fill="rgb(251,167,46)" rx="2" ry="2" />
<text  x="179.73" y="687.5" ></text>
</g>
<g >
<title>webrtc::PacedSender::TimeUntilNextProcess() (2 samples, 0.04%)</title><rect x="1168.2" y="965" width="0.5" height="15.0" fill="rgb(241,64,41)" rx="2" ry="2" />
<text  x="1171.23" y="975.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::AddRef() const (1 samples, 0.02%)</title><rect x="285.1" y="789" width="0.2" height="15.0" fill="rgb(229,198,23)" rx="2" ry="2" />
<text  x="288.09" y="799.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bh_y_sse2 (1 samples, 0.02%)</title><rect x="941.9" y="709" width="0.2" height="15.0" fill="rgb(210,135,24)" rx="2" ry="2" />
<text  x="944.88" y="719.5" ></text>
</g>
<g >
<title>base::GetProgramCounter() (1 samples, 0.02%)</title><rect x="354.1" y="741" width="0.3" height="15.0" fill="rgb(253,154,24)" rx="2" ry="2" />
<text  x="357.10" y="751.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (2 samples, 0.04%)</title><rect x="303.4" y="709" width="0.5" height="15.0" fill="rgb(214,22,39)" rx="2" ry="2" />
<text  x="306.39" y="719.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="184.9" y="773" width="0.2" height="15.0" fill="rgb(242,219,51)" rx="2" ry="2" />
<text  x="187.90" y="783.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;mojo::ArrayDataView&lt;float&gt;, SkMatrix44 const&gt;::Serialize(SkMatrix44 const&amp;, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;float&gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1068.5" y="581" width="0.3" height="15.0" fill="rgb(235,72,9)" rx="2" ry="2" />
<text  x="1071.54" y="591.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="1160.6" y="789" width="0.5" height="15.0" fill="rgb(241,169,37)" rx="2" ry="2" />
<text  x="1163.56" y="799.5" ></text>
</g>
<g >
<title>viz::BeginFrameObserverBase::OnBeginFrame(viz::BeginFrameArgs const&amp;) (4 samples, 0.08%)</title><rect x="1071.8" y="645" width="0.9" height="15.0" fill="rgb(241,168,17)" rx="2" ry="2" />
<text  x="1074.75" y="655.5" ></text>
</g>
<g >
<title>free_small (2 samples, 0.04%)</title><rect x="716.0" y="885" width="0.5" height="15.0" fill="rgb(234,90,39)" rx="2" ry="2" />
<text  x="719.02" y="895.5" ></text>
</g>
<g >
<title>base::DictionaryValue::GetWithoutPathExpansion(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, base::Value const**) const (1 samples, 0.02%)</title><rect x="1038.6" y="549" width="0.3" height="15.0" fill="rgb(245,19,47)" rx="2" ry="2" />
<text  x="1041.60" y="559.5" ></text>
</g>
<g >
<title>free_tiny (3 samples, 0.06%)</title><rect x="293.2" y="805" width="0.8" height="15.0" fill="rgb(230,135,8)" rx="2" ry="2" />
<text  x="296.25" y="815.5" ></text>
</g>
<g >
<title>mojo::internal::ArraySerializer&lt;mojo::ArrayDataView&lt;float&gt;, SkMatrix44 const, mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;SkMatrix44&gt;, SkMatrix44 const, false&gt;, void&gt;::SerializeElements(mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;SkMatrix44&gt;, SkMatrix44 const, false&gt;*, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;float&gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1068.5" y="565" width="0.3" height="15.0" fill="rgb(223,215,52)" rx="2" ry="2" />
<text  x="1071.54" y="575.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (7 samples, 0.15%)</title><rect x="276.2" y="709" width="1.7" height="15.0" fill="rgb(220,184,33)" rx="2" ry="2" />
<text  x="279.18" y="719.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskImpl&lt;webrtc::RtpTransportControllerSend::StartProcessPeriodicTasks()::$_14&gt;::RunClosure() (1 samples, 0.02%)</title><rect x="1005.9" y="837" width="0.3" height="15.0" fill="rgb(239,141,39)" rx="2" ry="2" />
<text  x="1008.95" y="847.5" ></text>
</g>
<g >
<title>blink::EventDispatcher::DispatchEventAtTarget() (8 samples, 0.17%)</title><rect x="20.4" y="629" width="2.0" height="15.0" fill="rgb(207,229,15)" rx="2" ry="2" />
<text  x="23.39" y="639.5" ></text>
</g>
<g >
<title>webrtc::ForwardErrorCorrection::InsertMediaPacket(std::__Cr::list&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt; &gt; &gt;*, webrtc::ForwardErrorCorrection::ReceivedPacket const&amp;) (8 samples, 0.17%)</title><rect x="262.8" y="629" width="2.0" height="15.0" fill="rgb(205,158,40)" rx="2" ry="2" />
<text  x="265.82" y="639.5" ></text>
</g>
<g >
<title>webrtc::ModuleRtpRtcpImpl::Process() (7 samples, 0.15%)</title><rect x="1176.6" y="965" width="1.8" height="15.0" fill="rgb(229,50,33)" rx="2" ry="2" />
<text  x="1179.64" y="975.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="573.3" y="885" width="0.2" height="15.0" fill="rgb(225,141,19)" rx="2" ry="2" />
<text  x="576.28" y="895.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_other_loop (3 samples, 0.06%)</title><rect x="608.7" y="661" width="0.7" height="15.0" fill="rgb(224,92,8)" rx="2" ry="2" />
<text  x="611.66" y="671.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1004.2" y="709" width="0.3" height="15.0" fill="rgb(243,158,14)" rx="2" ry="2" />
<text  x="1007.22" y="719.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="577.7" y="837" width="0.3" height="15.0" fill="rgb(240,149,11)" rx="2" ry="2" />
<text  x="580.74" y="847.5" ></text>
</g>
<g >
<title>vp8_setup_version (1 samples, 0.02%)</title><rect x="680.4" y="709" width="0.2" height="15.0" fill="rgb(228,154,39)" rx="2" ry="2" />
<text  x="683.40" y="719.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::BuildRasterQueue(cc::TreePriority, cc::RasterTilePriorityQueue::Type) (2 samples, 0.04%)</title><rect x="1070.8" y="709" width="0.5" height="15.0" fill="rgb(225,172,36)" rx="2" ry="2" />
<text  x="1073.76" y="719.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1004.2" y="725" width="0.3" height="15.0" fill="rgb(236,211,48)" rx="2" ry="2" />
<text  x="1007.22" y="735.5" ></text>
</g>
<g >
<title>quant_partition (4 samples, 0.08%)</title><rect x="1120.2" y="581" width="1.0" height="15.0" fill="rgb(234,54,14)" rx="2" ry="2" />
<text  x="1123.24" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (10 samples, 0.21%)</title><rect x="1149.4" y="789" width="2.5" height="15.0" fill="rgb(223,77,38)" rx="2" ry="2" />
<text  x="1152.43" y="799.5" ></text>
</g>
<g >
<title>std::__Cr::vector&lt;webrtc::RtpPacketInfo, std::__Cr::allocator&lt;webrtc::RtpPacketInfo&gt; &gt;::vector(std::__Cr::vector&lt;webrtc::RtpPacketInfo, std::__Cr::allocator&lt;webrtc::RtpPacketInfo&gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="1114.1" y="789" width="0.2" height="15.0" fill="rgb(212,164,1)" rx="2" ry="2" />
<text  x="1117.05" y="799.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="188.6" y="789" width="0.3" height="15.0" fill="rgb(232,142,1)" rx="2" ry="2" />
<text  x="191.61" y="799.5" ></text>
</g>
<g >
<title>mach_msg_trap (3 samples, 0.06%)</title><rect x="874.6" y="917" width="0.7" height="15.0" fill="rgb(224,75,14)" rx="2" ry="2" />
<text  x="877.59" y="927.5" ></text>
</g>
<g >
<title>MojoReadMessageImpl (1 samples, 0.02%)</title><rect x="320.7" y="757" width="0.3" height="15.0" fill="rgb(230,60,17)" rx="2" ry="2" />
<text  x="323.71" y="767.5" ></text>
</g>
<g >
<title>mojo::core::Core::ReadMessage(unsigned int, MojoReadMessageOptions const*, unsigned long*) (4 samples, 0.08%)</title><rect x="141.4" y="661" width="0.9" height="15.0" fill="rgb(230,186,53)" rx="2" ry="2" />
<text  x="144.36" y="671.5" ></text>
</g>
<g >
<title>webrtc::PacedSender::InsertPacket(webrtc::RtpPacketSender::Priority, unsigned int, unsigned short, long long, unsigned long, bool) (1 samples, 0.02%)</title><rect x="816.2" y="677" width="0.3" height="15.0" fill="rgb(242,168,23)" rx="2" ry="2" />
<text  x="819.21" y="687.5" ></text>
</g>
<g >
<title>base::internal::CancelableCallbackImpl&lt;base::RepeatingCallback&lt;void ()&gt; &gt;::Reset(base::RepeatingCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="38.2" y="629" width="0.2" height="15.0" fill="rgb(208,159,50)" rx="2" ry="2" />
<text  x="41.20" y="639.5" ></text>
</g>
<g >
<title>base::NumberToString(int) (1 samples, 0.02%)</title><rect x="137.9" y="517" width="0.2" height="15.0" fill="rgb(230,139,54)" rx="2" ry="2" />
<text  x="140.90" y="527.5" ></text>
</g>
<g >
<title>celt_encode_with_ec (7 samples, 0.15%)</title><rect x="534.9" y="741" width="1.8" height="15.0" fill="rgb(220,23,32)" rx="2" ry="2" />
<text  x="537.94" y="751.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::internal::VideoReceiveStream::StartNextDecode()::DecodeTask&gt;::Run() (186 samples, 3.90%)</title><rect x="488.2" y="853" width="46.0" height="15.0" fill="rgb(220,222,26)" rx="2" ry="2" />
<text  x="491.18" y="863.5" >webr..</text>
</g>
<g >
<title>webrtc::RtpTransport::OnReadPacket(rtc::PacketTransportInternal*, char const*, unsigned long, long long const&amp;, int) (9 samples, 0.19%)</title><rect x="225.2" y="613" width="2.2" height="15.0" fill="rgb(205,138,0)" rx="2" ry="2" />
<text  x="228.22" y="623.5" ></text>
</g>
<g >
<title>webrtc::AlrDetector::OnBytesSent(unsigned long, long long) (2 samples, 0.04%)</title><rect x="580.2" y="821" width="0.5" height="15.0" fill="rgb(211,161,41)" rx="2" ry="2" />
<text  x="583.21" y="831.5" ></text>
</g>
<g >
<title>blink::PaintLayerCompositor::SetNeedsCompositingUpdate(blink::CompositingUpdateType) (2 samples, 0.04%)</title><rect x="19.2" y="549" width="0.4" height="15.0" fill="rgb(252,135,14)" rx="2" ry="2" />
<text  x="22.15" y="559.5" ></text>
</g>
<g >
<title>user_sctp_timer_iterate (7 samples, 0.15%)</title><rect x="52.5" y="1013" width="1.8" height="15.0" fill="rgb(222,213,18)" rx="2" ry="2" />
<text  x="55.55" y="1023.5" ></text>
</g>
<g >
<title>opus_encode_native (47 samples, 0.99%)</title><rect x="842.2" y="757" width="11.6" height="15.0" fill="rgb(210,102,30)" rx="2" ry="2" />
<text  x="845.18" y="767.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (3 samples, 0.06%)</title><rect x="1153.6" y="821" width="0.8" height="15.0" fill="rgb(205,142,38)" rx="2" ry="2" />
<text  x="1156.64" y="831.5" ></text>
</g>
<g >
<title>mach_msg (3 samples, 0.06%)</title><rect x="1154.9" y="741" width="0.7" height="15.0" fill="rgb(250,29,5)" rx="2" ry="2" />
<text  x="1157.87" y="751.5" ></text>
</g>
<g >
<title>base::GetProgramCounter() (1 samples, 0.02%)</title><rect x="120.3" y="789" width="0.3" height="15.0" fill="rgb(209,73,23)" rx="2" ry="2" />
<text  x="123.33" y="799.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="317.5" y="469" width="0.2" height="15.0" fill="rgb(235,207,45)" rx="2" ry="2" />
<text  x="320.49" y="479.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="711.6" y="917" width="0.2" height="15.0" fill="rgb(232,124,8)" rx="2" ry="2" />
<text  x="714.57" y="927.5" ></text>
</g>
<g >
<title>check_dot_artifact_candidate (3 samples, 0.06%)</title><rect x="402.6" y="677" width="0.7" height="15.0" fill="rgb(243,218,6)" rx="2" ry="2" />
<text  x="405.59" y="687.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="533.7" y="789" width="0.2" height="15.0" fill="rgb(223,99,34)" rx="2" ry="2" />
<text  x="536.70" y="799.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessageInternal(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (2 samples, 0.04%)</title><rect x="173.3" y="661" width="0.5" height="15.0" fill="rgb(252,73,51)" rx="2" ry="2" />
<text  x="176.27" y="671.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1012.4" y="869" width="0.2" height="15.0" fill="rgb(233,135,3)" rx="2" ry="2" />
<text  x="1015.38" y="879.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (3 samples, 0.06%)</title><rect x="27.8" y="453" width="0.8" height="15.0" fill="rgb(218,162,7)" rx="2" ry="2" />
<text  x="30.81" y="463.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="1084.6" y="709" width="0.3" height="15.0" fill="rgb(241,10,34)" rx="2" ry="2" />
<text  x="1087.62" y="719.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (2 samples, 0.04%)</title><rect x="32.5" y="661" width="0.5" height="15.0" fill="rgb(249,95,48)" rx="2" ry="2" />
<text  x="35.51" y="671.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::RtpPacketSenderProxy::InsertPacket(webrtc::RtpPacketSender::Priority, unsigned int, unsigned short, long long, unsigned long, bool) (1 samples, 0.02%)</title><rect x="854.6" y="773" width="0.2" height="15.0" fill="rgb(233,79,3)" rx="2" ry="2" />
<text  x="857.55" y="783.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::OnHandleReady(int, unsigned int, mojo::HandleSignalsState const&amp;) (41 samples, 0.86%)</title><rect x="132.9" y="757" width="10.2" height="15.0" fill="rgb(252,58,10)" rx="2" ry="2" />
<text  x="135.95" y="767.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="185.1" y="725" width="0.3" height="15.0" fill="rgb(245,80,12)" rx="2" ry="2" />
<text  x="188.14" y="735.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetWaitAllowed(bool) (9 samples, 0.19%)</title><rect x="879.3" y="917" width="2.2" height="15.0" fill="rgb(234,101,43)" rx="2" ry="2" />
<text  x="882.29" y="927.5" ></text>
</g>
<g >
<title>base::Value::CreateWithCopiedBuffer(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="682.9" y="645" width="0.2" height="15.0" fill="rgb(253,77,20)" rx="2" ry="2" />
<text  x="685.87" y="655.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="555.0" y="901" width="0.2" height="15.0" fill="rgb(235,75,46)" rx="2" ry="2" />
<text  x="557.98" y="911.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketReceived::RtpPacketReceived() (1 samples, 0.02%)</title><rect x="277.9" y="741" width="0.3" height="15.0" fill="rgb(239,91,49)" rx="2" ry="2" />
<text  x="280.91" y="751.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (2 samples, 0.04%)</title><rect x="272.7" y="549" width="0.5" height="15.0" fill="rgb(240,209,36)" rx="2" ry="2" />
<text  x="275.72" y="559.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="268.0" y="581" width="0.3" height="15.0" fill="rgb(205,56,42)" rx="2" ry="2" />
<text  x="271.02" y="591.5" ></text>
</g>
<g >
<title>webrtc::VCMGenericDecoder::Decode(webrtc::VCMEncodedFrame const&amp;, long long) (99 samples, 2.08%)</title><rect x="817.0" y="805" width="24.4" height="15.0" fill="rgb(241,1,18)" rx="2" ry="2" />
<text  x="819.95" y="815.5" >w..</text>
</g>
<g >
<title>szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="1111.6" y="789" width="0.5" height="15.0" fill="rgb(210,138,13)" rx="2" ry="2" />
<text  x="1114.58" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GetQueuePriority() const (6 samples, 0.13%)</title><rect x="348.9" y="837" width="1.5" height="15.0" fill="rgb(227,68,44)" rx="2" ry="2" />
<text  x="351.91" y="847.5" ></text>
</g>
<g >
<title>webrtc::IntervalBudget::budget_ratio() const (1 samples, 0.02%)</title><rect x="381.1" y="805" width="0.2" height="15.0" fill="rgb(238,189,16)" rx="2" ry="2" />
<text  x="384.07" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::ScheduleWork() (1 samples, 0.02%)</title><rect x="131.5" y="677" width="0.2" height="15.0" fill="rgb(213,90,16)" rx="2" ry="2" />
<text  x="134.46" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::GetDelayTillNextDelayedTask(base::sequence_manager::LazyNow*) const (4 samples, 0.08%)</title><rect x="328.6" y="869" width="1.0" height="15.0" fill="rgb(251,69,37)" rx="2" ry="2" />
<text  x="331.62" y="879.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (3 samples, 0.06%)</title><rect x="588.6" y="645" width="0.8" height="15.0" fill="rgb(212,147,39)" rx="2" ry="2" />
<text  x="591.62" y="655.5" ></text>
</g>
<g >
<title>base::internal::RegisteredTaskSource::~RegisteredTaskSource() (1 samples, 0.02%)</title><rect x="711.3" y="949" width="0.3" height="15.0" fill="rgb(236,142,30)" rx="2" ry="2" />
<text  x="714.32" y="959.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::Arm(unsigned int*, mojo::HandleSignalsState*) (1 samples, 0.02%)</title><rect x="142.8" y="677" width="0.3" height="15.0" fill="rgb(212,10,45)" rx="2" ry="2" />
<text  x="145.84" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::RequiresTaskTiming() const (2 samples, 0.04%)</title><rect x="333.3" y="853" width="0.5" height="15.0" fill="rgb(251,217,54)" rx="2" ry="2" />
<text  x="336.32" y="863.5" ></text>
</g>
<g >
<title>IPC::MessageT&lt;GpuChannelMsg_UpdateSharedImage_Meta, std::__Cr::tuple&lt;gpu::Mailbox, unsigned int, gfx::GpuFenceHandle&gt;, void&gt;::MessageT(IPC::Routing, gpu::Mailbox const&amp;, unsigned int const&amp;, gfx::GpuFenceHandle const&amp;) (2 samples, 0.04%)</title><rect x="205.4" y="805" width="0.5" height="15.0" fill="rgb(214,161,35)" rx="2" ry="2" />
<text  x="208.43" y="815.5" ></text>
</g>
<g >
<title>base::internal::CallbackBaseCopyable::CallbackBaseCopyable(base::internal::CallbackBaseCopyable const&amp;) (1 samples, 0.02%)</title><rect x="1030.2" y="853" width="0.2" height="15.0" fill="rgb(252,113,37)" rx="2" ry="2" />
<text  x="1033.19" y="863.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="718.0" y="805" width="0.2" height="15.0" fill="rgb(223,86,0)" rx="2" ry="2" />
<text  x="721.00" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (2 samples, 0.04%)</title><rect x="226.0" y="437" width="0.5" height="15.0" fill="rgb(215,9,31)" rx="2" ry="2" />
<text  x="228.96" y="447.5" ></text>
</g>
<g >
<title>blink::EventPath* blink::MakeGarbageCollected&lt;blink::EventPath, blink::Node&amp;, blink::Event*&gt;(blink::Node&amp;&amp;&amp;, blink::Event*&amp;&amp;) (1 samples, 0.02%)</title><rect x="22.6" y="613" width="0.3" height="15.0" fill="rgb(216,180,2)" rx="2" ry="2" />
<text  x="25.62" y="623.5" ></text>
</g>
<g >
<title>mach_msg (5 samples, 0.10%)</title><rect x="1150.2" y="741" width="1.2" height="15.0" fill="rgb(218,91,13)" rx="2" ry="2" />
<text  x="1153.17" y="751.5" ></text>
</g>
<g >
<title>vp8dx_receive_compressed_data (147 samples, 3.08%)</title><rect x="494.9" y="741" width="36.3" height="15.0" fill="rgb(224,34,5)" rx="2" ry="2" />
<text  x="497.86" y="751.5" >vp8..</text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (554 samples, 11.61%)</title><rect x="719.5" y="901" width="137.0" height="15.0" fill="rgb(222,28,22)" rx="2" ry="2" />
<text  x="722.48" y="911.5" >base::TaskAnnotat..</text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="81.7" y="725" width="0.3" height="15.0" fill="rgb(227,11,5)" rx="2" ry="2" />
<text  x="84.74" y="735.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="268.0" y="533" width="0.3" height="15.0" fill="rgb(216,5,33)" rx="2" ry="2" />
<text  x="271.02" y="543.5" ></text>
</g>
<g >
<title>_pthread_body (670 samples, 14.05%)</title><rect x="707.4" y="1029" width="165.7" height="15.0" fill="rgb(248,18,38)" rx="2" ry="2" />
<text  x="710.36" y="1039.5" >_pthread_body</text>
</g>
<g >
<title>silk_find_LPC_FLP (6 samples, 0.13%)</title><rect x="543.4" y="693" width="1.4" height="15.0" fill="rgb(245,199,25)" rx="2" ry="2" />
<text  x="546.35" y="703.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="1141.0" y="965" width="0.5" height="15.0" fill="rgb(221,68,36)" rx="2" ry="2" />
<text  x="1144.02" y="975.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Decoder::Decode(webrtc::EncodedImage const&amp;, bool, long long) (123 samples, 2.58%)</title><rect x="963.2" y="789" width="30.4" height="15.0" fill="rgb(224,5,17)" rx="2" ry="2" />
<text  x="966.15" y="799.5" >we..</text>
</g>
<g >
<title>gpu::GpuChannelHost::InternalFlush(unsigned int) (3 samples, 0.06%)</title><rect x="1034.2" y="533" width="0.7" height="15.0" fill="rgb(214,223,24)" rx="2" ry="2" />
<text  x="1037.15" y="543.5" ></text>
</g>
<g >
<title>blink::Element::PseudoStateChanged(blink::CSSSelector::PseudoType) (1 samples, 0.02%)</title><rect x="21.1" y="453" width="0.3" height="15.0" fill="rgb(245,1,35)" rx="2" ry="2" />
<text  x="24.13" y="463.5" ></text>
</g>
<g >
<title>IPC::ParamTraits&lt;rtc::PacketOptions&gt;::Write(base::Pickle*, rtc::PacketOptions const&amp;) (1 samples, 0.02%)</title><rect x="244.0" y="629" width="0.3" height="15.0" fill="rgb(244,197,22)" rx="2" ry="2" />
<text  x="247.02" y="639.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (1 samples, 0.02%)</title><rect x="284.1" y="629" width="0.2" height="15.0" fill="rgb(205,70,38)" rx="2" ry="2" />
<text  x="287.10" y="639.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="236.1" y="389" width="0.3" height="15.0" fill="rgb(227,59,44)" rx="2" ry="2" />
<text  x="239.10" y="399.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="377.6" y="853" width="0.3" height="15.0" fill="rgb(220,59,31)" rx="2" ry="2" />
<text  x="380.61" y="863.5" ></text>
</g>
<g >
<title>extend_plane (2 samples, 0.04%)</title><rect x="959.7" y="725" width="0.5" height="15.0" fill="rgb(225,51,25)" rx="2" ry="2" />
<text  x="962.69" y="735.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="176.5" y="677" width="0.2" height="15.0" fill="rgb(225,53,27)" rx="2" ry="2" />
<text  x="179.49" y="687.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (2 samples, 0.04%)</title><rect x="582.4" y="709" width="0.5" height="15.0" fill="rgb(253,200,14)" rx="2" ry="2" />
<text  x="585.44" y="719.5" ></text>
</g>
<g >
<title>cc::RasterTilePriorityQueue::Create(std::__Cr::vector&lt;cc::PictureLayerImpl*, std::__Cr::allocator&lt;cc::PictureLayerImpl*&gt; &gt; const&amp;, std::__Cr::vector&lt;cc::PictureLayerImpl*, std::__Cr::allocator&lt;cc::PictureLayerImpl*&gt; &gt; const&amp;, cc::TreePriority, cc::RasterTilePriorityQueue::Type) (1 samples, 0.02%)</title><rect x="1067.5" y="725" width="0.3" height="15.0" fill="rgb(251,197,42)" rx="2" ry="2" />
<text  x="1070.55" y="735.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (3 samples, 0.06%)</title><rect x="861.5" y="917" width="0.7" height="15.0" fill="rgb(239,194,36)" rx="2" ry="2" />
<text  x="864.48" y="927.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_0::__invoke(_malloc_zone_t*, void const*) (1 samples, 0.02%)</title><rect x="551.8" y="773" width="0.2" height="15.0" fill="rgb(229,1,3)" rx="2" ry="2" />
<text  x="554.76" y="783.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="81.7" y="805" width="0.5" height="15.0" fill="rgb(243,46,7)" rx="2" ry="2" />
<text  x="84.74" y="815.5" ></text>
</g>
<g >
<title>mojo::Connector::Accept(mojo::Message*) (5 samples, 0.10%)</title><rect x="172.5" y="757" width="1.3" height="15.0" fill="rgb(220,178,6)" rx="2" ry="2" />
<text  x="175.53" y="767.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_0::__invoke(_malloc_zone_t*, void const*) (1 samples, 0.02%)</title><rect x="379.3" y="837" width="0.3" height="15.0" fill="rgb(239,18,47)" rx="2" ry="2" />
<text  x="382.34" y="847.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (1 samples, 0.02%)</title><rect x="962.7" y="773" width="0.2" height="15.0" fill="rgb(234,65,11)" rx="2" ry="2" />
<text  x="965.66" y="783.5" ></text>
</g>
<g >
<title>(anonymous namespace)::MachAbsoluteTimeToTicks(unsigned long long) (1 samples, 0.02%)</title><rect x="215.8" y="885" width="0.3" height="15.0" fill="rgb(246,5,50)" rx="2" ry="2" />
<text  x="218.82" y="895.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMSCompositor::CheckForFrameChanges(bool, bool, base::Optional&lt;media::VideoRotation&gt;, base::Optional&lt;bool&gt;) (5 samples, 0.10%)</title><rect x="1028.7" y="869" width="1.2" height="15.0" fill="rgb(253,114,4)" rx="2" ry="2" />
<text  x="1031.71" y="879.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="45.1" y="613" width="0.3" height="15.0" fill="rgb(241,162,1)" rx="2" ry="2" />
<text  x="48.13" y="623.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="310.6" y="389" width="0.2" height="15.0" fill="rgb(246,106,36)" rx="2" ry="2" />
<text  x="313.57" y="399.5" ></text>
</g>
<g >
<title>webrtc::SequenceCheckerImpl::IsCurrent() const (4 samples, 0.08%)</title><rect x="318.2" y="581" width="1.0" height="15.0" fill="rgb(222,142,2)" rx="2" ry="2" />
<text  x="321.23" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="962.7" y="597" width="0.2" height="15.0" fill="rgb(218,128,13)" rx="2" ry="2" />
<text  x="965.66" y="607.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::ResourceOwningTask&lt;webrtc::RtcEvent&gt;::Run() (2 samples, 0.04%)</title><rect x="380.3" y="853" width="0.5" height="15.0" fill="rgb(254,101,53)" rx="2" ry="2" />
<text  x="383.33" y="863.5" ></text>
</g>
<g >
<title>blink::MediaStreamVideoTrack::FrameDeliverer::DeliverFrameOnIO(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks) (7 samples, 0.15%)</title><rect x="139.4" y="469" width="1.7" height="15.0" fill="rgb(205,70,5)" rx="2" ry="2" />
<text  x="142.38" y="479.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::~Transaction() (1 samples, 0.02%)</title><rect x="272.5" y="581" width="0.2" height="15.0" fill="rgb(245,102,21)" rx="2" ry="2" />
<text  x="275.47" y="591.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="321.2" y="725" width="0.3" height="15.0" fill="rgb(222,185,4)" rx="2" ry="2" />
<text  x="324.20" y="735.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::DidRunTask() (2 samples, 0.04%)</title><rect x="179.2" y="885" width="0.5" height="15.0" fill="rgb(236,48,34)" rx="2" ry="2" />
<text  x="182.21" y="895.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="483.0" y="709" width="0.2" height="15.0" fill="rgb(217,217,53)" rx="2" ry="2" />
<text  x="485.99" y="719.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (5 samples, 0.10%)</title><rect x="651.2" y="773" width="1.2" height="15.0" fill="rgb(242,2,11)" rx="2" ry="2" />
<text  x="654.21" y="783.5" ></text>
</g>
<g >
<title>vp8_yv12_copy_frame_c (9 samples, 0.19%)</title><rect x="957.2" y="741" width="2.2" height="15.0" fill="rgb(211,48,20)" rx="2" ry="2" />
<text  x="960.22" y="751.5" ></text>
</g>
<g >
<title>viz::mojom::blink::CompositorFrameSinkProxy::DidNotProduceFrame(viz::BeginFrameAck const&amp;) (9 samples, 0.19%)</title><rect x="1046.5" y="661" width="2.2" height="15.0" fill="rgb(224,98,35)" rx="2" ry="2" />
<text  x="1049.52" y="671.5" ></text>
</g>
<g >
<title>silk_encode_pulses (1 samples, 0.02%)</title><rect x="999.8" y="709" width="0.2" height="15.0" fill="rgb(207,197,37)" rx="2" ry="2" />
<text  x="1002.77" y="719.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="367.5" y="869" width="0.2" height="15.0" fill="rgb(209,15,49)" rx="2" ry="2" />
<text  x="370.46" y="879.5" ></text>
</g>
<g >
<title>base::time_internal::SaturatedAdd(long long, base::TimeDelta) (1 samples, 0.02%)</title><rect x="1189.0" y="933" width="0.3" height="15.0" fill="rgb(239,34,13)" rx="2" ry="2" />
<text  x="1192.01" y="943.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::BeginUnusedPeriod() (3 samples, 0.06%)</title><rect x="699.4" y="901" width="0.8" height="15.0" fill="rgb(238,65,11)" rx="2" ry="2" />
<text  x="702.45" y="911.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (13 samples, 0.27%)</title><rect x="256.6" y="709" width="3.3" height="15.0" fill="rgb(234,163,46)" rx="2" ry="2" />
<text  x="259.64" y="719.5" ></text>
</g>
<g >
<title>_pthread_start (1 samples, 0.02%)</title><rect x="1020.3" y="1045" width="0.2" height="15.0" fill="rgb(214,66,5)" rx="2" ry="2" />
<text  x="1023.30" y="1055.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="104.0" y="837" width="0.3" height="15.0" fill="rgb(206,86,19)" rx="2" ry="2" />
<text  x="107.00" y="847.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="714.3" y="805" width="0.2" height="15.0" fill="rgb(207,152,26)" rx="2" ry="2" />
<text  x="717.29" y="815.5" ></text>
</g>
<g >
<title>vp8_post_proc_frame (22 samples, 0.46%)</title><rect x="652.9" y="741" width="5.5" height="15.0" fill="rgb(208,179,36)" rx="2" ry="2" />
<text  x="655.94" y="751.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="207.7" y="805" width="0.5" height="15.0" fill="rgb(249,6,7)" rx="2" ry="2" />
<text  x="210.66" y="815.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::DecrementNumIncompleteTaskSources() (1 samples, 0.02%)</title><rect x="569.6" y="917" width="0.2" height="15.0" fill="rgb(218,65,16)" rx="2" ry="2" />
<text  x="572.57" y="927.5" ></text>
</g>
<g >
<title>void media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt; &gt;::Run&lt;scoped_refptr&lt;media::VideoFrame&gt; &gt;(scoped_refptr&lt;media::VideoFrame&gt;) (2 samples, 0.04%)</title><rect x="206.4" y="805" width="0.5" height="15.0" fill="rgb(253,83,33)" rx="2" ry="2" />
<text  x="209.42" y="815.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::RtpPacket() (1 samples, 0.02%)</title><rect x="1159.3" y="869" width="0.3" height="15.0" fill="rgb(232,126,37)" rx="2" ry="2" />
<text  x="1162.32" y="879.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="226.7" y="517" width="0.3" height="15.0" fill="rgb(226,216,13)" rx="2" ry="2" />
<text  x="229.70" y="527.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (4 samples, 0.08%)</title><rect x="258.6" y="613" width="1.0" height="15.0" fill="rgb(236,91,11)" rx="2" ry="2" />
<text  x="261.62" y="623.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (4 samples, 0.08%)</title><rect x="695.2" y="949" width="1.0" height="15.0" fill="rgb(209,200,15)" rx="2" ry="2" />
<text  x="698.24" y="959.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="317.5" y="437" width="0.2" height="15.0" fill="rgb(246,182,49)" rx="2" ry="2" />
<text  x="320.49" y="447.5" ></text>
</g>
<g >
<title>cc::PictureLayer::Update() (2 samples, 0.04%)</title><rect x="24.3" y="597" width="0.5" height="15.0" fill="rgb(212,103,30)" rx="2" ry="2" />
<text  x="27.35" y="607.5" ></text>
</g>
<g >
<title>pthread_equal (1 samples, 0.02%)</title><rect x="961.4" y="661" width="0.3" height="15.0" fill="rgb(215,229,19)" rx="2" ry="2" />
<text  x="964.42" y="671.5" ></text>
</g>
<g >
<title>base::Histogram::ranges(unsigned int) const (1 samples, 0.02%)</title><rect x="861.5" y="901" width="0.2" height="15.0" fill="rgb(206,139,42)" rx="2" ry="2" />
<text  x="864.48" y="911.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::PrepareToForwardUserMessage(mojo::core::ports::PortRef const&amp;, mojo::core::ports::Port::State, bool, mojo::core::ports::UserMessageEvent*, mojo::core::ports::NodeName*) (1 samples, 0.02%)</title><rect x="1068.3" y="581" width="0.2" height="15.0" fill="rgb(233,172,51)" rx="2" ry="2" />
<text  x="1071.29" y="591.5" ></text>
</g>
<g >
<title>cc::TileManager::PrepareTiles(cc::GlobalStateThatImpactsTilePriority const&amp;) (2 samples, 0.04%)</title><rect x="1070.8" y="757" width="0.5" height="15.0" fill="rgb(244,38,30)" rx="2" ry="2" />
<text  x="1073.76" y="767.5" ></text>
</g>
<g >
<title>vp8_estimate_entropy_savings (3 samples, 0.06%)</title><rect x="791.5" y="741" width="0.7" height="15.0" fill="rgb(208,100,12)" rx="2" ry="2" />
<text  x="794.47" y="751.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="717.8" y="853" width="0.4" height="15.0" fill="rgb(215,110,46)" rx="2" ry="2" />
<text  x="720.75" y="863.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt; &gt;::*)(scoped_refptr&lt;media::VideoFrame&gt;), std::__Cr::unique_ptr&lt;media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt; &gt;, std::__Cr::default_delete&lt;media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt; &gt; &gt; &gt; &gt;, void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;::RunOnce(base::internal::BindStateBase*, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (2 samples, 0.04%)</title><rect x="206.4" y="821" width="0.5" height="15.0" fill="rgb(232,27,42)" rx="2" ry="2" />
<text  x="209.42" y="831.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork() (2 samples, 0.04%)</title><rect x="360.5" y="901" width="0.5" height="15.0" fill="rgb(248,146,21)" rx="2" ry="2" />
<text  x="363.54" y="911.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (2 samples, 0.04%)</title><rect x="1182.3" y="773" width="0.5" height="15.0" fill="rgb(251,40,18)" rx="2" ry="2" />
<text  x="1185.33" y="783.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::ClosureTask::RunOnWorkerThread() (15 samples, 0.31%)</title><rect x="55.3" y="965" width="3.7" height="15.0" fill="rgb(231,85,40)" rx="2" ry="2" />
<text  x="58.27" y="975.5" ></text>
</g>
<g >
<title>IPC::internal::MessagePipeReader::Send(std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt;) (8 samples, 0.17%)</title><rect x="166.3" y="821" width="2.0" height="15.0" fill="rgb(228,170,32)" rx="2" ry="2" />
<text  x="169.34" y="831.5" ></text>
</g>
<g >
<title>free (3 samples, 0.06%)</title><rect x="80.8" y="837" width="0.7" height="15.0" fill="rgb(232,179,33)" rx="2" ry="2" />
<text  x="83.75" y="847.5" ></text>
</g>
<g >
<title>mojo::core::ports::PortLocker::PortLocker(mojo::core::ports::PortRef const**, unsigned long) (1 samples, 0.02%)</title><rect x="245.3" y="517" width="0.2" height="15.0" fill="rgb(220,12,52)" rx="2" ry="2" />
<text  x="248.26" y="527.5" ></text>
</g>
<g >
<title>scoped_refptr&lt;cc::SyncedProperty&lt;cc::AdditionGroup&lt;gfx::ScrollOffset&gt; &gt; &gt;::~scoped_refptr() (1 samples, 0.02%)</title><rect x="1069.3" y="709" width="0.2" height="15.0" fill="rgb(253,71,28)" rx="2" ry="2" />
<text  x="1072.28" y="719.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;base::internal::Task&gt;::pop_front() (1 samples, 0.02%)</title><rect x="570.1" y="917" width="0.2" height="15.0" fill="rgb(235,208,41)" rx="2" ry="2" />
<text  x="573.07" y="927.5" ></text>
</g>
<g >
<title>cricket::WebRtcVideoChannel::OnPacketReceived(rtc::CopyOnWriteBuffer, long long) (69 samples, 1.45%)</title><rect x="256.4" y="789" width="17.1" height="15.0" fill="rgb(251,152,8)" rx="2" ry="2" />
<text  x="259.39" y="799.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="281.1" y="581" width="0.3" height="15.0" fill="rgb(228,217,37)" rx="2" ry="2" />
<text  x="284.13" y="591.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="92.6" y="837" width="0.3" height="15.0" fill="rgb(232,164,7)" rx="2" ry="2" />
<text  x="95.62" y="847.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoStreamReceiver::FrameDecoded(long long) (1 samples, 0.02%)</title><rect x="488.2" y="821" width="0.2" height="15.0" fill="rgb(216,155,46)" rx="2" ry="2" />
<text  x="491.18" y="831.5" ></text>
</g>
<g >
<title>webrtc::video_coding::FrameBuffer::NextFrame(long long, bool, rtc::TaskQueue*, std::__Cr::function&lt;void (std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;, webrtc::video_coding::FrameBuffer::ReturnReason)&gt;) (1 samples, 0.02%)</title><rect x="993.6" y="821" width="0.2" height="15.0" fill="rgb(247,97,45)" rx="2" ry="2" />
<text  x="996.58" y="831.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (5 samples, 0.10%)</title><rect x="1150.2" y="757" width="1.2" height="15.0" fill="rgb(220,127,47)" rx="2" ry="2" />
<text  x="1153.17" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="487.9" y="629" width="0.3" height="15.0" fill="rgb(230,181,37)" rx="2" ry="2" />
<text  x="490.94" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::MaybeShrinkQueue() (1 samples, 0.02%)</title><rect x="356.1" y="805" width="0.2" height="15.0" fill="rgb(218,177,35)" rx="2" ry="2" />
<text  x="359.08" y="815.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl const* mojo::core::ports::UserMessageEvent::GetMessage&lt;mojo::core::UserMessageImpl&gt;() const (1 samples, 0.02%)</title><rect x="112.9" y="693" width="0.3" height="15.0" fill="rgb(234,83,11)" rx="2" ry="2" />
<text  x="115.91" y="703.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="132.0" y="757" width="0.2" height="15.0" fill="rgb(244,140,11)" rx="2" ry="2" />
<text  x="134.96" y="767.5" ></text>
</g>
<g >
<title>base::SyncSocket::Receive(void*, unsigned long) (10 samples, 0.21%)</title><rect x="1076.9" y="981" width="2.5" height="15.0" fill="rgb(224,197,15)" rx="2" ry="2" />
<text  x="1079.95" y="991.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="187.4" y="805" width="0.2" height="15.0" fill="rgb(246,160,45)" rx="2" ry="2" />
<text  x="190.37" y="815.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*) (4 samples, 0.08%)</title><rect x="1135.3" y="709" width="1.0" height="15.0" fill="rgb(242,152,34)" rx="2" ry="2" />
<text  x="1138.33" y="719.5" ></text>
</g>
<g >
<title>vp8_decode (96 samples, 2.01%)</title><rect x="968.3" y="757" width="23.8" height="15.0" fill="rgb(226,117,5)" rx="2" ry="2" />
<text  x="971.35" y="767.5" >v..</text>
</g>
<g >
<title>base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) (27 samples, 0.57%)</title><rect x="559.4" y="965" width="6.7" height="15.0" fill="rgb(227,32,41)" rx="2" ry="2" />
<text  x="562.43" y="975.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.02%)</title><rect x="651.5" y="645" width="0.2" height="15.0" fill="rgb(238,92,51)" rx="2" ry="2" />
<text  x="654.45" y="655.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="941.1" y="709" width="0.3" height="15.0" fill="rgb(243,142,8)" rx="2" ry="2" />
<text  x="944.14" y="719.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.04%)</title><rect x="1021.5" y="949" width="0.5" height="15.0" fill="rgb(219,92,34)" rx="2" ry="2" />
<text  x="1024.53" y="959.5" ></text>
</g>
<g >
<title>std::__Cr::__wrap_iter&lt;std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;*&gt; std::__Cr::vector&lt;std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;, std::__Cr::allocator&lt;std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt; &gt; &gt;::emplace&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;(std::__Cr::__wrap_iter&lt;std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt; const*&gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;&amp;&amp;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="208.2" y="789" width="0.2" height="15.0" fill="rgb(215,5,33)" rx="2" ry="2" />
<text  x="211.15" y="799.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="282.6" y="533" width="0.5" height="15.0" fill="rgb(223,87,54)" rx="2" ry="2" />
<text  x="285.61" y="543.5" ></text>
</g>
<g >
<title>cc::DisplayItemList::GetColorIfSolidInRect(gfx::Rect const&amp;, unsigned int*, int) (1 samples, 0.02%)</title><rect x="24.3" y="549" width="0.3" height="15.0" fill="rgb(229,23,41)" rx="2" ry="2" />
<text  x="27.35" y="559.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="38.7" y="661" width="0.2" height="15.0" fill="rgb(218,152,26)" rx="2" ry="2" />
<text  x="41.70" y="671.5" ></text>
</g>
<g >
<title>base::GetProgramCounter() (1 samples, 0.02%)</title><rect x="338.3" y="837" width="0.2" height="15.0" fill="rgb(217,93,14)" rx="2" ry="2" />
<text  x="341.27" y="847.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="298.9" y="853" width="0.3" height="15.0" fill="rgb(227,126,5)" rx="2" ry="2" />
<text  x="301.94" y="863.5" ></text>
</g>
<g >
<title>media::AudioBus::Create(int, int) (3 samples, 0.06%)</title><rect x="1080.4" y="917" width="0.8" height="15.0" fill="rgb(247,148,38)" rx="2" ry="2" />
<text  x="1083.41" y="927.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="378.1" y="821" width="0.5" height="15.0" fill="rgb(237,130,35)" rx="2" ry="2" />
<text  x="381.10" y="831.5" ></text>
</g>
<g >
<title>HMAC_Update (1 samples, 0.02%)</title><rect x="307.6" y="485" width="0.2" height="15.0" fill="rgb(215,74,35)" rx="2" ry="2" />
<text  x="310.60" y="495.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::Arm(unsigned int*, mojo::HandleSignalsState*) (1 samples, 0.02%)</title><rect x="1059.6" y="789" width="0.3" height="15.0" fill="rgb(234,75,31)" rx="2" ry="2" />
<text  x="1062.63" y="799.5" ></text>
</g>
<g >
<title>base::ConditionVariable::Broadcast() (1 samples, 0.02%)</title><rect x="698.2" y="917" width="0.3" height="15.0" fill="rgb(217,34,40)" rx="2" ry="2" />
<text  x="701.21" y="927.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (3 samples, 0.06%)</title><rect x="1025.2" y="805" width="0.8" height="15.0" fill="rgb(252,200,52)" rx="2" ry="2" />
<text  x="1028.25" y="815.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="81.7" y="789" width="0.5" height="15.0" fill="rgb(223,102,0)" rx="2" ry="2" />
<text  x="84.74" y="799.5" ></text>
</g>
<g >
<title>mach_msg_send (1 samples, 0.02%)</title><rect x="206.7" y="693" width="0.2" height="15.0" fill="rgb(213,69,27)" rx="2" ry="2" />
<text  x="209.67" y="703.5" ></text>
</g>
<g >
<title>base::internal::Sequence::GetSortKey() const (1 samples, 0.02%)</title><rect x="1135.1" y="693" width="0.2" height="15.0" fill="rgb(246,80,27)" rx="2" ry="2" />
<text  x="1138.08" y="703.5" ></text>
</g>
<g >
<title>webrtc::RemoteEstimatorProxy::SendPeriodicFeedbacks() (6 samples, 0.13%)</title><rect x="1181.6" y="949" width="1.5" height="15.0" fill="rgb(234,22,11)" rx="2" ry="2" />
<text  x="1184.59" y="959.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostDelayedTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (4 samples, 0.08%)</title><rect x="76.8" y="773" width="1.0" height="15.0" fill="rgb(218,55,38)" rx="2" ry="2" />
<text  x="79.79" y="783.5" ></text>
</g>
<g >
<title>mojo::core::Channel::Message::ExtendPayload(unsigned long) (3 samples, 0.06%)</title><rect x="253.7" y="549" width="0.7" height="15.0" fill="rgb(234,155,42)" rx="2" ry="2" />
<text  x="256.67" y="559.5" ></text>
</g>
<g >
<title>base::internal::Sequence::TakeTask() (2 samples, 0.04%)</title><rect x="368.5" y="933" width="0.4" height="15.0" fill="rgb(241,129,20)" rx="2" ry="2" />
<text  x="371.45" y="943.5" ></text>
</g>
<g >
<title>WebRtcOpus_Encode (41 samples, 0.86%)</title><rect x="993.8" y="789" width="10.2" height="15.0" fill="rgb(220,6,36)" rx="2" ry="2" />
<text  x="996.83" y="799.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Reset() (11 samples, 0.23%)</title><rect x="363.3" y="965" width="2.7" height="15.0" fill="rgb(243,150,24)" rx="2" ry="2" />
<text  x="366.26" y="975.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::FillHole(unsigned long, base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&amp;&amp;) (1 samples, 0.02%)</title><rect x="328.4" y="789" width="0.2" height="15.0" fill="rgb(218,191,6)" rx="2" ry="2" />
<text  x="331.38" y="799.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Decoder::ReturnFrame(vpx_image const*, unsigned int, int) (10 samples, 0.21%)</title><rect x="531.2" y="773" width="2.5" height="15.0" fill="rgb(239,107,23)" rx="2" ry="2" />
<text  x="534.23" y="783.5" ></text>
</g>
<g >
<title>base::internal::(anonymous namespace)::WorkerThreadDelegate::PostTaskNow(scoped_refptr&lt;base::internal::Sequence&gt;, base::internal::Task) (17 samples, 0.36%)</title><rect x="122.3" y="725" width="4.2" height="15.0" fill="rgb(250,62,53)" rx="2" ry="2" />
<text  x="125.31" y="735.5" ></text>
</g>
<g >
<title>blink::ScrollingCoordinator::FrameScrollerIsDirty(blink::LocalFrameView*) const (1 samples, 0.02%)</title><rect x="27.3" y="501" width="0.3" height="15.0" fill="rgb(210,115,18)" rx="2" ry="2" />
<text  x="30.32" y="511.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (416 samples, 8.72%)</title><rect x="224.0" y="885" width="102.9" height="15.0" fill="rgb(231,119,42)" rx="2" ry="2" />
<text  x="226.98" y="895.5" >base::TaskAn..</text>
</g>
<g >
<title>std::__Cr::basic_stringbuf&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;::overflow(int) (1 samples, 0.02%)</title><rect x="54.0" y="869" width="0.3" height="15.0" fill="rgb(209,210,25)" rx="2" ry="2" />
<text  x="57.03" y="879.5" ></text>
</g>
<g >
<title>dispatch_queue_get_label (1 samples, 0.02%)</title><rect x="305.6" y="565" width="0.3" height="15.0" fill="rgb(242,191,17)" rx="2" ry="2" />
<text  x="308.62" y="575.5" ></text>
</g>
<g >
<title>base::internal::WeakPtrBase::~WeakPtrBase() (1 samples, 0.02%)</title><rect x="1074.0" y="773" width="0.2" height="15.0" fill="rgb(232,135,41)" rx="2" ry="2" />
<text  x="1076.98" y="783.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="551.3" y="757" width="0.2" height="15.0" fill="rgb(249,99,27)" rx="2" ry="2" />
<text  x="554.27" y="767.5" ></text>
</g>
<g >
<title>base::Value::~Value() (1 samples, 0.02%)</title><rect x="1052.5" y="533" width="0.2" height="15.0" fill="rgb(237,55,27)" rx="2" ry="2" />
<text  x="1055.46" y="543.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="719.7" y="853" width="0.3" height="15.0" fill="rgb(243,121,5)" rx="2" ry="2" />
<text  x="722.73" y="863.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="15.9" y="709" width="0.3" height="15.0" fill="rgb(227,70,46)" rx="2" ry="2" />
<text  x="18.94" y="719.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1039.8" y="597" width="0.3" height="15.0" fill="rgb(218,22,26)" rx="2" ry="2" />
<text  x="1042.84" y="607.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="574.3" y="901" width="0.5" height="15.0" fill="rgb(248,80,15)" rx="2" ry="2" />
<text  x="577.27" y="911.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::MaintainAtLeastOneIdleWorkerLockRequired(base::internal::ThreadGroupImpl::ScopedWorkersExecutor*) (1 samples, 0.02%)</title><rect x="1009.9" y="933" width="0.3" height="15.0" fill="rgb(220,201,30)" rx="2" ry="2" />
<text  x="1012.91" y="943.5" ></text>
</g>
<g >
<title>vp8_fast_quantize_b_ssse3 (6 samples, 0.13%)</title><rect x="590.6" y="661" width="1.5" height="15.0" fill="rgb(251,96,51)" rx="2" ry="2" />
<text  x="593.60" y="671.5" ></text>
</g>
<g >
<title>base::MessagePumpKqueue::ScheduleWork() (1 samples, 0.02%)</title><rect x="206.7" y="709" width="0.2" height="15.0" fill="rgb(244,174,7)" rx="2" ry="2" />
<text  x="209.67" y="719.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="167.3" y="549" width="0.3" height="15.0" fill="rgb(230,154,46)" rx="2" ry="2" />
<text  x="170.33" y="559.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::Write(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (4 samples, 0.08%)</title><rect x="1046.8" y="437" width="1.0" height="15.0" fill="rgb(218,83,50)" rx="2" ry="2" />
<text  x="1049.77" y="447.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::RunTaskInCategoryWithLockAcquired(cc::TaskCategory) (16 samples, 0.34%)</title><rect x="66.2" y="981" width="3.9" height="15.0" fill="rgb(244,72,0)" rx="2" ry="2" />
<text  x="69.16" y="991.5" ></text>
</g>
<g >
<title>mojo::core::Core::AppendMessageData(unsigned long, unsigned int, unsigned int const*, unsigned int, MojoAppendMessageDataOptions const*, void**, unsigned int*) (1 samples, 0.02%)</title><rect x="236.6" y="581" width="0.2" height="15.0" fill="rgb(250,177,42)" rx="2" ry="2" />
<text  x="239.60" y="591.5" ></text>
</g>
<g >
<title>webrtc::RTCPReceiver::RtcpRrSequenceNumberTimeout() (2 samples, 0.04%)</title><rect x="1177.1" y="949" width="0.5" height="15.0" fill="rgb(211,177,26)" rx="2" ry="2" />
<text  x="1180.14" y="959.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3 (1 samples, 0.02%)</title><rect x="680.6" y="693" width="0.3" height="15.0" fill="rgb(205,6,37)" rx="2" ry="2" />
<text  x="683.65" y="703.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="130.7" y="661" width="0.3" height="15.0" fill="rgb(240,214,43)" rx="2" ry="2" />
<text  x="133.72" y="671.5" ></text>
</g>
<g >
<title>vp8_pick_inter_mode (165 samples, 3.46%)</title><rect x="739.8" y="693" width="40.8" height="15.0" fill="rgb(227,176,16)" rx="2" ry="2" />
<text  x="742.77" y="703.5" >vp8..</text>
</g>
<g >
<title>__CFRunLoopFindMode (1 samples, 0.02%)</title><rect x="10.7" y="853" width="0.3" height="15.0" fill="rgb(227,22,10)" rx="2" ry="2" />
<text  x="13.74" y="863.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="300.7" y="757" width="0.5" height="15.0" fill="rgb(225,170,40)" rx="2" ry="2" />
<text  x="303.67" y="767.5" ></text>
</g>
<g >
<title>vp8_tokenize_mb (25 samples, 0.52%)</title><rect x="449.1" y="693" width="6.2" height="15.0" fill="rgb(221,15,54)" rx="2" ry="2" />
<text  x="452.10" y="703.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), void&gt;::Invoke&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;(void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&amp;&amp;) (1 samples, 0.02%)</title><rect x="61.2" y="885" width="0.3" height="15.0" fill="rgb(244,127,5)" rx="2" ry="2" />
<text  x="64.21" y="895.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="83.5" y="773" width="0.2" height="15.0" fill="rgb(236,87,6)" rx="2" ry="2" />
<text  x="86.47" y="783.5" ></text>
</g>
<g >
<title>base::mac::CallWithEHFrame(void () block_pointer) (1 samples, 0.02%)</title><rect x="13.2" y="789" width="0.3" height="15.0" fill="rgb(236,229,29)" rx="2" ry="2" />
<text  x="16.22" y="799.5" ></text>
</g>
<g >
<title>webrtc::RtcEventRtpPacketOutgoing::RtcEventRtpPacketOutgoing(webrtc::RtpPacketToSend const&amp;, int) (2 samples, 0.04%)</title><rect x="1159.1" y="885" width="0.5" height="15.0" fill="rgb(249,115,18)" rx="2" ry="2" />
<text  x="1162.08" y="895.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::EndUnusedPeriod() (2 samples, 0.04%)</title><rect x="1135.8" y="677" width="0.5" height="15.0" fill="rgb(237,4,15)" rx="2" ry="2" />
<text  x="1138.82" y="687.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="18.4" y="501" width="0.3" height="15.0" fill="rgb(249,211,53)" rx="2" ry="2" />
<text  x="21.41" y="511.5" ></text>
</g>
<g >
<title>base::SequenceToken::operator==(base::SequenceToken const&amp;) const (1 samples, 0.02%)</title><rect x="1059.4" y="773" width="0.2" height="15.0" fill="rgb(249,59,43)" rx="2" ry="2" />
<text  x="1062.38" y="783.5" ></text>
</g>
<g >
<title>mojo::core::Core::WriteMessage(unsigned int, unsigned long, MojoWriteMessageOptions const*) (2 samples, 0.04%)</title><rect x="1041.1" y="565" width="0.5" height="15.0" fill="rgb(227,63,39)" rx="2" ry="2" />
<text  x="1044.08" y="575.5" ></text>
</g>
<g >
<title>cc::RasterTilePriorityQueue::Create(std::__Cr::vector&lt;cc::PictureLayerImpl*, std::__Cr::allocator&lt;cc::PictureLayerImpl*&gt; &gt; const&amp;, std::__Cr::vector&lt;cc::PictureLayerImpl*, std::__Cr::allocator&lt;cc::PictureLayerImpl*&gt; &gt; const&amp;, cc::TreePriority, cc::RasterTilePriorityQueue::Type) (2 samples, 0.04%)</title><rect x="1070.8" y="693" width="0.5" height="15.0" fill="rgb(241,8,23)" rx="2" ry="2" />
<text  x="1073.76" y="703.5" ></text>
</g>
<g >
<title>viz::mojom::internal::LocalSurfaceId_Data::BufferWriter::data() (1 samples, 0.02%)</title><rect x="1043.6" y="613" width="0.2" height="15.0" fill="rgb(237,18,45)" rx="2" ry="2" />
<text  x="1046.55" y="623.5" ></text>
</g>
<g >
<title>mojo::Connector::ReadMessage(mojo::Message*) (23 samples, 0.48%)</title><rect x="320.5" y="789" width="5.7" height="15.0" fill="rgb(246,9,25)" rx="2" ry="2" />
<text  x="323.46" y="799.5" ></text>
</g>
<g >
<title>cricket::UDPPort::HandleIncomingPacket(rtc::AsyncPacketSocket*, char const*, unsigned long, rtc::SocketAddress const&amp;, long long) (10 samples, 0.21%)</title><rect x="225.2" y="677" width="2.5" height="15.0" fill="rgb(220,139,33)" rx="2" ry="2" />
<text  x="228.22" y="687.5" ></text>
</g>
<g >
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="720.5" y="853" width="0.2" height="15.0" fill="rgb(242,76,13)" rx="2" ry="2" />
<text  x="723.47" y="863.5" ></text>
</g>
<g >
<title>mojo::Connector::ReadMessage(mojo::Message*) (4 samples, 0.08%)</title><rect x="141.4" y="693" width="0.9" height="15.0" fill="rgb(249,141,12)" rx="2" ry="2" />
<text  x="144.36" y="703.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="42.7" y="581" width="0.2" height="15.0" fill="rgb(254,82,22)" rx="2" ry="2" />
<text  x="45.65" y="591.5" ></text>
</g>
<g >
<title>IPC::ParamTraits&lt;net::IPAddress&gt;::Write(base::Pickle*, net::IPAddress const&amp;) (5 samples, 0.10%)</title><rect x="242.8" y="613" width="1.2" height="15.0" fill="rgb(228,163,10)" rx="2" ry="2" />
<text  x="245.78" y="623.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="38.7" y="677" width="0.2" height="15.0" fill="rgb(225,86,22)" rx="2" ry="2" />
<text  x="41.70" y="687.5" ></text>
</g>
<g >
<title>vpx_variance8x8_sse2 (1 samples, 0.02%)</title><rect x="904.0" y="645" width="0.3" height="15.0" fill="rgb(246,146,10)" rx="2" ry="2" />
<text  x="907.03" y="655.5" ></text>
</g>
<g >
<title>write (6 samples, 0.13%)</title><rect x="1074.2" y="933" width="1.5" height="15.0" fill="rgb(247,0,11)" rx="2" ry="2" />
<text  x="1077.23" y="943.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (1 samples, 0.02%)</title><rect x="1023.3" y="933" width="0.2" height="15.0" fill="rgb(227,73,24)" rx="2" ry="2" />
<text  x="1026.27" y="943.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (3 samples, 0.06%)</title><rect x="501.8" y="709" width="0.7" height="15.0" fill="rgb(252,0,45)" rx="2" ry="2" />
<text  x="504.79" y="719.5" ></text>
</g>
<g >
<title>vp8_write_mvprobs (1 samples, 0.02%)</title><rect x="812.3" y="725" width="0.2" height="15.0" fill="rgb(233,208,20)" rx="2" ry="2" />
<text  x="815.25" y="735.5" ></text>
</g>
<g >
<title>base::Value::Value(base::span&lt;unsigned char const, 18446744073709551615ul&gt;) (1 samples, 0.02%)</title><rect x="204.7" y="805" width="0.2" height="15.0" fill="rgb(228,39,9)" rx="2" ry="2" />
<text  x="207.69" y="815.5" ></text>
</g>
<g >
<title>base::SequenceToken::operator==(base::SequenceToken const&amp;) const (1 samples, 0.02%)</title><rect x="553.2" y="869" width="0.3" height="15.0" fill="rgb(252,116,0)" rx="2" ry="2" />
<text  x="556.25" y="879.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;), base::internal::UnretainedWrapper&lt;(anonymous namespace)::WebrtcTaskQueue&gt;, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (550 samples, 11.53%)</title><rect x="719.5" y="885" width="136.0" height="15.0" fill="rgb(236,196,10)" rx="2" ry="2" />
<text  x="722.48" y="895.5" >base::internal::I..</text>
</g>
<g >
<title>mlp_process (1 samples, 0.02%)</title><rect x="537.2" y="709" width="0.2" height="15.0" fill="rgb(222,184,2)" rx="2" ry="2" />
<text  x="540.17" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (2 samples, 0.04%)</title><rect x="186.6" y="821" width="0.5" height="15.0" fill="rgb(248,99,25)" rx="2" ry="2" />
<text  x="189.63" y="831.5" ></text>
</g>
<g >
<title>base::MessagePumpDefault::Run(base::MessagePump::Delegate*) (2 samples, 0.04%)</title><rect x="213.8" y="933" width="0.5" height="15.0" fill="rgb(246,104,33)" rx="2" ry="2" />
<text  x="216.84" y="943.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) (4 samples, 0.08%)</title><rect x="1071.8" y="709" width="0.9" height="15.0" fill="rgb(215,18,18)" rx="2" ry="2" />
<text  x="1074.75" y="719.5" ></text>
</g>
<g >
<title>silk_process_gains_FLP (1 samples, 0.02%)</title><rect x="853.6" y="709" width="0.2" height="15.0" fill="rgb(218,20,47)" rx="2" ry="2" />
<text  x="856.56" y="719.5" ></text>
</g>
<g >
<title>free (3 samples, 0.06%)</title><rect x="715.3" y="885" width="0.7" height="15.0" fill="rgb(213,12,10)" rx="2" ry="2" />
<text  x="718.28" y="895.5" ></text>
</g>
<g >
<title>webrtc::SendTimeHistory::RemoveOld(long long) (1 samples, 0.02%)</title><rect x="1147.5" y="869" width="0.2" height="15.0" fill="rgb(210,35,3)" rx="2" ry="2" />
<text  x="1150.45" y="879.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="85.9" y="773" width="0.3" height="15.0" fill="rgb(226,88,43)" rx="2" ry="2" />
<text  x="88.95" y="783.5" ></text>
</g>
<g >
<title>rtc::ScopedMessageData&lt;rtc::AsyncClosure&gt;::~ScopedMessageData() (17 samples, 0.36%)</title><rect x="293.2" y="821" width="4.3" height="15.0" fill="rgb(240,159,22)" rx="2" ry="2" />
<text  x="296.25" y="831.5" ></text>
</g>
<g >
<title>webrtc::GoogCcNetworkController::OnTransportPacketsFeedback(webrtc::TransportPacketsFeedback) (1 samples, 0.02%)</title><rect x="882.8" y="837" width="0.2" height="15.0" fill="rgb(233,63,51)" rx="2" ry="2" />
<text  x="885.75" y="847.5" ></text>
</g>
<g >
<title>clt_mdct_forward_c (1 samples, 0.02%)</title><rect x="842.7" y="709" width="0.2" height="15.0" fill="rgb(240,50,0)" rx="2" ry="2" />
<text  x="845.68" y="719.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (29 samples, 0.61%)</title><rect x="39.4" y="709" width="7.2" height="15.0" fill="rgb(225,64,9)" rx="2" ry="2" />
<text  x="42.44" y="719.5" ></text>
</g>
<g >
<title>__CFArmNextTimerInMode (3 samples, 0.06%)</title><rect x="14.5" y="693" width="0.7" height="15.0" fill="rgb(230,188,46)" rx="2" ry="2" />
<text  x="17.45" y="703.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (181 samples, 3.79%)</title><rect x="1020.5" y="1013" width="44.8" height="15.0" fill="rgb(207,139,46)" rx="2" ry="2" />
<text  x="1023.55" y="1023.5" >base..</text>
</g>
<g >
<title>mojo::core::ports::PortLocker::PortLocker(mojo::core::ports::PortRef const**, unsigned long) (2 samples, 0.04%)</title><rect x="114.6" y="757" width="0.5" height="15.0" fill="rgb(216,144,23)" rx="2" ry="2" />
<text  x="117.64" y="767.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) (68 samples, 1.43%)</title><rect x="303.1" y="725" width="16.9" height="15.0" fill="rgb(220,26,32)" rx="2" ry="2" />
<text  x="306.14" y="735.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::Release() const (2 samples, 0.04%)</title><rect x="224.0" y="837" width="0.5" height="15.0" fill="rgb(232,154,32)" rx="2" ry="2" />
<text  x="226.98" y="847.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (1 samples, 0.02%)</title><rect x="713.3" y="901" width="0.2" height="15.0" fill="rgb(220,96,26)" rx="2" ry="2" />
<text  x="716.30" y="911.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMSCompositor::RenderWithoutAlgorithmOnCompositor(scoped_refptr&lt;media::VideoFrame&gt;) (1 samples, 0.02%)</title><rect x="1029.9" y="869" width="0.3" height="15.0" fill="rgb(226,135,18)" rx="2" ry="2" />
<text  x="1032.95" y="879.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::GetNumAwakeWorkersLockRequired() const (1 samples, 0.02%)</title><rect x="1010.9" y="933" width="0.2" height="15.0" fill="rgb(242,82,6)" rx="2" ry="2" />
<text  x="1013.90" y="943.5" ></text>
</g>
<g >
<title>base::internal::TaskTrackerPosix::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (523 samples, 10.96%)</title><rect x="877.1" y="949" width="129.3" height="15.0" fill="rgb(245,106,7)" rx="2" ry="2" />
<text  x="880.06" y="959.5" >base::internal::..</text>
</g>
<g >
<title>_pthread_cond_wait (1 samples, 0.02%)</title><rect x="54.5" y="965" width="0.3" height="15.0" fill="rgb(205,198,52)" rx="2" ry="2" />
<text  x="57.53" y="975.5" ></text>
</g>
<g >
<title>dispatch_queue_get_label (1 samples, 0.02%)</title><rect x="488.4" y="805" width="0.3" height="15.0" fill="rgb(251,203,38)" rx="2" ry="2" />
<text  x="491.43" y="815.5" ></text>
</g>
<g >
<title>extend_plane (4 samples, 0.08%)</title><rect x="481.8" y="725" width="0.9" height="15.0" fill="rgb(223,2,23)" rx="2" ry="2" />
<text  x="484.75" y="735.5" ></text>
</g>
<g >
<title>Builtins_CallProperty2Handler (1 samples, 0.02%)</title><rect x="16.9" y="421" width="0.3" height="15.0" fill="rgb(210,172,43)" rx="2" ry="2" />
<text  x="19.93" y="431.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.06%)</title><rect x="1025.2" y="885" width="0.8" height="15.0" fill="rgb(235,192,0)" rx="2" ry="2" />
<text  x="1028.25" y="895.5" ></text>
</g>
<g >
<title>mojo::internal::UnmappedNativeStructSerializerImpl::SerializeMessageContents(IPC::Message*, mojo::internal::Buffer*, mojo::native::internal::NativeStruct_Data::BufferWriter*, mojo::internal::SerializationContext*) (6 samples, 0.13%)</title><rect x="253.4" y="645" width="1.5" height="15.0" fill="rgb(216,221,51)" rx="2" ry="2" />
<text  x="256.42" y="655.5" ></text>
</g>
<g >
<title>_pthread_body (69 samples, 1.45%)</title><rect x="70.1" y="1029" width="17.1" height="15.0" fill="rgb(247,183,11)" rx="2" ry="2" />
<text  x="73.11" y="1039.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::OnCopiesDone(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*) (3 samples, 0.06%)</title><rect x="57.5" y="869" width="0.7" height="15.0" fill="rgb(234,62,43)" rx="2" ry="2" />
<text  x="60.50" y="879.5" ></text>
</g>
<g >
<title>mojo::core::ports::UserMessageEvent::~UserMessageEvent() (1 samples, 0.02%)</title><rect x="228.4" y="725" width="0.3" height="15.0" fill="rgb(245,107,47)" rx="2" ry="2" />
<text  x="231.44" y="735.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="861.0" y="917" width="0.2" height="15.0" fill="rgb(238,50,36)" rx="2" ry="2" />
<text  x="863.99" y="927.5" ></text>
</g>
<g >
<title>CFRunLoopWakeUp (5 samples, 0.10%)</title><rect x="1028.7" y="773" width="1.2" height="15.0" fill="rgb(219,22,7)" rx="2" ry="2" />
<text  x="1031.71" y="783.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_0::__invoke(_malloc_zone_t*, void const*) (1 samples, 0.02%)</title><rect x="321.9" y="677" width="0.3" height="15.0" fill="rgb(210,65,9)" rx="2" ry="2" />
<text  x="324.95" y="687.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (7 samples, 0.15%)</title><rect x="143.6" y="837" width="1.7" height="15.0" fill="rgb(227,11,0)" rx="2" ry="2" />
<text  x="146.58" y="847.5" ></text>
</g>
<g >
<title>void blink::(anonymous namespace)::SetDebugName&lt;blink::ClipPaintPropertyNode&gt;(blink::ClipPaintPropertyNode const*, WTF::String const&amp;, blink::LayoutObject const&amp;) (1 samples, 0.02%)</title><rect x="28.1" y="309" width="0.2" height="15.0" fill="rgb(207,59,1)" rx="2" ry="2" />
<text  x="31.06" y="319.5" ></text>
</g>
<g >
<title>realloc (1 samples, 0.02%)</title><rect x="243.8" y="549" width="0.2" height="15.0" fill="rgb(210,204,9)" rx="2" ry="2" />
<text  x="246.77" y="559.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1080.9" y="821" width="0.3" height="15.0" fill="rgb(249,219,41)" rx="2" ry="2" />
<text  x="1083.91" y="831.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::ReadMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (4 samples, 0.08%)</title><rect x="141.4" y="645" width="0.9" height="15.0" fill="rgb(251,25,6)" rx="2" ry="2" />
<text  x="144.36" y="655.5" ></text>
</g>
<g >
<title>mojo::core::ports::SinglePortLocker::~SinglePortLocker() (1 samples, 0.02%)</title><rect x="113.2" y="725" width="0.2" height="15.0" fill="rgb(240,226,26)" rx="2" ry="2" />
<text  x="116.16" y="735.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::CompleteCopyRequestAndMaybeStartNextCopy(scoped_refptr&lt;media::VideoFrame&gt;) (3 samples, 0.06%)</title><rect x="206.4" y="837" width="0.8" height="15.0" fill="rgb(215,153,30)" rx="2" ry="2" />
<text  x="209.42" y="847.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (4 samples, 0.08%)</title><rect x="38.4" y="693" width="1.0" height="15.0" fill="rgb(233,5,17)" rx="2" ry="2" />
<text  x="41.45" y="703.5" ></text>
</g>
<g >
<title>webrtc::AudioMultiVector::ReadInterleavedFromIndex(unsigned long, unsigned long, short*) const (1 samples, 0.02%)</title><rect x="1128.9" y="773" width="0.2" height="15.0" fill="rgb(216,148,9)" rx="2" ry="2" />
<text  x="1131.90" y="783.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetIOAllowed(bool) (6 samples, 0.13%)</title><rect x="573.3" y="917" width="1.5" height="15.0" fill="rgb(243,38,24)" rx="2" ry="2" />
<text  x="576.28" y="927.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3.filter_block1d8_h4_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="825.4" y="677" width="0.2" height="15.0" fill="rgb(220,42,9)" rx="2" ry="2" />
<text  x="828.36" y="687.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="876.3" y="917" width="0.3" height="15.0" fill="rgb(224,20,51)" rx="2" ry="2" />
<text  x="879.32" y="927.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="344.0" y="773" width="0.2" height="15.0" fill="rgb(216,223,53)" rx="2" ry="2" />
<text  x="346.96" y="783.5" ></text>
</g>
<g >
<title>_pthread_start (670 samples, 14.05%)</title><rect x="707.4" y="1045" width="165.7" height="15.0" fill="rgb(218,148,14)" rx="2" ry="2" />
<text  x="710.36" y="1055.5" >_pthread_start</text>
</g>
<g >
<title>opus_decode_native (37 samples, 0.78%)</title><rect x="1115.8" y="677" width="9.1" height="15.0" fill="rgb(226,119,21)" rx="2" ry="2" />
<text  x="1118.79" y="687.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="542.9" y="661" width="0.2" height="15.0" fill="rgb(246,27,36)" rx="2" ry="2" />
<text  x="545.86" y="671.5" ></text>
</g>
<g >
<title>fcntl (5 samples, 0.10%)</title><rect x="1075.7" y="965" width="1.2" height="15.0" fill="rgb(209,10,49)" rx="2" ry="2" />
<text  x="1078.71" y="975.5" ></text>
</g>
<g >
<title>blink::InputType::SetValue(WTF::String const&amp;, bool, blink::TextFieldEventBehavior, blink::TextControlSetValueSelection) (1 samples, 0.02%)</title><rect x="21.1" y="501" width="0.3" height="15.0" fill="rgb(233,206,7)" rx="2" ry="2" />
<text  x="24.13" y="511.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="1165.3" y="869" width="0.2" height="15.0" fill="rgb(228,98,45)" rx="2" ry="2" />
<text  x="1168.26" y="879.5" ></text>
</g>
<g >
<title>kevent64 (76 samples, 1.59%)</title><rect x="145.3" y="901" width="18.8" height="15.0" fill="rgb(249,219,2)" rx="2" ry="2" />
<text  x="148.32" y="911.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="486.7" y="549" width="0.2" height="15.0" fill="rgb(230,175,45)" rx="2" ry="2" />
<text  x="489.70" y="559.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="257.9" y="581" width="0.2" height="15.0" fill="rgb(247,66,40)" rx="2" ry="2" />
<text  x="260.87" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTaskImpl() (1 samples, 0.02%)</title><rect x="15.7" y="677" width="0.2" height="15.0" fill="rgb(211,182,22)" rx="2" ry="2" />
<text  x="18.69" y="687.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.02%)</title><rect x="19.9" y="421" width="0.2" height="15.0" fill="rgb(231,158,53)" rx="2" ry="2" />
<text  x="22.90" y="431.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) (19 samples, 0.40%)</title><rect x="136.4" y="629" width="4.7" height="15.0" fill="rgb(250,10,19)" rx="2" ry="2" />
<text  x="139.41" y="639.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::MachMessageSendLocked(mach_msg_header_t*) (2 samples, 0.04%)</title><rect x="173.3" y="549" width="0.5" height="15.0" fill="rgb(221,176,50)" rx="2" ry="2" />
<text  x="176.27" y="559.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;blink::WebRtcVideoFrameAdapter&gt;::Release() const (1 samples, 0.02%)</title><rect x="652.7" y="837" width="0.2" height="15.0" fill="rgb(228,19,42)" rx="2" ry="2" />
<text  x="655.69" y="847.5" ></text>
</g>
<g >
<title>vpx_codec_encode (420 samples, 8.81%)</title><rect x="382.3" y="789" width="103.9" height="15.0" fill="rgb(219,164,42)" rx="2" ry="2" />
<text  x="385.31" y="799.5" >vpx_codec_en..</text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (6 samples, 0.13%)</title><rect x="169.8" y="661" width="1.5" height="15.0" fill="rgb(218,5,20)" rx="2" ry="2" />
<text  x="172.81" y="671.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="1156.9" y="725" width="0.2" height="15.0" fill="rgb(236,89,43)" rx="2" ry="2" />
<text  x="1159.85" y="735.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="378.1" y="853" width="0.5" height="15.0" fill="rgb(222,177,41)" rx="2" ry="2" />
<text  x="381.10" y="863.5" ></text>
</g>
<g >
<title>media::VideoFrame::WrapExternalStorage(media::VideoFrame::StorageType, media::VideoFrameLayout const&amp;, gfx::Rect const&amp;, gfx::Size const&amp;, unsigned char*, unsigned long, base::TimeDelta, base::ReadOnlySharedMemoryRegion*, base::UnsafeSharedMemoryRegion*, base::SharedMemoryHandle, unsigned long) (1 samples, 0.02%)</title><rect x="137.6" y="533" width="0.3" height="15.0" fill="rgb(226,162,30)" rx="2" ry="2" />
<text  x="140.65" y="543.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1157.6" y="725" width="0.2" height="15.0" fill="rgb(249,147,50)" rx="2" ry="2" />
<text  x="1160.59" y="735.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="292.0" y="741" width="0.3" height="15.0" fill="rgb(216,125,16)" rx="2" ry="2" />
<text  x="295.01" y="751.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_8::__invoke(_malloc_zone_t*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="1041.8" y="469" width="0.3" height="15.0" fill="rgb(235,104,40)" rx="2" ry="2" />
<text  x="1044.82" y="479.5" ></text>
</g>
<g >
<title>gpu::GpuMemoryBufferImplIOSurface::Map() (2 samples, 0.04%)</title><rect x="65.2" y="917" width="0.5" height="15.0" fill="rgb(248,209,2)" rx="2" ry="2" />
<text  x="68.17" y="927.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbh_sse2 (1 samples, 0.02%)</title><rect x="605.9" y="661" width="0.3" height="15.0" fill="rgb(214,112,27)" rx="2" ry="2" />
<text  x="608.94" y="671.5" ></text>
</g>
<g >
<title>kevent64 (1 samples, 0.02%)</title><rect x="193.8" y="917" width="0.3" height="15.0" fill="rgb(237,223,22)" rx="2" ry="2" />
<text  x="196.80" y="927.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::RequiresTaskTiming() const (1 samples, 0.02%)</title><rect x="212.1" y="821" width="0.3" height="15.0" fill="rgb(206,81,42)" rx="2" ry="2" />
<text  x="215.11" y="831.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateExtension(webrtc::RTPExtensionType, unsigned long) (2 samples, 0.04%)</title><rect x="1160.6" y="885" width="0.5" height="15.0" fill="rgb(220,159,14)" rx="2" ry="2" />
<text  x="1163.56" y="895.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1148.2" y="773" width="0.2" height="15.0" fill="rgb(219,90,33)" rx="2" ry="2" />
<text  x="1151.19" y="783.5" ></text>
</g>
<g >
<title>vp8_pack_tokens (33 samples, 0.69%)</title><rect x="638.3" y="725" width="8.2" height="15.0" fill="rgb(252,177,12)" rx="2" ry="2" />
<text  x="641.34" y="735.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="43.9" y="597" width="0.2" height="15.0" fill="rgb(216,95,35)" rx="2" ry="2" />
<text  x="46.89" y="607.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="176.2" y="629" width="0.3" height="15.0" fill="rgb(242,27,14)" rx="2" ry="2" />
<text  x="179.24" y="639.5" ></text>
</g>
<g >
<title>base::LazyInstance&lt;base::ThreadLocalPointer&lt;base::internal::SequenceLocalStorageMap&gt;, base::internal::LeakyLazyInstanceTraits&lt;base::ThreadLocalPointer&lt;base::internal::SequenceLocalStorageMap&gt; &gt; &gt;::Pointer() (1 samples, 0.02%)</title><rect x="881.5" y="901" width="0.3" height="15.0" fill="rgb(226,189,11)" rx="2" ry="2" />
<text  x="884.52" y="911.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendPeerEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (2 samples, 0.04%)</title><rect x="173.3" y="629" width="0.5" height="15.0" fill="rgb(211,50,48)" rx="2" ry="2" />
<text  x="176.27" y="639.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="486.7" y="709" width="0.2" height="15.0" fill="rgb(230,156,12)" rx="2" ry="2" />
<text  x="489.70" y="719.5" ></text>
</g>
<g >
<title>CFSetContainsValue (1 samples, 0.02%)</title><rect x="51.8" y="837" width="0.3" height="15.0" fill="rgb(214,120,25)" rx="2" ry="2" />
<text  x="54.81" y="847.5" ></text>
</g>
<g >
<title>webrtc::SendStatisticsProxy::OnIncomingFrame(int, int) (1 samples, 0.02%)</title><rect x="581.4" y="837" width="0.3" height="15.0" fill="rgb(246,8,32)" rx="2" ry="2" />
<text  x="584.45" y="847.5" ></text>
</g>
<g >
<title>rtc::TimeMillis() (1 samples, 0.02%)</title><rect x="691.3" y="773" width="0.2" height="15.0" fill="rgb(242,15,25)" rx="2" ry="2" />
<text  x="694.28" y="783.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="299.7" y="789" width="0.2" height="15.0" fill="rgb(217,141,43)" rx="2" ry="2" />
<text  x="302.68" y="799.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="23.6" y="565" width="0.3" height="15.0" fill="rgb(252,82,33)" rx="2" ry="2" />
<text  x="26.61" y="575.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="386.3" y="693" width="0.2" height="15.0" fill="rgb(245,187,5)" rx="2" ry="2" />
<text  x="389.26" y="703.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="461.0" y="709" width="0.2" height="15.0" fill="rgb(212,222,1)" rx="2" ry="2" />
<text  x="463.97" y="719.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.02%)</title><rect x="257.6" y="533" width="0.3" height="15.0" fill="rgb(211,168,13)" rx="2" ry="2" />
<text  x="260.63" y="543.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="553.0" y="853" width="0.2" height="15.0" fill="rgb(251,30,16)" rx="2" ry="2" />
<text  x="556.00" y="863.5" ></text>
</g>
<g >
<title>mojo::StructTraits&lt;viz::mojom::BeginFrameArgsDataView, viz::BeginFrameArgs&gt;::Read(viz::mojom::BeginFrameArgsDataView, viz::BeginFrameArgs*) (2 samples, 0.04%)</title><rect x="1048.7" y="677" width="0.5" height="15.0" fill="rgb(213,21,24)" rx="2" ry="2" />
<text  x="1051.75" y="687.5" ></text>
</g>
<g >
<title>vp8_initialize_rd_consts (1 samples, 0.02%)</title><rect x="457.8" y="725" width="0.2" height="15.0" fill="rgb(237,191,49)" rx="2" ry="2" />
<text  x="460.76" y="735.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (4 samples, 0.08%)</title><rect x="862.5" y="917" width="1.0" height="15.0" fill="rgb(236,213,23)" rx="2" ry="2" />
<text  x="865.47" y="927.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::MoveHoleUpAndFillWithElement(unsigned long, base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&amp;&amp;) (1 samples, 0.02%)</title><rect x="328.4" y="805" width="0.2" height="15.0" fill="rgb(227,116,12)" rx="2" ry="2" />
<text  x="331.38" y="815.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="225.2" y="501" width="0.3" height="15.0" fill="rgb(252,170,47)" rx="2" ry="2" />
<text  x="228.22" y="511.5" ></text>
</g>
<g >
<title>objc_msgSend (2 samples, 0.04%)</title><rect x="566.1" y="981" width="0.5" height="15.0" fill="rgb(243,188,11)" rx="2" ry="2" />
<text  x="569.11" y="991.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_zero_loop (6 samples, 0.13%)</title><rect x="609.4" y="661" width="1.5" height="15.0" fill="rgb(211,71,20)" rx="2" ry="2" />
<text  x="612.40" y="671.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="167.6" y="597" width="0.2" height="15.0" fill="rgb(241,71,51)" rx="2" ry="2" />
<text  x="170.58" y="607.5" ></text>
</g>
<g >
<title>webrtc::AudioMultiVector::Clear() (2 samples, 0.04%)</title><rect x="1114.3" y="789" width="0.5" height="15.0" fill="rgb(223,86,12)" rx="2" ry="2" />
<text  x="1117.30" y="799.5" ></text>
</g>
<g >
<title>_CFRunLoopFinished (2 samples, 0.04%)</title><rect x="51.8" y="869" width="0.5" height="15.0" fill="rgb(241,185,36)" rx="2" ry="2" />
<text  x="54.81" y="879.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="344.5" y="789" width="0.2" height="15.0" fill="rgb(210,174,18)" rx="2" ry="2" />
<text  x="347.46" y="799.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="183.9" y="805" width="0.3" height="15.0" fill="rgb(238,77,54)" rx="2" ry="2" />
<text  x="186.91" y="815.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1085.1" y="693" width="0.3" height="15.0" fill="rgb(220,18,37)" rx="2" ry="2" />
<text  x="1088.11" y="703.5" ></text>
</g>
<g >
<title>mojo::core::Core::DestroyMessage(unsigned long) (1 samples, 0.02%)</title><rect x="1072.7" y="709" width="0.3" height="15.0" fill="rgb(214,1,34)" rx="2" ry="2" />
<text  x="1075.74" y="719.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::WriteChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (1 samples, 0.02%)</title><rect x="236.1" y="453" width="0.3" height="15.0" fill="rgb(253,43,37)" rx="2" ry="2" />
<text  x="239.10" y="463.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (8 samples, 0.17%)</title><rect x="134.2" y="629" width="2.0" height="15.0" fill="rgb(230,10,28)" rx="2" ry="2" />
<text  x="137.18" y="639.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;mojo::MapDataView&lt;unsigned int, viz::mojom::FrameTimingDetailsDataView&gt;, WTF::HashMap&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;, WTF::IntHash&lt;unsigned int&gt;, WTF::HashTraits&lt;unsigned int&gt;, WTF::HashTraits&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;, WTF::PartitionAllocator&gt; &gt;::Deserialize(mojo::internal::Map_Data&lt;unsigned int, mojo::internal::Pointer&lt;viz::mojom::internal::FrameTimingDetails_Data&gt; &gt;*, WTF::HashMap&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;, WTF::IntHash&lt;unsigned int&gt;, WTF::HashTraits&lt;unsigned int&gt;, WTF::HashTraits&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;, WTF::PartitionAllocator&gt;*, mojo::internal::SerializationContext*) (2 samples, 0.04%)</title><rect x="1051.5" y="677" width="0.5" height="15.0" fill="rgb(227,119,33)" rx="2" ry="2" />
<text  x="1054.47" y="687.5" ></text>
</g>
<g >
<title>blink::LayoutBoxModelObject::PushMappingToContainer(blink::LayoutBoxModelObject const*, blink::LayoutGeometryMap&amp;) const (1 samples, 0.02%)</title><rect x="25.3" y="373" width="0.3" height="15.0" fill="rgb(225,111,18)" rx="2" ry="2" />
<text  x="28.34" y="383.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (3 samples, 0.06%)</title><rect x="553.7" y="885" width="0.8" height="15.0" fill="rgb(229,125,36)" rx="2" ry="2" />
<text  x="556.74" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GetQueuePriority() const (1 samples, 0.02%)</title><rect x="189.1" y="837" width="0.3" height="15.0" fill="rgb(235,31,44)" rx="2" ry="2" />
<text  x="192.10" y="847.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (3 samples, 0.06%)</title><rect x="1153.6" y="805" width="0.8" height="15.0" fill="rgb(223,182,40)" rx="2" ry="2" />
<text  x="1156.64" y="815.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::SendChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (5 samples, 0.10%)</title><rect x="169.8" y="597" width="1.2" height="15.0" fill="rgb(242,165,48)" rx="2" ry="2" />
<text  x="172.81" y="607.5" ></text>
</g>
<g >
<title>cricket::P2PTransportChannel::SendPacket(char const*, unsigned long, rtc::PacketOptions const&amp;, int) (8 samples, 0.17%)</title><rect x="234.9" y="757" width="1.9" height="15.0" fill="rgb(239,164,51)" rx="2" ry="2" />
<text  x="237.87" y="767.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__tree_iterator&lt;webrtc::RtpPacketHistory::StoredPacket*, std::__Cr::__tree_node&lt;webrtc::RtpPacketHistory::StoredPacket*, void*&gt;*, long&gt;, bool&gt; std::__Cr::__tree&lt;webrtc::RtpPacketHistory::StoredPacket*, webrtc::RtpPacketHistory::MoreUseful, std::__Cr::allocator&lt;webrtc::RtpPacketHistory::StoredPacket*&gt; &gt;::__emplace_unique_key_args&lt;webrtc::RtpPacketHistory::StoredPacket*, webrtc::RtpPacketHistory::StoredPacket*&gt;(webrtc::RtpPacketHistory::StoredPacket* const&amp;, webrtc::RtpPacketHistory::StoredPacket*&amp;&amp;) (1 samples, 0.02%)</title><rect x="854.1" y="757" width="0.2" height="15.0" fill="rgb(242,201,36)" rx="2" ry="2" />
<text  x="857.06" y="767.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::RunTaskInCategoryWithLockAcquired(cc::TaskCategory) (17 samples, 0.36%)</title><rect x="54.8" y="981" width="4.2" height="15.0" fill="rgb(248,77,38)" rx="2" ry="2" />
<text  x="57.78" y="991.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="321.7" y="693" width="0.2" height="15.0" fill="rgb(214,151,38)" rx="2" ry="2" />
<text  x="324.70" y="703.5" ></text>
</g>
<g >
<title>_pthread_body (95 samples, 1.99%)</title><rect x="1140.0" y="1029" width="23.5" height="15.0" fill="rgb(249,175,34)" rx="2" ry="2" />
<text  x="1143.03" y="1039.5" >_..</text>
</g>
<g >
<title>vp8cx_mb_init_quantizer (1 samples, 0.02%)</title><rect x="458.0" y="725" width="0.3" height="15.0" fill="rgb(215,200,27)" rx="2" ry="2" />
<text  x="461.00" y="735.5" ></text>
</g>
<g >
<title>mojo::Message::CreateFromMessageHandle(mojo::ScopedHandleBase&lt;mojo::MessageHandle&gt;*) (1 samples, 0.02%)</title><rect x="1058.9" y="789" width="0.2" height="15.0" fill="rgb(246,19,42)" rx="2" ry="2" />
<text  x="1061.89" y="799.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (3 samples, 0.06%)</title><rect x="880.8" y="837" width="0.7" height="15.0" fill="rgb(215,50,33)" rx="2" ry="2" />
<text  x="883.78" y="847.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::ClosureTask::RunOnWorkerThread() (12 samples, 0.25%)</title><rect x="62.7" y="965" width="3.0" height="15.0" fill="rgb(205,98,33)" rx="2" ry="2" />
<text  x="65.69" y="975.5" ></text>
</g>
<g >
<title>rtc::RateTracker::AddSamples(unsigned long) (1 samples, 0.02%)</title><rect x="269.5" y="661" width="0.2" height="15.0" fill="rgb(252,175,31)" rx="2" ry="2" />
<text  x="272.50" y="671.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;(anonymous namespace)::FrameAdapter&lt;webrtc::I420BufferInterface&gt; &gt;::~RefCountedObject() (1 samples, 0.02%)</title><rect x="652.7" y="789" width="0.2" height="15.0" fill="rgb(230,139,26)" rx="2" ry="2" />
<text  x="655.69" y="799.5" ></text>
</g>
<g >
<title>webrtc::RTCPReceiver::ParseCompoundPacket(unsigned char const*, unsigned char const*, webrtc::RTCPReceiver::PacketInformation*) (1 samples, 0.02%)</title><rect x="284.3" y="725" width="0.3" height="15.0" fill="rgb(252,13,7)" rx="2" ry="2" />
<text  x="287.34" y="735.5" ></text>
</g>
<g >
<title>mojo::Message&amp; base::circular_deque&lt;mojo::Message&gt;::emplace_back&lt;mojo::Message&gt;(mojo::Message&amp;&amp;) (1 samples, 0.02%)</title><rect x="326.2" y="789" width="0.2" height="15.0" fill="rgb(210,55,35)" rx="2" ry="2" />
<text  x="329.15" y="799.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessageInternal(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (19 samples, 0.40%)</title><rect x="245.8" y="517" width="4.7" height="15.0" fill="rgb(252,22,42)" rx="2" ry="2" />
<text  x="248.75" y="527.5" ></text>
</g>
<g >
<title>std::__Cr::__tree&lt;std::__Cr::__value_type&lt;webrtc::video_coding::VideoLayerFrameId, webrtc::video_coding::FrameBuffer::FrameInfo&gt;, std::__Cr::__map_value_compare&lt;webrtc::video_coding::VideoLayerFrameId, std::__Cr::__value_type&lt;webrtc::video_coding::VideoLayerFrameId, webrtc::video_coding::FrameBuffer::FrameInfo&gt;, std::__Cr::less&lt;webrtc::video_coding::VideoLayerFrameId&gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;webrtc::video_coding::VideoLayerFrameId, webrtc::video_coding::FrameBuffer::FrameInfo&gt; &gt; &gt;::erase(std::__Cr::__tree_const_iterator&lt;std::__Cr::__value_type&lt;webrtc::video_coding::VideoLayerFrameId, webrtc::video_coding::FrameBuffer::FrameInfo&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;webrtc::video_coding::VideoLayerFrameId, webrtc::video_coding::FrameBuffer::FrameInfo&gt;, void*&gt;*, long&gt;) (1 samples, 0.02%)</title><rect x="551.8" y="805" width="0.2" height="15.0" fill="rgb(224,73,32)" rx="2" ry="2" />
<text  x="554.76" y="815.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (1 samples, 0.02%)</title><rect x="942.6" y="709" width="0.3" height="15.0" fill="rgb(228,151,23)" rx="2" ry="2" />
<text  x="945.62" y="719.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="579.0" y="853" width="0.2" height="15.0" fill="rgb(252,168,6)" rx="2" ry="2" />
<text  x="581.97" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::Task::Task(base::sequence_manager::internal::PostedTask, base::TimeTicks, base::sequence_manager::internal::EnqueueOrder, base::sequence_manager::internal::EnqueueOrder, base::sequence_manager::internal::WakeUpResolution) (1 samples, 0.02%)</title><rect x="76.8" y="757" width="0.2" height="15.0" fill="rgb(241,139,35)" rx="2" ry="2" />
<text  x="79.79" y="767.5" ></text>
</g>
<g >
<title>cc::CompletionEvent::Wait() (1 samples, 0.02%)</title><rect x="23.6" y="645" width="0.3" height="15.0" fill="rgb(223,162,47)" rx="2" ry="2" />
<text  x="26.61" y="655.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (2 samples, 0.04%)</title><rect x="267.0" y="357" width="0.5" height="15.0" fill="rgb(234,140,3)" rx="2" ry="2" />
<text  x="270.03" y="367.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintFragmentWithPhase(blink::PaintPhase, blink::PaintLayerFragment const&amp;, blink::GraphicsContext&amp;, blink::ClipRect const&amp;, blink::PaintLayerPaintingInfo const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="26.6" y="277" width="0.2" height="15.0" fill="rgb(214,120,6)" rx="2" ry="2" />
<text  x="29.57" y="287.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::CullAcknowledgedPackets(rtc::ArrayView&lt;unsigned short const, -4711l&gt;) (1 samples, 0.02%)</title><rect x="284.8" y="645" width="0.3" height="15.0" fill="rgb(219,52,4)" rx="2" ry="2" />
<text  x="287.84" y="655.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_y_sse2 (3 samples, 0.06%)</title><rect x="458.7" y="709" width="0.8" height="15.0" fill="rgb(236,158,44)" rx="2" ry="2" />
<text  x="461.75" y="719.5" ></text>
</g>
<g >
<title>webrtc::SendStatisticsProxy::UmaSamplesContainer::InsertEncodedFrame(webrtc::EncodedImage const&amp;, int, bool*) (1 samples, 0.02%)</title><rect x="651.2" y="741" width="0.3" height="15.0" fill="rgb(243,134,16)" rx="2" ry="2" />
<text  x="654.21" y="751.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::GetTimeTicks(media::VideoFrameMetadata::Key, base::TimeTicks*) const (1 samples, 0.02%)</title><rect x="137.9" y="549" width="0.2" height="15.0" fill="rgb(230,209,10)" rx="2" ry="2" />
<text  x="140.90" y="559.5" ></text>
</g>
<g >
<title>blink::probe::UserCallback::UserCallback(blink::ExecutionContext*, char const*, WTF::AtomicString const&amp;, bool, blink::EventTarget*) (2 samples, 0.04%)</title><rect x="21.9" y="565" width="0.5" height="15.0" fill="rgb(216,56,41)" rx="2" ry="2" />
<text  x="24.87" y="575.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_other_loop (7 samples, 0.15%)</title><rect x="769.5" y="661" width="1.7" height="15.0" fill="rgb(235,20,39)" rx="2" ry="2" />
<text  x="772.45" y="671.5" ></text>
</g>
<g >
<title>encode_mvcomponent (1 samples, 0.02%)</title><rect x="465.4" y="709" width="0.3" height="15.0" fill="rgb(209,120,48)" rx="2" ry="2" />
<text  x="468.43" y="719.5" ></text>
</g>
<g >
<title>base::OnceCallback&lt;void (double)&gt; media::BindToCurrentLoop&lt;double&gt;(base::OnceCallback&lt;void (double)&gt;) (1 samples, 0.02%)</title><rect x="137.2" y="549" width="0.2" height="15.0" fill="rgb(223,129,44)" rx="2" ry="2" />
<text  x="140.15" y="559.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="194.8" y="837" width="0.2" height="15.0" fill="rgb(248,203,24)" rx="2" ry="2" />
<text  x="197.79" y="847.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (3 samples, 0.06%)</title><rect x="329.9" y="837" width="0.7" height="15.0" fill="rgb(231,129,25)" rx="2" ry="2" />
<text  x="332.86" y="847.5" ></text>
</g>
<g >
<title>celt_encode_with_ec (3 samples, 0.06%)</title><rect x="683.9" y="741" width="0.7" height="15.0" fill="rgb(238,157,15)" rx="2" ry="2" />
<text  x="686.86" y="751.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (2 samples, 0.04%)</title><rect x="1182.3" y="821" width="0.5" height="15.0" fill="rgb(240,19,12)" rx="2" ry="2" />
<text  x="1185.33" y="831.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="191.3" y="869" width="0.3" height="15.0" fill="rgb(235,55,11)" rx="2" ry="2" />
<text  x="194.33" y="879.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetWaitAllowed(bool) (1 samples, 0.02%)</title><rect x="1027.5" y="917" width="0.2" height="15.0" fill="rgb(245,133,52)" rx="2" ry="2" />
<text  x="1030.47" y="927.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (487 samples, 10.21%)</title><rect x="572.3" y="933" width="120.5" height="15.0" fill="rgb(221,76,27)" rx="2" ry="2" />
<text  x="575.29" y="943.5" >base::internal:..</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="39.9" y="597" width="0.3" height="15.0" fill="rgb(210,177,52)" rx="2" ry="2" />
<text  x="42.93" y="607.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="651.7" y="629" width="0.2" height="15.0" fill="rgb(235,26,38)" rx="2" ry="2" />
<text  x="654.70" y="639.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="299.9" y="805" width="0.3" height="15.0" fill="rgb(208,160,48)" rx="2" ry="2" />
<text  x="302.93" y="815.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="272.7" y="517" width="0.5" height="15.0" fill="rgb(221,142,8)" rx="2" ry="2" />
<text  x="275.72" y="527.5" ></text>
</g>
<g >
<title>base::internal::PriorityQueue::Push(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.02%)</title><rect x="554.7" y="933" width="0.3" height="15.0" fill="rgb(220,219,16)" rx="2" ry="2" />
<text  x="557.73" y="943.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.02%)</title><rect x="298.7" y="645" width="0.2" height="15.0" fill="rgb(223,217,17)" rx="2" ry="2" />
<text  x="301.69" y="655.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::PaintTree() (2 samples, 0.04%)</title><rect x="26.6" y="517" width="0.5" height="15.0" fill="rgb(212,144,4)" rx="2" ry="2" />
<text  x="29.57" y="527.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (4 samples, 0.08%)</title><rect x="140.1" y="405" width="1.0" height="15.0" fill="rgb(221,206,14)" rx="2" ry="2" />
<text  x="143.12" y="415.5" ></text>
</g>
<g >
<title>cricket::WebRtcVoiceMediaChannel::SendRtcp(unsigned char const*, unsigned long) (3 samples, 0.06%)</title><rect x="1181.6" y="869" width="0.7" height="15.0" fill="rgb(206,227,11)" rx="2" ry="2" />
<text  x="1184.59" y="879.5" ></text>
</g>
<g >
<title>MojoReadMessage (4 samples, 0.08%)</title><rect x="141.4" y="677" width="0.9" height="15.0" fill="rgb(238,2,49)" rx="2" ry="2" />
<text  x="144.36" y="687.5" ></text>
</g>
<g >
<title>base::AlignedAlloc(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="1039.3" y="565" width="0.3" height="15.0" fill="rgb(212,74,24)" rx="2" ry="2" />
<text  x="1042.35" y="575.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::CreateOrExtendSerializedEventMessage(mojo::core::ports::UserMessageEvent*, unsigned long, unsigned long, mojo::core::Dispatcher::DispatcherInTransit const*, unsigned long, std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;*, void**, unsigned long*, void**) (1 samples, 0.02%)</title><rect x="168.1" y="709" width="0.2" height="15.0" fill="rgb(253,150,42)" rx="2" ry="2" />
<text  x="171.08" y="719.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::PrepareTiles() (2 samples, 0.04%)</title><rect x="1067.5" y="805" width="0.5" height="15.0" fill="rgb(230,112,22)" rx="2" ry="2" />
<text  x="1070.55" y="815.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="61.2" y="789" width="0.3" height="15.0" fill="rgb(220,141,41)" rx="2" ry="2" />
<text  x="64.21" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (4 samples, 0.08%)</title><rect x="39.7" y="661" width="1.0" height="15.0" fill="rgb(217,10,16)" rx="2" ry="2" />
<text  x="42.69" y="671.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (1 samples, 0.02%)</title><rect x="391.0" y="645" width="0.2" height="15.0" fill="rgb(244,73,11)" rx="2" ry="2" />
<text  x="393.96" y="655.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="1108.4" y="917" width="0.2" height="15.0" fill="rgb(209,144,35)" rx="2" ry="2" />
<text  x="1111.36" y="927.5" ></text>
</g>
<g >
<title>IPC::(anonymous namespace)::ChannelAssociatedGroupController::Endpoint::SendMessage(mojo::Message*) (1 samples, 0.02%)</title><rect x="19.9" y="197" width="0.2" height="15.0" fill="rgb(236,19,11)" rx="2" ry="2" />
<text  x="22.90" y="207.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="345.2" y="773" width="0.2" height="15.0" fill="rgb(233,189,4)" rx="2" ry="2" />
<text  x="348.20" y="783.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="457.5" y="645" width="0.3" height="15.0" fill="rgb(248,30,33)" rx="2" ry="2" />
<text  x="460.51" y="655.5" ></text>
</g>
<g >
<title>cc::ProxyImpl::ScheduledActionCommit() (5 samples, 0.10%)</title><rect x="1070.3" y="837" width="1.2" height="15.0" fill="rgb(244,175,48)" rx="2" ry="2" />
<text  x="1073.27" y="847.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (3 samples, 0.06%)</title><rect x="282.4" y="661" width="0.7" height="15.0" fill="rgb(211,48,13)" rx="2" ry="2" />
<text  x="285.36" y="671.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::BarrierInfo::Run() (1 samples, 0.02%)</title><rect x="61.2" y="901" width="0.3" height="15.0" fill="rgb(244,72,18)" rx="2" ry="2" />
<text  x="64.21" y="911.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="208.2" y="725" width="0.2" height="15.0" fill="rgb(234,213,19)" rx="2" ry="2" />
<text  x="211.15" y="735.5" ></text>
</g>
<g >
<title>network::mojom::P2PSocketProxy::Send(std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&amp;, network::P2PPacketInfo const&amp;, net::MutableNetworkTrafficAnnotationTag const&amp;) (7 samples, 0.15%)</title><rect x="235.1" y="661" width="1.7" height="15.0" fill="rgb(234,159,17)" rx="2" ry="2" />
<text  x="238.12" y="671.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="1034.6" y="501" width="0.3" height="15.0" fill="rgb(216,26,14)" rx="2" ry="2" />
<text  x="1037.65" y="511.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="722.2" y="741" width="0.3" height="15.0" fill="rgb(253,213,11)" rx="2" ry="2" />
<text  x="725.21" y="751.5" ></text>
</g>
<g >
<title>cc::EffectTree::operator=(cc::EffectTree const&amp;) (1 samples, 0.02%)</title><rect x="1070.3" y="773" width="0.2" height="15.0" fill="rgb(251,224,47)" rx="2" ry="2" />
<text  x="1073.27" y="783.5" ></text>
</g>
<g >
<title>MojoAppendMessageDataImpl (1 samples, 0.02%)</title><rect x="1041.8" y="581" width="0.3" height="15.0" fill="rgb(227,116,31)" rx="2" ry="2" />
<text  x="1044.82" y="591.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (2 samples, 0.04%)</title><rect x="1182.3" y="837" width="0.5" height="15.0" fill="rgb(218,102,34)" rx="2" ry="2" />
<text  x="1185.33" y="847.5" ></text>
</g>
<g >
<title>aes_hw_ctr32_encrypt_blocks (1 samples, 0.02%)</title><rect x="307.4" y="453" width="0.2" height="15.0" fill="rgb(244,106,4)" rx="2" ry="2" />
<text  x="310.35" y="463.5" ></text>
</g>
<g >
<title>DYLD-STUB$$pthread_self (1 samples, 0.02%)</title><rect x="77.0" y="677" width="0.3" height="15.0" fill="rgb(228,142,33)" rx="2" ry="2" />
<text  x="80.04" y="687.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::MaintainAtLeastOneIdleWorkerLockRequired(base::internal::ThreadGroupImpl::ScopedWorkersExecutor*) (1 samples, 0.02%)</title><rect x="283.6" y="597" width="0.2" height="15.0" fill="rgb(211,5,2)" rx="2" ry="2" />
<text  x="286.60" y="607.5" ></text>
</g>
<g >
<title>aes_hw_ctr32_encrypt_blocks (1 samples, 0.02%)</title><rect x="306.6" y="453" width="0.3" height="15.0" fill="rgb(208,175,4)" rx="2" ry="2" />
<text  x="309.61" y="463.5" ></text>
</g>
<g >
<title>vpx_codec_decode (96 samples, 2.01%)</title><rect x="658.4" y="773" width="23.7" height="15.0" fill="rgb(237,129,25)" rx="2" ry="2" />
<text  x="661.38" y="783.5" >v..</text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_half_loop (2 samples, 0.04%)</title><rect x="745.2" y="661" width="0.5" height="15.0" fill="rgb(229,218,52)" rx="2" ry="2" />
<text  x="748.21" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="1034.6" y="469" width="0.3" height="15.0" fill="rgb(205,204,16)" rx="2" ry="2" />
<text  x="1037.65" y="479.5" ></text>
</g>
<g >
<title>webrtc::AimdRateControl::ChangeBitrate(webrtc::DataRate, webrtc::RateControlInput const&amp;, webrtc::Timestamp) (1 samples, 0.02%)</title><rect x="581.0" y="773" width="0.2" height="15.0" fill="rgb(231,57,31)" rx="2" ry="2" />
<text  x="583.95" y="783.5" ></text>
</g>
<g >
<title>backtrace (2 samples, 0.04%)</title><rect x="575.5" y="869" width="0.5" height="15.0" fill="rgb(248,79,42)" rx="2" ry="2" />
<text  x="578.51" y="879.5" ></text>
</g>
<g >
<title>base::internal::SequenceLocalStorageMap::Set(int, base::internal::SequenceLocalStorageMap::ValueDestructorPair) (1 samples, 0.02%)</title><rect x="1049.7" y="661" width="0.3" height="15.0" fill="rgb(243,30,5)" rx="2" ry="2" />
<text  x="1052.74" y="671.5" ></text>
</g>
<g >
<title>media::ClockSmoother::Smooth(base::TimeTicks, base::TimeDelta) (3 samples, 0.06%)</title><rect x="1096.7" y="933" width="0.8" height="15.0" fill="rgb(231,112,3)" rx="2" ry="2" />
<text  x="1099.74" y="943.5" ></text>
</g>
<g >
<title>webrtc::PacedPacketInfo::PacedPacketInfo() (1 samples, 0.02%)</title><rect x="1145.7" y="949" width="0.3" height="15.0" fill="rgb(223,57,31)" rx="2" ry="2" />
<text  x="1148.72" y="959.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (2 samples, 0.04%)</title><rect x="413.2" y="645" width="0.5" height="15.0" fill="rgb(246,18,48)" rx="2" ry="2" />
<text  x="416.23" y="655.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="533.2" y="549" width="0.3" height="15.0" fill="rgb(222,146,54)" rx="2" ry="2" />
<text  x="536.21" y="559.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="301.7" y="773" width="0.2" height="15.0" fill="rgb(228,67,38)" rx="2" ry="2" />
<text  x="304.66" y="783.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;media::AudioShifter::AudioQueueEntry&gt;::pop_front() (1 samples, 0.02%)</title><rect x="1100.2" y="869" width="0.2" height="15.0" fill="rgb(241,82,32)" rx="2" ry="2" />
<text  x="1103.20" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (4 samples, 0.08%)</title><rect x="356.3" y="789" width="1.0" height="15.0" fill="rgb(212,170,7)" rx="2" ry="2" />
<text  x="359.33" y="799.5" ></text>
</g>
<g >
<title>vp8_copy32xn_sse3.block_copy_sse3_loopx4 (1 samples, 0.02%)</title><rect x="409.0" y="677" width="0.3" height="15.0" fill="rgb(236,60,51)" rx="2" ry="2" />
<text  x="412.02" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::UpdateDelayedWakeUpImpl(base::sequence_manager::LazyNow*, base::Optional&lt;base::sequence_manager::internal::DelayedWakeUp&gt;) (1 samples, 0.02%)</title><rect x="84.2" y="773" width="0.3" height="15.0" fill="rgb(224,96,49)" rx="2" ry="2" />
<text  x="87.21" y="783.5" ></text>
</g>
<g >
<title>encode_mvcomponent (2 samples, 0.04%)</title><rect x="797.4" y="725" width="0.5" height="15.0" fill="rgb(246,157,43)" rx="2" ry="2" />
<text  x="800.41" y="735.5" ></text>
</g>
<g >
<title>unsigned char* rtc::CopyOnWriteBuffer::data&lt;unsigned char, (void*)0&gt;() (1 samples, 0.02%)</title><rect x="816.0" y="661" width="0.2" height="15.0" fill="rgb(213,56,31)" rx="2" ry="2" />
<text  x="818.96" y="671.5" ></text>
</g>
<g >
<title>webrtc::AudioEncoderOpusImpl::EncodeImpl(unsigned int, rtc::ArrayView&lt;short const, -4711l&gt;, rtc::BufferT&lt;unsigned char, false&gt;*) (41 samples, 0.86%)</title><rect x="993.8" y="805" width="10.2" height="15.0" fill="rgb(250,206,2)" rx="2" ry="2" />
<text  x="996.83" y="815.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="42.2" y="629" width="0.2" height="15.0" fill="rgb(208,195,40)" rx="2" ry="2" />
<text  x="45.16" y="639.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="174.0" y="789" width="0.3" height="15.0" fill="rgb(225,25,10)" rx="2" ry="2" />
<text  x="177.01" y="799.5" ></text>
</g>
<g >
<title>DYLD-STUB$$mojo::core::ports::UserMessageEvent::UserMessageEvent(unsigned long) (1 samples, 0.02%)</title><rect x="1041.6" y="581" width="0.2" height="15.0" fill="rgb(238,178,36)" rx="2" ry="2" />
<text  x="1044.57" y="591.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::SendMessageLocked(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (12 samples, 0.25%)</title><rect x="246.2" y="421" width="3.0" height="15.0" fill="rgb(240,107,47)" rx="2" ry="2" />
<text  x="249.25" y="431.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::EnqueueMicrotask(v8::internal::Microtask) (1 samples, 0.02%)</title><rect x="20.4" y="501" width="0.2" height="15.0" fill="rgb(241,222,1)" rx="2" ry="2" />
<text  x="23.39" y="511.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="552.5" y="869" width="0.3" height="15.0" fill="rgb(238,69,16)" rx="2" ry="2" />
<text  x="555.50" y="879.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="81.7" y="773" width="0.5" height="15.0" fill="rgb(235,103,33)" rx="2" ry="2" />
<text  x="84.74" y="783.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (blink::MediaStreamVideoTrack::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), void&gt;::Invoke&lt;void (blink::MediaStreamVideoTrack::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), scoped_refptr&lt;blink::MediaStreamVideoTrack::FrameDeliverer&gt; const&amp;, scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks&gt;(void (blink::MediaStreamVideoTrack::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), scoped_refptr&lt;blink::MediaStreamVideoTrack::FrameDeliverer&gt; const&amp;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, base::TimeTicks&amp;&amp;) (7 samples, 0.15%)</title><rect x="139.4" y="485" width="1.7" height="15.0" fill="rgb(232,227,2)" rx="2" ry="2" />
<text  x="142.38" y="495.5" ></text>
</g>
<g >
<title>base::WaitableEvent::PeekPort(unsigned int, bool) (4 samples, 0.08%)</title><rect x="567.6" y="949" width="1.0" height="15.0" fill="rgb(242,129,12)" rx="2" ry="2" />
<text  x="570.59" y="959.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="699.4" y="885" width="0.3" height="15.0" fill="rgb(209,165,30)" rx="2" ry="2" />
<text  x="702.45" y="895.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1008.9" y="933" width="0.3" height="15.0" fill="rgb(210,44,44)" rx="2" ry="2" />
<text  x="1011.92" y="943.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.02%)</title><rect x="48.8" y="821" width="0.3" height="15.0" fill="rgb(229,193,26)" rx="2" ry="2" />
<text  x="51.84" y="831.5" ></text>
</g>
<g >
<title>mojo::core::Core::DestroyMessage(unsigned long) (2 samples, 0.04%)</title><rect x="320.0" y="693" width="0.5" height="15.0" fill="rgb(206,101,33)" rx="2" ry="2" />
<text  x="322.97" y="703.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (6 samples, 0.13%)</title><rect x="276.2" y="693" width="1.5" height="15.0" fill="rgb(249,196,5)" rx="2" ry="2" />
<text  x="279.18" y="703.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="82.2" y="773" width="0.3" height="15.0" fill="rgb(224,145,34)" rx="2" ry="2" />
<text  x="85.23" y="783.5" ></text>
</g>
<g >
<title>rtc::IsThreadRefEqual(_opaque_pthread_t* const&amp;, _opaque_pthread_t* const&amp;) (1 samples, 0.02%)</title><rect x="261.6" y="645" width="0.2" height="15.0" fill="rgb(243,110,16)" rx="2" ry="2" />
<text  x="264.58" y="655.5" ></text>
</g>
<g >
<title>vpx_codec_encode (374 samples, 7.84%)</title><rect x="722.7" y="789" width="92.5" height="15.0" fill="rgb(251,195,27)" rx="2" ry="2" />
<text  x="725.70" y="799.5" >vpx_codec_e..</text>
</g>
<g >
<title>cc::TaskGraph::~TaskGraph() (1 samples, 0.02%)</title><rect x="202.2" y="757" width="0.3" height="15.0" fill="rgb(210,71,36)" rx="2" ry="2" />
<text  x="205.21" y="767.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="44.9" y="629" width="0.2" height="15.0" fill="rgb(225,162,36)" rx="2" ry="2" />
<text  x="47.88" y="639.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::UpdateDelayStatistics(long long, long long, unsigned int) (2 samples, 0.04%)</title><rect x="1159.6" y="901" width="0.5" height="15.0" fill="rgb(206,50,6)" rx="2" ry="2" />
<text  x="1162.57" y="911.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Process() (39 samples, 0.82%)</title><rect x="1168.7" y="981" width="9.7" height="15.0" fill="rgb(250,31,48)" rx="2" ry="2" />
<text  x="1171.73" y="991.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (1 samples, 0.02%)</title><rect x="651.5" y="597" width="0.2" height="15.0" fill="rgb(227,174,38)" rx="2" ry="2" />
<text  x="654.45" y="607.5" ></text>
</g>
<g >
<title>webrtc::internal::Call::DeliverRtcp(webrtc::MediaType, unsigned char const*, unsigned long) (8 samples, 0.17%)</title><rect x="274.0" y="773" width="1.9" height="15.0" fill="rgb(224,221,12)" rx="2" ry="2" />
<text  x="276.95" y="783.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="351.1" y="789" width="0.5" height="15.0" fill="rgb(244,176,7)" rx="2" ry="2" />
<text  x="354.14" y="799.5" ></text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (3 samples, 0.06%)</title><rect x="16.9" y="437" width="0.8" height="15.0" fill="rgb(221,84,5)" rx="2" ry="2" />
<text  x="19.93" y="447.5" ></text>
</g>
<g >
<title>DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="356.8" y="757" width="0.3" height="15.0" fill="rgb(240,3,53)" rx="2" ry="2" />
<text  x="359.83" y="767.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="260.6" y="677" width="0.5" height="15.0" fill="rgb(215,202,40)" rx="2" ry="2" />
<text  x="263.60" y="687.5" ></text>
</g>
<g >
<title>bool mojo::MapTraits&lt;WTF::HashMap&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;, WTF::IntHash&lt;unsigned int&gt;, WTF::HashTraits&lt;unsigned int&gt;, WTF::HashTraits&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;, WTF::PartitionAllocator&gt; &gt;::Insert&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;(WTF::HashMap&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;, WTF::IntHash&lt;unsigned int&gt;, WTF::HashTraits&lt;unsigned int&gt;, WTF::HashTraits&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;, WTF::PartitionAllocator&gt;&amp;, unsigned int&amp;&amp;, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="1051.5" y="661" width="0.2" height="15.0" fill="rgb(208,193,0)" rx="2" ry="2" />
<text  x="1054.47" y="671.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::Release() const (1 samples, 0.02%)</title><rect x="1161.8" y="901" width="0.2" height="15.0" fill="rgb(243,90,12)" rx="2" ry="2" />
<text  x="1164.80" y="911.5" ></text>
</g>
<g >
<title>content::P2PSocketClientImpl::SendWithPacketId(net::IPEndPoint const&amp;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&amp;, rtc::PacketOptions const&amp;, unsigned long long) (59 samples, 1.24%)</title><rect x="240.8" y="677" width="14.6" height="15.0" fill="rgb(224,69,33)" rx="2" ry="2" />
<text  x="243.81" y="687.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::AssertNoLockHeldOnCurrentThread() (1 samples, 0.02%)</title><rect x="1157.6" y="741" width="0.2" height="15.0" fill="rgb(239,177,5)" rx="2" ry="2" />
<text  x="1160.59" y="751.5" ></text>
</g>
<g >
<title>vpx_variance16x16_avx2 (2 samples, 0.04%)</title><rect x="622.0" y="677" width="0.5" height="15.0" fill="rgb(242,3,39)" rx="2" ry="2" />
<text  x="625.02" y="687.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.02%)</title><rect x="1156.9" y="693" width="0.2" height="15.0" fill="rgb(214,186,5)" rx="2" ry="2" />
<text  x="1159.85" y="703.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (2 samples, 0.04%)</title><rect x="487.7" y="757" width="0.5" height="15.0" fill="rgb(205,220,41)" rx="2" ry="2" />
<text  x="490.69" y="767.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_9::__invoke(_malloc_zone_t*, void*, unsigned long) (1 samples, 0.02%)</title><rect x="136.7" y="565" width="0.2" height="15.0" fill="rgb(252,72,14)" rx="2" ry="2" />
<text  x="139.66" y="575.5" ></text>
</g>
<g >
<title>szone_realloc (1 samples, 0.02%)</title><rect x="961.2" y="677" width="0.2" height="15.0" fill="rgb(215,188,47)" rx="2" ry="2" />
<text  x="964.17" y="687.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendPeerEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (2 samples, 0.04%)</title><rect x="1041.1" y="469" width="0.5" height="15.0" fill="rgb(207,12,45)" rx="2" ry="2" />
<text  x="1044.08" y="479.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoStreamReceiver::OnCompleteFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;) (6 samples, 0.13%)</title><rect x="266.5" y="565" width="1.5" height="15.0" fill="rgb(233,48,30)" rx="2" ry="2" />
<text  x="269.53" y="575.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (1 samples, 0.02%)</title><rect x="284.6" y="533" width="0.2" height="15.0" fill="rgb(225,50,19)" rx="2" ry="2" />
<text  x="287.59" y="543.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="632.7" y="693" width="0.2" height="15.0" fill="rgb(250,74,35)" rx="2" ry="2" />
<text  x="635.65" y="703.5" ></text>
</g>
<g >
<title>_pthread_mutex_fairshare_lock_slow (1 samples, 0.02%)</title><rect x="1086.6" y="869" width="0.2" height="15.0" fill="rgb(250,115,43)" rx="2" ry="2" />
<text  x="1089.60" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTaskImpl() (2 samples, 0.04%)</title><rect x="1073.7" y="869" width="0.5" height="15.0" fill="rgb(218,180,33)" rx="2" ry="2" />
<text  x="1076.73" y="879.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;content::RenderFrameImpl, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.02%)</title><rect x="23.1" y="645" width="0.3" height="15.0" fill="rgb(238,118,38)" rx="2" ry="2" />
<text  x="26.11" y="655.5" ></text>
</g>
<g >
<title>cc::TileManager::AssignGpuMemoryToTiles() (2 samples, 0.04%)</title><rect x="1070.8" y="741" width="0.5" height="15.0" fill="rgb(209,174,22)" rx="2" ry="2" />
<text  x="1073.76" y="751.5" ></text>
</g>
<g >
<title>blink::TrackAudioRenderer::OnData(media::AudioBus const&amp;, base::TimeTicks) (5 samples, 0.10%)</title><rect x="1080.4" y="933" width="1.2" height="15.0" fill="rgb(212,160,21)" rx="2" ry="2" />
<text  x="1083.41" y="943.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="993.6" y="645" width="0.2" height="15.0" fill="rgb(210,61,45)" rx="2" ry="2" />
<text  x="996.58" y="655.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::PlaybackProgressTimerFired(blink::TimerBase*) (3 samples, 0.06%)</title><rect x="18.4" y="645" width="0.8" height="15.0" fill="rgb(243,20,21)" rx="2" ry="2" />
<text  x="21.41" y="655.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="225.2" y="549" width="0.3" height="15.0" fill="rgb(219,37,33)" rx="2" ry="2" />
<text  x="228.22" y="559.5" ></text>
</g>
<g >
<title>quant_all_bands (1 samples, 0.02%)</title><rect x="535.9" y="725" width="0.3" height="15.0" fill="rgb(251,45,13)" rx="2" ry="2" />
<text  x="538.93" y="735.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (2 samples, 0.04%)</title><rect x="35.2" y="613" width="0.5" height="15.0" fill="rgb(253,128,17)" rx="2" ry="2" />
<text  x="38.23" y="623.5" ></text>
</g>
<g >
<title>vp8_loop_filter_vertical_edge_uv_sse2 (2 samples, 0.04%)</title><rect x="460.5" y="709" width="0.5" height="15.0" fill="rgb(240,113,20)" rx="2" ry="2" />
<text  x="463.48" y="719.5" ></text>
</g>
<g >
<title>yv12_extend_frame_left_right_c (1 samples, 0.02%)</title><rect x="991.8" y="709" width="0.3" height="15.0" fill="rgb(239,166,17)" rx="2" ry="2" />
<text  x="994.85" y="719.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="144.8" y="741" width="0.5" height="15.0" fill="rgb(241,54,31)" rx="2" ry="2" />
<text  x="147.82" y="751.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_other_loop (1 samples, 0.02%)</title><rect x="746.2" y="661" width="0.2" height="15.0" fill="rgb(243,94,42)" rx="2" ry="2" />
<text  x="749.20" y="671.5" ></text>
</g>
<g >
<title>media::(anonymous namespace)::CopyRowsToNV12Buffer(int, int, int, media::VideoFrame const*, unsigned char*, int, unsigned char*, int, base::OnceCallback&lt;void ()&gt;) (9 samples, 0.19%)</title><rect x="62.7" y="933" width="2.2" height="15.0" fill="rgb(212,116,15)" rx="2" ry="2" />
<text  x="65.69" y="943.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="1058.6" y="741" width="0.3" height="15.0" fill="rgb(221,13,1)" rx="2" ry="2" />
<text  x="1061.64" y="751.5" ></text>
</g>
<g >
<title>v8::TryCatch::TryCatch(v8::Isolate*) (1 samples, 0.02%)</title><rect x="37.7" y="581" width="0.3" height="15.0" fill="rgb(230,158,15)" rx="2" ry="2" />
<text  x="40.71" y="591.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)(int, int, int, media::VideoFrame const*, unsigned char*, int, unsigned char*, int, base::OnceCallback&lt;void ()&gt;), int, int, int, base::internal::UnretainedWrapper&lt;media::VideoFrame&gt;, unsigned char*, int, unsigned char*, int, base::RepeatingCallback&lt;void ()&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (12 samples, 0.25%)</title><rect x="55.3" y="949" width="2.9" height="15.0" fill="rgb(249,83,42)" rx="2" ry="2" />
<text  x="58.27" y="959.5" ></text>
</g>
<g >
<title>__CFRunLoopModeIsEmpty (1 samples, 0.02%)</title><rect x="51.8" y="853" width="0.3" height="15.0" fill="rgb(212,83,52)" rx="2" ry="2" />
<text  x="54.81" y="863.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="225.2" y="469" width="0.3" height="15.0" fill="rgb(225,12,13)" rx="2" ry="2" />
<text  x="228.22" y="479.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="279.1" y="533" width="0.3" height="15.0" fill="rgb(254,184,0)" rx="2" ry="2" />
<text  x="282.15" y="543.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="342.7" y="757" width="0.3" height="15.0" fill="rgb(251,183,3)" rx="2" ry="2" />
<text  x="345.73" y="767.5" ></text>
</g>
<g >
<title>cc::PictureLayerImpl::CanHaveTilings() const (1 samples, 0.02%)</title><rect x="1071.3" y="757" width="0.2" height="15.0" fill="rgb(245,179,24)" rx="2" ry="2" />
<text  x="1074.26" y="767.5" ></text>
</g>
<g >
<title>base::internal::WeakPtrBase::~WeakPtrBase() (2 samples, 0.04%)</title><rect x="224.0" y="853" width="0.5" height="15.0" fill="rgb(216,38,13)" rx="2" ry="2" />
<text  x="226.98" y="863.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="260.3" y="693" width="0.3" height="15.0" fill="rgb(217,80,10)" rx="2" ry="2" />
<text  x="263.35" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (2 samples, 0.04%)</title><rect x="19.2" y="421" width="0.4" height="15.0" fill="rgb(225,192,8)" rx="2" ry="2" />
<text  x="22.15" y="431.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::SendToNetwork(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType) (3 samples, 0.06%)</title><rect x="550.0" y="789" width="0.8" height="15.0" fill="rgb(217,31,48)" rx="2" ry="2" />
<text  x="553.03" y="799.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (4 samples, 0.08%)</title><rect x="754.1" y="661" width="1.0" height="15.0" fill="rgb(219,136,48)" rx="2" ry="2" />
<text  x="757.12" y="671.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (4 samples, 0.08%)</title><rect x="283.4" y="645" width="0.9" height="15.0" fill="rgb(249,207,46)" rx="2" ry="2" />
<text  x="286.35" y="655.5" ></text>
</g>
<g >
<title>non-virtual thunk to blink::VideoFrameSubmitter::ReclaimResources(WTF::Vector&lt;viz::ReturnedResource, 0u, WTF::PartitionAllocator&gt; const&amp;) (6 samples, 0.13%)</title><rect x="1052.2" y="677" width="1.5" height="15.0" fill="rgb(246,159,11)" rx="2" ry="2" />
<text  x="1055.21" y="687.5" ></text>
</g>
<g >
<title>blink::VideoFrameSubmitter::OnBeginFrame(viz::BeginFrameArgs const&amp;, WTF::HashMap&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;, WTF::IntHash&lt;unsigned int&gt;, WTF::HashTraits&lt;unsigned int&gt;, WTF::HashTraits&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;, WTF::PartitionAllocator&gt;) (64 samples, 1.34%)</title><rect x="1032.9" y="677" width="15.8" height="15.0" fill="rgb(251,56,16)" rx="2" ry="2" />
<text  x="1035.91" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (2 samples, 0.04%)</title><rect x="343.0" y="821" width="0.5" height="15.0" fill="rgb(224,114,53)" rx="2" ry="2" />
<text  x="345.97" y="831.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::CopyVideoFrameToGpuMemoryBuffers(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*) (3 samples, 0.06%)</title><rect x="58.2" y="933" width="0.8" height="15.0" fill="rgb(226,179,47)" rx="2" ry="2" />
<text  x="61.24" y="943.5" ></text>
</g>
<g >
<title>MojoDestroyMessage (2 samples, 0.04%)</title><rect x="320.0" y="709" width="0.5" height="15.0" fill="rgb(217,224,21)" rx="2" ry="2" />
<text  x="322.97" y="719.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*, mojo::core::ports::MessageFilter*) (8 samples, 0.17%)</title><rect x="322.7" y="725" width="2.0" height="15.0" fill="rgb(245,163,48)" rx="2" ry="2" />
<text  x="325.69" y="735.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="81.5" y="837" width="0.2" height="15.0" fill="rgb(215,95,13)" rx="2" ry="2" />
<text  x="84.49" y="847.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="226.7" y="501" width="0.3" height="15.0" fill="rgb(216,16,54)" rx="2" ry="2" />
<text  x="229.70" y="511.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1080.9" y="789" width="0.3" height="15.0" fill="rgb(209,192,52)" rx="2" ry="2" />
<text  x="1083.91" y="799.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::WillQueueTask(char const*, base::PendingTask*, char const*) (2 samples, 0.04%)</title><rect x="127.5" y="677" width="0.5" height="15.0" fill="rgb(211,17,44)" rx="2" ry="2" />
<text  x="130.51" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::SetNextDelayedDoWork(base::sequence_manager::LazyNow*, base::TimeTicks) (1 samples, 0.02%)</title><rect x="84.2" y="741" width="0.3" height="15.0" fill="rgb(238,38,49)" rx="2" ry="2" />
<text  x="87.21" y="751.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::OnFrame(webrtc::VideoFrame const&amp;) (1 samples, 0.02%)</title><rect x="841.2" y="725" width="0.2" height="15.0" fill="rgb(214,60,14)" rx="2" ry="2" />
<text  x="844.19" y="735.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="280.4" y="645" width="0.2" height="15.0" fill="rgb(236,62,37)" rx="2" ry="2" />
<text  x="283.39" y="655.5" ></text>
</g>
<g >
<title>base::Pickle::WriteBytes(void const*, int) (3 samples, 0.06%)</title><rect x="243.3" y="597" width="0.7" height="15.0" fill="rgb(224,64,49)" rx="2" ry="2" />
<text  x="246.28" y="607.5" ></text>
</g>
<g >
<title>blink::LayoutImage::Paint(blink::PaintInfo const&amp;) const (1 samples, 0.02%)</title><rect x="26.6" y="261" width="0.2" height="15.0" fill="rgb(229,71,35)" rx="2" ry="2" />
<text  x="29.57" y="271.5" ></text>
</g>
<g >
<title>base::internal::WorkerThreadStack::Push(base::internal::WorkerThread*) (1 samples, 0.02%)</title><rect x="558.7" y="917" width="0.2" height="15.0" fill="rgb(234,67,39)" rx="2" ry="2" />
<text  x="561.69" y="927.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (4 samples, 0.08%)</title><rect x="258.6" y="597" width="1.0" height="15.0" fill="rgb(215,11,25)" rx="2" ry="2" />
<text  x="261.62" y="607.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="1041.1" y="357" width="0.5" height="15.0" fill="rgb(241,216,18)" rx="2" ry="2" />
<text  x="1044.08" y="367.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="602.2" y="661" width="0.3" height="15.0" fill="rgb(254,139,2)" rx="2" ry="2" />
<text  x="605.23" y="671.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::ReEnqueueTaskSourceLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::ThreadGroup::ScopedReenqueueExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="694.0" y="949" width="0.5" height="15.0" fill="rgb(236,157,11)" rx="2" ry="2" />
<text  x="697.00" y="959.5" ></text>
</g>
<g >
<title>base::internal::RegisteredTaskSource::operator=(base::internal::RegisteredTaskSource&amp;&amp;) (1 samples, 0.02%)</title><rect x="276.9" y="549" width="0.3" height="15.0" fill="rgb(214,207,9)" rx="2" ry="2" />
<text  x="279.92" y="559.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="253.7" y="437" width="0.2" height="15.0" fill="rgb(211,179,45)" rx="2" ry="2" />
<text  x="256.67" y="447.5" ></text>
</g>
<g >
<title>webrtc::VCMInterFrameDelay::CalculateDelay(unsigned int, long long*, long long) (1 samples, 0.02%)</title><rect x="855.3" y="805" width="0.2" height="15.0" fill="rgb(241,4,2)" rx="2" ry="2" />
<text  x="858.30" y="815.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::RtpTransportControllerSend::OnSentPacket(rtc::SentPacket const&amp;)::$_5&gt;::Run() (2 samples, 0.04%)</title><rect x="381.1" y="853" width="0.5" height="15.0" fill="rgb(212,149,3)" rx="2" ry="2" />
<text  x="384.07" y="863.5" ></text>
</g>
<g >
<title>void base::Pickle::WriteBytesStatic&lt;8ul&gt;(void const*) (1 samples, 0.02%)</title><rect x="244.0" y="613" width="0.3" height="15.0" fill="rgb(209,35,50)" rx="2" ry="2" />
<text  x="247.02" y="623.5" ></text>
</g>
<g >
<title>mojo::core::ports::(anonymous namespace)::UpdateTLS(mojo::core::ports::PortLocker*, mojo::core::ports::PortLocker*) (1 samples, 0.02%)</title><rect x="245.3" y="501" width="0.2" height="15.0" fill="rgb(243,224,29)" rx="2" ry="2" />
<text  x="248.26" y="511.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (4 samples, 0.08%)</title><rect x="258.6" y="565" width="1.0" height="15.0" fill="rgb(208,94,35)" rx="2" ry="2" />
<text  x="261.62" y="575.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="194.8" y="853" width="0.2" height="15.0" fill="rgb(221,16,54)" rx="2" ry="2" />
<text  x="197.79" y="863.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (3 samples, 0.06%)</title><rect x="718.2" y="901" width="0.8" height="15.0" fill="rgb(252,40,29)" rx="2" ry="2" />
<text  x="721.25" y="911.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1127.4" y="741" width="0.3" height="15.0" fill="rgb(205,129,40)" rx="2" ry="2" />
<text  x="1130.41" y="751.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::voe::(anonymous namespace)::ChannelSend::ProcessAndEncodeAudio(std::__Cr::unique_ptr&lt;webrtc::AudioFrame, std::__Cr::default_delete&lt;webrtc::AudioFrame&gt; &gt;)::ProcessAndEncodeAudio&gt;::Run() (36 samples, 0.75%)</title><rect x="683.4" y="853" width="8.9" height="15.0" fill="rgb(219,155,35)" rx="2" ry="2" />
<text  x="686.37" y="863.5" ></text>
</g>
<g >
<title>objc_alloc (1 samples, 0.02%)</title><rect x="164.4" y="901" width="0.2" height="15.0" fill="rgb(232,139,9)" rx="2" ry="2" />
<text  x="167.36" y="911.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoSender::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (5 samples, 0.10%)</title><rect x="815.7" y="741" width="1.3" height="15.0" fill="rgb(215,69,28)" rx="2" ry="2" />
<text  x="818.71" y="751.5" ></text>
</g>
<g >
<title>IPC::ChannelProxy::Context::OnSendMessage(std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt;) (1 samples, 0.02%)</title><rect x="165.8" y="853" width="0.3" height="15.0" fill="rgb(246,215,53)" rx="2" ry="2" />
<text  x="168.85" y="863.5" ></text>
</g>
<g >
<title>base::LazyInstance&lt;base::ThreadLocalPointer&lt;base::SequencedTaskRunnerHandle&gt;, base::internal::LeakyLazyInstanceTraits&lt;base::ThreadLocalPointer&lt;base::SequencedTaskRunnerHandle&gt; &gt; &gt;::Pointer() (1 samples, 0.02%)</title><rect x="572.8" y="901" width="0.2" height="15.0" fill="rgb(209,27,0)" rx="2" ry="2" />
<text  x="575.79" y="911.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork() (1 samples, 0.02%)</title><rect x="13.2" y="741" width="0.3" height="15.0" fill="rgb(235,175,9)" rx="2" ry="2" />
<text  x="16.22" y="751.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="309.1" y="453" width="0.2" height="15.0" fill="rgb(224,177,0)" rx="2" ry="2" />
<text  x="312.08" y="463.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostDelayedTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;, unsigned int) (1 samples, 0.02%)</title><rect x="854.8" y="837" width="0.2" height="15.0" fill="rgb(250,54,20)" rx="2" ry="2" />
<text  x="857.80" y="847.5" ></text>
</g>
<g >
<title>webrtc::SendStatisticsProxy::OnSendEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*) (1 samples, 0.02%)</title><rect x="486.5" y="757" width="0.2" height="15.0" fill="rgb(209,148,42)" rx="2" ry="2" />
<text  x="489.45" y="767.5" ></text>
</g>
<g >
<title>blink::CompositingInputsUpdater::UpdateSelfAndDescendantsRecursively(blink::PaintLayer*, blink::CompositingInputsUpdater::UpdateType, blink::CompositingInputsUpdater::AncestorInfo) (1 samples, 0.02%)</title><rect x="25.3" y="453" width="0.3" height="15.0" fill="rgb(244,102,27)" rx="2" ry="2" />
<text  x="28.34" y="463.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (2 samples, 0.04%)</title><rect x="378.1" y="805" width="0.5" height="15.0" fill="rgb(253,148,21)" rx="2" ry="2" />
<text  x="381.10" y="815.5" ></text>
</g>
<g >
<title>cc::ProxyImpl::NotifyReadyToCommitOnImpl(cc::CompletionEvent*, cc::LayerTreeHost*, base::TimeTicks, bool) (5 samples, 0.10%)</title><rect x="1070.3" y="885" width="1.2" height="15.0" fill="rgb(237,88,36)" rx="2" ry="2" />
<text  x="1073.27" y="895.5" ></text>
</g>
<g >
<title>webrtc::video_coding::PacketBuffer::ClearTo(unsigned short) (1 samples, 0.02%)</title><rect x="488.2" y="805" width="0.2" height="15.0" fill="rgb(253,72,2)" rx="2" ry="2" />
<text  x="491.18" y="815.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, void*&gt;*, long&gt;, bool&gt; std::__Cr::__tree&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__map_value_compare&lt;int, std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::less&lt;int&gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt; &gt; &gt;::__emplace_unique_key_args&lt;int, std::__Cr::pair&lt;int, rtc::Message&gt; &gt;(int const&amp;, std::__Cr::pair&lt;int, rtc::Message&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="226.5" y="501" width="0.2" height="15.0" fill="rgb(205,152,40)" rx="2" ry="2" />
<text  x="229.46" y="511.5" ></text>
</g>
<g >
<title>extend_plane (3 samples, 0.06%)</title><rect x="958.7" y="725" width="0.7" height="15.0" fill="rgb(229,112,40)" rx="2" ry="2" />
<text  x="961.70" y="735.5" ></text>
</g>
<g >
<title>mach_msg_trap (4 samples, 0.08%)</title><rect x="1150.4" y="725" width="1.0" height="15.0" fill="rgb(245,197,51)" rx="2" ry="2" />
<text  x="1153.42" y="735.5" ></text>
</g>
<g >
<title>non-virtual thunk to cricket::BaseChannel::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (5 samples, 0.10%)</title><rect x="308.6" y="501" width="1.2" height="15.0" fill="rgb(240,178,44)" rx="2" ry="2" />
<text  x="311.59" y="511.5" ></text>
</g>
<g >
<title>base::sequence_manager::TimeDomain::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (2 samples, 0.04%)</title><rect x="39.7" y="645" width="0.5" height="15.0" fill="rgb(249,79,43)" rx="2" ry="2" />
<text  x="42.69" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTaskImpl() (29 samples, 0.61%)</title><rect x="39.4" y="677" width="7.2" height="15.0" fill="rgb(227,4,31)" rx="2" ry="2" />
<text  x="42.44" y="687.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="300.7" y="773" width="0.5" height="15.0" fill="rgb(250,120,22)" rx="2" ry="2" />
<text  x="303.67" y="783.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.02%)</title><rect x="277.7" y="693" width="0.2" height="15.0" fill="rgb(221,28,21)" rx="2" ry="2" />
<text  x="280.66" y="703.5" ></text>
</g>
<g >
<title>media::AudioBus::~AudioBus() (1 samples, 0.02%)</title><rect x="1100.2" y="853" width="0.2" height="15.0" fill="rgb(216,195,8)" rx="2" ry="2" />
<text  x="1103.20" y="863.5" ></text>
</g>
<g >
<title>mojo::internal::Buffer::Allocate(unsigned long) (4 samples, 0.08%)</title><rect x="253.7" y="629" width="1.0" height="15.0" fill="rgb(228,47,13)" rx="2" ry="2" />
<text  x="256.67" y="639.5" ></text>
</g>
<g >
<title>_CFAutoreleasePoolPop (1 samples, 0.02%)</title><rect x="197.3" y="901" width="0.2" height="15.0" fill="rgb(206,142,16)" rx="2" ry="2" />
<text  x="200.27" y="911.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="859.5" y="949" width="0.2" height="15.0" fill="rgb(249,202,10)" rx="2" ry="2" />
<text  x="862.50" y="959.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (3 samples, 0.06%)</title><rect x="1136.3" y="725" width="0.8" height="15.0" fill="rgb(250,129,38)" rx="2" ry="2" />
<text  x="1139.32" y="735.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::PrepareToForwardUserMessage(mojo::core::ports::PortRef const&amp;, mojo::core::ports::Port::State, bool, mojo::core::ports::UserMessageEvent*, mojo::core::ports::NodeName*) (1 samples, 0.02%)</title><rect x="167.6" y="629" width="0.2" height="15.0" fill="rgb(250,205,19)" rx="2" ry="2" />
<text  x="170.58" y="639.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs_bias (2 samples, 0.04%)</title><rect x="615.6" y="677" width="0.5" height="15.0" fill="rgb(252,207,14)" rx="2" ry="2" />
<text  x="618.58" y="687.5" ></text>
</g>
<g >
<title>vpx_dc_predictor_16x16_sse2.loop (2 samples, 0.04%)</title><rect x="774.2" y="677" width="0.4" height="15.0" fill="rgb(212,134,41)" rx="2" ry="2" />
<text  x="777.16" y="687.5" ></text>
</g>
<g >
<title>mach_msg_trap (9 samples, 0.19%)</title><rect x="1165.8" y="901" width="2.2" height="15.0" fill="rgb(221,36,33)" rx="2" ry="2" />
<text  x="1168.76" y="911.5" ></text>
</g>
<g >
<title>content::(anonymous namespace)::IpcPacketSocket::OnSendComplete(network::P2PSendPacketMetrics const&amp;) (21 samples, 0.44%)</title><rect x="314.0" y="645" width="5.2" height="15.0" fill="rgb(237,153,41)" rx="2" ry="2" />
<text  x="317.03" y="655.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.08%)</title><rect x="371.2" y="869" width="1.0" height="15.0" fill="rgb(238,218,6)" rx="2" ry="2" />
<text  x="374.17" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="19.9" y="101" width="0.2" height="15.0" fill="rgb(211,81,19)" rx="2" ry="2" />
<text  x="22.90" y="111.5" ></text>
</g>
<g >
<title>thread_start (595 samples, 12.47%)</title><rect x="873.1" y="1061" width="147.2" height="15.0" fill="rgb(251,14,15)" rx="2" ry="2" />
<text  x="876.11" y="1071.5" >thread_start</text>
</g>
<g >
<title>base::internal::SequenceLocalStorageMap::ValueDestructorPair::~ValueDestructorPair() (1 samples, 0.02%)</title><rect x="1050.0" y="661" width="0.2" height="15.0" fill="rgb(247,43,31)" rx="2" ry="2" />
<text  x="1052.98" y="671.5" ></text>
</g>
<g >
<title>__psynch_mutexdrop (1 samples, 0.02%)</title><rect x="1020.3" y="885" width="0.2" height="15.0" fill="rgb(233,51,45)" rx="2" ry="2" />
<text  x="1023.30" y="895.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="578.2" y="869" width="0.3" height="15.0" fill="rgb(250,25,48)" rx="2" ry="2" />
<text  x="581.23" y="879.5" ></text>
</g>
<g >
<title>encode_mb_row (205 samples, 4.30%)</title><rect x="581.9" y="725" width="50.8" height="15.0" fill="rgb(217,40,52)" rx="2" ry="2" />
<text  x="584.94" y="735.5" >encod..</text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::~Transaction() (1 samples, 0.02%)</title><rect x="707.6" y="949" width="0.3" height="15.0" fill="rgb(209,80,30)" rx="2" ry="2" />
<text  x="710.61" y="959.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (3 samples, 0.06%)</title><rect x="859.7" y="949" width="0.8" height="15.0" fill="rgb(221,83,17)" rx="2" ry="2" />
<text  x="862.75" y="959.5" ></text>
</g>
<g >
<title>media::AudioOutputDeviceThreadCallback::Process(unsigned int) (27 samples, 0.57%)</title><rect x="1096.2" y="981" width="6.7" height="15.0" fill="rgb(221,180,38)" rx="2" ry="2" />
<text  x="1099.24" y="991.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="42.9" y="581" width="0.2" height="15.0" fill="rgb(206,219,17)" rx="2" ry="2" />
<text  x="45.90" y="591.5" ></text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::PreWaitObserver(__CFRunLoopObserver*, unsigned long, void*) (1 samples, 0.02%)</title><rect x="13.2" y="805" width="0.3" height="15.0" fill="rgb(228,222,32)" rx="2" ry="2" />
<text  x="16.22" y="815.5" ></text>
</g>
<g >
<title>mojo::Connector::Accept(mojo::Message*) (4 samples, 0.08%)</title><rect x="235.6" y="613" width="1.0" height="15.0" fill="rgb(235,143,28)" rx="2" ry="2" />
<text  x="238.61" y="623.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="266.0" y="517" width="0.5" height="15.0" fill="rgb(218,207,16)" rx="2" ry="2" />
<text  x="269.04" y="527.5" ></text>
</g>
<g >
<title>blink::V8RTCSctpTransport::MaxMessageSizeAttributeGetterCallback(v8::FunctionCallbackInfo&lt;v8::Value&gt; const&amp;) (1 samples, 0.02%)</title><rect x="17.4" y="389" width="0.3" height="15.0" fill="rgb(247,51,34)" rx="2" ry="2" />
<text  x="20.42" y="399.5" ></text>
</g>
<g >
<title>IOSurfaceClientUnlock (3 samples, 0.06%)</title><rect x="57.5" y="837" width="0.7" height="15.0" fill="rgb(245,65,35)" rx="2" ry="2" />
<text  x="60.50" y="847.5" ></text>
</g>
<g >
<title>MojoAppendMessageDataImpl (1 samples, 0.02%)</title><rect x="253.2" y="597" width="0.2" height="15.0" fill="rgb(226,131,3)" rx="2" ry="2" />
<text  x="256.17" y="607.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::GetBinaryValue(media::VideoFrameMetadata::Key) const (1 samples, 0.02%)</title><rect x="1046.0" y="629" width="0.3" height="15.0" fill="rgb(207,159,44)" rx="2" ry="2" />
<text  x="1049.03" y="639.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderVideo::SendVideo(webrtc::VideoFrameType, signed char, unsigned int, long long, unsigned char const*, unsigned long, webrtc::RTPFragmentationHeader const*, webrtc::RTPVideoHeader const*, absl::optional&lt;long long&gt;) (1 samples, 0.02%)</title><rect x="652.2" y="725" width="0.2" height="15.0" fill="rgb(216,190,16)" rx="2" ry="2" />
<text  x="655.20" y="735.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoSendStreamImpl::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (4 samples, 0.08%)</title><rect x="651.5" y="757" width="0.9" height="15.0" fill="rgb(227,182,41)" rx="2" ry="2" />
<text  x="654.45" y="767.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="132.0" y="741" width="0.2" height="15.0" fill="rgb(220,66,2)" rx="2" ry="2" />
<text  x="134.96" y="751.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="879.0" y="821" width="0.3" height="15.0" fill="rgb(226,46,40)" rx="2" ry="2" />
<text  x="882.04" y="831.5" ></text>
</g>
<g >
<title>gpu::GpuChannelHost::VerifyFlush(unsigned int) (16 samples, 0.34%)</title><rect x="1033.9" y="549" width="4.0" height="15.0" fill="rgb(222,198,33)" rx="2" ry="2" />
<text  x="1036.90" y="559.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="347.7" y="789" width="0.2" height="15.0" fill="rgb(219,5,17)" rx="2" ry="2" />
<text  x="350.67" y="799.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) (23 samples, 0.48%)</title><rect x="1013.6" y="965" width="5.7" height="15.0" fill="rgb(252,53,4)" rx="2" ry="2" />
<text  x="1016.62" y="975.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::ArmOrNotify() (1 samples, 0.02%)</title><rect x="142.8" y="693" width="0.3" height="15.0" fill="rgb(211,159,6)" rx="2" ry="2" />
<text  x="145.84" y="703.5" ></text>
</g>
<g >
<title>__ulock_wait (1 samples, 0.02%)</title><rect x="880.5" y="853" width="0.3" height="15.0" fill="rgb(210,16,45)" rx="2" ry="2" />
<text  x="883.53" y="863.5" ></text>
</g>
<g >
<title>vp8_short_fdct8x4_sse2 (1 samples, 0.02%)</title><rect x="396.9" y="677" width="0.2" height="15.0" fill="rgb(218,209,36)" rx="2" ry="2" />
<text  x="399.90" y="687.5" ></text>
</g>
<g >
<title>v8_inspector::(anonymous namespace)::ConsoleHelper::reportCall(v8_inspector::ConsoleAPIType) (2 samples, 0.04%)</title><rect x="17.7" y="373" width="0.5" height="15.0" fill="rgb(238,155,3)" rx="2" ry="2" />
<text  x="20.67" y="383.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TakeImmediateIncomingQueueTasks(base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;*) (3 samples, 0.06%)</title><rect x="184.9" y="789" width="0.7" height="15.0" fill="rgb(249,206,46)" rx="2" ry="2" />
<text  x="187.90" y="799.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="327.1" y="869" width="0.3" height="15.0" fill="rgb(205,92,3)" rx="2" ry="2" />
<text  x="330.14" y="879.5" ></text>
</g>
<g >
<title>media::AudioShifter::Push(std::__Cr::unique_ptr&lt;media::AudioBus, std::__Cr::default_delete&lt;media::AudioBus&gt; &gt;, base::TimeTicks) (2 samples, 0.04%)</title><rect x="1081.2" y="917" width="0.4" height="15.0" fill="rgb(229,59,7)" rx="2" ry="2" />
<text  x="1084.15" y="927.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::CullOldPackets(long long) (1 samples, 0.02%)</title><rect x="550.3" y="757" width="0.2" height="15.0" fill="rgb(207,71,35)" rx="2" ry="2" />
<text  x="553.28" y="767.5" ></text>
</g>
<g >
<title>blink::EventTiming::Create(blink::LocalDOMWindow*, blink::Event const&amp;) (1 samples, 0.02%)</title><rect x="22.4" y="629" width="0.2" height="15.0" fill="rgb(254,187,17)" rx="2" ry="2" />
<text  x="25.37" y="639.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (1 samples, 0.02%)</title><rect x="486.7" y="581" width="0.2" height="15.0" fill="rgb(223,207,54)" rx="2" ry="2" />
<text  x="489.70" y="591.5" ></text>
</g>
<g >
<title>webrtc::acm2::AcmReceiver::InsertPacket(webrtc::RTPHeader const&amp;, rtc::ArrayView&lt;unsigned char const, -4711l&gt;) (8 samples, 0.17%)</title><rect x="278.7" y="677" width="1.9" height="15.0" fill="rgb(205,178,46)" rx="2" ry="2" />
<text  x="281.65" y="687.5" ></text>
</g>
<g >
<title>cc::ListContainerHelper::ListContainerHelper(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="1039.3" y="613" width="0.3" height="15.0" fill="rgb(222,175,50)" rx="2" ry="2" />
<text  x="1042.35" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="487.9" y="613" width="0.3" height="15.0" fill="rgb(229,89,18)" rx="2" ry="2" />
<text  x="490.94" y="623.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="255.2" y="581" width="0.2" height="15.0" fill="rgb(209,170,35)" rx="2" ry="2" />
<text  x="258.15" y="591.5" ></text>
</g>
<g >
<title>vpx_variance16x16_avx2 (3 samples, 0.06%)</title><rect x="432.0" y="661" width="0.8" height="15.0" fill="rgb(216,131,7)" rx="2" ry="2" />
<text  x="435.03" y="671.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (15 samples, 0.31%)</title><rect x="1164.3" y="933" width="3.7" height="15.0" fill="rgb(214,81,2)" rx="2" ry="2" />
<text  x="1167.27" y="943.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="339.0" y="821" width="0.3" height="15.0" fill="rgb(232,20,13)" rx="2" ry="2" />
<text  x="342.01" y="831.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::IsShutdownComplete() const (1 samples, 0.02%)</title><rect x="1020.3" y="965" width="0.2" height="15.0" fill="rgb(208,176,39)" rx="2" ry="2" />
<text  x="1023.30" y="975.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="331.8" y="837" width="0.3" height="15.0" fill="rgb(223,85,28)" rx="2" ry="2" />
<text  x="334.84" y="847.5" ></text>
</g>
<g >
<title>base::Pickle::Resize(unsigned long) (1 samples, 0.02%)</title><rect x="242.0" y="613" width="0.3" height="15.0" fill="rgb(223,94,26)" rx="2" ry="2" />
<text  x="245.04" y="623.5" ></text>
</g>
<g >
<title>webrtc::NetEqImpl::GetDecision(webrtc::Operations*, std::__Cr::list&lt;webrtc::Packet, std::__Cr::allocator&lt;webrtc::Packet&gt; &gt;*, webrtc::DtmfEvent*, bool*, absl::optional&lt;webrtc::Operations&gt;) (10 samples, 0.21%)</title><rect x="1125.7" y="789" width="2.5" height="15.0" fill="rgb(239,88,37)" rx="2" ry="2" />
<text  x="1128.68" y="799.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (2 samples, 0.04%)</title><rect x="1182.3" y="853" width="0.5" height="15.0" fill="rgb(248,222,54)" rx="2" ry="2" />
<text  x="1185.33" y="863.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::DidRunTask() (1 samples, 0.02%)</title><rect x="338.5" y="885" width="0.3" height="15.0" fill="rgb(229,195,23)" rx="2" ry="2" />
<text  x="341.52" y="895.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (2 samples, 0.04%)</title><rect x="913.2" y="661" width="0.5" height="15.0" fill="rgb(246,14,20)" rx="2" ry="2" />
<text  x="916.18" y="671.5" ></text>
</g>
<g >
<title>DYLD-STUB$$pthread_getspecific (1 samples, 0.02%)</title><rect x="322.9" y="693" width="0.3" height="15.0" fill="rgb(229,18,30)" rx="2" ry="2" />
<text  x="325.94" y="703.5" ></text>
</g>
<g >
<title>GetCoeffs (68 samples, 1.43%)</title><rect x="504.8" y="693" width="16.8" height="15.0" fill="rgb(240,99,47)" rx="2" ry="2" />
<text  x="507.76" y="703.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="43.9" y="581" width="0.2" height="15.0" fill="rgb(251,18,26)" rx="2" ry="2" />
<text  x="46.89" y="591.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1080.9" y="805" width="0.3" height="15.0" fill="rgb(209,141,12)" rx="2" ry="2" />
<text  x="1083.91" y="815.5" ></text>
</g>
<g >
<title>std::__Cr::basic_ostream&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;::~basic_ostream() (1 samples, 0.02%)</title><rect x="53.5" y="901" width="0.3" height="15.0" fill="rgb(214,188,22)" rx="2" ry="2" />
<text  x="56.54" y="911.5" ></text>
</g>
<g >
<title>blink::scheduler::ThrottledTimeDomain::CreateLazyNow() const (2 samples, 0.04%)</title><rect x="40.2" y="645" width="0.5" height="15.0" fill="rgb(244,149,23)" rx="2" ry="2" />
<text  x="43.18" y="655.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_half_loop (8 samples, 0.17%)</title><rect x="767.5" y="661" width="2.0" height="15.0" fill="rgb(239,129,28)" rx="2" ry="2" />
<text  x="770.48" y="671.5" ></text>
</g>
<g >
<title>mojo::Connector::Accept(mojo::Message*) (7 samples, 0.15%)</title><rect x="169.6" y="741" width="1.7" height="15.0" fill="rgb(214,31,21)" rx="2" ry="2" />
<text  x="172.56" y="751.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1165.0" y="869" width="0.3" height="15.0" fill="rgb(211,164,28)" rx="2" ry="2" />
<text  x="1168.01" y="879.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="82.2" y="757" width="0.3" height="15.0" fill="rgb(222,181,22)" rx="2" ry="2" />
<text  x="85.23" y="767.5" ></text>
</g>
<g >
<title>webrtc::RTCPReceiver::LastReceivedReportBlockMs() const (1 samples, 0.02%)</title><rect x="1176.9" y="949" width="0.2" height="15.0" fill="rgb(205,58,14)" rx="2" ry="2" />
<text  x="1179.89" y="959.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::SendMessageLocked(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (2 samples, 0.04%)</title><rect x="1041.1" y="405" width="0.5" height="15.0" fill="rgb(223,105,5)" rx="2" ry="2" />
<text  x="1044.08" y="415.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (2 samples, 0.04%)</title><rect x="241.3" y="645" width="0.5" height="15.0" fill="rgb(210,23,34)" rx="2" ry="2" />
<text  x="244.30" y="655.5" ></text>
</g>
<g >
<title>CopyPlane (4 samples, 0.08%)</title><rect x="62.7" y="901" width="1.0" height="15.0" fill="rgb(207,2,32)" rx="2" ry="2" />
<text  x="65.69" y="911.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (3 samples, 0.06%)</title><rect x="372.4" y="837" width="0.8" height="15.0" fill="rgb(217,170,54)" rx="2" ry="2" />
<text  x="375.41" y="847.5" ></text>
</g>
<g >
<title>small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="268.0" y="469" width="0.3" height="15.0" fill="rgb(251,23,34)" rx="2" ry="2" />
<text  x="271.02" y="479.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="18.4" y="453" width="0.3" height="15.0" fill="rgb(237,91,32)" rx="2" ry="2" />
<text  x="21.41" y="463.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeImmediateIncomingQueueTasks() (3 samples, 0.06%)</title><rect x="327.9" y="837" width="0.7" height="15.0" fill="rgb(228,38,12)" rx="2" ry="2" />
<text  x="330.88" y="847.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="1026.7" y="789" width="0.5" height="15.0" fill="rgb(254,162,39)" rx="2" ry="2" />
<text  x="1029.73" y="799.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetIOAllowed(bool) (10 samples, 0.21%)</title><rect x="370.7" y="917" width="2.5" height="15.0" fill="rgb(208,180,26)" rx="2" ry="2" />
<text  x="373.68" y="927.5" ></text>
</g>
<g >
<title>mojo::internal::MessageDispatchContext::~MessageDispatchContext() (4 samples, 0.08%)</title><rect x="312.3" y="661" width="1.0" height="15.0" fill="rgb(235,137,34)" rx="2" ry="2" />
<text  x="315.30" y="671.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="255.2" y="549" width="0.2" height="15.0" fill="rgb(235,120,49)" rx="2" ry="2" />
<text  x="258.15" y="559.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (3 samples, 0.06%)</title><rect x="191.6" y="869" width="0.7" height="15.0" fill="rgb(210,223,52)" rx="2" ry="2" />
<text  x="194.58" y="879.5" ></text>
</g>
<g >
<title>alg_unquant (3 samples, 0.06%)</title><rect x="1120.5" y="565" width="0.7" height="15.0" fill="rgb(232,173,43)" rx="2" ry="2" />
<text  x="1123.49" y="575.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWait(base::TimeDelta const&amp;) (25 samples, 0.52%)</title><rect x="700.9" y="949" width="6.2" height="15.0" fill="rgb(215,72,21)" rx="2" ry="2" />
<text  x="703.93" y="959.5" ></text>
</g>
<g >
<title>base::RunLoop::Delegate::ShouldQuitWhenIdle() (1 samples, 0.02%)</title><rect x="360.8" y="869" width="0.2" height="15.0" fill="rgb(245,121,44)" rx="2" ry="2" />
<text  x="363.78" y="879.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="225.2" y="517" width="0.3" height="15.0" fill="rgb(227,114,28)" rx="2" ry="2" />
<text  x="228.22" y="527.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeImmediateIncomingQueueTasks() (1 samples, 0.02%)</title><rect x="1073.7" y="821" width="0.3" height="15.0" fill="rgb(237,5,2)" rx="2" ry="2" />
<text  x="1076.73" y="831.5" ></text>
</g>
<g >
<title>webrtc::RtpTransport::DemuxPacket(rtc::CopyOnWriteBuffer, long long) (6 samples, 0.13%)</title><rect x="226.0" y="581" width="1.4" height="15.0" fill="rgb(208,99,34)" rx="2" ry="2" />
<text  x="228.96" y="591.5" ></text>
</g>
<g >
<title>webrtc::TransportPacketsFeedback::ReceivedWithSendInfo() const (1 samples, 0.02%)</title><rect x="882.8" y="821" width="0.2" height="15.0" fill="rgb(237,154,44)" rx="2" ry="2" />
<text  x="885.75" y="831.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkDeduplicator::OnWorkStarted() (2 samples, 0.04%)</title><rect x="193.3" y="901" width="0.5" height="15.0" fill="rgb(233,223,29)" rx="2" ry="2" />
<text  x="196.31" y="911.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="892.4" y="677" width="0.2" height="15.0" fill="rgb(208,221,54)" rx="2" ry="2" />
<text  x="895.40" y="687.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__tree_iterator&lt;webrtc::RtpPacketHistory::StoredPacket*, std::__Cr::__tree_node&lt;webrtc::RtpPacketHistory::StoredPacket*, void*&gt;*, long&gt;, bool&gt; std::__Cr::__tree&lt;webrtc::RtpPacketHistory::StoredPacket*, webrtc::RtpPacketHistory::MoreUseful, std::__Cr::allocator&lt;webrtc::RtpPacketHistory::StoredPacket*&gt; &gt;::__emplace_unique_key_args&lt;webrtc::RtpPacketHistory::StoredPacket*, webrtc::RtpPacketHistory::StoredPacket*&gt;(webrtc::RtpPacketHistory::StoredPacket* const&amp;, webrtc::RtpPacketHistory::StoredPacket*&amp;&amp;) (1 samples, 0.02%)</title><rect x="652.2" y="661" width="0.2" height="15.0" fill="rgb(229,153,24)" rx="2" ry="2" />
<text  x="655.20" y="671.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::MoveHoleUpAndFillWithElement(unsigned long, base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&amp;&amp;) (1 samples, 0.02%)</title><rect x="83.2" y="757" width="0.3" height="15.0" fill="rgb(249,114,3)" rx="2" ry="2" />
<text  x="86.22" y="767.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.04%)</title><rect x="568.8" y="949" width="0.5" height="15.0" fill="rgb(251,1,5)" rx="2" ry="2" />
<text  x="571.83" y="959.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1069.3" y="661" width="0.2" height="15.0" fill="rgb(227,46,44)" rx="2" ry="2" />
<text  x="1072.28" y="671.5" ></text>
</g>
<g >
<title>base::ScopedDeferTaskPosting::Set(base::ScopedDeferTaskPosting*) (1 samples, 0.02%)</title><rect x="316.0" y="469" width="0.3" height="15.0" fill="rgb(213,141,42)" rx="2" ry="2" />
<text  x="319.01" y="479.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Decoder::ReturnFrame(vpx_image const*, unsigned int, int) (3 samples, 0.06%)</title><rect x="840.7" y="773" width="0.7" height="15.0" fill="rgb(214,202,43)" rx="2" ry="2" />
<text  x="843.70" y="783.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1153.1" y="757" width="0.3" height="15.0" fill="rgb(216,119,8)" rx="2" ry="2" />
<text  x="1156.14" y="767.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (3 samples, 0.06%)</title><rect x="298.2" y="677" width="0.7" height="15.0" fill="rgb(222,20,51)" rx="2" ry="2" />
<text  x="301.20" y="687.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::GetCurrent() const (1 samples, 0.02%)</title><rect x="42.4" y="645" width="0.3" height="15.0" fill="rgb(254,158,12)" rx="2" ry="2" />
<text  x="45.41" y="655.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetSleepTimeout() (1 samples, 0.02%)</title><rect x="1019.1" y="949" width="0.2" height="15.0" fill="rgb(206,223,3)" rx="2" ry="2" />
<text  x="1022.06" y="959.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelSend::SendData(webrtc::AudioFrameType, unsigned char, unsigned int, unsigned char const*, unsigned long) (3 samples, 0.06%)</title><rect x="1004.0" y="821" width="0.7" height="15.0" fill="rgb(253,55,18)" rx="2" ry="2" />
<text  x="1006.97" y="831.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.04%)</title><rect x="709.8" y="949" width="0.5" height="15.0" fill="rgb(245,41,22)" rx="2" ry="2" />
<text  x="712.84" y="959.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1008.4" y="933" width="0.3" height="15.0" fill="rgb(207,189,18)" rx="2" ry="2" />
<text  x="1011.42" y="943.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) (68 samples, 1.43%)</title><rect x="197.0" y="949" width="16.8" height="15.0" fill="rgb(212,187,12)" rx="2" ry="2" />
<text  x="200.02" y="959.5" ></text>
</g>
<g >
<title>base::Thread::ThreadMain  0x644dc4 (68 samples, 1.43%)</title><rect x="197.0" y="1077" width="16.8" height="15.0" fill="rgb(242,102,7)" rx="2" ry="2" />
<text  x="200.02" y="1087.5" ></text>
</g>
<g >
<title>mojo::core::ports::PortLocker::PortLocker(mojo::core::ports::PortRef const**, unsigned long) (1 samples, 0.02%)</title><rect x="108.7" y="709" width="0.3" height="15.0" fill="rgb(246,155,3)" rx="2" ry="2" />
<text  x="111.70" y="719.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="682.9" y="629" width="0.2" height="15.0" fill="rgb(210,48,10)" rx="2" ry="2" />
<text  x="685.87" y="639.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="711.6" y="933" width="0.2" height="15.0" fill="rgb(207,69,11)" rx="2" ry="2" />
<text  x="714.57" y="943.5" ></text>
</g>
<g >
<title>gpu::SyncToken::SyncToken() (1 samples, 0.02%)</title><rect x="137.6" y="485" width="0.3" height="15.0" fill="rgb(216,141,31)" rx="2" ry="2" />
<text  x="140.65" y="495.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="208.2" y="773" width="0.2" height="15.0" fill="rgb(230,10,36)" rx="2" ry="2" />
<text  x="211.15" y="783.5" ></text>
</g>
<g >
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="239.8" y="709" width="0.3" height="15.0" fill="rgb(229,70,17)" rx="2" ry="2" />
<text  x="242.82" y="719.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (3 samples, 0.06%)</title><rect x="1157.6" y="757" width="0.7" height="15.0" fill="rgb(227,113,53)" rx="2" ry="2" />
<text  x="1160.59" y="767.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (1 samples, 0.02%)</title><rect x="795.9" y="693" width="0.3" height="15.0" fill="rgb(235,47,44)" rx="2" ry="2" />
<text  x="798.92" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PushOntoDelayedIncomingQueueFromMainThread(base::sequence_manager::Task, base::TimeTicks, bool) (1 samples, 0.02%)</title><rect x="77.0" y="757" width="0.3" height="15.0" fill="rgb(221,35,12)" rx="2" ry="2" />
<text  x="80.04" y="767.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="261.6" y="661" width="0.2" height="15.0" fill="rgb(206,2,33)" rx="2" ry="2" />
<text  x="264.58" y="671.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (2 samples, 0.04%)</title><rect x="297.0" y="773" width="0.5" height="15.0" fill="rgb(246,211,0)" rx="2" ry="2" />
<text  x="299.96" y="783.5" ></text>
</g>
<g >
<title>mojo::internal::ArraySerializer&lt;mojo::ArrayDataView&lt;viz::mojom::CopyOutputRequestDataView&gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt; &gt; &gt; const, mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt; &gt; &gt; &gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt; &gt; &gt; const, false&gt;, void&gt;::SerializeElements(mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt; &gt; &gt; &gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt; &gt; &gt; const, false&gt;*, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;mojo::internal::Pointer&lt;viz::mojom::internal::CopyOutputRequest_Data&gt; &gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1042.6" y="549" width="0.2" height="15.0" fill="rgb(216,225,33)" rx="2" ry="2" />
<text  x="1045.56" y="559.5" ></text>
</g>
<g >
<title>blink::MediaStreamRemoteVideoSource::RemoteVideoSourceDelegate::OnFrame(webrtc::VideoFrame const&amp;) (1 samples, 0.02%)</title><rect x="533.2" y="677" width="0.3" height="15.0" fill="rgb(238,9,51)" rx="2" ry="2" />
<text  x="536.21" y="687.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (5 samples, 0.10%)</title><rect x="588.1" y="661" width="1.3" height="15.0" fill="rgb(253,207,21)" rx="2" ry="2" />
<text  x="591.13" y="671.5" ></text>
</g>
<g >
<title>_platform_memset$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="744.2" y="677" width="0.3" height="15.0" fill="rgb(232,124,34)" rx="2" ry="2" />
<text  x="747.22" y="687.5" ></text>
</g>
<g >
<title>mojo::core::ports::SinglePortLocker::~SinglePortLocker() (1 samples, 0.02%)</title><rect x="321.0" y="709" width="0.2" height="15.0" fill="rgb(227,73,53)" rx="2" ry="2" />
<text  x="323.96" y="719.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) (14 samples, 0.29%)</title><rect x="225.0" y="773" width="3.4" height="15.0" fill="rgb(228,4,52)" rx="2" ry="2" />
<text  x="227.97" y="783.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="260.8" y="645" width="0.3" height="15.0" fill="rgb(224,48,0)" rx="2" ry="2" />
<text  x="263.84" y="655.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (5 samples, 0.10%)</title><rect x="1052.5" y="549" width="1.2" height="15.0" fill="rgb(244,100,13)" rx="2" ry="2" />
<text  x="1055.46" y="559.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoSendStreamImpl::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (6 samples, 0.13%)</title><rect x="815.5" y="757" width="1.5" height="15.0" fill="rgb(209,185,52)" rx="2" ry="2" />
<text  x="818.47" y="767.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="652.7" y="517" width="0.2" height="15.0" fill="rgb(253,200,9)" rx="2" ry="2" />
<text  x="655.69" y="527.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::MemalignImpl(base::allocator::AllocatorDispatch const*, unsigned long, unsigned long, void*) (1 samples, 0.02%)</title><rect x="104.7" y="741" width="0.3" height="15.0" fill="rgb(244,98,20)" rx="2" ry="2" />
<text  x="107.75" y="751.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="43.1" y="629" width="0.3" height="15.0" fill="rgb(241,102,33)" rx="2" ry="2" />
<text  x="46.15" y="639.5" ></text>
</g>
<g >
<title>vpx_subtract_block_sse2.loop_8 (2 samples, 0.04%)</title><rect x="940.1" y="693" width="0.5" height="15.0" fill="rgb(211,77,22)" rx="2" ry="2" />
<text  x="943.15" y="703.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="260.6" y="693" width="0.5" height="15.0" fill="rgb(207,113,34)" rx="2" ry="2" />
<text  x="263.60" y="703.5" ></text>
</g>
<g >
<title>IOConnectCallMethod (2 samples, 0.04%)</title><rect x="65.2" y="885" width="0.5" height="15.0" fill="rgb(223,117,32)" rx="2" ry="2" />
<text  x="68.17" y="895.5" ></text>
</g>
<g >
<title>vp8_short_inv_walsh4x4_1_c (1 samples, 0.02%)</title><rect x="934.2" y="693" width="0.3" height="15.0" fill="rgb(213,226,5)" rx="2" ry="2" />
<text  x="937.21" y="703.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::Write(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (5 samples, 0.10%)</title><rect x="169.8" y="565" width="1.2" height="15.0" fill="rgb(240,129,33)" rx="2" ry="2" />
<text  x="172.81" y="575.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_sse2 (1 samples, 0.02%)</title><rect x="988.9" y="677" width="0.2" height="15.0" fill="rgb(246,228,29)" rx="2" ry="2" />
<text  x="991.88" y="687.5" ></text>
</g>
<g >
<title>base::AlignedAlloc(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="253.7" y="533" width="0.2" height="15.0" fill="rgb(236,117,27)" rx="2" ry="2" />
<text  x="256.67" y="543.5" ></text>
</g>
<g >
<title>WTF::HashTable&lt;void const*, void const*, WTF::IdentityExtractor, WTF::PtrHash&lt;void const&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::PartitionAllocator&gt;::Expand(void const**) (1 samples, 0.02%)</title><rect x="27.1" y="453" width="0.2" height="15.0" fill="rgb(230,63,2)" rx="2" ry="2" />
<text  x="30.07" y="463.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="559.7" y="901" width="0.2" height="15.0" fill="rgb(245,120,19)" rx="2" ry="2" />
<text  x="562.68" y="911.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bh_y_sse2 (1 samples, 0.02%)</title><rect x="987.9" y="693" width="0.2" height="15.0" fill="rgb(208,212,49)" rx="2" ry="2" />
<text  x="990.89" y="703.5" ></text>
</g>
<g >
<title>base::internal::BindStateBase::BindStateBase(void (*)(), void (*)(base::internal::BindStateBase const*), bool (*)(base::internal::BindStateBase const*, base::internal::BindStateBase::CancellationQueryMode)) (1 samples, 0.02%)</title><rect x="308.8" y="453" width="0.3" height="15.0" fill="rgb(249,122,10)" rx="2" ry="2" />
<text  x="311.83" y="463.5" ></text>
</g>
<g >
<title>base::ScopedDeferTaskPosting::Set(base::ScopedDeferTaskPosting*) (1 samples, 0.02%)</title><rect x="76.5" y="773" width="0.3" height="15.0" fill="rgb(252,196,21)" rx="2" ry="2" />
<text  x="79.55" y="783.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="267.8" y="469" width="0.2" height="15.0" fill="rgb(235,30,1)" rx="2" ry="2" />
<text  x="270.77" y="479.5" ></text>
</g>
<g >
<title>blink::MediaStreamAudioDeliverer&lt;blink::WebMediaStreamAudioSink&gt;::OnData(media::AudioBus const&amp;, base::TimeTicks) (28 samples, 0.59%)</title><rect x="1079.9" y="949" width="6.9" height="15.0" fill="rgb(236,83,16)" rx="2" ry="2" />
<text  x="1082.92" y="959.5" ></text>
</g>
<g >
<title>vp8_denoiser_denoise_mb (33 samples, 0.69%)</title><rect x="750.7" y="677" width="8.1" height="15.0" fill="rgb(227,52,24)" rx="2" ry="2" />
<text  x="753.65" y="687.5" ></text>
</g>
<g >
<title>content::RenderWidget::DidCommitAndDrawCompositorFrame() (1 samples, 0.02%)</title><rect x="23.1" y="661" width="0.3" height="15.0" fill="rgb(210,178,18)" rx="2" ry="2" />
<text  x="26.11" y="671.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="710.6" y="933" width="0.2" height="15.0" fill="rgb(245,109,43)" rx="2" ry="2" />
<text  x="713.58" y="943.5" ></text>
</g>
<g >
<title>base::internal::Sequence::BeginTransaction() (1 samples, 0.02%)</title><rect x="1156.9" y="773" width="0.2" height="15.0" fill="rgb(232,15,48)" rx="2" ry="2" />
<text  x="1159.85" y="783.5" ></text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::PostTaskInternal(rtc::Location const&amp;, int, rtc::MessageHandler*, unsigned int, rtc::MessageData*) (5 samples, 0.10%)</title><rect x="1154.6" y="853" width="1.3" height="15.0" fill="rgb(227,1,21)" rx="2" ry="2" />
<text  x="1157.62" y="863.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="315.8" y="501" width="0.2" height="15.0" fill="rgb(215,207,2)" rx="2" ry="2" />
<text  x="318.76" y="511.5" ></text>
</g>
<g >
<title>_pthread_mutex_fairshare_lock_slow (1 samples, 0.02%)</title><rect x="1189.5" y="917" width="0.3" height="15.0" fill="rgb(250,7,42)" rx="2" ry="2" />
<text  x="1192.51" y="927.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::DidProcessTask(base::internal::RegisteredTaskSource) (7 samples, 0.15%)</title><rect x="553.5" y="965" width="1.7" height="15.0" fill="rgb(220,111,44)" rx="2" ry="2" />
<text  x="556.49" y="975.5" ></text>
</g>
<g >
<title>silk_NSQ_wrapper_FLP (19 samples, 0.40%)</title><rect x="538.4" y="709" width="4.7" height="15.0" fill="rgb(229,32,49)" rx="2" ry="2" />
<text  x="541.40" y="719.5" ></text>
</g>
<g >
<title>logging::ShouldCreateLogMessage(int) (1 samples, 0.02%)</title><rect x="1036.6" y="469" width="0.3" height="15.0" fill="rgb(208,99,43)" rx="2" ry="2" />
<text  x="1039.62" y="479.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="312.8" y="613" width="0.5" height="15.0" fill="rgb(250,25,0)" rx="2" ry="2" />
<text  x="315.79" y="623.5" ></text>
</g>
<g >
<title>webrtc::SendStatisticsProxy::GetStatsEntry(unsigned int) (1 samples, 0.02%)</title><rect x="1160.1" y="869" width="0.2" height="15.0" fill="rgb(250,24,8)" rx="2" ry="2" />
<text  x="1163.07" y="879.5" ></text>
</g>
<g >
<title>webrtc::SdpAudioFormat::SdpAudioFormat(webrtc::SdpAudioFormat const&amp;) (4 samples, 0.08%)</title><rect x="1129.6" y="821" width="1.0" height="15.0" fill="rgb(207,83,20)" rx="2" ry="2" />
<text  x="1132.64" y="831.5" ></text>
</g>
<g >
<title>mojo::native::internal::NativeStruct_Data::BufferWriter::data() (1 samples, 0.02%)</title><rect x="254.9" y="645" width="0.3" height="15.0" fill="rgb(226,146,9)" rx="2" ry="2" />
<text  x="257.91" y="655.5" ></text>
</g>
<g >
<title>small_malloc_from_free_list (2 samples, 0.04%)</title><rect x="1025.5" y="789" width="0.5" height="15.0" fill="rgb(206,132,24)" rx="2" ry="2" />
<text  x="1028.49" y="799.5" ></text>
</g>
<g >
<title>vpx_variance16x16_avx2 (1 samples, 0.02%)</title><rect x="780.3" y="677" width="0.3" height="15.0" fill="rgb(207,174,18)" rx="2" ry="2" />
<text  x="783.34" y="687.5" ></text>
</g>
<g >
<title>malloc_zone_memalign (4 samples, 0.08%)</title><rect x="104.5" y="789" width="1.0" height="15.0" fill="rgb(247,132,4)" rx="2" ry="2" />
<text  x="107.50" y="799.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::is_end() const (3 samples, 0.06%)</title><rect x="31.0" y="661" width="0.8" height="15.0" fill="rgb(241,91,30)" rx="2" ry="2" />
<text  x="34.03" y="671.5" ></text>
</g>
<g >
<title>vp8_build_intra_predictors_mby_s (1 samples, 0.02%)</title><rect x="407.3" y="677" width="0.2" height="15.0" fill="rgb(224,39,39)" rx="2" ry="2" />
<text  x="410.29" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::GetDelayTillNextDelayedTask(base::sequence_manager::LazyNow*) const (1 samples, 0.02%)</title><rect x="208.4" y="869" width="0.2" height="15.0" fill="rgb(234,133,38)" rx="2" ry="2" />
<text  x="211.40" y="879.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="266.5" y="501" width="0.5" height="15.0" fill="rgb(240,205,8)" rx="2" ry="2" />
<text  x="269.53" y="511.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="19.9" y="149" width="0.2" height="15.0" fill="rgb(248,37,29)" rx="2" ry="2" />
<text  x="22.90" y="159.5" ></text>
</g>
<g >
<title>IOConnectCallMethod (4 samples, 0.08%)</title><rect x="69.1" y="885" width="1.0" height="15.0" fill="rgb(216,171,3)" rx="2" ry="2" />
<text  x="72.12" y="895.5" ></text>
</g>
<g >
<title>gpu::gles2::ShareGroup::IsLost() const (1 samples, 0.02%)</title><rect x="201.2" y="773" width="0.3" height="15.0" fill="rgb(214,220,53)" rx="2" ry="2" />
<text  x="204.22" y="783.5" ></text>
</g>
<g >
<title>vp8dx_bool_decoder_fill (2 samples, 0.04%)</title><rect x="983.4" y="677" width="0.5" height="15.0" fill="rgb(217,117,31)" rx="2" ry="2" />
<text  x="986.44" y="687.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (5 samples, 0.10%)</title><rect x="16.9" y="501" width="1.3" height="15.0" fill="rgb(212,183,30)" rx="2" ry="2" />
<text  x="19.93" y="511.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="227.0" y="517" width="0.2" height="15.0" fill="rgb(225,78,27)" rx="2" ry="2" />
<text  x="229.95" y="527.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="303.4" y="677" width="0.2" height="15.0" fill="rgb(248,134,47)" rx="2" ry="2" />
<text  x="306.39" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::TimeDomain::NextScheduledRunTime() const (2 samples, 0.04%)</title><rect x="329.1" y="837" width="0.5" height="15.0" fill="rgb(238,128,18)" rx="2" ry="2" />
<text  x="332.12" y="847.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Run(void*) (47 samples, 0.99%)</title><rect x="1178.4" y="997" width="11.6" height="15.0" fill="rgb(216,113,53)" rx="2" ry="2" />
<text  x="1181.37" y="1007.5" ></text>
</g>
<g >
<title>void media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (double)&gt; &gt;::Run&lt;double&gt;(double) (1 samples, 0.02%)</title><rect x="652.7" y="661" width="0.2" height="15.0" fill="rgb(205,164,40)" rx="2" ry="2" />
<text  x="655.69" y="671.5" ></text>
</g>
<g >
<title>MojoAppendMessageDataImpl (3 samples, 0.06%)</title><rect x="253.7" y="597" width="0.7" height="15.0" fill="rgb(205,74,53)" rx="2" ry="2" />
<text  x="256.67" y="607.5" ></text>
</g>
<g >
<title>blink::BoxPainter::PaintBoxDecorationBackgroundWithRect(blink::PaintInfo const&amp;, blink::PhysicalRect const&amp;, blink::DisplayItemClient const&amp;) (1 samples, 0.02%)</title><rect x="26.6" y="181" width="0.2" height="15.0" fill="rgb(237,219,41)" rx="2" ry="2" />
<text  x="29.57" y="191.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::GetHandleSignalsStateNoLock() const (1 samples, 0.02%)</title><rect x="245.3" y="549" width="0.2" height="15.0" fill="rgb(225,28,35)" rx="2" ry="2" />
<text  x="248.26" y="559.5" ></text>
</g>
<g >
<title>_pthread_cond_wait (2 samples, 0.04%)</title><rect x="65.7" y="965" width="0.5" height="15.0" fill="rgb(210,94,17)" rx="2" ry="2" />
<text  x="68.66" y="975.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="961.2" y="629" width="0.2" height="15.0" fill="rgb(230,73,15)" rx="2" ry="2" />
<text  x="964.17" y="639.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::operator!=(base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter const&amp;) const (1 samples, 0.02%)</title><rect x="41.7" y="645" width="0.2" height="15.0" fill="rgb(239,130,11)" rx="2" ry="2" />
<text  x="44.66" y="655.5" ></text>
</g>
<g >
<title>mojo::internal::NativeStructSerializerImpl&lt;network::P2PSendPacketMetrics&gt;::Deserialize(mojo::native::internal::NativeStruct_Data*, network::P2PSendPacketMetrics*, mojo::internal::SerializationContext*) (2 samples, 0.04%)</title><rect x="313.3" y="661" width="0.5" height="15.0" fill="rgb(223,13,25)" rx="2" ry="2" />
<text  x="316.29" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (3 samples, 0.06%)</title><rect x="139.4" y="325" width="0.7" height="15.0" fill="rgb(217,45,36)" rx="2" ry="2" />
<text  x="142.38" y="335.5" ></text>
</g>
<g >
<title>webrtc::UlpfecReceiverImpl::AddReceivedRedPacket(webrtc::RTPHeader const&amp;, unsigned char const*, unsigned long, unsigned char) (2 samples, 0.04%)</title><rect x="261.8" y="677" width="0.5" height="15.0" fill="rgb(224,218,2)" rx="2" ry="2" />
<text  x="264.83" y="687.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork() (2 samples, 0.04%)</title><rect x="360.5" y="917" width="0.5" height="15.0" fill="rgb(221,49,13)" rx="2" ry="2" />
<text  x="363.54" y="927.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::HasShutdownStarted() const (1 samples, 0.02%)</title><rect x="568.6" y="965" width="0.2" height="15.0" fill="rgb(254,38,26)" rx="2" ry="2" />
<text  x="571.58" y="975.5" ></text>
</g>
<g >
<title>crashpad::StringAnnotation&lt;64u&gt;::Set(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;) (1 samples, 0.02%)</title><rect x="43.6" y="629" width="0.3" height="15.0" fill="rgb(252,134,34)" rx="2" ry="2" />
<text  x="46.64" y="639.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.02%)</title><rect x="244.8" y="549" width="0.2" height="15.0" fill="rgb(237,161,28)" rx="2" ry="2" />
<text  x="247.76" y="559.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::HandleEncodedFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;) (185 samples, 3.88%)</title><rect x="488.2" y="837" width="45.7" height="15.0" fill="rgb(237,151,53)" rx="2" ry="2" />
<text  x="491.18" y="847.5" >webr..</text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="264.8" y="613" width="0.2" height="15.0" fill="rgb(223,101,31)" rx="2" ry="2" />
<text  x="267.80" y="623.5" ></text>
</g>
<g >
<title>webrtc::AudioMixerImpl::Mix(unsigned long, webrtc::AudioFrame*) (117 samples, 2.45%)</title><rect x="1110.1" y="901" width="28.9" height="15.0" fill="rgb(238,119,27)" rx="2" ry="2" />
<text  x="1113.10" y="911.5" >we..</text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::WriteMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (3 samples, 0.06%)</title><rect x="235.9" y="565" width="0.7" height="15.0" fill="rgb(205,79,19)" rx="2" ry="2" />
<text  x="238.86" y="575.5" ></text>
</g>
<g >
<title>cc::RecordingSource::FinishDisplayItemListUpdate() (1 samples, 0.02%)</title><rect x="24.3" y="581" width="0.3" height="15.0" fill="rgb(236,86,9)" rx="2" ry="2" />
<text  x="27.35" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::push_back(base::sequence_manager::Task) (1 samples, 0.02%)</title><rect x="1151.4" y="757" width="0.3" height="15.0" fill="rgb(245,189,29)" rx="2" ry="2" />
<text  x="1154.41" y="767.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Set(void*) (1 samples, 0.02%)</title><rect x="573.3" y="901" width="0.2" height="15.0" fill="rgb(222,19,23)" rx="2" ry="2" />
<text  x="576.28" y="911.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="290.8" y="709" width="0.2" height="15.0" fill="rgb(226,206,29)" rx="2" ry="2" />
<text  x="293.78" y="719.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_sse2 (1 samples, 0.02%)</title><rect x="942.4" y="693" width="0.2" height="15.0" fill="rgb(234,95,34)" rx="2" ry="2" />
<text  x="945.37" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (12 samples, 0.25%)</title><rect x="77.8" y="821" width="3.0" height="15.0" fill="rgb(229,126,38)" rx="2" ry="2" />
<text  x="80.78" y="831.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::~Transaction() (1 samples, 0.02%)</title><rect x="694.0" y="933" width="0.3" height="15.0" fill="rgb(219,125,31)" rx="2" ry="2" />
<text  x="697.00" y="943.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="327.6" y="869" width="0.3" height="15.0" fill="rgb(241,111,18)" rx="2" ry="2" />
<text  x="330.64" y="879.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="294.2" y="741" width="0.5" height="15.0" fill="rgb(228,179,13)" rx="2" ry="2" />
<text  x="297.24" y="751.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (2 samples, 0.04%)</title><rect x="696.7" y="885" width="0.5" height="15.0" fill="rgb(227,211,51)" rx="2" ry="2" />
<text  x="699.73" y="895.5" ></text>
</g>
<g >
<title>mach_msg_trap (4 samples, 0.08%)</title><rect x="1085.6" y="645" width="1.0" height="15.0" fill="rgb(239,107,47)" rx="2" ry="2" />
<text  x="1088.61" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::UpdateCrossThreadQueueStateLocked() (4 samples, 0.08%)</title><rect x="356.3" y="805" width="1.0" height="15.0" fill="rgb(248,168,25)" rx="2" ry="2" />
<text  x="359.33" y="815.5" ></text>
</g>
<g >
<title>IPC::ChannelMojo::OnMessageReceived(IPC::Message const&amp;) (4 samples, 0.08%)</title><rect x="134.2" y="565" width="1.0" height="15.0" fill="rgb(223,217,37)" rx="2" ry="2" />
<text  x="137.18" y="575.5" ></text>
</g>
<g >
<title>mojo::core::WatcherDispatcher::NotifyHandleState(mojo::core::Dispatcher*, mojo::core::HandleSignalsState const&amp;) (2 samples, 0.04%)</title><rect x="1056.2" y="725" width="0.5" height="15.0" fill="rgb(207,179,7)" rx="2" ry="2" />
<text  x="1059.17" y="735.5" ></text>
</g>
<g >
<title>base::MessagePumpKqueue::DoInternalWork(base::MessagePump::Delegate::NextWorkInfo*) (306 samples, 6.42%)</title><rect x="88.4" y="917" width="75.7" height="15.0" fill="rgb(245,174,14)" rx="2" ry="2" />
<text  x="91.42" y="927.5" >base::Me..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (3 samples, 0.06%)</title><rect x="316.5" y="485" width="0.7" height="15.0" fill="rgb(226,124,45)" rx="2" ry="2" />
<text  x="319.50" y="495.5" ></text>
</g>
<g >
<title>_CFAutoreleasePoolPop (1 samples, 0.02%)</title><rect x="567.3" y="949" width="0.3" height="15.0" fill="rgb(254,147,14)" rx="2" ry="2" />
<text  x="570.35" y="959.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (3 samples, 0.06%)</title><rect x="584.2" y="677" width="0.7" height="15.0" fill="rgb(212,26,2)" rx="2" ry="2" />
<text  x="587.17" y="687.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::WriteMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="1068.3" y="645" width="0.2" height="15.0" fill="rgb(225,220,13)" rx="2" ry="2" />
<text  x="1071.29" y="655.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_y_block_sse2 (10 samples, 0.21%)</title><rect x="985.2" y="709" width="2.4" height="15.0" fill="rgb(216,118,42)" rx="2" ry="2" />
<text  x="988.17" y="719.5" ></text>
</g>
<g >
<title>_os_unfair_lock_lock_slow (2 samples, 0.04%)</title><rect x="552.0" y="869" width="0.5" height="15.0" fill="rgb(254,176,14)" rx="2" ry="2" />
<text  x="555.01" y="879.5" ></text>
</g>
<g >
<title>MojoWriteMessage (5 samples, 0.10%)</title><rect x="172.5" y="741" width="1.3" height="15.0" fill="rgb(232,144,28)" rx="2" ry="2" />
<text  x="175.53" y="751.5" ></text>
</g>
<g >
<title>vp8_encode_bool (2 samples, 0.04%)</title><rect x="637.6" y="725" width="0.5" height="15.0" fill="rgb(242,171,19)" rx="2" ry="2" />
<text  x="640.60" y="735.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (5 samples, 0.10%)</title><rect x="395.7" y="677" width="1.2" height="15.0" fill="rgb(248,48,26)" rx="2" ry="2" />
<text  x="398.66" y="687.5" ></text>
</g>
<g >
<title>MojoWriteMessage (6 samples, 0.13%)</title><rect x="166.3" y="725" width="1.5" height="15.0" fill="rgb(238,109,29)" rx="2" ry="2" />
<text  x="169.34" y="735.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessageInternal(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (1 samples, 0.02%)</title><rect x="165.8" y="645" width="0.3" height="15.0" fill="rgb(225,104,17)" rx="2" ry="2" />
<text  x="168.85" y="655.5" ></text>
</g>
<g >
<title>cc::ProxyImpl::ScheduledActionPrepareTiles() (2 samples, 0.04%)</title><rect x="1067.5" y="821" width="0.5" height="15.0" fill="rgb(212,202,31)" rx="2" ry="2" />
<text  x="1070.55" y="831.5" ></text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::PostTaskInternal(rtc::Location const&amp;, int, rtc::MessageHandler*, unsigned int, rtc::MessageData*) (2 samples, 0.04%)</title><rect x="309.1" y="469" width="0.5" height="15.0" fill="rgb(226,64,11)" rx="2" ry="2" />
<text  x="312.08" y="479.5" ></text>
</g>
<g >
<title>__CFSetApplyFunction_block_invoke (1 samples, 0.02%)</title><rect x="13.7" y="789" width="0.3" height="15.0" fill="rgb(246,0,51)" rx="2" ry="2" />
<text  x="16.71" y="799.5" ></text>
</g>
<g >
<title>MojoWriteMessage (8 samples, 0.17%)</title><rect x="1046.5" y="597" width="2.0" height="15.0" fill="rgb(250,134,30)" rx="2" ry="2" />
<text  x="1049.52" y="607.5" ></text>
</g>
<g >
<title>vp8_tree_probs_from_distribution (1 samples, 0.02%)</title><rect x="632.9" y="725" width="0.2" height="15.0" fill="rgb(222,63,40)" rx="2" ry="2" />
<text  x="635.90" y="735.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)(int, int, int, media::VideoFrame const*, unsigned char*, int, unsigned char*, int, base::OnceCallback&lt;void ()&gt;), int, int, int, base::internal::UnretainedWrapper&lt;media::VideoFrame&gt;, unsigned char*, int, unsigned char*, int, base::RepeatingCallback&lt;void ()&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (10 samples, 0.21%)</title><rect x="59.0" y="949" width="2.5" height="15.0" fill="rgb(219,198,3)" rx="2" ry="2" />
<text  x="61.98" y="959.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::Encode(webrtc::VideoFrame const&amp;, std::__Cr::vector&lt;webrtc::VideoFrameType, std::__Cr::allocator&lt;webrtc::VideoFrameType&gt; &gt; const*) (425 samples, 8.91%)</title><rect x="382.1" y="805" width="105.1" height="15.0" fill="rgb(216,102,15)" rx="2" ry="2" />
<text  x="385.06" y="815.5" >webrtc::Libv..</text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Set(void*) (2 samples, 0.04%)</title><rect x="1023.5" y="901" width="0.5" height="15.0" fill="rgb(252,41,54)" rx="2" ry="2" />
<text  x="1026.51" y="911.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)(media::VideoFrameMetadata const*, base::OnceCallback&lt;void (double)&gt;), media::VideoFrameMetadata*, base::OnceCallback&lt;void (double)&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="487.9" y="693" width="0.3" height="15.0" fill="rgb(205,220,17)" rx="2" ry="2" />
<text  x="490.94" y="703.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="692.3" y="725" width="0.2" height="15.0" fill="rgb(232,139,41)" rx="2" ry="2" />
<text  x="695.27" y="735.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::IsCancelled() const (1 samples, 0.02%)</title><rect x="45.6" y="645" width="0.3" height="15.0" fill="rgb(208,129,22)" rx="2" ry="2" />
<text  x="48.62" y="655.5" ></text>
</g>
<g >
<title>base::internal::WorkerThreadStack::Pop() (2 samples, 0.04%)</title><rect x="287.8" y="629" width="0.5" height="15.0" fill="rgb(224,12,43)" rx="2" ry="2" />
<text  x="290.81" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="309.1" y="389" width="0.2" height="15.0" fill="rgb(241,172,23)" rx="2" ry="2" />
<text  x="312.08" y="399.5" ></text>
</g>
<g >
<title>webrtc::FrameEncodeMetadataWriter::OnEncodeStarted(webrtc::VideoFrame const&amp;) (2 samples, 0.04%)</title><rect x="381.6" y="805" width="0.5" height="15.0" fill="rgb(244,227,19)" rx="2" ry="2" />
<text  x="384.56" y="815.5" ></text>
</g>
<g >
<title>webrtc::RTCPReceiver::TriggerCallbacksFromRtcpPacket(webrtc::RTCPReceiver::PacketInformation const&amp;) (8 samples, 0.17%)</title><rect x="274.0" y="725" width="1.9" height="15.0" fill="rgb(227,165,39)" rx="2" ry="2" />
<text  x="276.95" y="735.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (4 samples, 0.08%)</title><rect x="283.4" y="693" width="0.9" height="15.0" fill="rgb(247,187,13)" rx="2" ry="2" />
<text  x="286.35" y="703.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="389.2" y="677" width="0.3" height="15.0" fill="rgb(210,171,3)" rx="2" ry="2" />
<text  x="392.23" y="687.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::Release() const (2 samples, 0.04%)</title><rect x="294.7" y="789" width="0.5" height="15.0" fill="rgb(238,218,40)" rx="2" ry="2" />
<text  x="297.73" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (3 samples, 0.06%)</title><rect x="139.4" y="341" width="0.7" height="15.0" fill="rgb(248,151,41)" rx="2" ry="2" />
<text  x="142.38" y="351.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (54 samples, 1.13%)</title><rect x="16.2" y="709" width="13.3" height="15.0" fill="rgb(250,49,42)" rx="2" ry="2" />
<text  x="19.18" y="719.5" ></text>
</g>
<g >
<title>mach_msg (9 samples, 0.19%)</title><rect x="1142.8" y="917" width="2.2" height="15.0" fill="rgb(207,106,25)" rx="2" ry="2" />
<text  x="1145.75" y="927.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::AtomicFlagSet::RunActiveCallbacks() const (10 samples, 0.21%)</title><rect x="339.5" y="837" width="2.5" height="15.0" fill="rgb(235,16,51)" rx="2" ry="2" />
<text  x="342.51" y="847.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (2 samples, 0.04%)</title><rect x="174.5" y="773" width="0.5" height="15.0" fill="rgb(207,66,40)" rx="2" ry="2" />
<text  x="177.51" y="783.5" ></text>
</g>
<g >
<title>std::__Cr::ios_base::~ios_base() (2 samples, 0.04%)</title><rect x="117.6" y="789" width="0.5" height="15.0" fill="rgb(231,114,44)" rx="2" ry="2" />
<text  x="120.61" y="799.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;viz::mojom::CompositorFrameDataView, viz::CompositorFrame&gt;::Serialize(viz::CompositorFrame&amp;, mojo::internal::Buffer*, viz::mojom::internal::CompositorFrame_Data::BufferWriter*, mojo::internal::SerializationContext*) (6 samples, 0.13%)</title><rect x="1041.8" y="629" width="1.5" height="15.0" fill="rgb(207,162,31)" rx="2" ry="2" />
<text  x="1044.82" y="639.5" ></text>
</g>
<g >
<title>blink::TaskRunnerTimer&lt;blink::HTMLMediaElement, true&gt;::CanFire() const (1 samples, 0.02%)</title><rect x="20.1" y="645" width="0.3" height="15.0" fill="rgb(240,5,18)" rx="2" ry="2" />
<text  x="23.14" y="655.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="332.8" y="821" width="0.3" height="15.0" fill="rgb(222,123,38)" rx="2" ry="2" />
<text  x="335.83" y="831.5" ></text>
</g>
<g >
<title>vp8_cal_sad (4 samples, 0.08%)</title><rect x="600.0" y="677" width="1.0" height="15.0" fill="rgb(237,148,47)" rx="2" ry="2" />
<text  x="603.00" y="687.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="1032.9" y="661" width="0.3" height="15.0" fill="rgb(232,59,21)" rx="2" ry="2" />
<text  x="1035.91" y="671.5" ></text>
</g>
<g >
<title>IOSurfaceClientLock (2 samples, 0.04%)</title><rect x="58.5" y="901" width="0.5" height="15.0" fill="rgb(208,186,0)" rx="2" ry="2" />
<text  x="61.49" y="911.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1155.9" y="789" width="0.2" height="15.0" fill="rgb(218,4,33)" rx="2" ry="2" />
<text  x="1158.86" y="799.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;base::internal::Task&gt;::front() (1 samples, 0.02%)</title><rect x="1022.8" y="917" width="0.2" height="15.0" fill="rgb(236,193,41)" rx="2" ry="2" />
<text  x="1025.77" y="927.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="815.5" y="661" width="0.2" height="15.0" fill="rgb(211,159,2)" rx="2" ry="2" />
<text  x="818.47" y="671.5" ></text>
</g>
<g >
<title>base::internal::WeakPtrBase::~WeakPtrBase() (1 samples, 0.02%)</title><rect x="133.2" y="693" width="0.2" height="15.0" fill="rgb(216,24,6)" rx="2" ry="2" />
<text  x="136.19" y="703.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (597 samples, 12.52%)</title><rect x="214.3" y="1013" width="147.7" height="15.0" fill="rgb(250,61,40)" rx="2" ry="2" />
<text  x="217.34" y="1023.5" >base::(anonymous n..</text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="815.5" y="709" width="0.2" height="15.0" fill="rgb(218,164,49)" rx="2" ry="2" />
<text  x="818.47" y="719.5" ></text>
</g>
<g >
<title>yv12_extend_frame_left_right_c (1 samples, 0.02%)</title><rect x="681.9" y="709" width="0.2" height="15.0" fill="rgb(210,173,1)" rx="2" ry="2" />
<text  x="684.88" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::GetAddQueueTimeToTasks() (1 samples, 0.02%)</title><rect x="1053.4" y="421" width="0.3" height="15.0" fill="rgb(221,133,11)" rx="2" ry="2" />
<text  x="1056.45" y="431.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="33.5" y="645" width="0.2" height="15.0" fill="rgb(229,56,15)" rx="2" ry="2" />
<text  x="36.50" y="655.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (1 samples, 0.02%)</title><rect x="652.7" y="757" width="0.2" height="15.0" fill="rgb(210,141,21)" rx="2" ry="2" />
<text  x="655.69" y="767.5" ></text>
</g>
<g >
<title>cricket::Connection::OnReadPacket(char const*, unsigned long, long long) (10 samples, 0.21%)</title><rect x="225.2" y="661" width="2.5" height="15.0" fill="rgb(245,147,13)" rx="2" ry="2" />
<text  x="228.22" y="671.5" ></text>
</g>
<g >
<title>srtp_unprotect_mki (6 samples, 0.13%)</title><rect x="307.1" y="517" width="1.5" height="15.0" fill="rgb(226,15,9)" rx="2" ry="2" />
<text  x="310.10" y="527.5" ></text>
</g>
<g >
<title>MojoAppendMessageDataImpl (4 samples, 0.08%)</title><rect x="251.2" y="613" width="1.0" height="15.0" fill="rgb(218,43,11)" rx="2" ry="2" />
<text  x="254.19" y="623.5" ></text>
</g>
<g >
<title>void base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt; &gt;::ForwardOnce&lt;&gt;() (8 samples, 0.17%)</title><rect x="1067.1" y="869" width="1.9" height="15.0" fill="rgb(232,111,47)" rx="2" ry="2" />
<text  x="1070.05" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::MaybeAdjustTaskDelay(base::sequence_manager::internal::PostedTask*, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="206.4" y="725" width="0.3" height="15.0" fill="rgb(229,205,5)" rx="2" ry="2" />
<text  x="209.42" y="735.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="1006.4" y="917" width="0.3" height="15.0" fill="rgb(254,70,15)" rx="2" ry="2" />
<text  x="1009.44" y="927.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::IsCancelled() const (1 samples, 0.02%)</title><rect x="190.1" y="805" width="0.2" height="15.0" fill="rgb(215,147,37)" rx="2" ry="2" />
<text  x="193.09" y="815.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;viz::ClientResourceProvider::PrepareSendToParent(std::__Cr::vector&lt;unsigned int, std::__Cr::allocator&lt;unsigned int&gt; &gt; const&amp;, std::__Cr::vector&lt;viz::TransferableResource, std::__Cr::allocator&lt;viz::TransferableResource&gt; &gt;*, viz::RasterContextProvider*)::$_1, scoped_refptr&lt;viz::RasterContextProvider&gt; &gt;, void (std::__Cr::vector&lt;signed char*, std::__Cr::allocator&lt;signed char*&gt; &gt;*)&gt;::RunOnce(base::internal::BindStateBase*, std::__Cr::vector&lt;signed char*, std::__Cr::allocator&lt;signed char*&gt; &gt;*) (18 samples, 0.38%)</title><rect x="1033.9" y="597" width="4.5" height="15.0" fill="rgb(235,146,28)" rx="2" ry="2" />
<text  x="1036.90" y="607.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (7 samples, 0.15%)</title><rect x="1046.8" y="533" width="1.7" height="15.0" fill="rgb(225,225,7)" rx="2" ry="2" />
<text  x="1049.77" y="543.5" ></text>
</g>
<g >
<title>vp8_receive_raw_frame (5 samples, 0.10%)</title><rect x="814.0" y="757" width="1.2" height="15.0" fill="rgb(240,147,54)" rx="2" ry="2" />
<text  x="816.98" y="767.5" ></text>
</g>
<g >
<title>blink::MediaStreamAudioDeliverer&lt;blink::MediaStreamAudioTrack&gt;::OnData(media::AudioBus const&amp;, base::TimeTicks) (28 samples, 0.59%)</title><rect x="1079.9" y="965" width="6.9" height="15.0" fill="rgb(206,156,27)" rx="2" ry="2" />
<text  x="1082.92" y="975.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="330.6" y="821" width="0.3" height="15.0" fill="rgb(236,5,50)" rx="2" ry="2" />
<text  x="333.60" y="831.5" ></text>
</g>
<g >
<title>base::internal::Sequence::Transaction::PushTask(base::internal::Task) (1 samples, 0.02%)</title><rect x="124.3" y="709" width="0.2" height="15.0" fill="rgb(213,2,8)" rx="2" ry="2" />
<text  x="127.29" y="719.5" ></text>
</g>
<g >
<title>mach_msg_trap (27 samples, 0.57%)</title><rect x="216.1" y="869" width="6.6" height="15.0" fill="rgb(213,99,13)" rx="2" ry="2" />
<text  x="219.07" y="879.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="530.7" y="693" width="0.3" height="15.0" fill="rgb(232,214,34)" rx="2" ry="2" />
<text  x="533.73" y="703.5" ></text>
</g>
<g >
<title>blink::LayoutImage::Paint(blink::PaintInfo const&amp;) const (1 samples, 0.02%)</title><rect x="26.8" y="245" width="0.3" height="15.0" fill="rgb(244,71,7)" rx="2" ry="2" />
<text  x="29.82" y="255.5" ></text>
</g>
<g >
<title>mojo::core::ports::(anonymous namespace)::UpdateTLS(mojo::core::ports::PortLocker*, mojo::core::ports::PortLocker*) (1 samples, 0.02%)</title><rect x="142.1" y="597" width="0.2" height="15.0" fill="rgb(243,46,6)" rx="2" ry="2" />
<text  x="145.10" y="607.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (1 samples, 0.02%)</title><rect x="1027.5" y="901" width="0.2" height="15.0" fill="rgb(231,12,1)" rx="2" ry="2" />
<text  x="1030.47" y="911.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::internal::PriorityQueue::TaskSourceAndSortKey&gt;::FillHole(unsigned long, base::internal::PriorityQueue::TaskSourceAndSortKey&amp;&amp;) (1 samples, 0.02%)</title><rect x="276.9" y="565" width="0.3" height="15.0" fill="rgb(227,208,27)" rx="2" ry="2" />
<text  x="279.92" y="575.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::UpdateCrossThreadQueueStateLocked() (3 samples, 0.06%)</title><rect x="190.3" y="805" width="0.8" height="15.0" fill="rgb(230,171,19)" rx="2" ry="2" />
<text  x="193.34" y="815.5" ></text>
</g>
<g >
<title>webrtc::internal::Call::DeliverPacket(webrtc::MediaType, rtc::CopyOnWriteBuffer, long long) (69 samples, 1.45%)</title><rect x="256.4" y="773" width="17.1" height="15.0" fill="rgb(244,196,54)" rx="2" ry="2" />
<text  x="259.39" y="783.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbh_sse2 (1 samples, 0.02%)</title><rect x="988.9" y="693" width="0.2" height="15.0" fill="rgb(208,41,22)" rx="2" ry="2" />
<text  x="991.88" y="703.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, void*&gt;*, long&gt;, bool&gt; std::__Cr::__tree&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__map_value_compare&lt;int, std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::less&lt;int&gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt; &gt; &gt;::__emplace_unique_key_args&lt;int, std::__Cr::pair&lt;int, rtc::Message&gt; &gt;(int const&amp;, std::__Cr::pair&lt;int, rtc::Message&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="1155.6" y="837" width="0.3" height="15.0" fill="rgb(230,127,49)" rx="2" ry="2" />
<text  x="1158.61" y="847.5" ></text>
</g>
<g >
<title>mojo::Message::CreateFromMessageHandle(mojo::ScopedHandleBase&lt;mojo::MessageHandle&gt;*) (1 samples, 0.02%)</title><rect x="325.9" y="773" width="0.3" height="15.0" fill="rgb(252,69,4)" rx="2" ry="2" />
<text  x="328.90" y="783.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (1 samples, 0.02%)</title><rect x="699.0" y="901" width="0.2" height="15.0" fill="rgb(224,81,4)" rx="2" ry="2" />
<text  x="701.95" y="911.5" ></text>
</g>
<g >
<title>blink::VideoFrameSubmitter::ReclaimResources(WTF::Vector&lt;viz::ReturnedResource, 0u, WTF::PartitionAllocator&gt; const&amp;) (1 samples, 0.02%)</title><rect x="1052.0" y="661" width="0.2" height="15.0" fill="rgb(218,2,28)" rx="2" ry="2" />
<text  x="1054.96" y="671.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoSender::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (2 samples, 0.04%)</title><rect x="651.9" y="741" width="0.5" height="15.0" fill="rgb(225,102,37)" rx="2" ry="2" />
<text  x="654.95" y="751.5" ></text>
</g>
<g >
<title>cc::Scheduler::ProcessScheduledActions() (5 samples, 0.10%)</title><rect x="1070.3" y="853" width="1.2" height="15.0" fill="rgb(216,85,13)" rx="2" ry="2" />
<text  x="1073.27" y="863.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::is_end() const (1 samples, 0.02%)</title><rect x="33.3" y="661" width="0.2" height="15.0" fill="rgb(237,3,49)" rx="2" ry="2" />
<text  x="36.25" y="671.5" ></text>
</g>
<g >
<title>_platform_strlen (1 samples, 0.02%)</title><rect x="20.6" y="453" width="0.3" height="15.0" fill="rgb(231,96,48)" rx="2" ry="2" />
<text  x="23.64" y="463.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_8::__invoke(_malloc_zone_t*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="1041.8" y="453" width="0.3" height="15.0" fill="rgb(210,83,10)" rx="2" ry="2" />
<text  x="1044.82" y="463.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="85.9" y="789" width="0.3" height="15.0" fill="rgb(245,161,37)" rx="2" ry="2" />
<text  x="88.95" y="799.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="34.5" y="613" width="0.2" height="15.0" fill="rgb(219,186,36)" rx="2" ry="2" />
<text  x="37.49" y="623.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_half_loop (2 samples, 0.04%)</title><rect x="428.1" y="661" width="0.5" height="15.0" fill="rgb(214,54,53)" rx="2" ry="2" />
<text  x="431.07" y="671.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="276.7" y="565" width="0.2" height="15.0" fill="rgb(254,208,16)" rx="2" ry="2" />
<text  x="279.68" y="575.5" ></text>
</g>
<g >
<title>base::internal::RegisteredTaskSource::~RegisteredTaskSource() (1 samples, 0.02%)</title><rect x="123.8" y="709" width="0.2" height="15.0" fill="rgb(234,226,1)" rx="2" ry="2" />
<text  x="126.79" y="719.5" ></text>
</g>
<g >
<title>_pthread_start (8 samples, 0.17%)</title><rect x="52.3" y="1045" width="2.0" height="15.0" fill="rgb(235,84,28)" rx="2" ry="2" />
<text  x="55.30" y="1055.5" ></text>
</g>
<g >
<title>vp8_decode_frame (96 samples, 2.01%)</title><rect x="968.3" y="725" width="23.8" height="15.0" fill="rgb(207,80,24)" rx="2" ry="2" />
<text  x="971.35" y="735.5" >v..</text>
</g>
<g >
<title>vpx_variance16x16_avx2 (1 samples, 0.02%)</title><rect x="402.3" y="661" width="0.3" height="15.0" fill="rgb(233,80,5)" rx="2" ry="2" />
<text  x="405.34" y="671.5" ></text>
</g>
<g >
<title>rtc::SystemTimeNanos() (1 samples, 0.02%)</title><rect x="691.3" y="757" width="0.2" height="15.0" fill="rgb(235,35,49)" rx="2" ry="2" />
<text  x="694.28" y="767.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="377.6" y="869" width="0.3" height="15.0" fill="rgb(248,163,15)" rx="2" ry="2" />
<text  x="380.61" y="879.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (2 samples, 0.04%)</title><rect x="226.0" y="501" width="0.5" height="15.0" fill="rgb(216,20,21)" rx="2" ry="2" />
<text  x="228.96" y="511.5" ></text>
</g>
<g >
<title>tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="254.2" y="517" width="0.2" height="15.0" fill="rgb(216,227,2)" rx="2" ry="2" />
<text  x="257.16" y="527.5" ></text>
</g>
<g >
<title>vp8_short_inv_walsh4x4_sse2 (1 samples, 0.02%)</title><rect x="783.6" y="693" width="0.2" height="15.0" fill="rgb(241,63,45)" rx="2" ry="2" />
<text  x="786.56" y="703.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="15.7" y="629" width="0.2" height="15.0" fill="rgb(233,124,6)" rx="2" ry="2" />
<text  x="18.69" y="639.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::internal::VideoSendStreamImpl::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*)::$_6&amp;&gt;::Run() (1 samples, 0.02%)</title><rect x="683.1" y="853" width="0.3" height="15.0" fill="rgb(229,163,10)" rx="2" ry="2" />
<text  x="686.12" y="863.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="298.4" y="613" width="0.3" height="15.0" fill="rgb(230,92,52)" rx="2" ry="2" />
<text  x="301.44" y="623.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="1033.2" y="645" width="0.2" height="15.0" fill="rgb(237,39,32)" rx="2" ry="2" />
<text  x="1036.16" y="655.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="272.7" y="533" width="0.5" height="15.0" fill="rgb(224,170,35)" rx="2" ry="2" />
<text  x="275.72" y="543.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="277.2" y="533" width="0.5" height="15.0" fill="rgb(221,57,14)" rx="2" ry="2" />
<text  x="280.17" y="543.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="359.5" y="885" width="0.3" height="15.0" fill="rgb(207,216,53)" rx="2" ry="2" />
<text  x="362.55" y="895.5" ></text>
</g>
<g >
<title>scheduling_metrics::TotalDurationMetricReporter::RecordAdditionalDuration(base::TimeDelta) (1 samples, 0.02%)</title><rect x="36.7" y="613" width="0.3" height="15.0" fill="rgb(232,23,40)" rx="2" ry="2" />
<text  x="39.72" y="623.5" ></text>
</g>
<g >
<title>void blink::(anonymous namespace)::SetDebugName&lt;blink::TransformPaintPropertyNode&gt;(blink::TransformPaintPropertyNode const*, WTF::String const&amp;, blink::LayoutObject const&amp;) (1 samples, 0.02%)</title><rect x="28.8" y="421" width="0.2" height="15.0" fill="rgb(238,127,31)" rx="2" ry="2" />
<text  x="31.80" y="431.5" ></text>
</g>
<g >
<title>webrtc::video_coding::PacketBuffer::FindFrames(unsigned short) (3 samples, 0.06%)</title><rect x="268.0" y="597" width="0.8" height="15.0" fill="rgb(246,156,42)" rx="2" ry="2" />
<text  x="271.02" y="607.5" ></text>
</g>
<g >
<title>mojo::internal::ArraySerializer&lt;mojo::ArrayDataView&lt;signed char&gt;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt;, mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; &gt;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt;, false&gt;, void&gt;::DeserializeElements(mojo::internal::Array_Data&lt;signed char&gt;*, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt;*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="312.1" y="661" width="0.2" height="15.0" fill="rgb(228,22,17)" rx="2" ry="2" />
<text  x="315.05" y="671.5" ></text>
</g>
<g >
<title>srtp_protect_mki (7 samples, 0.15%)</title><rect x="236.8" y="741" width="1.8" height="15.0" fill="rgb(217,200,13)" rx="2" ry="2" />
<text  x="239.85" y="751.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="230.7" y="821" width="0.2" height="15.0" fill="rgb(217,157,25)" rx="2" ry="2" />
<text  x="233.66" y="831.5" ></text>
</g>
<g >
<title>vp8_denoiser_filter_uv_sse2 (5 samples, 0.10%)</title><rect x="604.7" y="661" width="1.2" height="15.0" fill="rgb(242,118,40)" rx="2" ry="2" />
<text  x="607.70" y="671.5" ></text>
</g>
<g >
<title>content::WebRtcAudioSink::DeliverRebufferedAudio(media::AudioBus const&amp;, int) (19 samples, 0.40%)</title><rect x="1082.1" y="917" width="4.7" height="15.0" fill="rgb(246,199,22)" rx="2" ry="2" />
<text  x="1085.14" y="927.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::~RtpPacket() (1 samples, 0.02%)</title><rect x="1161.8" y="917" width="0.2" height="15.0" fill="rgb(209,8,9)" rx="2" ry="2" />
<text  x="1164.80" y="927.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="246.0" y="437" width="0.2" height="15.0" fill="rgb(229,156,15)" rx="2" ry="2" />
<text  x="249.00" y="447.5" ></text>
</g>
<g >
<title>_pthread_mutex_unlock_init_slow (1 samples, 0.02%)</title><rect x="238.6" y="709" width="0.2" height="15.0" fill="rgb(206,106,15)" rx="2" ry="2" />
<text  x="241.58" y="719.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::Release() const (1 samples, 0.02%)</title><rect x="1067.8" y="741" width="0.2" height="15.0" fill="rgb(226,19,46)" rx="2" ry="2" />
<text  x="1070.79" y="751.5" ></text>
</g>
<g >
<title>mojo::Connector::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="1068.3" y="693" width="0.2" height="15.0" fill="rgb(216,38,1)" rx="2" ry="2" />
<text  x="1071.29" y="703.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="651.7" y="645" width="0.2" height="15.0" fill="rgb(206,10,22)" rx="2" ry="2" />
<text  x="654.70" y="655.5" ></text>
</g>
<g >
<title>non-virtual thunk to webrtc::internal::AudioSendStream::OnPacketAdded(unsigned int, unsigned short) (2 samples, 0.04%)</title><rect x="1146.7" y="869" width="0.5" height="15.0" fill="rgb(217,85,37)" rx="2" ry="2" />
<text  x="1149.71" y="879.5" ></text>
</g>
<g >
<title>vp8_build_intra_predictors_mby_s (1 samples, 0.02%)</title><rect x="501.5" y="709" width="0.3" height="15.0" fill="rgb(223,213,53)" rx="2" ry="2" />
<text  x="504.54" y="719.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs_bias (3 samples, 0.06%)</title><rect x="771.2" y="677" width="0.7" height="15.0" fill="rgb(245,82,50)" rx="2" ry="2" />
<text  x="774.19" y="687.5" ></text>
</g>
<g >
<title>_pthread_mutex_lock_init_slow (1 samples, 0.02%)</title><rect x="1177.9" y="917" width="0.2" height="15.0" fill="rgb(240,103,40)" rx="2" ry="2" />
<text  x="1180.88" y="927.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="327.9" y="805" width="0.2" height="15.0" fill="rgb(216,108,8)" rx="2" ry="2" />
<text  x="330.88" y="815.5" ></text>
</g>
<g >
<title>service_manager::Main(service_manager::MainParams const&amp;) (171 samples, 3.58%)</title><rect x="10.0" y="997" width="42.3" height="15.0" fill="rgb(206,91,42)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" >ser..</text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1068.0" y="725" width="0.3" height="15.0" fill="rgb(228,67,34)" rx="2" ry="2" />
<text  x="1071.04" y="735.5" ></text>
</g>
<g >
<title>blink::GraphicsLayerUpdater::UpdateRecursive(blink::PaintLayer&amp;, blink::GraphicsLayerUpdater::UpdateType, blink::GraphicsLayerUpdater::UpdateContext&amp;, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (4 samples, 0.08%)</title><rect x="25.6" y="421" width="1.0" height="15.0" fill="rgb(217,134,41)" rx="2" ry="2" />
<text  x="28.58" y="431.5" ></text>
</g>
<g >
<title>blink::CompositingInputsUpdater::Update() (1 samples, 0.02%)</title><rect x="25.3" y="469" width="0.3" height="15.0" fill="rgb(237,138,34)" rx="2" ry="2" />
<text  x="28.34" y="479.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWait(base::TimeDelta const&amp;) (25 samples, 0.52%)</title><rect x="1183.1" y="949" width="6.2" height="15.0" fill="rgb(231,84,5)" rx="2" ry="2" />
<text  x="1186.07" y="959.5" ></text>
</g>
<g >
<title>webrtc::RtpDemuxer::ResolveSink(webrtc::RtpPacketReceived const&amp;) (1 samples, 0.02%)</title><rect x="309.8" y="501" width="0.3" height="15.0" fill="rgb(234,158,36)" rx="2" ry="2" />
<text  x="312.82" y="511.5" ></text>
</g>
<g >
<title>cc::PaintImage::PaintImage() (1 samples, 0.02%)</title><rect x="29.3" y="645" width="0.2" height="15.0" fill="rgb(245,85,19)" rx="2" ry="2" />
<text  x="32.30" y="655.5" ></text>
</g>
<g >
<title>base::  0x644a07 (15 samples, 0.31%)</title><rect x="59.0" y="1077" width="3.7" height="15.0" fill="rgb(206,74,43)" rx="2" ry="2" />
<text  x="61.98" y="1087.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="91.6" y="869" width="0.3" height="15.0" fill="rgb(251,9,31)" rx="2" ry="2" />
<text  x="94.64" y="879.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::MaybeScheduleAdjustMaxTasksLockRequired(base::internal::ThreadGroupImpl::ScopedWorkersExecutor*) (1 samples, 0.02%)</title><rect x="698.0" y="933" width="0.2" height="15.0" fill="rgb(248,63,23)" rx="2" ry="2" />
<text  x="700.96" y="943.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="235.6" y="549" width="0.3" height="15.0" fill="rgb(233,28,4)" rx="2" ry="2" />
<text  x="238.61" y="559.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintFragmentWithPhase(blink::PaintPhase, blink::PaintLayerFragment const&amp;, blink::GraphicsContext&amp;, blink::ClipRect const&amp;, blink::PaintLayerPaintingInfo const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="26.8" y="261" width="0.3" height="15.0" fill="rgb(233,79,46)" rx="2" ry="2" />
<text  x="29.82" y="271.5" ></text>
</g>
<g >
<title>IOConnectCallMethod (2 samples, 0.04%)</title><rect x="58.5" y="885" width="0.5" height="15.0" fill="rgb(236,202,53)" rx="2" ry="2" />
<text  x="61.49" y="895.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="206.2" y="789" width="0.2" height="15.0" fill="rgb(205,8,25)" rx="2" ry="2" />
<text  x="209.17" y="799.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (69 samples, 1.45%)</title><rect x="70.1" y="1013" width="17.1" height="15.0" fill="rgb(248,81,13)" rx="2" ry="2" />
<text  x="73.11" y="1023.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs_bias (5 samples, 0.10%)</title><rect x="923.8" y="677" width="1.3" height="15.0" fill="rgb(237,44,17)" rx="2" ry="2" />
<text  x="926.82" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="23.4" y="613" width="0.2" height="15.0" fill="rgb(207,21,11)" rx="2" ry="2" />
<text  x="26.36" y="623.5" ></text>
</g>
<g >
<title>read_mvcomponent (2 samples, 0.04%)</title><rect x="676.4" y="693" width="0.5" height="15.0" fill="rgb(231,201,9)" rx="2" ry="2" />
<text  x="679.44" y="703.5" ></text>
</g>
<g >
<title>webrtc::SequenceCheckerImpl::IsCurrent() const (1 samples, 0.02%)</title><rect x="238.6" y="741" width="0.2" height="15.0" fill="rgb(217,58,25)" rx="2" ry="2" />
<text  x="241.58" y="751.5" ></text>
</g>
<g >
<title>non-virtual thunk to content::LayerTreeView::DidCommit() (2 samples, 0.04%)</title><rect x="23.9" y="629" width="0.4" height="15.0" fill="rgb(239,219,9)" rx="2" ry="2" />
<text  x="26.85" y="639.5" ></text>
</g>
<g >
<title>mach_msg_trap (4 samples, 0.08%)</title><rect x="1046.8" y="373" width="1.0" height="15.0" fill="rgb(233,224,20)" rx="2" ry="2" />
<text  x="1049.77" y="383.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="301.2" y="741" width="0.2" height="15.0" fill="rgb(249,153,1)" rx="2" ry="2" />
<text  x="304.17" y="751.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="284.6" y="485" width="0.2" height="15.0" fill="rgb(248,84,0)" rx="2" ry="2" />
<text  x="287.59" y="495.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::SendChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (2 samples, 0.04%)</title><rect x="1041.1" y="453" width="0.5" height="15.0" fill="rgb(225,183,53)" rx="2" ry="2" />
<text  x="1044.08" y="463.5" ></text>
</g>
<g >
<title>content::WebRtcVideoTrackSource::DeliverFrame(scoped_refptr&lt;media::VideoFrame&gt;, gfx::Rect, long long) (4 samples, 0.08%)</title><rect x="297.9" y="821" width="1.0" height="15.0" fill="rgb(224,156,37)" rx="2" ry="2" />
<text  x="300.95" y="831.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Wait() (2 samples, 0.04%)</title><rect x="1035.6" y="517" width="0.5" height="15.0" fill="rgb(214,13,13)" rx="2" ry="2" />
<text  x="1038.64" y="527.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (2 samples, 0.04%)</title><rect x="299.7" y="821" width="0.5" height="15.0" fill="rgb(236,149,9)" rx="2" ry="2" />
<text  x="302.68" y="831.5" ></text>
</g>
<g >
<title>_pthread_mutex_fairshare_lock_slow (1 samples, 0.02%)</title><rect x="1177.4" y="917" width="0.2" height="15.0" fill="rgb(209,115,25)" rx="2" ry="2" />
<text  x="1180.38" y="927.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1033.2" y="613" width="0.2" height="15.0" fill="rgb(241,200,21)" rx="2" ry="2" />
<text  x="1036.16" y="623.5" ></text>
</g>
<g >
<title>webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;) (21 samples, 0.44%)</title><rect x="1132.1" y="853" width="5.2" height="15.0" fill="rgb(230,184,16)" rx="2" ry="2" />
<text  x="1135.11" y="863.5" ></text>
</g>
<g >
<title>vp8_short_inv_walsh4x4_sse2 (1 samples, 0.02%)</title><rect x="991.1" y="709" width="0.3" height="15.0" fill="rgb(242,174,13)" rx="2" ry="2" />
<text  x="994.11" y="719.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="691.3" y="741" width="0.2" height="15.0" fill="rgb(238,22,33)" rx="2" ry="2" />
<text  x="694.28" y="751.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskBase::Run() (4 samples, 0.08%)</title><rect x="1005.5" y="853" width="0.9" height="15.0" fill="rgb(218,91,47)" rx="2" ry="2" />
<text  x="1008.45" y="863.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="283.4" y="581" width="0.2" height="15.0" fill="rgb(230,215,1)" rx="2" ry="2" />
<text  x="286.35" y="591.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="317.5" y="405" width="0.2" height="15.0" fill="rgb(205,191,17)" rx="2" ry="2" />
<text  x="320.49" y="415.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (1 samples, 0.02%)</title><rect x="19.9" y="469" width="0.2" height="15.0" fill="rgb(247,94,6)" rx="2" ry="2" />
<text  x="22.90" y="479.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (10 samples, 0.21%)</title><rect x="715.3" y="901" width="2.5" height="15.0" fill="rgb(254,127,6)" rx="2" ry="2" />
<text  x="718.28" y="911.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbh_sse2 (1 samples, 0.02%)</title><rect x="942.4" y="709" width="0.2" height="15.0" fill="rgb(242,181,40)" rx="2" ry="2" />
<text  x="945.37" y="719.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendPeerEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (5 samples, 0.10%)</title><rect x="1046.8" y="485" width="1.2" height="15.0" fill="rgb(228,7,45)" rx="2" ry="2" />
<text  x="1049.77" y="495.5" ></text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="377.4" y="885" width="0.2" height="15.0" fill="rgb(233,197,25)" rx="2" ry="2" />
<text  x="380.36" y="895.5" ></text>
</g>
<g >
<title>webrtc::AudioVector::CopyTo(unsigned long, unsigned long, short*) const (1 samples, 0.02%)</title><rect x="1128.9" y="757" width="0.2" height="15.0" fill="rgb(224,224,19)" rx="2" ry="2" />
<text  x="1131.90" y="767.5" ></text>
</g>
<g >
<title>vp8_encode_bool (6 samples, 0.13%)</title><rect x="797.9" y="725" width="1.5" height="15.0" fill="rgb(239,142,35)" rx="2" ry="2" />
<text  x="800.90" y="735.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3 (1 samples, 0.02%)</title><rect x="423.4" y="661" width="0.2" height="15.0" fill="rgb(214,204,16)" rx="2" ry="2" />
<text  x="426.37" y="671.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="1041.1" y="373" width="0.5" height="15.0" fill="rgb(211,89,48)" rx="2" ry="2" />
<text  x="1044.08" y="383.5" ></text>
</g>
<g >
<title>base::internal::WorkerThreadStack::Push(base::internal::WorkerThread*) (4 samples, 0.08%)</title><rect x="699.2" y="917" width="1.0" height="15.0" fill="rgb(232,213,22)" rx="2" ry="2" />
<text  x="702.20" y="927.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="1181.6" y="789" width="0.2" height="15.0" fill="rgb(223,167,23)" rx="2" ry="2" />
<text  x="1184.59" y="799.5" ></text>
</g>
<g >
<title>void std::__Cr::__function::__policy_invoker&lt;void (std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;, webrtc::video_coding::FrameBuffer::ReturnReason)&gt;::__call_impl&lt;std::__Cr::__function::__alloc_func&lt;webrtc::internal::VideoReceiveStream::StartNextDecode()::$_4, std::__Cr::allocator&lt;webrtc::internal::VideoReceiveStream::StartNextDecode()::$_4&gt;, void (std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;, webrtc::video_coding::FrameBuffer::ReturnReason)&gt; &gt;(std::__Cr::__function::__policy_storage const*, std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;&amp;&amp;, webrtc::video_coding::FrameBuffer::ReturnReason) (1 samples, 0.02%)</title><rect x="1006.2" y="821" width="0.2" height="15.0" fill="rgb(244,100,44)" rx="2" ry="2" />
<text  x="1009.20" y="831.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::Write(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (1 samples, 0.02%)</title><rect x="236.1" y="437" width="0.3" height="15.0" fill="rgb(227,153,41)" rx="2" ry="2" />
<text  x="239.10" y="447.5" ></text>
</g>
<g >
<title>_platform_memset$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="649.2" y="709" width="0.3" height="15.0" fill="rgb(214,86,15)" rx="2" ry="2" />
<text  x="652.23" y="719.5" ></text>
</g>
<g >
<title>webrtc::ReceiveStatisticsProxy::DataCountersUpdated(webrtc::StreamDataCounters const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="269.5" y="677" width="0.2" height="15.0" fill="rgb(213,56,53)" rx="2" ry="2" />
<text  x="272.50" y="687.5" ></text>
</g>
<g >
<title>thread_start (68 samples, 1.43%)</title><rect x="197.0" y="1061" width="16.8" height="15.0" fill="rgb(233,104,54)" rx="2" ry="2" />
<text  x="200.02" y="1071.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::IsCancelled() const (3 samples, 0.06%)</title><rect x="353.6" y="821" width="0.8" height="15.0" fill="rgb(233,223,18)" rx="2" ry="2" />
<text  x="356.61" y="831.5" ></text>
</g>
<g >
<title>v8_inspector::(anonymous namespace)::V8ValueStringBuilder::append(v8::Local&lt;v8::Value&gt;, unsigned int) (1 samples, 0.02%)</title><rect x="17.9" y="325" width="0.3" height="15.0" fill="rgb(211,45,24)" rx="2" ry="2" />
<text  x="20.92" y="335.5" ></text>
</g>
<g >
<title>cricket::WebRtcVoiceMediaChannel::SendRtp(unsigned char const*, unsigned long, webrtc::PacketOptions const&amp;) (6 samples, 0.13%)</title><rect x="1154.4" y="885" width="1.5" height="15.0" fill="rgb(243,60,49)" rx="2" ry="2" />
<text  x="1157.38" y="895.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="1155.9" y="853" width="0.2" height="15.0" fill="rgb(243,161,41)" rx="2" ry="2" />
<text  x="1158.86" y="863.5" ></text>
</g>
<g >
<title>cc::mojo_embedder::AsyncLayerTreeFrameSink::DidNotProduceFrame(viz::BeginFrameAck const&amp;) (1 samples, 0.02%)</title><rect x="1067.3" y="757" width="0.2" height="15.0" fill="rgb(212,61,13)" rx="2" ry="2" />
<text  x="1070.30" y="767.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="652.2" y="597" width="0.2" height="15.0" fill="rgb(209,222,10)" rx="2" ry="2" />
<text  x="655.20" y="607.5" ></text>
</g>
<g >
<title>__CFRunLoopDoSources0 (134 samples, 2.81%)</title><rect x="13.7" y="837" width="33.2" height="15.0" fill="rgb(247,199,37)" rx="2" ry="2" />
<text  x="16.71" y="847.5" >__..</text>
</g>
<g >
<title>CFArrayGetFirstIndexOfValue (1 samples, 0.02%)</title><rect x="14.2" y="693" width="0.3" height="15.0" fill="rgb(251,154,19)" rx="2" ry="2" />
<text  x="17.21" y="703.5" ></text>
</g>
<g >
<title>viz::mojom::CompositorFrameSinkClientStubDispatch::Accept(viz::mojom::CompositorFrameSinkClient*, mojo::Message*) (4 samples, 0.08%)</title><rect x="1071.8" y="693" width="0.9" height="15.0" fill="rgb(232,57,6)" rx="2" ry="2" />
<text  x="1074.75" y="703.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::SendToNetwork(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType) (2 samples, 0.04%)</title><rect x="816.2" y="693" width="0.5" height="15.0" fill="rgb(231,223,41)" rx="2" ry="2" />
<text  x="819.21" y="703.5" ></text>
</g>
<g >
<title>default_zone_malloc (1 samples, 0.02%)</title><rect x="719.2" y="837" width="0.3" height="15.0" fill="rgb(224,121,8)" rx="2" ry="2" />
<text  x="722.24" y="847.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="1182.3" y="741" width="0.5" height="15.0" fill="rgb(212,136,25)" rx="2" ry="2" />
<text  x="1185.33" y="751.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::EncodeVideoFrame(webrtc::VideoFrame const&amp;, long long) (287 samples, 6.02%)</title><rect x="581.7" y="821" width="71.0" height="15.0" fill="rgb(220,19,13)" rx="2" ry="2" />
<text  x="584.69" y="831.5" >webrtc::..</text>
</g>
<g >
<title>content::P2PSocketClientImpl::DataReceived(net::IPEndPoint const&amp;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&amp;, base::TimeTicks) (10 samples, 0.21%)</title><rect x="225.2" y="709" width="2.5" height="15.0" fill="rgb(236,8,49)" rx="2" ry="2" />
<text  x="228.22" y="719.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="317.7" y="501" width="0.3" height="15.0" fill="rgb(212,138,20)" rx="2" ry="2" />
<text  x="320.74" y="511.5" ></text>
</g>
<g >
<title>ec_dec_icdf (1 samples, 0.02%)</title><rect x="1122.5" y="597" width="0.2" height="15.0" fill="rgb(220,79,0)" rx="2" ry="2" />
<text  x="1125.47" y="607.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="857.5" y="933" width="0.3" height="15.0" fill="rgb(252,163,35)" rx="2" ry="2" />
<text  x="860.52" y="943.5" ></text>
</g>
<g >
<title>mojo::core::Core::ArmTrap(unsigned int, MojoArmTrapOptions const*, unsigned int*, MojoTrapEvent*) (1 samples, 0.02%)</title><rect x="1059.6" y="757" width="0.3" height="15.0" fill="rgb(245,39,18)" rx="2" ry="2" />
<text  x="1062.63" y="767.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (7 samples, 0.15%)</title><rect x="374.6" y="869" width="1.8" height="15.0" fill="rgb(217,178,33)" rx="2" ry="2" />
<text  x="377.64" y="879.5" ></text>
</g>
<g >
<title>vp8_encode_bool (1 samples, 0.02%)</title><rect x="637.4" y="709" width="0.2" height="15.0" fill="rgb(243,134,21)" rx="2" ry="2" />
<text  x="640.35" y="719.5" ></text>
</g>
<g >
<title>mojo::Connector::DispatchMessage(mojo::Message) (1 samples, 0.02%)</title><rect x="1066.8" y="853" width="0.3" height="15.0" fill="rgb(238,125,18)" rx="2" ry="2" />
<text  x="1069.81" y="863.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1112.8" y="853" width="0.3" height="15.0" fill="rgb(206,78,48)" rx="2" ry="2" />
<text  x="1115.82" y="863.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="1052.0" y="645" width="0.2" height="15.0" fill="rgb(221,208,4)" rx="2" ry="2" />
<text  x="1054.96" y="655.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs (1 samples, 0.02%)</title><rect x="615.8" y="661" width="0.3" height="15.0" fill="rgb(249,118,45)" rx="2" ry="2" />
<text  x="618.83" y="671.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1080.9" y="837" width="0.3" height="15.0" fill="rgb(219,224,18)" rx="2" ry="2" />
<text  x="1083.91" y="847.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="1025.7" y="773" width="0.3" height="15.0" fill="rgb(220,69,45)" rx="2" ry="2" />
<text  x="1028.74" y="783.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::GetEncoderInfo() const (1 samples, 0.02%)</title><rect x="722.5" y="789" width="0.2" height="15.0" fill="rgb(227,136,41)" rx="2" ry="2" />
<text  x="725.45" y="799.5" ></text>
</g>
<g >
<title>base::ReadFromFD(int, char*, unsigned long) (11 samples, 0.23%)</title><rect x="1104.9" y="965" width="2.7" height="15.0" fill="rgb(212,3,36)" rx="2" ry="2" />
<text  x="1107.90" y="975.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::Ring::push_back(base::sequence_manager::Task&amp;&amp;) (1 samples, 0.02%)</title><rect x="140.9" y="325" width="0.2" height="15.0" fill="rgb(209,35,4)" rx="2" ry="2" />
<text  x="143.86" y="335.5" ></text>
</g>
<g >
<title>blink::WebViewFrameWidget::UpdateLifecycle(blink::WebWidget::LifecycleUpdate, blink::WebWidget::LifecycleUpdateReason) (17 samples, 0.36%)</title><rect x="25.1" y="629" width="4.2" height="15.0" fill="rgb(253,122,40)" rx="2" ry="2" />
<text  x="28.09" y="639.5" ></text>
</g>
<g >
<title>content::GpuVideoAcceleratorFactoriesImpl::VideoFrameOutputFormat(media::VideoPixelFormat) (4 samples, 0.08%)</title><rect x="201.0" y="821" width="1.0" height="15.0" fill="rgb(218,93,37)" rx="2" ry="2" />
<text  x="203.98" y="831.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (2 samples, 0.04%)</title><rect x="1041.1" y="533" width="0.5" height="15.0" fill="rgb(249,214,36)" rx="2" ry="2" />
<text  x="1044.08" y="543.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="635.4" y="709" width="0.2" height="15.0" fill="rgb(214,226,5)" rx="2" ry="2" />
<text  x="638.38" y="719.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_wake (1 samples, 0.02%)</title><rect x="1072.5" y="309" width="0.2" height="15.0" fill="rgb(231,77,12)" rx="2" ry="2" />
<text  x="1075.49" y="319.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="266.5" y="485" width="0.5" height="15.0" fill="rgb(208,219,8)" rx="2" ry="2" />
<text  x="269.53" y="495.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (6 samples, 0.13%)</title><rect x="76.3" y="821" width="1.5" height="15.0" fill="rgb(237,71,38)" rx="2" ry="2" />
<text  x="79.30" y="831.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (blink::VideoTrackAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), void&gt;::Invoke&lt;void (blink::VideoTrackAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), scoped_refptr&lt;blink::VideoTrackAdapter&gt; const&amp;, scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks&gt;(void (blink::VideoTrackAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), scoped_refptr&lt;blink::VideoTrackAdapter&gt; const&amp;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, base::TimeTicks&amp;&amp;) (10 samples, 0.21%)</title><rect x="138.6" y="549" width="2.5" height="15.0" fill="rgb(219,120,4)" rx="2" ry="2" />
<text  x="141.64" y="559.5" ></text>
</g>
<g >
<title>cricket::SrtpSession::UnprotectRtcp(void*, int, int*) (2 samples, 0.04%)</title><rect x="306.4" y="533" width="0.5" height="15.0" fill="rgb(229,146,36)" rx="2" ry="2" />
<text  x="309.36" y="543.5" ></text>
</g>
<g >
<title>content::P2PSocketClientImpl::DataReceived(net::IPEndPoint const&amp;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&amp;, base::TimeTicks) (30 samples, 0.63%)</title><rect x="304.4" y="661" width="7.4" height="15.0" fill="rgb(208,24,51)" rx="2" ry="2" />
<text  x="307.38" y="671.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="412.2" y="661" width="0.5" height="15.0" fill="rgb(212,152,32)" rx="2" ry="2" />
<text  x="415.24" y="671.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="127.3" y="677" width="0.2" height="15.0" fill="rgb(220,93,27)" rx="2" ry="2" />
<text  x="130.26" y="687.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetPort(mojo::core::ports::PortName const&amp;, mojo::core::ports::PortRef*) (7 samples, 0.15%)</title><rect x="115.4" y="789" width="1.7" height="15.0" fill="rgb(217,56,1)" rx="2" ry="2" />
<text  x="118.38" y="799.5" ></text>
</g>
<g >
<title>_pthread_mutex_fairshare_lock_slow (1 samples, 0.02%)</title><rect x="1130.6" y="821" width="0.3" height="15.0" fill="rgb(215,172,41)" rx="2" ry="2" />
<text  x="1133.63" y="831.5" ></text>
</g>
<g >
<title>network::mojom::internal::P2PSocketClient_DataReceived_Params_Data::Validate(void const*, mojo::internal::ValidationContext*) (2 samples, 0.04%)</title><rect x="319.2" y="677" width="0.5" height="15.0" fill="rgb(211,159,53)" rx="2" ry="2" />
<text  x="322.22" y="687.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="853.8" y="741" width="0.3" height="15.0" fill="rgb(244,76,7)" rx="2" ry="2" />
<text  x="856.81" y="751.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="327.9" y="773" width="0.2" height="15.0" fill="rgb(212,36,54)" rx="2" ry="2" />
<text  x="330.88" y="783.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::MallocImpl(base::allocator::AllocatorDispatch const*, unsigned long, void*) (1 samples, 0.02%)</title><rect x="144.6" y="757" width="0.2" height="15.0" fill="rgb(206,98,43)" rx="2" ry="2" />
<text  x="147.57" y="767.5" ></text>
</g>
<g >
<title>webrtc::RtpStreamReceiverController::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (14 samples, 0.29%)</title><rect x="278.2" y="741" width="3.4" height="15.0" fill="rgb(213,190,17)" rx="2" ry="2" />
<text  x="281.16" y="751.5" ></text>
</g>
<g >
<title>_pthread_body (8 samples, 0.17%)</title><rect x="52.3" y="1029" width="2.0" height="15.0" fill="rgb(208,81,22)" rx="2" ry="2" />
<text  x="55.30" y="1039.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="1084.6" y="725" width="0.5" height="15.0" fill="rgb(239,228,14)" rx="2" ry="2" />
<text  x="1087.62" y="735.5" ></text>
</g>
<g >
<title>webrtc::SyncBuffer::GetNextAudioInterleaved(unsigned long, webrtc::AudioFrame*) (1 samples, 0.02%)</title><rect x="1128.9" y="789" width="0.2" height="15.0" fill="rgb(213,158,22)" rx="2" ry="2" />
<text  x="1131.90" y="799.5" ></text>
</g>
<g >
<title>blink::PaintLayer::SetNeedsCompositingInputsUpdate() (2 samples, 0.04%)</title><rect x="19.2" y="581" width="0.4" height="15.0" fill="rgb(244,163,10)" rx="2" ry="2" />
<text  x="22.15" y="591.5" ></text>
</g>
<g >
<title>rtc::TimeMillis() (1 samples, 0.02%)</title><rect x="551.5" y="805" width="0.3" height="15.0" fill="rgb(218,194,13)" rx="2" ry="2" />
<text  x="554.51" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnTaskPushedToEmptyQueue(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.02%)</title><rect x="210.9" y="789" width="0.2" height="15.0" fill="rgb(227,10,52)" rx="2" ry="2" />
<text  x="213.87" y="799.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (2 samples, 0.04%)</title><rect x="651.5" y="725" width="0.4" height="15.0" fill="rgb(229,155,52)" rx="2" ry="2" />
<text  x="654.45" y="735.5" ></text>
</g>
<g >
<title>webrtc::RateControlSettings::LibvpxVp8MinPixels() const (1 samples, 0.02%)</title><rect x="722.5" y="773" width="0.2" height="15.0" fill="rgb(213,20,5)" rx="2" ry="2" />
<text  x="725.45" y="783.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="1030.7" y="773" width="0.2" height="15.0" fill="rgb(226,18,30)" rx="2" ry="2" />
<text  x="1033.69" y="783.5" ></text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="1026.5" y="885" width="0.2" height="15.0" fill="rgb(226,205,11)" rx="2" ry="2" />
<text  x="1029.48" y="895.5" ></text>
</g>
<g >
<title>write (3 samples, 0.06%)</title><rect x="1103.2" y="933" width="0.7" height="15.0" fill="rgb(240,191,30)" rx="2" ry="2" />
<text  x="1106.17" y="943.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedBase::Release() const (1 samples, 0.02%)</title><rect x="1069.3" y="693" width="0.2" height="15.0" fill="rgb(216,86,13)" rx="2" ry="2" />
<text  x="1072.28" y="703.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="178.7" y="853" width="0.5" height="15.0" fill="rgb(245,196,48)" rx="2" ry="2" />
<text  x="181.71" y="863.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostDelayedTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;, unsigned int) (2 samples, 0.04%)</title><rect x="1005.5" y="837" width="0.4" height="15.0" fill="rgb(205,35,13)" rx="2" ry="2" />
<text  x="1008.45" y="847.5" ></text>
</g>
<g >
<title>webrtc::RoundRobinPacketQueue::Push(int, webrtc::RtpPacketToSend::Type, unsigned int, unsigned short, long long, long long, unsigned long, bool, unsigned long long) (1 samples, 0.02%)</title><rect x="816.2" y="661" width="0.3" height="15.0" fill="rgb(233,55,49)" rx="2" ry="2" />
<text  x="819.21" y="671.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::EndUnusedPeriod() (2 samples, 0.04%)</title><rect x="78.5" y="741" width="0.5" height="15.0" fill="rgb(225,200,11)" rx="2" ry="2" />
<text  x="81.52" y="751.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="268.5" y="549" width="0.3" height="15.0" fill="rgb(211,7,9)" rx="2" ry="2" />
<text  x="271.51" y="559.5" ></text>
</g>
<g >
<title>base::HistogramSamples::IncreaseSumAndCount(long long, int) (1 samples, 0.02%)</title><rect x="558.2" y="885" width="0.2" height="15.0" fill="rgb(245,16,35)" rx="2" ry="2" />
<text  x="561.19" y="895.5" ></text>
</g>
<g >
<title>IPC::MessageT&lt;GpuChannelMsg_Nop_Meta, std::__Cr::tuple&lt;&gt;, std::__Cr::tuple&lt;&gt; &gt;::MessageT(IPC::Routing) (1 samples, 0.02%)</title><rect x="1033.9" y="533" width="0.3" height="15.0" fill="rgb(212,27,7)" rx="2" ry="2" />
<text  x="1036.90" y="543.5" ></text>
</g>
<g >
<title>opus_encode (41 samples, 0.86%)</title><rect x="993.8" y="773" width="10.2" height="15.0" fill="rgb(222,88,35)" rx="2" ry="2" />
<text  x="996.83" y="783.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="228.2" y="597" width="0.2" height="15.0" fill="rgb(234,229,13)" rx="2" ry="2" />
<text  x="231.19" y="607.5" ></text>
</g>
<g >
<title>cc::LayerTreeHost::PaintContent(std::__Cr::vector&lt;scoped_refptr&lt;cc::Layer&gt;, std::__Cr::allocator&lt;scoped_refptr&lt;cc::Layer&gt; &gt; &gt; const&amp;, bool*, bool*) (2 samples, 0.04%)</title><rect x="24.3" y="613" width="0.5" height="15.0" fill="rgb(205,182,24)" rx="2" ry="2" />
<text  x="27.35" y="623.5" ></text>
</g>
<g >
<title>vp8_fast_quantize_b_ssse3 (9 samples, 0.19%)</title><rect x="736.6" y="661" width="2.2" height="15.0" fill="rgb(232,201,40)" rx="2" ry="2" />
<text  x="739.55" y="671.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::~UserMessageImpl() (1 samples, 0.02%)</title><rect x="320.2" y="645" width="0.3" height="15.0" fill="rgb(230,148,36)" rx="2" ry="2" />
<text  x="323.21" y="655.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::~Iter() (1 samples, 0.02%)</title><rect x="187.1" y="821" width="0.3" height="15.0" fill="rgb(248,193,29)" rx="2" ry="2" />
<text  x="190.12" y="831.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TraceQueueSize() const (1 samples, 0.02%)</title><rect x="1151.7" y="757" width="0.2" height="15.0" fill="rgb(237,24,39)" rx="2" ry="2" />
<text  x="1154.66" y="767.5" ></text>
</g>
<g >
<title>IPC::internal::MessagePipeReader::Send(std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt;) (1 samples, 0.02%)</title><rect x="165.8" y="821" width="0.3" height="15.0" fill="rgb(234,141,14)" rx="2" ry="2" />
<text  x="168.85" y="831.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Process() (47 samples, 0.99%)</title><rect x="1178.4" y="981" width="11.6" height="15.0" fill="rgb(227,213,51)" rx="2" ry="2" />
<text  x="1181.37" y="991.5" ></text>
</g>
<g >
<title>blink::MediaControlsImpl::OnTimeUpdate() (5 samples, 0.10%)</title><rect x="20.6" y="565" width="1.3" height="15.0" fill="rgb(250,21,42)" rx="2" ry="2" />
<text  x="23.64" y="575.5" ></text>
</g>
<g >
<title>vp8_pack_bitstream (67 samples, 1.40%)</title><rect x="463.2" y="741" width="16.6" height="15.0" fill="rgb(235,122,25)" rx="2" ry="2" />
<text  x="466.20" y="751.5" ></text>
</g>
<g >
<title>mojo::core::RequestContext::RequestContext() (1 samples, 0.02%)</title><rect x="251.4" y="581" width="0.3" height="15.0" fill="rgb(238,4,54)" rx="2" ry="2" />
<text  x="254.44" y="591.5" ></text>
</g>
<g >
<title>base::SequenceToken::IsValid() const (1 samples, 0.02%)</title><rect x="172.3" y="757" width="0.2" height="15.0" fill="rgb(232,132,41)" rx="2" ry="2" />
<text  x="175.28" y="767.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (3 samples, 0.06%)</title><rect x="880.8" y="821" width="0.7" height="15.0" fill="rgb(232,178,17)" rx="2" ry="2" />
<text  x="883.78" y="831.5" ></text>
</g>
<g >
<title>__CFRunLoopDoObservers (5 samples, 0.10%)</title><rect x="12.5" y="837" width="1.2" height="15.0" fill="rgb(245,7,12)" rx="2" ry="2" />
<text  x="15.47" y="847.5" ></text>
</g>
<g >
<title>viz::CompositorFrameMetadata::~CompositorFrameMetadata() (1 samples, 0.02%)</title><rect x="1068.0" y="741" width="0.3" height="15.0" fill="rgb(247,75,16)" rx="2" ry="2" />
<text  x="1071.04" y="751.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (20 samples, 0.42%)</title><rect x="245.5" y="549" width="5.0" height="15.0" fill="rgb(231,24,9)" rx="2" ry="2" />
<text  x="248.51" y="559.5" ></text>
</g>
<g >
<title>quant_all_bands (8 samples, 0.17%)</title><rect x="1119.2" y="629" width="2.0" height="15.0" fill="rgb(232,142,15)" rx="2" ry="2" />
<text  x="1122.25" y="639.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.02%)</title><rect x="854.8" y="725" width="0.2" height="15.0" fill="rgb(254,120,33)" rx="2" ry="2" />
<text  x="857.80" y="735.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::Ring::front() (1 samples, 0.02%)</title><rect x="339.3" y="821" width="0.2" height="15.0" fill="rgb(245,34,32)" rx="2" ry="2" />
<text  x="342.26" y="831.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="38.9" y="677" width="0.3" height="15.0" fill="rgb(242,223,40)" rx="2" ry="2" />
<text  x="41.94" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (12 samples, 0.25%)</title><rect x="1148.9" y="805" width="3.0" height="15.0" fill="rgb(215,206,15)" rx="2" ry="2" />
<text  x="1151.94" y="815.5" ></text>
</g>
<g >
<title>mach_msg_trap (18 samples, 0.38%)</title><rect x="97.8" y="853" width="4.5" height="15.0" fill="rgb(225,44,31)" rx="2" ry="2" />
<text  x="100.82" y="863.5" ></text>
</g>
<g >
<title>quant_partition (1 samples, 0.02%)</title><rect x="535.9" y="661" width="0.3" height="15.0" fill="rgb(211,130,40)" rx="2" ry="2" />
<text  x="538.93" y="671.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="137.4" y="517" width="0.2" height="15.0" fill="rgb(241,132,17)" rx="2" ry="2" />
<text  x="140.40" y="527.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (gpu::GpuChannelHost::Listener::*)(std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt;, IPC::PendingSyncMsg*), base::internal::UnretainedWrapper&lt;gpu::GpuChannelHost::Listener&gt;, std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt;, std::nullptr_t&gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (14 samples, 0.29%)</title><rect x="168.3" y="869" width="3.5" height="15.0" fill="rgb(233,141,1)" rx="2" ry="2" />
<text  x="171.32" y="879.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="312.1" y="645" width="0.2" height="15.0" fill="rgb(230,98,10)" rx="2" ry="2" />
<text  x="315.05" y="655.5" ></text>
</g>
<g >
<title>rtc::VideoBroadcaster::OnFrame(webrtc::VideoFrame const&amp;) (2 samples, 0.04%)</title><rect x="993.1" y="693" width="0.5" height="15.0" fill="rgb(233,154,43)" rx="2" ry="2" />
<text  x="996.09" y="703.5" ></text>
</g>
<g >
<title>base::internal::WorkerThreadStack::Pop() (3 samples, 0.06%)</title><rect x="1135.6" y="693" width="0.7" height="15.0" fill="rgb(214,143,47)" rx="2" ry="2" />
<text  x="1138.58" y="703.5" ></text>
</g>
<g >
<title>blink::MediaControlTimelineElement::RenderBarSegments() (1 samples, 0.02%)</title><rect x="20.4" y="565" width="0.2" height="15.0" fill="rgb(231,134,29)" rx="2" ry="2" />
<text  x="23.39" y="575.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (4 samples, 0.08%)</title><rect x="1157.3" y="773" width="1.0" height="15.0" fill="rgb(211,0,18)" rx="2" ry="2" />
<text  x="1160.35" y="783.5" ></text>
</g>
<g >
<title>WTF::HashTable&lt;unsigned int, WTF::KeyValuePair&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::IntHash&lt;unsigned int&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;unsigned int&gt;, WTF::HashTraits&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt; &gt;, WTF::HashTraits&lt;unsigned int&gt;, WTF::PartitionAllocator&gt;::Rehash(unsigned int, WTF::KeyValuePair&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;*) (1 samples, 0.02%)</title><rect x="1051.5" y="613" width="0.2" height="15.0" fill="rgb(207,225,27)" rx="2" ry="2" />
<text  x="1054.47" y="623.5" ></text>
</g>
<g >
<title>base::internal::Sequence::BeginTransaction() (1 samples, 0.02%)</title><rect x="298.4" y="661" width="0.3" height="15.0" fill="rgb(245,58,46)" rx="2" ry="2" />
<text  x="301.44" y="671.5" ></text>
</g>
<g >
<title>void base::internal::OptionalStorageBase&lt;base::SequencedTaskRunnerHandle, false&gt;::Init&lt;base::SequencedTaskRunner*&gt;(base::SequencedTaskRunner*&amp;&amp;) (3 samples, 0.06%)</title><rect x="552.8" y="917" width="0.7" height="15.0" fill="rgb(251,47,51)" rx="2" ry="2" />
<text  x="555.75" y="927.5" ></text>
</g>
<g >
<title>cc::PictureLayerImpl::UpdateTiles() (1 samples, 0.02%)</title><rect x="1071.3" y="773" width="0.2" height="15.0" fill="rgb(248,67,26)" rx="2" ry="2" />
<text  x="1074.26" y="783.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetUserData(mojo::core::ports::PortRef const&amp;, scoped_refptr&lt;mojo::core::ports::UserData&gt;*) (4 samples, 0.08%)</title><rect x="114.1" y="773" width="1.0" height="15.0" fill="rgb(248,192,41)" rx="2" ry="2" />
<text  x="117.15" y="783.5" ></text>
</g>
<g >
<title>run_analysis (5 samples, 0.10%)</title><rect x="536.7" y="741" width="1.2" height="15.0" fill="rgb(229,188,53)" rx="2" ry="2" />
<text  x="539.67" y="751.5" ></text>
</g>
<g >
<title>silk_process_NLSFs_FLP (2 samples, 0.04%)</title><rect x="689.3" y="693" width="0.5" height="15.0" fill="rgb(234,45,38)" rx="2" ry="2" />
<text  x="692.30" y="703.5" ></text>
</g>
<g >
<title>webrtc::vcm::VideoReceiver::Decode(webrtc::VCMEncodedFrame const*) (1 samples, 0.02%)</title><rect x="533.7" y="821" width="0.2" height="15.0" fill="rgb(246,214,18)" rx="2" ry="2" />
<text  x="536.70" y="831.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostDelayedTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;, unsigned int) (1 samples, 0.02%)</title><rect x="551.3" y="837" width="0.2" height="15.0" fill="rgb(205,115,17)" rx="2" ry="2" />
<text  x="554.27" y="847.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="130.7" y="677" width="0.3" height="15.0" fill="rgb(226,79,15)" rx="2" ry="2" />
<text  x="133.72" y="687.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="688.6" y="661" width="0.5" height="15.0" fill="rgb(212,132,50)" rx="2" ry="2" />
<text  x="691.56" y="671.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="10.0" y="869" width="0.2" height="15.0" fill="rgb(211,158,29)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="1052.0" y="629" width="0.2" height="15.0" fill="rgb(246,133,1)" rx="2" ry="2" />
<text  x="1054.96" y="639.5" ></text>
</g>
<g >
<title>_platform_memset$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="903.0" y="677" width="0.3" height="15.0" fill="rgb(231,76,49)" rx="2" ry="2" />
<text  x="906.04" y="687.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="650.2" y="693" width="0.3" height="15.0" fill="rgb(207,125,54)" rx="2" ry="2" />
<text  x="653.22" y="703.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="1070.5" y="757" width="0.3" height="15.0" fill="rgb(214,211,22)" rx="2" ry="2" />
<text  x="1073.52" y="767.5" ></text>
</g>
<g >
<title>quant_partition (7 samples, 0.15%)</title><rect x="1119.5" y="597" width="1.7" height="15.0" fill="rgb(237,105,5)" rx="2" ry="2" />
<text  x="1122.50" y="607.5" ></text>
</g>
<g >
<title>mach_msg (7 samples, 0.15%)</title><rect x="79.0" y="725" width="1.8" height="15.0" fill="rgb(224,147,15)" rx="2" ry="2" />
<text  x="82.02" y="735.5" ></text>
</g>
<g >
<title>vp8_loopfilter_frame (19 samples, 0.40%)</title><rect x="458.5" y="741" width="4.7" height="15.0" fill="rgb(233,107,47)" rx="2" ry="2" />
<text  x="461.50" y="751.5" ></text>
</g>
<g >
<title>blink::PaintArtifactCompositor::DecompositeTransforms(blink::PaintArtifact const&amp;) (1 samples, 0.02%)</title><rect x="27.1" y="485" width="0.2" height="15.0" fill="rgb(205,226,1)" rx="2" ry="2" />
<text  x="30.07" y="495.5" ></text>
</g>
<g >
<title>webrtc::RemoteEstimatorProxy::OnPacketArrival(unsigned short, long long, absl::optional&lt;webrtc::FeedbackRequest&gt;) (5 samples, 0.10%)</title><rect x="270.0" y="709" width="1.2" height="15.0" fill="rgb(216,55,41)" rx="2" ry="2" />
<text  x="273.00" y="719.5" ></text>
</g>
<g >
<title>content::WebRtcAudioDeviceImpl::RenderData(media::AudioBus*, int, int, base::TimeDelta*) (123 samples, 2.58%)</title><rect x="1108.9" y="933" width="30.4" height="15.0" fill="rgb(228,209,23)" rx="2" ry="2" />
<text  x="1111.86" y="943.5" >co..</text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (2 samples, 0.04%)</title><rect x="267.0" y="469" width="0.5" height="15.0" fill="rgb(227,62,48)" rx="2" ry="2" />
<text  x="270.03" y="479.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::SelectWorkQueueToService() (2 samples, 0.04%)</title><rect x="189.4" y="837" width="0.4" height="15.0" fill="rgb(216,198,8)" rx="2" ry="2" />
<text  x="192.35" y="847.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::ScopedSetIpcHash::~ScopedSetIpcHash() (1 samples, 0.02%)</title><rect x="136.4" y="565" width="0.3" height="15.0" fill="rgb(228,38,39)" rx="2" ry="2" />
<text  x="139.41" y="575.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="574.3" y="837" width="0.5" height="15.0" fill="rgb(210,63,46)" rx="2" ry="2" />
<text  x="577.27" y="847.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="348.4" y="789" width="0.3" height="15.0" fill="rgb(228,104,50)" rx="2" ry="2" />
<text  x="351.42" y="799.5" ></text>
</g>
<g >
<title>exp_rotation (1 samples, 0.02%)</title><rect x="1120.0" y="565" width="0.2" height="15.0" fill="rgb(243,150,41)" rx="2" ry="2" />
<text  x="1122.99" y="575.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="264.8" y="549" width="0.2" height="15.0" fill="rgb(213,63,8)" rx="2" ry="2" />
<text  x="267.80" y="559.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_nonhalf_y_nonhalf (1 samples, 0.02%)</title><rect x="920.1" y="661" width="0.3" height="15.0" fill="rgb(234,38,2)" rx="2" ry="2" />
<text  x="923.11" y="671.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="303.6" y="677" width="0.3" height="15.0" fill="rgb(232,172,19)" rx="2" ry="2" />
<text  x="306.64" y="687.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (1 samples, 0.02%)</title><rect x="677.7" y="693" width="0.2" height="15.0" fill="rgb(232,176,7)" rx="2" ry="2" />
<text  x="680.68" y="703.5" ></text>
</g>
<g >
<title>fcntl (4 samples, 0.08%)</title><rect x="1103.9" y="965" width="1.0" height="15.0" fill="rgb(205,64,37)" rx="2" ry="2" />
<text  x="1106.91" y="975.5" ></text>
</g>
<g >
<title>+[NSAutoreleasePool allocWithZone:] (1 samples, 0.02%)</title><rect x="1065.3" y="933" width="0.3" height="15.0" fill="rgb(244,124,12)" rx="2" ry="2" />
<text  x="1068.32" y="943.5" ></text>
</g>
<g >
<title>webrtc::GoogCcNetworkController::OnProcessInterval(webrtc::ProcessInterval) (1 samples, 0.02%)</title><rect x="1005.9" y="805" width="0.3" height="15.0" fill="rgb(225,215,27)" rx="2" ry="2" />
<text  x="1008.95" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeTaskFromWorkQueue() (16 samples, 0.34%)</title><rect x="354.4" y="837" width="3.9" height="15.0" fill="rgb(230,71,28)" rx="2" ry="2" />
<text  x="357.35" y="847.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="1009.2" y="933" width="0.2" height="15.0" fill="rgb(248,40,43)" rx="2" ry="2" />
<text  x="1012.17" y="943.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (3 samples, 0.06%)</title><rect x="717.0" y="789" width="0.8" height="15.0" fill="rgb(241,111,31)" rx="2" ry="2" />
<text  x="720.01" y="799.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="110.2" y="709" width="0.2" height="15.0" fill="rgb(224,204,13)" rx="2" ry="2" />
<text  x="113.19" y="719.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker  0x659344 (1 samples, 0.02%)</title><rect x="1020.3" y="1077" width="0.2" height="15.0" fill="rgb(235,4,51)" rx="2" ry="2" />
<text  x="1023.30" y="1087.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="188.1" y="789" width="0.3" height="15.0" fill="rgb(247,48,6)" rx="2" ry="2" />
<text  x="191.11" y="799.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (1 samples, 0.02%)</title><rect x="35.0" y="597" width="0.2" height="15.0" fill="rgb(223,46,52)" rx="2" ry="2" />
<text  x="37.99" y="607.5" ></text>
</g>
<g >
<title>webrtc::SyncBuffer::PushBack(webrtc::AudioMultiVector const&amp;) (1 samples, 0.02%)</title><rect x="1129.1" y="789" width="0.3" height="15.0" fill="rgb(231,55,46)" rx="2" ry="2" />
<text  x="1132.14" y="799.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoSomeWork() (1 samples, 0.02%)</title><rect x="361.0" y="917" width="0.3" height="15.0" fill="rgb(248,101,37)" rx="2" ry="2" />
<text  x="364.03" y="927.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::~Transaction() (1 samples, 0.02%)</title><rect x="257.9" y="597" width="0.2" height="15.0" fill="rgb(222,214,52)" rx="2" ry="2" />
<text  x="260.87" y="607.5" ></text>
</g>
<g >
<title>vpx_variance16x16_avx2 (5 samples, 0.10%)</title><rect x="406.1" y="661" width="1.2" height="15.0" fill="rgb(220,172,32)" rx="2" ry="2" />
<text  x="409.05" y="671.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="555.2" y="949" width="0.3" height="15.0" fill="rgb(212,25,49)" rx="2" ry="2" />
<text  x="558.22" y="959.5" ></text>
</g>
<g >
<title>cricket::Port::GetConnection(rtc::SocketAddress const&amp;) (1 samples, 0.02%)</title><rect x="311.6" y="597" width="0.2" height="15.0" fill="rgb(233,30,44)" rx="2" ry="2" />
<text  x="314.56" y="607.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::WriteMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (22 samples, 0.46%)</title><rect x="245.0" y="565" width="5.5" height="15.0" fill="rgb(218,179,48)" rx="2" ry="2" />
<text  x="248.01" y="575.5" ></text>
</g>
<g >
<title>gpu::GpuMemoryBufferImplIOSurface::Unmap() (1 samples, 0.02%)</title><rect x="61.2" y="853" width="0.3" height="15.0" fill="rgb(244,186,29)" rx="2" ry="2" />
<text  x="64.21" y="863.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="1044.0" y="629" width="0.3" height="15.0" fill="rgb(236,143,35)" rx="2" ry="2" />
<text  x="1047.05" y="639.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (2 samples, 0.04%)</title><rect x="391.2" y="661" width="0.5" height="15.0" fill="rgb(228,159,45)" rx="2" ry="2" />
<text  x="394.21" y="671.5" ></text>
</g>
<g >
<title>vp8_denoiser_filter_uv_sse2 (3 samples, 0.06%)</title><rect x="757.1" y="661" width="0.7" height="15.0" fill="rgb(231,76,48)" rx="2" ry="2" />
<text  x="760.09" y="671.5" ></text>
</g>
<g >
<title>cricket::BaseChannel::OnMessage(rtc::Message*) (93 samples, 1.95%)</title><rect x="232.6" y="821" width="23.0" height="15.0" fill="rgb(216,31,36)" rx="2" ry="2" />
<text  x="235.64" y="831.5" >c..</text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) (9 samples, 0.19%)</title><rect x="133.9" y="645" width="2.3" height="15.0" fill="rgb(229,33,48)" rx="2" ry="2" />
<text  x="136.94" y="655.5" ></text>
</g>
<g >
<title>mojo::core::Channel::Message::ExtendPayload(unsigned long) (1 samples, 0.02%)</title><rect x="1041.8" y="533" width="0.3" height="15.0" fill="rgb(211,114,16)" rx="2" ry="2" />
<text  x="1044.82" y="543.5" ></text>
</g>
<g >
<title>vp8_loop_filter_vertical_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="794.2" y="709" width="0.2" height="15.0" fill="rgb(251,46,16)" rx="2" ry="2" />
<text  x="797.19" y="719.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="1069.0" y="869" width="0.3" height="15.0" fill="rgb(230,58,36)" rx="2" ry="2" />
<text  x="1072.03" y="879.5" ></text>
</g>
<g >
<title>std::__Cr::ostreambuf_iterator&lt;char, std::__Cr::char_traits&lt;char&gt; &gt; std::__Cr::__pad_and_output&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;(std::__Cr::ostreambuf_iterator&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;, char const*, char const*, char const*, std::__Cr::ios_base&amp;, char) (1 samples, 0.02%)</title><rect x="305.9" y="533" width="0.2" height="15.0" fill="rgb(217,127,11)" rx="2" ry="2" />
<text  x="308.87" y="543.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="111.9" y="709" width="0.3" height="15.0" fill="rgb(226,24,15)" rx="2" ry="2" />
<text  x="114.92" y="719.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="534.2" y="789" width="0.2" height="15.0" fill="rgb(226,117,46)" rx="2" ry="2" />
<text  x="537.20" y="799.5" ></text>
</g>
<g >
<title>mojo::core::ports::SinglePortLocker::~SinglePortLocker() (2 samples, 0.04%)</title><rect x="324.2" y="709" width="0.5" height="15.0" fill="rgb(219,216,0)" rx="2" ry="2" />
<text  x="327.17" y="719.5" ></text>
</g>
<g >
<title>mach_msg (22 samples, 0.46%)</title><rect x="1183.6" y="917" width="5.4" height="15.0" fill="rgb(252,101,35)" rx="2" ry="2" />
<text  x="1186.57" y="927.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker() (670 samples, 14.05%)</title><rect x="707.4" y="997" width="165.7" height="15.0" fill="rgb(233,166,23)" rx="2" ry="2" />
<text  x="710.36" y="1007.5" >base::internal::Worke..</text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="317.7" y="485" width="0.3" height="15.0" fill="rgb(239,96,49)" rx="2" ry="2" />
<text  x="320.74" y="495.5" ></text>
</g>
<g >
<title>media::(anonymous namespace)::CopyRowsToNV12Buffer(int, int, int, media::VideoFrame const*, unsigned char*, int, unsigned char*, int, base::OnceCallback&lt;void ()&gt;) (10 samples, 0.21%)</title><rect x="59.0" y="933" width="2.5" height="15.0" fill="rgb(224,67,24)" rx="2" ry="2" />
<text  x="61.98" y="943.5" ></text>
</g>
<g >
<title>std::__Cr::vector&lt;mojo::core::RequestContext::WatchNotifyFinalizer, base::StackAllocator&lt;mojo::core::RequestContext::WatchNotifyFinalizer, 8ul&gt; &gt;::reserve(unsigned long) (1 samples, 0.02%)</title><rect x="103.5" y="821" width="0.3" height="15.0" fill="rgb(223,175,47)" rx="2" ry="2" />
<text  x="106.51" y="831.5" ></text>
</g>
<g >
<title>mach_msg_trap (7 samples, 0.15%)</title><rect x="295.2" y="741" width="1.8" height="15.0" fill="rgb(250,156,22)" rx="2" ry="2" />
<text  x="298.23" y="751.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_other_loop (4 samples, 0.08%)</title><rect x="761.0" y="661" width="1.0" height="15.0" fill="rgb(217,5,30)" rx="2" ry="2" />
<text  x="764.04" y="671.5" ></text>
</g>
<g >
<title>webrtc::DecoderDatabase::GetDecoderInfo(unsigned char) const (1 samples, 0.02%)</title><rect x="278.9" y="613" width="0.2" height="15.0" fill="rgb(240,153,37)" rx="2" ry="2" />
<text  x="281.90" y="623.5" ></text>
</g>
<g >
<title>webrtc::vcm::VideoReceiver::Decode(webrtc::VCMEncodedFrame const&amp;) (183 samples, 3.84%)</title><rect x="488.4" y="821" width="45.3" height="15.0" fill="rgb(232,206,29)" rx="2" ry="2" />
<text  x="491.43" y="831.5" >webr..</text>
</g>
<g >
<title>vpx_skin_pixel (1 samples, 0.02%)</title><rect x="813.7" y="741" width="0.3" height="15.0" fill="rgb(248,126,15)" rx="2" ry="2" />
<text  x="816.74" y="751.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="1156.9" y="741" width="0.2" height="15.0" fill="rgb(251,128,29)" rx="2" ry="2" />
<text  x="1159.85" y="751.5" ></text>
</g>
<g >
<title>vp8_init_mode_costs (1 samples, 0.02%)</title><rect x="457.5" y="725" width="0.3" height="15.0" fill="rgb(208,74,5)" rx="2" ry="2" />
<text  x="460.51" y="735.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Leave() const (1 samples, 0.02%)</title><rect x="1161.6" y="885" width="0.2" height="15.0" fill="rgb(243,83,28)" rx="2" ry="2" />
<text  x="1164.55" y="895.5" ></text>
</g>
<g >
<title>base::internal::PriorityQueue::PopTaskSource() (2 samples, 0.04%)</title><rect x="557.0" y="949" width="0.5" height="15.0" fill="rgb(209,115,52)" rx="2" ry="2" />
<text  x="559.96" y="959.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateExtension(webrtc::RTPExtensionType, unsigned long) (1 samples, 0.02%)</title><rect x="1004.5" y="773" width="0.2" height="15.0" fill="rgb(244,189,26)" rx="2" ry="2" />
<text  x="1007.47" y="783.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_y_block_sse2 (14 samples, 0.29%)</title><rect x="728.6" y="693" width="3.5" height="15.0" fill="rgb(228,218,52)" rx="2" ry="2" />
<text  x="731.64" y="703.5" ></text>
</g>
<g >
<title>_pthread_start (150 samples, 3.14%)</title><rect x="1102.9" y="1045" width="37.1" height="15.0" fill="rgb(253,54,5)" rx="2" ry="2" />
<text  x="1105.92" y="1055.5" >_pt..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TakeImmediateIncomingQueueTasks(base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;*) (2 samples, 0.04%)</title><rect x="341.2" y="789" width="0.5" height="15.0" fill="rgb(242,118,39)" rx="2" ry="2" />
<text  x="344.24" y="799.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), void&gt;::Invoke&lt;void (content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), scoped_refptr&lt;content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter&gt; const&amp;, scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks&gt;(void (content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), scoped_refptr&lt;content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter&gt; const&amp;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, base::TimeTicks&amp;&amp;) (4 samples, 0.08%)</title><rect x="140.1" y="453" width="1.0" height="15.0" fill="rgb(234,34,51)" rx="2" ry="2" />
<text  x="143.12" y="463.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.02%)</title><rect x="1156.9" y="709" width="0.2" height="15.0" fill="rgb(250,226,49)" rx="2" ry="2" />
<text  x="1159.85" y="719.5" ></text>
</g>
<g >
<title>MojoDestroyMessage (1 samples, 0.02%)</title><rect x="1072.7" y="725" width="0.3" height="15.0" fill="rgb(210,228,36)" rx="2" ry="2" />
<text  x="1075.74" y="735.5" ></text>
</g>
<g >
<title>run_analysis (3 samples, 0.06%)</title><rect x="684.6" y="741" width="0.7" height="15.0" fill="rgb(228,167,22)" rx="2" ry="2" />
<text  x="687.60" y="751.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (80 samples, 1.68%)</title><rect x="338.8" y="885" width="19.8" height="15.0" fill="rgb(239,48,0)" rx="2" ry="2" />
<text  x="341.77" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyWillProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (2 samples, 0.04%)</title><rect x="211.9" y="837" width="0.5" height="15.0" fill="rgb(244,213,4)" rx="2" ry="2" />
<text  x="214.86" y="847.5" ></text>
</g>
<g >
<title>webrtc::RTCPReceiver::TriggerCallbacksFromRtcpPacket(webrtc::RTCPReceiver::PacketInformation const&amp;) (2 samples, 0.04%)</title><rect x="284.6" y="725" width="0.5" height="15.0" fill="rgb(210,133,40)" rx="2" ry="2" />
<text  x="287.59" y="735.5" ></text>
</g>
<g >
<title>webrtc::BufferLevelFilter::SetTargetBufferLevel(int) (1 samples, 0.02%)</title><rect x="1126.7" y="741" width="0.2" height="15.0" fill="rgb(245,27,34)" rx="2" ry="2" />
<text  x="1129.67" y="751.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*) (1 samples, 0.02%)</title><rect x="698.0" y="949" width="0.2" height="15.0" fill="rgb(216,127,20)" rx="2" ry="2" />
<text  x="700.96" y="959.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::OnWorkerBecomesIdleLockRequired(base::internal::WorkerThread*) (6 samples, 0.13%)</title><rect x="698.7" y="933" width="1.5" height="15.0" fill="rgb(223,20,42)" rx="2" ry="2" />
<text  x="701.70" y="943.5" ></text>
</g>
<g >
<title>vp8_yv12_extend_frame_borders_c (3 samples, 0.06%)</title><rect x="959.4" y="741" width="0.8" height="15.0" fill="rgb(234,54,51)" rx="2" ry="2" />
<text  x="962.44" y="751.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="279.1" y="565" width="0.3" height="15.0" fill="rgb(245,179,26)" rx="2" ry="2" />
<text  x="282.15" y="575.5" ></text>
</g>
<g >
<title>blink::scheduler::FrameSchedulerImpl::GetTaskRunner(blink::TaskType) (1 samples, 0.02%)</title><rect x="18.4" y="549" width="0.3" height="15.0" fill="rgb(208,3,11)" rx="2" ry="2" />
<text  x="21.41" y="559.5" ></text>
</g>
<g >
<title>webrtc::PacedSender::Process() (74 samples, 1.55%)</title><rect x="1145.2" y="965" width="18.3" height="15.0" fill="rgb(206,120,46)" rx="2" ry="2" />
<text  x="1148.22" y="975.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (7 samples, 0.15%)</title><rect x="276.2" y="725" width="1.7" height="15.0" fill="rgb(230,213,31)" rx="2" ry="2" />
<text  x="279.18" y="735.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::GetSizeEstimateImpl(base::allocator::AllocatorDispatch const*, void*, void*) (1 samples, 0.02%)</title><rect x="715.5" y="869" width="0.3" height="15.0" fill="rgb(227,161,39)" rx="2" ry="2" />
<text  x="718.53" y="879.5" ></text>
</g>
<g >
<title>SHA1_Update (1 samples, 0.02%)</title><rect x="308.1" y="469" width="0.2" height="15.0" fill="rgb(220,153,28)" rx="2" ry="2" />
<text  x="311.09" y="479.5" ></text>
</g>
<g >
<title>blink::LayoutBox::CanResize() const (1 samples, 0.02%)</title><rect x="26.8" y="181" width="0.3" height="15.0" fill="rgb(244,154,16)" rx="2" ry="2" />
<text  x="29.82" y="191.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="209.4" y="821" width="0.2" height="15.0" fill="rgb(224,109,53)" rx="2" ry="2" />
<text  x="212.39" y="831.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="228.2" y="501" width="0.2" height="15.0" fill="rgb(235,105,13)" rx="2" ry="2" />
<text  x="231.19" y="511.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="300.7" y="677" width="0.5" height="15.0" fill="rgb(229,188,3)" rx="2" ry="2" />
<text  x="303.67" y="687.5" ></text>
</g>
<g >
<title>webrtc::video_coding::FrameBuffer::GetNextFrame() (1 samples, 0.02%)</title><rect x="551.8" y="821" width="0.2" height="15.0" fill="rgb(240,1,38)" rx="2" ry="2" />
<text  x="554.76" y="831.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_other_loop (1 samples, 0.02%)</title><rect x="921.3" y="661" width="0.3" height="15.0" fill="rgb(250,203,25)" rx="2" ry="2" />
<text  x="924.35" y="671.5" ></text>
</g>
<g >
<title>vp8_mv_pred (1 samples, 0.02%)</title><rect x="773.9" y="677" width="0.3" height="15.0" fill="rgb(213,220,5)" rx="2" ry="2" />
<text  x="776.91" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (2 samples, 0.04%)</title><rect x="84.5" y="773" width="0.5" height="15.0" fill="rgb(244,196,39)" rx="2" ry="2" />
<text  x="87.46" y="783.5" ></text>
</g>
<g >
<title>tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="716.5" y="853" width="0.3" height="15.0" fill="rgb(252,105,8)" rx="2" ry="2" />
<text  x="719.52" y="863.5" ></text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::CloneDataIfReferenced(unsigned long) (1 samples, 0.02%)</title><rect x="1161.3" y="853" width="0.3" height="15.0" fill="rgb(236,71,25)" rx="2" ry="2" />
<text  x="1164.30" y="863.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="193.3" y="885" width="0.5" height="15.0" fill="rgb(226,169,42)" rx="2" ry="2" />
<text  x="196.31" y="895.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="266.0" y="549" width="0.5" height="15.0" fill="rgb(230,20,22)" rx="2" ry="2" />
<text  x="269.04" y="559.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="1112.8" y="821" width="0.3" height="15.0" fill="rgb(252,158,14)" rx="2" ry="2" />
<text  x="1115.82" y="831.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (34 samples, 0.71%)</title><rect x="182.7" y="885" width="8.4" height="15.0" fill="rgb(211,134,8)" rx="2" ry="2" />
<text  x="185.67" y="895.5" ></text>
</g>
<g >
<title>gettimeofday (1 samples, 0.02%)</title><rect x="12.2" y="821" width="0.3" height="15.0" fill="rgb(225,143,13)" rx="2" ry="2" />
<text  x="15.23" y="831.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="314.3" y="613" width="0.2" height="15.0" fill="rgb(211,138,33)" rx="2" ry="2" />
<text  x="317.28" y="623.5" ></text>
</g>
<g >
<title>thread_start (19 samples, 0.40%)</title><rect x="54.3" y="1061" width="4.7" height="15.0" fill="rgb(237,212,4)" rx="2" ry="2" />
<text  x="57.28" y="1071.5" ></text>
</g>
<g >
<title>CFAbsoluteTimeGetCurrent (4 samples, 0.08%)</title><rect x="11.5" y="837" width="1.0" height="15.0" fill="rgb(210,188,26)" rx="2" ry="2" />
<text  x="14.48" y="847.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (670 samples, 14.05%)</title><rect x="707.4" y="1013" width="165.7" height="15.0" fill="rgb(214,172,31)" rx="2" ry="2" />
<text  x="710.36" y="1023.5" >base::(anonymous name..</text>
</g>
<g >
<title>base::DictionaryValue::GetDoubleWithoutPathExpansion(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, double*) const (1 samples, 0.02%)</title><rect x="177.0" y="773" width="0.2" height="15.0" fill="rgb(222,170,39)" rx="2" ry="2" />
<text  x="179.98" y="783.5" ></text>
</g>
<g >
<title>mach_msg_send (1 samples, 0.02%)</title><rect x="19.9" y="69" width="0.2" height="15.0" fill="rgb(229,35,50)" rx="2" ry="2" />
<text  x="22.90" y="79.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="962.7" y="517" width="0.2" height="15.0" fill="rgb(215,186,54)" rx="2" ry="2" />
<text  x="965.66" y="527.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::AppendData(unsigned int, unsigned int const*, unsigned int) (1 samples, 0.02%)</title><rect x="236.6" y="565" width="0.2" height="15.0" fill="rgb(240,186,18)" rx="2" ry="2" />
<text  x="239.60" y="575.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateExtension(webrtc::RTPExtensionType, unsigned long) (1 samples, 0.02%)</title><rect x="1146.0" y="901" width="0.2" height="15.0" fill="rgb(214,32,43)" rx="2" ry="2" />
<text  x="1148.97" y="911.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="348.4" y="805" width="0.3" height="15.0" fill="rgb(219,106,24)" rx="2" ry="2" />
<text  x="351.42" y="815.5" ></text>
</g>
<g >
<title>silk_NLSF_encode (1 samples, 0.02%)</title><rect x="850.6" y="661" width="0.2" height="15.0" fill="rgb(243,99,7)" rx="2" ry="2" />
<text  x="853.60" y="671.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="274.7" y="597" width="0.2" height="15.0" fill="rgb(225,125,42)" rx="2" ry="2" />
<text  x="277.70" y="607.5" ></text>
</g>
<g >
<title>IPC::ParamTraits&lt;network::P2PPacketInfo&gt;::Write(base::Pickle*, network::P2PPacketInfo const&amp;) (8 samples, 0.17%)</title><rect x="242.3" y="645" width="2.0" height="15.0" fill="rgb(248,118,46)" rx="2" ry="2" />
<text  x="245.29" y="655.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::CullOldPackets(long long) (1 samples, 0.02%)</title><rect x="854.3" y="757" width="0.3" height="15.0" fill="rgb(219,143,23)" rx="2" ry="2" />
<text  x="857.31" y="767.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="652.7" y="533" width="0.2" height="15.0" fill="rgb(232,77,23)" rx="2" ry="2" />
<text  x="655.69" y="543.5" ></text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::PostTaskInternal(rtc::Location const&amp;, int, rtc::MessageHandler*, unsigned int, rtc::MessageData*) (2 samples, 0.04%)</title><rect x="292.8" y="789" width="0.4" height="15.0" fill="rgb(211,71,47)" rx="2" ry="2" />
<text  x="295.75" y="799.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (1 samples, 0.02%)</title><rect x="652.7" y="725" width="0.2" height="15.0" fill="rgb(223,193,39)" rx="2" ry="2" />
<text  x="655.69" y="735.5" ></text>
</g>
<g >
<title>vp8_quantize_mb (23 samples, 0.48%)</title><rect x="892.6" y="677" width="5.7" height="15.0" fill="rgb(234,163,46)" rx="2" ry="2" />
<text  x="895.65" y="687.5" ></text>
</g>
<g >
<title>silk_resampler_private_IIR_FIR (6 samples, 0.13%)</title><rect x="1123.2" y="613" width="1.5" height="15.0" fill="rgb(209,191,43)" rx="2" ry="2" />
<text  x="1126.21" y="623.5" ></text>
</g>
<g >
<title>webrtc::AudioDecoder::ConvertSpeechType(short) (1 samples, 0.02%)</title><rect x="1124.9" y="709" width="0.3" height="15.0" fill="rgb(207,60,25)" rx="2" ry="2" />
<text  x="1127.94" y="719.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="314.5" y="613" width="0.3" height="15.0" fill="rgb(247,29,31)" rx="2" ry="2" />
<text  x="317.52" y="623.5" ></text>
</g>
<g >
<title>blink::(anonymous namespace)::EndOfTaskRunner::WillProcessTask(base::PendingTask const&amp;) (2 samples, 0.04%)</title><rect x="44.4" y="645" width="0.5" height="15.0" fill="rgb(242,75,45)" rx="2" ry="2" />
<text  x="47.39" y="655.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintWithoutCommit(blink::GraphicsContext::DisabledMode, blink::IntRect const*) (2 samples, 0.04%)</title><rect x="26.6" y="357" width="0.5" height="15.0" fill="rgb(226,16,49)" rx="2" ry="2" />
<text  x="29.57" y="367.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::DelayTillNextTask(base::sequence_manager::LazyNow*) const (2 samples, 0.04%)</title><rect x="29.8" y="709" width="0.5" height="15.0" fill="rgb(211,54,1)" rx="2" ry="2" />
<text  x="32.79" y="719.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetSingletonAllowed(bool) (13 samples, 0.27%)</title><rect x="574.8" y="917" width="3.2" height="15.0" fill="rgb(231,183,38)" rx="2" ry="2" />
<text  x="577.77" y="927.5" ></text>
</g>
<g >
<title>blink::LayoutGeometryMap::PushMappingsToAncestor(blink::LayoutObject const*, blink::LayoutBoxModelObject const*) (1 samples, 0.02%)</title><rect x="25.3" y="389" width="0.3" height="15.0" fill="rgb(216,221,53)" rx="2" ry="2" />
<text  x="28.34" y="399.5" ></text>
</g>
<g >
<title>base::mac::ScopedNSAutoreleasePool::ScopedNSAutoreleasePool() (1 samples, 0.02%)</title><rect x="222.7" y="917" width="0.3" height="15.0" fill="rgb(238,20,16)" rx="2" ry="2" />
<text  x="225.75" y="927.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::internal::PriorityQueue::TaskSourceAndSortKey&gt;::FillHole(unsigned long, base::internal::PriorityQueue::TaskSourceAndSortKey&amp;&amp;) (1 samples, 0.02%)</title><rect x="1134.8" y="677" width="0.3" height="15.0" fill="rgb(239,125,53)" rx="2" ry="2" />
<text  x="1137.83" y="687.5" ></text>
</g>
<g >
<title>std::__Cr::ostreambuf_iterator&lt;char, std::__Cr::char_traits&lt;char&gt; &gt; std::__Cr::__pad_and_output&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;(std::__Cr::ostreambuf_iterator&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;, char const*, char const*, char const*, std::__Cr::ios_base&amp;, char) (1 samples, 0.02%)</title><rect x="54.0" y="901" width="0.3" height="15.0" fill="rgb(226,29,16)" rx="2" ry="2" />
<text  x="57.03" y="911.5" ></text>
</g>
<g >
<title>blink::PersistentBase&lt;blink::StyleFilterData, (blink::WeaknessPersistentConfiguration)0, (blink::CrossThreadnessPersistentConfiguration)0&gt;::CheckPointer() const (1 samples, 0.02%)</title><rect x="25.8" y="341" width="0.3" height="15.0" fill="rgb(220,134,39)" rx="2" ry="2" />
<text  x="28.83" y="351.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_5::__invoke(_malloc_zone_t*, void*, unsigned long) (1 samples, 0.02%)</title><rect x="243.8" y="517" width="0.2" height="15.0" fill="rgb(246,227,45)" rx="2" ry="2" />
<text  x="246.77" y="527.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="138.4" y="437" width="0.2" height="15.0" fill="rgb(226,88,14)" rx="2" ry="2" />
<text  x="141.39" y="447.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="206.7" y="725" width="0.2" height="15.0" fill="rgb(248,140,27)" rx="2" ry="2" />
<text  x="209.67" y="735.5" ></text>
</g>
<g >
<title>kevent64 (12 samples, 0.25%)</title><rect x="70.6" y="885" width="3.0" height="15.0" fill="rgb(249,18,54)" rx="2" ry="2" />
<text  x="73.61" y="895.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::SendChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (14 samples, 0.29%)</title><rect x="246.0" y="469" width="3.5" height="15.0" fill="rgb(239,96,29)" rx="2" ry="2" />
<text  x="249.00" y="479.5" ></text>
</g>
<g >
<title>void base::internal::Invoker&lt;base::internal::BindState&lt;void (content::WebMediaPlayerMS::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;), base::WeakPtr&lt;content::WebMediaPlayerMS::FrameDeliverer&gt; &gt;, void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;::RunImpl&lt;void (content::WebMediaPlayerMS::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;), std::__Cr::tuple&lt;base::WeakPtr&lt;content::WebMediaPlayerMS::FrameDeliverer&gt; &gt;, 0ul&gt;(void (content::WebMediaPlayerMS::FrameDeliverer::*&amp;&amp;)(scoped_refptr&lt;media::VideoFrame&gt;), std::__Cr::tuple&lt;base::WeakPtr&lt;content::WebMediaPlayerMS::FrameDeliverer&gt; &gt;&amp;&amp;, std::__Cr::integer_sequence&lt;unsigned long, 0ul&gt;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (6 samples, 0.13%)</title><rect x="174.0" y="853" width="1.5" height="15.0" fill="rgb(244,62,9)" rx="2" ry="2" />
<text  x="177.01" y="863.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::EncodeVideoFrame(webrtc::VideoFrame const&amp;, long long) (320 samples, 6.71%)</title><rect x="883.0" y="821" width="79.2" height="15.0" fill="rgb(212,165,40)" rx="2" ry="2" />
<text  x="886.00" y="831.5" >webrtc::V..</text>
</g>
<g >
<title>blink::MediaStreamRemoteVideoSource::RemoteVideoSourceDelegate::OnFrame(webrtc::VideoFrame const&amp;) (2 samples, 0.04%)</title><rect x="993.1" y="677" width="0.5" height="15.0" fill="rgb(241,64,45)" rx="2" ry="2" />
<text  x="996.09" y="687.5" ></text>
</g>
<g >
<title>base::ScopedDeferTaskPosting::ScopedDeferTaskPosting() (1 samples, 0.02%)</title><rect x="23.4" y="597" width="0.2" height="15.0" fill="rgb(246,198,29)" rx="2" ry="2" />
<text  x="26.36" y="607.5" ></text>
</g>
<g >
<title>__commpage_gettimeofday (1 samples, 0.02%)</title><rect x="12.0" y="821" width="0.2" height="15.0" fill="rgb(209,18,34)" rx="2" ry="2" />
<text  x="14.98" y="831.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="1154.1" y="741" width="0.3" height="15.0" fill="rgb(237,187,3)" rx="2" ry="2" />
<text  x="1157.13" y="751.5" ></text>
</g>
<g >
<title>__CFRunLoopModeIsEmpty (1 samples, 0.02%)</title><rect x="46.9" y="837" width="0.2" height="15.0" fill="rgb(252,156,50)" rx="2" ry="2" />
<text  x="49.86" y="847.5" ></text>
</g>
<g >
<title>cricket::Connection::Ping(long long) (1 samples, 0.02%)</title><rect x="292.5" y="789" width="0.3" height="15.0" fill="rgb(254,36,4)" rx="2" ry="2" />
<text  x="295.51" y="799.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::FindExtension(webrtc::RTPExtensionType) const (1 samples, 0.02%)</title><rect x="278.2" y="677" width="0.2" height="15.0" fill="rgb(221,29,39)" rx="2" ry="2" />
<text  x="281.16" y="687.5" ></text>
</g>
<g >
<title>vp8cx_mb_init_quantizer (2 samples, 0.04%)</title><rect x="940.6" y="709" width="0.5" height="15.0" fill="rgb(249,172,25)" rx="2" ry="2" />
<text  x="943.64" y="719.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="208.2" y="677" width="0.2" height="15.0" fill="rgb(232,224,37)" rx="2" ry="2" />
<text  x="211.15" y="687.5" ></text>
</g>
<g >
<title>webrtc::SendSideBandwidthEstimation::CurrentEstimate(int*, unsigned char*, long long*) const (1 samples, 0.02%)</title><rect x="381.3" y="805" width="0.3" height="15.0" fill="rgb(217,135,10)" rx="2" ry="2" />
<text  x="384.32" y="815.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3 (1 samples, 0.02%)</title><rect x="531.0" y="693" width="0.2" height="15.0" fill="rgb(206,77,31)" rx="2" ry="2" />
<text  x="533.98" y="703.5" ></text>
</g>
<g >
<title>IPC::Message::Message(char const*, int) (1 samples, 0.02%)</title><rect x="313.3" y="645" width="0.2" height="15.0" fill="rgb(232,7,31)" rx="2" ry="2" />
<text  x="316.29" y="655.5" ></text>
</g>
<g >
<title>compute_band_energies (1 samples, 0.02%)</title><rect x="683.9" y="725" width="0.2" height="15.0" fill="rgb(227,127,3)" rx="2" ry="2" />
<text  x="686.86" y="735.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3 (1 samples, 0.02%)</title><rect x="391.5" y="645" width="0.2" height="15.0" fill="rgb(246,42,30)" rx="2" ry="2" />
<text  x="394.46" y="655.5" ></text>
</g>
<g >
<title>mojo::core::ports::(anonymous namespace)::UpdateTLS(mojo::core::ports::PortLocker*, mojo::core::ports::PortLocker*) (1 samples, 0.02%)</title><rect x="1057.7" y="725" width="0.2" height="15.0" fill="rgb(219,201,45)" rx="2" ry="2" />
<text  x="1060.65" y="735.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::InterfaceEndpoint::SendMessage(mojo::Message*) (5 samples, 0.10%)</title><rect x="172.5" y="773" width="1.3" height="15.0" fill="rgb(247,101,0)" rx="2" ry="2" />
<text  x="175.53" y="783.5" ></text>
</g>
<g >
<title>mach_msg (4 samples, 0.08%)</title><rect x="1046.8" y="389" width="1.0" height="15.0" fill="rgb(254,109,3)" rx="2" ry="2" />
<text  x="1049.77" y="399.5" ></text>
</g>
<g >
<title>blink::EventTarget::FireEventListeners(blink::Event&amp;) (8 samples, 0.17%)</title><rect x="20.4" y="597" width="2.0" height="15.0" fill="rgb(208,107,5)" rx="2" ry="2" />
<text  x="23.39" y="607.5" ></text>
</g>
<g >
<title>cricket::BaseChannel::SendPacket(bool, rtc::CopyOnWriteBuffer*, rtc::PacketOptions const&amp;) (19 samples, 0.40%)</title><rect x="1148.7" y="869" width="4.7" height="15.0" fill="rgb(222,161,31)" rx="2" ry="2" />
<text  x="1151.69" y="879.5" ></text>
</g>
<g >
<title>gpu::GpuMemoryBufferImplIOSurface::Map() (2 samples, 0.04%)</title><rect x="58.5" y="917" width="0.5" height="15.0" fill="rgb(234,55,26)" rx="2" ry="2" />
<text  x="61.49" y="927.5" ></text>
</g>
<g >
<title>mach_msg (6 samples, 0.13%)</title><rect x="708.4" y="933" width="1.4" height="15.0" fill="rgb(238,106,50)" rx="2" ry="2" />
<text  x="711.35" y="943.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="577.7" y="885" width="0.3" height="15.0" fill="rgb(210,135,52)" rx="2" ry="2" />
<text  x="580.74" y="895.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (4 samples, 0.08%)</title><rect x="282.1" y="709" width="1.0" height="15.0" fill="rgb(228,202,10)" rx="2" ry="2" />
<text  x="285.12" y="719.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamDecoder::FrameToRender(webrtc::VideoFrame&amp;, absl::optional&lt;unsigned char&gt;, int, webrtc::VideoContentType) (1 samples, 0.02%)</title><rect x="682.9" y="741" width="0.2" height="15.0" fill="rgb(225,56,39)" rx="2" ry="2" />
<text  x="685.87" y="751.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (2 samples, 0.04%)</title><rect x="174.0" y="821" width="0.5" height="15.0" fill="rgb(243,0,13)" rx="2" ry="2" />
<text  x="177.01" y="831.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (2 samples, 0.04%)</title><rect x="570.8" y="933" width="0.5" height="15.0" fill="rgb(212,212,43)" rx="2" ry="2" />
<text  x="573.81" y="943.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="577.5" y="869" width="0.2" height="15.0" fill="rgb(233,133,19)" rx="2" ry="2" />
<text  x="580.49" y="879.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) (4 samples, 0.08%)</title><rect x="1071.8" y="741" width="0.9" height="15.0" fill="rgb(254,35,32)" rx="2" ry="2" />
<text  x="1074.75" y="751.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWait(base::TimeDelta const&amp;) (24 samples, 0.50%)</title><rect x="559.7" y="949" width="5.9" height="15.0" fill="rgb(244,50,16)" rx="2" ry="2" />
<text  x="562.68" y="959.5" ></text>
</g>
<g >
<title>mojo::Message::Message(unsigned int, unsigned int, unsigned long, unsigned long, std::__Cr::vector&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt;, std::__Cr::allocator&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt; &gt; &gt;*) (8 samples, 0.17%)</title><rect x="250.5" y="645" width="1.9" height="15.0" fill="rgb(234,129,24)" rx="2" ry="2" />
<text  x="253.45" y="655.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (2 samples, 0.04%)</title><rect x="991.4" y="709" width="0.4" height="15.0" fill="rgb(238,222,6)" rx="2" ry="2" />
<text  x="994.35" y="719.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.02%)</title><rect x="1137.1" y="805" width="0.2" height="15.0" fill="rgb(213,105,22)" rx="2" ry="2" />
<text  x="1140.06" y="815.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, void*&gt;*, long&gt;, bool&gt; std::__Cr::__tree&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__map_value_compare&lt;int, std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::less&lt;int&gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt; &gt; &gt;::__emplace_unique_key_args&lt;int, std::__Cr::pair&lt;int, rtc::Message&gt; &gt;(int const&amp;, std::__Cr::pair&lt;int, rtc::Message&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="1182.1" y="821" width="0.2" height="15.0" fill="rgb(227,85,40)" rx="2" ry="2" />
<text  x="1185.08" y="831.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="308.8" y="469" width="0.3" height="15.0" fill="rgb(252,51,24)" rx="2" ry="2" />
<text  x="311.83" y="479.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.08%)</title><rect x="716.8" y="869" width="1.0" height="15.0" fill="rgb(206,91,3)" rx="2" ry="2" />
<text  x="719.76" y="879.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*) (1 samples, 0.02%)</title><rect x="1084.9" y="709" width="0.2" height="15.0" fill="rgb(251,210,14)" rx="2" ry="2" />
<text  x="1087.86" y="719.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (2 samples, 0.04%)</title><rect x="556.0" y="901" width="0.5" height="15.0" fill="rgb(209,182,53)" rx="2" ry="2" />
<text  x="558.97" y="911.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoStreamReceiver::ParseAndHandleEncapsulatingHeader(webrtc::RtpPacketReceived const&amp;) (30 samples, 0.63%)</title><rect x="261.8" y="693" width="7.5" height="15.0" fill="rgb(205,105,36)" rx="2" ry="2" />
<text  x="264.83" y="703.5" ></text>
</g>
<g >
<title>thread_start (15 samples, 0.31%)</title><rect x="59.0" y="1061" width="3.7" height="15.0" fill="rgb(237,121,26)" rx="2" ry="2" />
<text  x="61.98" y="1071.5" ></text>
</g>
<g >
<title>EVP_EncryptUpdate (1 samples, 0.02%)</title><rect x="307.4" y="485" width="0.2" height="15.0" fill="rgb(240,11,4)" rx="2" ry="2" />
<text  x="310.35" y="495.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::MallocImpl(base::allocator::AllocatorDispatch const*, unsigned long, void*) (1 samples, 0.02%)</title><rect x="374.9" y="837" width="0.2" height="15.0" fill="rgb(220,121,47)" rx="2" ry="2" />
<text  x="377.88" y="847.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_y_sse2 (2 samples, 0.04%)</title><rect x="792.7" y="709" width="0.5" height="15.0" fill="rgb(207,54,50)" rx="2" ry="2" />
<text  x="795.71" y="719.5" ></text>
</g>
<g >
<title>free_tiny (2 samples, 0.04%)</title><rect x="297.5" y="869" width="0.4" height="15.0" fill="rgb(222,154,43)" rx="2" ry="2" />
<text  x="300.45" y="879.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (1 samples, 0.02%)</title><rect x="389.2" y="661" width="0.3" height="15.0" fill="rgb(253,198,34)" rx="2" ry="2" />
<text  x="392.23" y="671.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_sse2 (1 samples, 0.02%)</title><rect x="792.5" y="709" width="0.2" height="15.0" fill="rgb(221,174,7)" rx="2" ry="2" />
<text  x="795.46" y="719.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="84.7" y="757" width="0.3" height="15.0" fill="rgb(224,112,23)" rx="2" ry="2" />
<text  x="87.71" y="767.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::VideoStreamEncoder::OnFrame(webrtc::VideoFrame const&amp;)::$_9&gt;::Run() (382 samples, 8.01%)</title><rect x="722.5" y="853" width="94.5" height="15.0" fill="rgb(211,131,24)" rx="2" ry="2" />
<text  x="725.45" y="863.5" >webrtc::web..</text>
</g>
<g >
<title>base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) (25 samples, 0.52%)</title><rect x="700.9" y="965" width="6.2" height="15.0" fill="rgb(237,93,8)" rx="2" ry="2" />
<text  x="703.93" y="975.5" ></text>
</g>
<g >
<title>media::AudioParameters::IsBitstreamFormat() const (1 samples, 0.02%)</title><rect x="1139.8" y="965" width="0.2" height="15.0" fill="rgb(244,187,49)" rx="2" ry="2" />
<text  x="1142.78" y="975.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.04%)</title><rect x="1012.1" y="885" width="0.5" height="15.0" fill="rgb(250,194,13)" rx="2" ry="2" />
<text  x="1015.13" y="895.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="30.3" y="645" width="0.2" height="15.0" fill="rgb(205,161,38)" rx="2" ry="2" />
<text  x="33.29" y="655.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="254.2" y="533" width="0.2" height="15.0" fill="rgb(246,81,11)" rx="2" ry="2" />
<text  x="257.16" y="543.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="1070.0" y="789" width="0.3" height="15.0" fill="rgb(222,202,40)" rx="2" ry="2" />
<text  x="1073.02" y="799.5" ></text>
</g>
<g >
<title>base::SyncSocket::Receive(void*, unsigned long) (17 samples, 0.36%)</title><rect x="1092.0" y="981" width="4.2" height="15.0" fill="rgb(206,25,47)" rx="2" ry="2" />
<text  x="1095.04" y="991.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::operator!=(base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter const&amp;) const (2 samples, 0.04%)</title><rect x="42.7" y="645" width="0.4" height="15.0" fill="rgb(235,88,24)" rx="2" ry="2" />
<text  x="45.65" y="655.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="303.4" y="693" width="0.5" height="15.0" fill="rgb(220,64,44)" rx="2" ry="2" />
<text  x="306.39" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="284.6" y="613" width="0.2" height="15.0" fill="rgb(224,224,52)" rx="2" ry="2" />
<text  x="287.59" y="623.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::ConsoleCall(v8::internal::Isolate*, v8::internal::BuiltinArguments&amp;, void (v8::debug::ConsoleDelegate::*)(v8::debug::ConsoleCallArguments const&amp;, v8::debug::ConsoleContext const&amp;)) (2 samples, 0.04%)</title><rect x="17.7" y="405" width="0.5" height="15.0" fill="rgb(232,138,1)" rx="2" ry="2" />
<text  x="20.67" y="415.5" ></text>
</g>
<g >
<title>encode_pulses (1 samples, 0.02%)</title><rect x="535.9" y="629" width="0.3" height="15.0" fill="rgb(243,146,12)" rx="2" ry="2" />
<text  x="538.93" y="639.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (15 samples, 0.31%)</title><rect x="59.0" y="1013" width="3.7" height="15.0" fill="rgb(238,2,37)" rx="2" ry="2" />
<text  x="61.98" y="1023.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="301.7" y="725" width="0.2" height="15.0" fill="rgb(222,176,26)" rx="2" ry="2" />
<text  x="304.66" y="735.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="15.7" y="645" width="0.2" height="15.0" fill="rgb(254,224,34)" rx="2" ry="2" />
<text  x="18.69" y="655.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="212.4" y="821" width="0.2" height="15.0" fill="rgb(234,94,22)" rx="2" ry="2" />
<text  x="215.36" y="831.5" ></text>
</g>
<g >
<title>vpx_codec_encode (281 samples, 5.89%)</title><rect x="581.7" y="789" width="69.5" height="15.0" fill="rgb(218,128,52)" rx="2" ry="2" />
<text  x="584.69" y="799.5" >vpx_cod..</text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (3 samples, 0.06%)</title><rect x="282.4" y="677" width="0.7" height="15.0" fill="rgb(223,121,21)" rx="2" ry="2" />
<text  x="285.36" y="687.5" ></text>
</g>
<g >
<title>vpx_subtract_block_sse2.loop_16 (3 samples, 0.06%)</title><rect x="939.4" y="693" width="0.7" height="15.0" fill="rgb(242,12,41)" rx="2" ry="2" />
<text  x="942.40" y="703.5" ></text>
</g>
<g >
<title>I420Copy (3 samples, 0.06%)</title><rect x="682.1" y="757" width="0.8" height="15.0" fill="rgb(206,99,20)" rx="2" ry="2" />
<text  x="685.13" y="767.5" ></text>
</g>
<g >
<title>std::__Cr::locale::~locale() (1 samples, 0.02%)</title><rect x="118.1" y="789" width="0.3" height="15.0" fill="rgb(229,210,40)" rx="2" ry="2" />
<text  x="121.10" y="799.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;, void&gt;::Invoke&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;, scoped_refptr&lt;media::VideoFrame&gt; &gt;(base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="487.9" y="741" width="0.3" height="15.0" fill="rgb(223,213,51)" rx="2" ry="2" />
<text  x="490.94" y="751.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (3 samples, 0.06%)</title><rect x="961.4" y="773" width="0.8" height="15.0" fill="rgb(233,74,35)" rx="2" ry="2" />
<text  x="964.42" y="783.5" ></text>
</g>
<g >
<title>cc::ListContainerHelper::CharAllocator::CharAllocator(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="1039.3" y="597" width="0.3" height="15.0" fill="rgb(212,61,11)" rx="2" ry="2" />
<text  x="1042.35" y="607.5" ></text>
</g>
<g >
<title>rtc::BufferT&lt;unsigned char, false&gt;::BufferT(rtc::BufferT&lt;unsigned char, false&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="279.9" y="613" width="0.2" height="15.0" fill="rgb(216,222,8)" rx="2" ry="2" />
<text  x="282.89" y="623.5" ></text>
</g>
<g >
<title>mach_msg (27 samples, 0.57%)</title><rect x="216.1" y="885" width="6.6" height="15.0" fill="rgb(207,117,1)" rx="2" ry="2" />
<text  x="219.07" y="895.5" ></text>
</g>
<g >
<title>silk_noise_shape_quantizer_del_dec (19 samples, 0.40%)</title><rect x="538.4" y="677" width="4.7" height="15.0" fill="rgb(250,171,30)" rx="2" ry="2" />
<text  x="541.40" y="687.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1164.5" y="869" width="0.3" height="15.0" fill="rgb(224,77,0)" rx="2" ry="2" />
<text  x="1167.52" y="879.5" ></text>
</g>
<g >
<title>_CFAutoreleasePoolPush (1 samples, 0.02%)</title><rect x="1065.1" y="933" width="0.2" height="15.0" fill="rgb(235,168,33)" rx="2" ry="2" />
<text  x="1068.07" y="943.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;(anonymous namespace)::FrameAdapter&lt;webrtc::I420BufferInterface&gt; &gt;::~RefCountedObject() (1 samples, 0.02%)</title><rect x="962.7" y="789" width="0.2" height="15.0" fill="rgb(248,34,10)" rx="2" ry="2" />
<text  x="965.66" y="799.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="574.3" y="869" width="0.5" height="15.0" fill="rgb(227,30,20)" rx="2" ry="2" />
<text  x="577.27" y="879.5" ></text>
</g>
<g >
<title>mojo::Connector::Accept(mojo::Message*) (7 samples, 0.15%)</title><rect x="166.3" y="741" width="1.8" height="15.0" fill="rgb(248,167,28)" rx="2" ry="2" />
<text  x="169.34" y="751.5" ></text>
</g>
<g >
<title>IPC::(anonymous namespace)::ChannelAssociatedGroupController::SendMessage(mojo::Message*) (7 samples, 0.15%)</title><rect x="169.6" y="757" width="1.7" height="15.0" fill="rgb(253,7,5)" rx="2" ry="2" />
<text  x="172.56" y="767.5" ></text>
</g>
<g >
<title>base::mac::ScopedNSAutoreleasePool::ScopedNSAutoreleasePool() (2 samples, 0.04%)</title><rect x="164.1" y="917" width="0.5" height="15.0" fill="rgb(221,2,17)" rx="2" ry="2" />
<text  x="167.12" y="927.5" ></text>
</g>
<g >
<title>vp8_loop_filter_horizontal_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="988.6" y="693" width="0.3" height="15.0" fill="rgb(245,16,47)" rx="2" ry="2" />
<text  x="991.63" y="703.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle&lt;v8::internal::Object&gt;*) (1 samples, 0.02%)</title><rect x="19.9" y="501" width="0.2" height="15.0" fill="rgb(249,168,33)" rx="2" ry="2" />
<text  x="22.90" y="511.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="184.4" y="757" width="0.2" height="15.0" fill="rgb(237,160,37)" rx="2" ry="2" />
<text  x="187.40" y="767.5" ></text>
</g>
<g >
<title>base::ScopedSetSequenceTokenForCurrentThread::~ScopedSetSequenceTokenForCurrentThread() (1 samples, 0.02%)</title><rect x="370.2" y="917" width="0.2" height="15.0" fill="rgb(209,87,36)" rx="2" ry="2" />
<text  x="373.18" y="927.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="577.7" y="805" width="0.3" height="15.0" fill="rgb(252,137,26)" rx="2" ry="2" />
<text  x="580.74" y="815.5" ></text>
</g>
<g >
<title>base::PendingTask::PendingTask(base::PendingTask&amp;&amp;) (1 samples, 0.02%)</title><rect x="140.9" y="309" width="0.2" height="15.0" fill="rgb(229,35,12)" rx="2" ry="2" />
<text  x="143.86" y="319.5" ></text>
</g>
<g >
<title>blink::MemberBase&lt;blink::EventTarget, (blink::TracenessMemberConfiguration)0&gt;::MemberBase(blink::EventTarget*) (1 samples, 0.02%)</title><rect x="21.9" y="549" width="0.2" height="15.0" fill="rgb(229,24,22)" rx="2" ry="2" />
<text  x="24.87" y="559.5" ></text>
</g>
<g >
<title>void base::internal::Invoker&lt;base::internal::BindState&lt;void (mojo::SimpleWatcher::*)(int, unsigned int, mojo::HandleSignalsState const&amp;), base::WeakPtr&lt;mojo::SimpleWatcher&gt;, int, unsigned int, mojo::HandleSignalsState&gt;, void ()&gt;::RunImpl&lt;void (mojo::SimpleWatcher::*)(int, unsigned int, mojo::HandleSignalsState const&amp;), std::__Cr::tuple&lt;base::WeakPtr&lt;mojo::SimpleWatcher&gt;, int, unsigned int, mojo::HandleSignalsState&gt;, 0ul, 1ul, 2ul, 3ul&gt;(void (mojo::SimpleWatcher::*&amp;&amp;)(int, unsigned int, mojo::HandleSignalsState const&amp;), std::__Cr::tuple&lt;base::WeakPtr&lt;mojo::SimpleWatcher&gt;, int, unsigned int, mojo::HandleSignalsState&gt;&amp;&amp;, std::__Cr::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul&gt;) (113 samples, 2.37%)</title><rect x="298.9" y="869" width="28.0" height="15.0" fill="rgb(213,176,42)" rx="2" ry="2" />
<text  x="301.94" y="879.5" >v..</text>
</g>
<g >
<title>base::sequence_manager::LazyNow::Now() (1 samples, 0.02%)</title><rect x="83.5" y="789" width="0.2" height="15.0" fill="rgb(236,66,24)" rx="2" ry="2" />
<text  x="86.47" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="23.4" y="629" width="0.2" height="15.0" fill="rgb(248,54,10)" rx="2" ry="2" />
<text  x="26.36" y="639.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="207.7" y="789" width="0.5" height="15.0" fill="rgb(251,192,44)" rx="2" ry="2" />
<text  x="210.66" y="799.5" ></text>
</g>
<g >
<title>vp8_init_mode_costs (1 samples, 0.02%)</title><rect x="791.2" y="725" width="0.3" height="15.0" fill="rgb(212,113,54)" rx="2" ry="2" />
<text  x="794.22" y="735.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (1 samples, 0.02%)</title><rect x="284.1" y="597" width="0.2" height="15.0" fill="rgb(224,94,39)" rx="2" ry="2" />
<text  x="287.10" y="607.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::UpdateRtpStats(webrtc::RtpPacketToSend const&amp;, bool, bool) (1 samples, 0.02%)</title><rect x="1160.1" y="901" width="0.2" height="15.0" fill="rgb(221,205,24)" rx="2" ry="2" />
<text  x="1163.07" y="911.5" ></text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::CloneDataIfReferenced(unsigned long) (1 samples, 0.02%)</title><rect x="816.0" y="645" width="0.2" height="15.0" fill="rgb(229,94,34)" rx="2" ry="2" />
<text  x="818.96" y="655.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunWorker() (666 samples, 13.96%)</title><rect x="707.4" y="981" width="164.7" height="15.0" fill="rgb(219,74,38)" rx="2" ry="2" />
<text  x="710.36" y="991.5" >base::internal::Worke..</text>
</g>
<g >
<title>objc_msgSend (1 samples, 0.02%)</title><rect x="86.9" y="917" width="0.3" height="15.0" fill="rgb(231,103,43)" rx="2" ry="2" />
<text  x="89.94" y="927.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="176.5" y="661" width="0.2" height="15.0" fill="rgb(246,104,51)" rx="2" ry="2" />
<text  x="179.49" y="671.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (3 samples, 0.06%)</title><rect x="235.9" y="533" width="0.7" height="15.0" fill="rgb(220,176,2)" rx="2" ry="2" />
<text  x="238.86" y="543.5" ></text>
</g>
<g >
<title>webrtc::vp8::GetQp(unsigned char const*, unsigned long, int*) (1 samples, 0.02%)</title><rect x="962.9" y="821" width="0.3" height="15.0" fill="rgb(240,55,38)" rx="2" ry="2" />
<text  x="965.91" y="831.5" ></text>
</g>
<g >
<title>content::VideoCaptureImpl::DidFinishConsumingFrame(media::VideoFrameMetadata const*, base::OnceCallback&lt;void (double)&gt;) (1 samples, 0.02%)</title><rect x="652.7" y="677" width="0.2" height="15.0" fill="rgb(206,32,4)" rx="2" ry="2" />
<text  x="655.69" y="687.5" ></text>
</g>
<g >
<title>vpx_variance16x16_avx2 (3 samples, 0.06%)</title><rect x="923.1" y="661" width="0.7" height="15.0" fill="rgb(235,8,40)" rx="2" ry="2" />
<text  x="926.08" y="671.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="959.9" y="709" width="0.3" height="15.0" fill="rgb(238,108,10)" rx="2" ry="2" />
<text  x="962.94" y="719.5" ></text>
</g>
<g >
<title>MojoAppendMessageDataImpl (1 samples, 0.02%)</title><rect x="168.1" y="757" width="0.2" height="15.0" fill="rgb(236,197,36)" rx="2" ry="2" />
<text  x="171.08" y="767.5" ></text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::CopyOnWriteBuffer(unsigned long) (1 samples, 0.02%)</title><rect x="1159.3" y="853" width="0.3" height="15.0" fill="rgb(239,156,35)" rx="2" ry="2" />
<text  x="1162.32" y="863.5" ></text>
</g>
<g >
<title>rtc::internal::WeakReference::is_valid() const (1 samples, 0.02%)</title><rect x="683.1" y="821" width="0.3" height="15.0" fill="rgb(219,17,37)" rx="2" ry="2" />
<text  x="686.12" y="831.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="226.5" y="485" width="0.2" height="15.0" fill="rgb(219,140,42)" rx="2" ry="2" />
<text  x="229.46" y="495.5" ></text>
</g>
<g >
<title>WTF::HashTable&lt;void const*, void const*, WTF::IdentityExtractor, WTF::PtrHash&lt;void const&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::PartitionAllocator&gt;::Rehash(unsigned int, void const**) (1 samples, 0.02%)</title><rect x="27.1" y="437" width="0.2" height="15.0" fill="rgb(241,150,44)" rx="2" ry="2" />
<text  x="30.07" y="447.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_full_2x_sse2 (8 samples, 0.17%)</title><rect x="730.1" y="677" width="2.0" height="15.0" fill="rgb(209,40,34)" rx="2" ry="2" />
<text  x="733.12" y="687.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="344.0" y="757" width="0.2" height="15.0" fill="rgb(254,38,15)" rx="2" ry="2" />
<text  x="346.96" y="767.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetSingletonAllowed(bool) (1 samples, 0.02%)</title><rect x="571.1" y="917" width="0.2" height="15.0" fill="rgb(212,76,36)" rx="2" ry="2" />
<text  x="574.06" y="927.5" ></text>
</g>
<g >
<title>(anonymous namespace)::AutoreleasePoolPage::pop(void*) (1 samples, 0.02%)</title><rect x="213.8" y="885" width="0.3" height="15.0" fill="rgb(207,117,32)" rx="2" ry="2" />
<text  x="216.84" y="895.5" ></text>
</g>
<g >
<title>base::PendingTask::PendingTask(base::PendingTask&amp;&amp;) (3 samples, 0.06%)</title><rect x="354.4" y="821" width="0.7" height="15.0" fill="rgb(213,43,31)" rx="2" ry="2" />
<text  x="357.35" y="831.5" ></text>
</g>
<g >
<title>__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (2 samples, 0.04%)</title><rect x="13.0" y="821" width="0.5" height="15.0" fill="rgb(215,128,3)" rx="2" ry="2" />
<text  x="15.97" y="831.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (3 samples, 0.06%)</title><rect x="27.8" y="469" width="0.8" height="15.0" fill="rgb(231,155,7)" rx="2" ry="2" />
<text  x="30.81" y="479.5" ></text>
</g>
<g >
<title>scoped_refptr&lt;base::internal::BindStateBase&gt; base::AdoptRef&lt;base::internal::BindStateBase&gt;(base::internal::BindStateBase*) (2 samples, 0.04%)</title><rect x="203.5" y="805" width="0.4" height="15.0" fill="rgb(244,172,11)" rx="2" ry="2" />
<text  x="206.45" y="815.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (2 samples, 0.04%)</title><rect x="371.7" y="773" width="0.5" height="15.0" fill="rgb(225,24,48)" rx="2" ry="2" />
<text  x="374.67" y="783.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbh_sse2 (3 samples, 0.06%)</title><rect x="526.8" y="693" width="0.7" height="15.0" fill="rgb(249,151,33)" rx="2" ry="2" />
<text  x="529.78" y="703.5" ></text>
</g>
<g >
<title>opus_encode_native (27 samples, 0.57%)</title><rect x="683.9" y="757" width="6.6" height="15.0" fill="rgb(207,101,27)" rx="2" ry="2" />
<text  x="686.86" y="767.5" ></text>
</g>
<g >
<title>base::internal::Sequence::Transaction::PushTask(base::internal::Task) (1 samples, 0.02%)</title><rect x="1134.1" y="741" width="0.2" height="15.0" fill="rgb(219,117,33)" rx="2" ry="2" />
<text  x="1137.09" y="751.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="174.0" y="773" width="0.3" height="15.0" fill="rgb(207,64,7)" rx="2" ry="2" />
<text  x="177.01" y="783.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::CanGetWorkLockRequired(base::internal::WorkerThread*) (11 samples, 0.23%)</title><rect x="698.2" y="949" width="2.7" height="15.0" fill="rgb(240,57,2)" rx="2" ry="2" />
<text  x="701.21" y="959.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::Parse(unsigned char const*, unsigned long) (1 samples, 0.02%)</title><rect x="265.0" y="645" width="0.3" height="15.0" fill="rgb(236,127,50)" rx="2" ry="2" />
<text  x="268.05" y="655.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_half_loop (8 samples, 0.17%)</title><rect x="762.8" y="661" width="2.0" height="15.0" fill="rgb(221,219,6)" rx="2" ry="2" />
<text  x="765.78" y="671.5" ></text>
</g>
<g >
<title>blink::V8Function::Invoke(blink::bindings::V8ValueOrScriptWrappableAdapter, WTF::Vector&lt;blink::ScriptValue, 0u, WTF::PartitionAllocator&gt; const&amp;) (5 samples, 0.10%)</title><rect x="16.9" y="581" width="1.3" height="15.0" fill="rgb(235,204,22)" rx="2" ry="2" />
<text  x="19.93" y="591.5" ></text>
</g>
<g >
<title>media::VideoCadenceEstimator::UpdateCadenceEstimate(base::TimeDelta, base::TimeDelta, base::TimeDelta, base::TimeDelta) (2 samples, 0.04%)</title><rect x="1045.3" y="597" width="0.5" height="15.0" fill="rgb(214,162,23)" rx="2" ry="2" />
<text  x="1048.28" y="607.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (3 samples, 0.06%)</title><rect x="113.4" y="741" width="0.7" height="15.0" fill="rgb(222,204,33)" rx="2" ry="2" />
<text  x="116.40" y="751.5" ></text>
</g>
<g >
<title>szone_size (1 samples, 0.02%)</title><rect x="550.3" y="677" width="0.2" height="15.0" fill="rgb(206,166,38)" rx="2" ry="2" />
<text  x="553.28" y="687.5" ></text>
</g>
<g >
<title>vp8_loop_filter_frame (17 samples, 0.36%)</title><rect x="458.5" y="725" width="4.2" height="15.0" fill="rgb(213,59,34)" rx="2" ry="2" />
<text  x="461.50" y="735.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (3 samples, 0.06%)</title><rect x="181.4" y="853" width="0.8" height="15.0" fill="rgb(240,113,50)" rx="2" ry="2" />
<text  x="184.43" y="863.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.04%)</title><rect x="272.0" y="581" width="0.5" height="15.0" fill="rgb(227,84,32)" rx="2" ry="2" />
<text  x="274.97" y="591.5" ></text>
</g>
<g >
<title>vp8_hex_search (7 samples, 0.15%)</title><rect x="616.1" y="677" width="1.7" height="15.0" fill="rgb(218,14,13)" rx="2" ry="2" />
<text  x="619.08" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnTaskPushedToEmptyQueue(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.02%)</title><rect x="328.4" y="821" width="0.2" height="15.0" fill="rgb(250,21,20)" rx="2" ry="2" />
<text  x="331.38" y="831.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="714.3" y="789" width="0.2" height="15.0" fill="rgb(236,54,3)" rx="2" ry="2" />
<text  x="717.29" y="799.5" ></text>
</g>
<g >
<title>rtc::Thread::IsCurrent() const (1 samples, 0.02%)</title><rect x="285.6" y="789" width="0.2" height="15.0" fill="rgb(212,58,16)" rx="2" ry="2" />
<text  x="288.58" y="799.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="335.6" y="853" width="0.2" height="15.0" fill="rgb(245,102,27)" rx="2" ry="2" />
<text  x="338.55" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnQueuesFrontTaskChanged(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.02%)</title><rect x="46.4" y="645" width="0.2" height="15.0" fill="rgb(215,82,26)" rx="2" ry="2" />
<text  x="49.36" y="655.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_full_2x_sse2 (7 samples, 0.15%)</title><rect x="887.7" y="677" width="1.7" height="15.0" fill="rgb(242,225,33)" rx="2" ry="2" />
<text  x="890.70" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="67.4" y="821" width="0.2" height="15.0" fill="rgb(235,191,24)" rx="2" ry="2" />
<text  x="70.39" y="831.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="1022.0" y="949" width="0.3" height="15.0" fill="rgb(242,171,53)" rx="2" ry="2" />
<text  x="1025.03" y="959.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (3 samples, 0.06%)</title><rect x="880.8" y="869" width="0.7" height="15.0" fill="rgb(249,100,13)" rx="2" ry="2" />
<text  x="883.78" y="879.5" ></text>
</g>
<g >
<title>unsigned long std::__Cr::__tree&lt;webrtc::RtpPacketHistory::StoredPacket*, webrtc::RtpPacketHistory::MoreUseful, std::__Cr::allocator&lt;webrtc::RtpPacketHistory::StoredPacket*&gt; &gt;::__erase_unique&lt;webrtc::RtpPacketHistory::StoredPacket*&gt;(webrtc::RtpPacketHistory::StoredPacket* const&amp;) (1 samples, 0.02%)</title><rect x="854.3" y="725" width="0.3" height="15.0" fill="rgb(248,173,29)" rx="2" ry="2" />
<text  x="857.31" y="735.5" ></text>
</g>
<g >
<title>base::Pickle::Resize(unsigned long) (1 samples, 0.02%)</title><rect x="243.8" y="565" width="0.2" height="15.0" fill="rgb(225,218,52)" rx="2" ry="2" />
<text  x="246.77" y="575.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="186.4" y="789" width="0.2" height="15.0" fill="rgb(228,54,13)" rx="2" ry="2" />
<text  x="189.38" y="799.5" ></text>
</g>
<g >
<title>DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="210.4" y="773" width="0.2" height="15.0" fill="rgb(214,191,28)" rx="2" ry="2" />
<text  x="213.38" y="783.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="292.5" y="597" width="0.3" height="15.0" fill="rgb(250,158,47)" rx="2" ry="2" />
<text  x="295.51" y="607.5" ></text>
</g>
<g >
<title>base::internal::WorkerThreadStack::Pop() (1 samples, 0.02%)</title><rect x="271.7" y="565" width="0.3" height="15.0" fill="rgb(225,206,11)" rx="2" ry="2" />
<text  x="274.73" y="575.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="266.0" y="565" width="0.5" height="15.0" fill="rgb(232,152,10)" rx="2" ry="2" />
<text  x="269.04" y="575.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::Accept(mojo::Message*) (6 samples, 0.13%)</title><rect x="1071.5" y="773" width="1.5" height="15.0" fill="rgb(213,12,47)" rx="2" ry="2" />
<text  x="1074.51" y="783.5" ></text>
</g>
<g >
<title>vp8_mv_pred (3 samples, 0.06%)</title><rect x="617.8" y="677" width="0.8" height="15.0" fill="rgb(251,57,50)" rx="2" ry="2" />
<text  x="620.81" y="687.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="1004.2" y="741" width="0.3" height="15.0" fill="rgb(240,112,14)" rx="2" ry="2" />
<text  x="1007.22" y="751.5" ></text>
</g>
<g >
<title>webrtc::ModuleRtpRtcpImpl::OnSendingRtpFrame(unsigned int, long long, int, bool) (1 samples, 0.02%)</title><rect x="961.4" y="725" width="0.3" height="15.0" fill="rgb(210,103,49)" rx="2" ry="2" />
<text  x="964.42" y="735.5" ></text>
</g>
<g >
<title>silk_find_pred_coefs_FLP (1 samples, 0.02%)</title><rect x="850.6" y="709" width="0.2" height="15.0" fill="rgb(241,10,39)" rx="2" ry="2" />
<text  x="853.60" y="719.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="138.4" y="405" width="0.2" height="15.0" fill="rgb(247,107,54)" rx="2" ry="2" />
<text  x="141.39" y="415.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="184.4" y="773" width="0.2" height="15.0" fill="rgb(219,101,25)" rx="2" ry="2" />
<text  x="187.40" y="783.5" ></text>
</g>
<g >
<title>EVP_EncryptUpdate (1 samples, 0.02%)</title><rect x="306.6" y="485" width="0.3" height="15.0" fill="rgb(237,53,42)" rx="2" ry="2" />
<text  x="309.61" y="495.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkDeduplicator::DidCheckForMoreWork(base::sequence_manager::internal::WorkDeduplicator::NextTask) (3 samples, 0.06%)</title><rect x="192.6" y="901" width="0.7" height="15.0" fill="rgb(210,116,4)" rx="2" ry="2" />
<text  x="195.57" y="911.5" ></text>
</g>
<g >
<title>webrtc::video_coding::FrameBuffer::StartWaitForNextFrameOnQueue() (1 samples, 0.02%)</title><rect x="841.7" y="837" width="0.2" height="15.0" fill="rgb(245,100,1)" rx="2" ry="2" />
<text  x="844.69" y="847.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="85.7" y="773" width="0.2" height="15.0" fill="rgb(218,169,38)" rx="2" ry="2" />
<text  x="88.70" y="783.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="167.6" y="613" width="0.2" height="15.0" fill="rgb(231,215,33)" rx="2" ry="2" />
<text  x="170.58" y="623.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_y_block_sse2 (6 samples, 0.13%)</title><rect x="525.0" y="709" width="1.5" height="15.0" fill="rgb(210,220,0)" rx="2" ry="2" />
<text  x="528.04" y="719.5" ></text>
</g>
<g >
<title>mojo::Message::Message(unsigned int, unsigned int, unsigned long, unsigned long, std::__Cr::vector&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt;, std::__Cr::allocator&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt; &gt; &gt;*) (1 samples, 0.02%)</title><rect x="173.8" y="789" width="0.2" height="15.0" fill="rgb(252,136,47)" rx="2" ry="2" />
<text  x="176.77" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="993.1" y="661" width="0.2" height="15.0" fill="rgb(215,149,33)" rx="2" ry="2" />
<text  x="996.09" y="671.5" ></text>
</g>
<g >
<title>webrtc::TransportPacketsFeedback::TransportPacketsFeedback(webrtc::TransportPacketsFeedback const&amp;) (1 samples, 0.02%)</title><rect x="275.7" y="693" width="0.2" height="15.0" fill="rgb(241,156,52)" rx="2" ry="2" />
<text  x="278.69" y="703.5" ></text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::Dispatch(rtc::Message*) (263 samples, 5.51%)</title><rect x="232.4" y="837" width="65.1" height="15.0" fill="rgb(226,16,34)" rx="2" ry="2" />
<text  x="235.39" y="847.5" >jingle_..</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="208.6" y="853" width="0.3" height="15.0" fill="rgb(209,202,3)" rx="2" ry="2" />
<text  x="211.65" y="863.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.02%)</title><rect x="357.1" y="741" width="0.2" height="15.0" fill="rgb(227,139,10)" rx="2" ry="2" />
<text  x="360.07" y="751.5" ></text>
</g>
<g >
<title>base::ReadFromFD(int, char*, unsigned long) (15 samples, 0.31%)</title><rect x="1092.0" y="965" width="3.7" height="15.0" fill="rgb(214,161,16)" rx="2" ry="2" />
<text  x="1095.04" y="975.5" ></text>
</g>
<g >
<title>vp8_post_proc_frame (21 samples, 0.44%)</title><rect x="817.0" y="741" width="5.1" height="15.0" fill="rgb(231,87,9)" rx="2" ry="2" />
<text  x="819.95" y="751.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_other_loop (10 samples, 0.21%)</title><rect x="764.8" y="661" width="2.4" height="15.0" fill="rgb(214,164,5)" rx="2" ry="2" />
<text  x="767.75" y="671.5" ></text>
</g>
<g >
<title>vp8_loop_filter_vertical_edge_uv_sse2 (2 samples, 0.04%)</title><rect x="989.4" y="693" width="0.5" height="15.0" fill="rgb(233,93,3)" rx="2" ry="2" />
<text  x="992.38" y="703.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::ForwardEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (5 samples, 0.10%)</title><rect x="1046.8" y="501" width="1.2" height="15.0" fill="rgb(210,193,38)" rx="2" ry="2" />
<text  x="1049.77" y="511.5" ></text>
</g>
<g >
<title>base::internal::TaskTrackerPosix::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (150 samples, 3.14%)</title><rect x="1023.0" y="949" width="37.1" height="15.0" fill="rgb(224,210,9)" rx="2" ry="2" />
<text  x="1026.02" y="959.5" >bas..</text>
</g>
<g >
<title>vp8cx_encode_inter_macroblock (257 samples, 5.39%)</title><rect x="727.2" y="709" width="63.5" height="15.0" fill="rgb(219,178,28)" rx="2" ry="2" />
<text  x="730.15" y="719.5" >vp8cx_..</text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="661.6" y="709" width="0.2" height="15.0" fill="rgb(219,50,44)" rx="2" ry="2" />
<text  x="664.60" y="719.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (2 samples, 0.04%)</title><rect x="1157.8" y="725" width="0.5" height="15.0" fill="rgb(248,229,52)" rx="2" ry="2" />
<text  x="1160.84" y="735.5" ></text>
</g>
<g >
<title>MojoDestroyMessage (1 samples, 0.02%)</title><rect x="228.4" y="757" width="0.3" height="15.0" fill="rgb(221,98,4)" rx="2" ry="2" />
<text  x="231.44" y="767.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="174.8" y="709" width="0.2" height="15.0" fill="rgb(234,203,47)" rx="2" ry="2" />
<text  x="177.75" y="719.5" ></text>
</g>
<g >
<title>blink::PageAnimator::ScheduleVisualUpdate(blink::LocalFrame*) (2 samples, 0.04%)</title><rect x="19.2" y="533" width="0.4" height="15.0" fill="rgb(235,206,9)" rx="2" ry="2" />
<text  x="22.15" y="543.5" ></text>
</g>
<g >
<title>base::WriteFileDescriptor(int, char const*, int) (3 samples, 0.06%)</title><rect x="1103.2" y="949" width="0.7" height="15.0" fill="rgb(237,82,22)" rx="2" ry="2" />
<text  x="1106.17" y="959.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::AudioCodingModuleImpl::ReceiveCodec() const (4 samples, 0.08%)</title><rect x="1129.6" y="853" width="1.0" height="15.0" fill="rgb(222,151,51)" rx="2" ry="2" />
<text  x="1132.64" y="863.5" ></text>
</g>
<g >
<title>media::mojom::VideoCaptureHostProxy::ReleaseBuffer(int, int, double) (8 samples, 0.17%)</title><rect x="172.0" y="805" width="2.0" height="15.0" fill="rgb(231,187,27)" rx="2" ry="2" />
<text  x="175.03" y="815.5" ></text>
</g>
<g >
<title>viz::mojom::CompositorFrameSinkClientRequestValidator::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="1066.8" y="757" width="0.3" height="15.0" fill="rgb(216,214,17)" rx="2" ry="2" />
<text  x="1069.81" y="767.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::ForwardEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (14 samples, 0.29%)</title><rect x="246.0" y="501" width="3.5" height="15.0" fill="rgb(229,66,27)" rx="2" ry="2" />
<text  x="249.00" y="511.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::RecordCrashKeys(base::PendingTask const&amp;) (1 samples, 0.02%)</title><rect x="344.0" y="821" width="0.2" height="15.0" fill="rgb(205,15,26)" rx="2" ry="2" />
<text  x="346.96" y="831.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="1168.0" y="917" width="0.2" height="15.0" fill="rgb(236,153,0)" rx="2" ry="2" />
<text  x="1170.98" y="927.5" ></text>
</g>
<g >
<title>DYLD-STUB$$memset (1 samples, 0.02%)</title><rect x="646.8" y="725" width="0.2" height="15.0" fill="rgb(219,120,25)" rx="2" ry="2" />
<text  x="649.75" y="735.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="816.0" y="549" width="0.2" height="15.0" fill="rgb(251,103,47)" rx="2" ry="2" />
<text  x="818.96" y="559.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Leave() const (1 samples, 0.02%)</title><rect x="238.6" y="725" width="0.2" height="15.0" fill="rgb(214,87,45)" rx="2" ry="2" />
<text  x="241.58" y="735.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (2 samples, 0.04%)</title><rect x="277.2" y="565" width="0.5" height="15.0" fill="rgb(210,174,5)" rx="2" ry="2" />
<text  x="280.17" y="575.5" ></text>
</g>
<g >
<title>webrtc::RtpTransport::IsWritable(bool) const (1 samples, 0.02%)</title><rect x="234.4" y="789" width="0.2" height="15.0" fill="rgb(244,46,51)" rx="2" ry="2" />
<text  x="237.37" y="799.5" ></text>
</g>
<g >
<title>base::MessagePump::Delegate::NextWorkInfo::remaining_delay() const (1 samples, 0.02%)</title><rect x="215.8" y="917" width="0.3" height="15.0" fill="rgb(228,178,11)" rx="2" ry="2" />
<text  x="218.82" y="927.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="93.6" y="837" width="0.3" height="15.0" fill="rgb(212,15,14)" rx="2" ry="2" />
<text  x="96.61" y="847.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="718.2" y="869" width="0.3" height="15.0" fill="rgb(246,196,6)" rx="2" ry="2" />
<text  x="721.25" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::TimeDomain::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (7 samples, 0.15%)</title><rect x="83.5" y="805" width="1.7" height="15.0" fill="rgb(235,202,45)" rx="2" ry="2" />
<text  x="86.47" y="815.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (13 samples, 0.27%)</title><rect x="1083.4" y="821" width="3.2" height="15.0" fill="rgb(232,67,30)" rx="2" ry="2" />
<text  x="1086.38" y="831.5" ></text>
</g>
<g >
<title>vp8dx_get_raw_frame (25 samples, 0.52%)</title><rect x="488.7" y="757" width="6.2" height="15.0" fill="rgb(213,126,46)" rx="2" ry="2" />
<text  x="491.68" y="767.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (3 samples, 0.06%)</title><rect x="880.8" y="853" width="0.7" height="15.0" fill="rgb(249,81,6)" rx="2" ry="2" />
<text  x="883.78" y="863.5" ></text>
</g>
<g >
<title>mach_msg (10 samples, 0.21%)</title><rect x="198.0" y="885" width="2.5" height="15.0" fill="rgb(215,85,5)" rx="2" ry="2" />
<text  x="201.01" y="895.5" ></text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="578.5" y="885" width="0.2" height="15.0" fill="rgb(213,11,2)" rx="2" ry="2" />
<text  x="581.48" y="895.5" ></text>
</g>
<g >
<title>-[NSAutoreleasePool drain] (3 samples, 0.06%)</title><rect x="87.7" y="917" width="0.7" height="15.0" fill="rgb(209,140,3)" rx="2" ry="2" />
<text  x="90.68" y="927.5" ></text>
</g>
<g >
<title>webrtc::RtpDemuxer::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (14 samples, 0.29%)</title><rect x="278.2" y="725" width="3.4" height="15.0" fill="rgb(206,185,29)" rx="2" ry="2" />
<text  x="281.16" y="735.5" ></text>
</g>
<g >
<title>__ulock_wait (1 samples, 0.02%)</title><rect x="294.7" y="741" width="0.3" height="15.0" fill="rgb(211,88,24)" rx="2" ry="2" />
<text  x="297.73" y="751.5" ></text>
</g>
<g >
<title>webrtc::TransportFeedbackAdapter::ProcessSentPacket(rtc::SentPacket const&amp;) (1 samples, 0.02%)</title><rect x="291.3" y="773" width="0.2" height="15.0" fill="rgb(228,73,4)" rx="2" ry="2" />
<text  x="294.27" y="783.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="138.4" y="469" width="0.2" height="15.0" fill="rgb(254,27,30)" rx="2" ry="2" />
<text  x="141.39" y="479.5" ></text>
</g>
<g >
<title>vp8_tokenize_mb (24 samples, 0.50%)</title><rect x="783.8" y="693" width="5.9" height="15.0" fill="rgb(250,125,12)" rx="2" ry="2" />
<text  x="786.80" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::NotifyWillProcessTask(base::PendingTask const&amp;) (4 samples, 0.08%)</title><rect x="345.4" y="821" width="1.0" height="15.0" fill="rgb(233,42,36)" rx="2" ry="2" />
<text  x="348.45" y="831.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="184.4" y="789" width="0.5" height="15.0" fill="rgb(223,38,29)" rx="2" ry="2" />
<text  x="187.40" y="799.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (7 samples, 0.15%)</title><rect x="79.0" y="757" width="1.8" height="15.0" fill="rgb(219,163,29)" rx="2" ry="2" />
<text  x="82.02" y="767.5" ></text>
</g>
<g >
<title>CFAbsoluteTimeGetCurrent (1 samples, 0.02%)</title><rect x="10.2" y="869" width="0.3" height="15.0" fill="rgb(254,9,11)" rx="2" ry="2" />
<text  x="13.25" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (5 samples, 0.10%)</title><rect x="1028.7" y="805" width="1.2" height="15.0" fill="rgb(230,188,29)" rx="2" ry="2" />
<text  x="1031.71" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (4 samples, 0.08%)</title><rect x="38.4" y="709" width="1.0" height="15.0" fill="rgb(217,56,28)" rx="2" ry="2" />
<text  x="41.45" y="719.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="97.6" y="869" width="0.2" height="15.0" fill="rgb(208,30,43)" rx="2" ry="2" />
<text  x="100.57" y="879.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="208.2" y="693" width="0.2" height="15.0" fill="rgb(248,19,1)" rx="2" ry="2" />
<text  x="211.15" y="703.5" ></text>
</g>
<g >
<title>MergeUVPlane (4 samples, 0.08%)</title><rect x="63.7" y="901" width="1.0" height="15.0" fill="rgb(224,169,39)" rx="2" ry="2" />
<text  x="66.68" y="911.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::WriteMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="165.8" y="693" width="0.3" height="15.0" fill="rgb(244,24,52)" rx="2" ry="2" />
<text  x="168.85" y="703.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::InitControllerIfNecessary() (2 samples, 0.04%)</title><rect x="244.3" y="629" width="0.5" height="15.0" fill="rgb(226,193,30)" rx="2" ry="2" />
<text  x="247.27" y="639.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::~LockImpl() (1 samples, 0.02%)</title><rect x="1074.0" y="725" width="0.2" height="15.0" fill="rgb(250,111,16)" rx="2" ry="2" />
<text  x="1076.98" y="735.5" ></text>
</g>
<g >
<title>webrtc::VCMDecodedFrameCallback::Decoded(webrtc::VideoFrame&amp;, absl::optional&lt;int&gt;, absl::optional&lt;unsigned char&gt;) (1 samples, 0.02%)</title><rect x="682.9" y="757" width="0.2" height="15.0" fill="rgb(240,177,19)" rx="2" ry="2" />
<text  x="685.87" y="767.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork() (1 samples, 0.02%)</title><rect x="13.2" y="757" width="0.3" height="15.0" fill="rgb(222,133,53)" rx="2" ry="2" />
<text  x="16.22" y="767.5" ></text>
</g>
<g >
<title>mojo::core::ports::(anonymous namespace)::UpdateTLS(mojo::core::ports::PortLocker*, mojo::core::ports::PortLocker*) (1 samples, 0.02%)</title><rect x="115.1" y="789" width="0.3" height="15.0" fill="rgb(231,49,17)" rx="2" ry="2" />
<text  x="118.14" y="799.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="574.3" y="789" width="0.2" height="15.0" fill="rgb(225,55,41)" rx="2" ry="2" />
<text  x="577.27" y="799.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::TransportFeedbackProxy::OnTransportFeedback(webrtc::rtcp::TransportFeedback const&amp;) (2 samples, 0.04%)</title><rect x="284.6" y="709" width="0.5" height="15.0" fill="rgb(207,75,49)" rx="2" ry="2" />
<text  x="287.59" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (2 samples, 0.04%)</title><rect x="292.8" y="757" width="0.4" height="15.0" fill="rgb(213,225,28)" rx="2" ry="2" />
<text  x="295.75" y="767.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="107.5" y="661" width="0.2" height="15.0" fill="rgb(228,141,45)" rx="2" ry="2" />
<text  x="110.47" y="671.5" ></text>
</g>
<g >
<title>EVP_CipherInit_ex (1 samples, 0.02%)</title><rect x="238.3" y="709" width="0.3" height="15.0" fill="rgb(247,137,38)" rx="2" ry="2" />
<text  x="241.33" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (2 samples, 0.04%)</title><rect x="340.7" y="805" width="0.5" height="15.0" fill="rgb(219,119,26)" rx="2" ry="2" />
<text  x="343.75" y="815.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="223.5" y="885" width="0.2" height="15.0" fill="rgb(225,142,51)" rx="2" ry="2" />
<text  x="226.49" y="895.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (5 samples, 0.10%)</title><rect x="875.3" y="949" width="1.3" height="15.0" fill="rgb(240,223,2)" rx="2" ry="2" />
<text  x="878.33" y="959.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="209.9" y="837" width="0.2" height="15.0" fill="rgb(236,139,0)" rx="2" ry="2" />
<text  x="212.88" y="847.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::SendToNetwork(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType) (3 samples, 0.06%)</title><rect x="854.1" y="789" width="0.7" height="15.0" fill="rgb(226,113,4)" rx="2" ry="2" />
<text  x="857.06" y="799.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="1162.5" y="901" width="0.5" height="15.0" fill="rgb(226,166,0)" rx="2" ry="2" />
<text  x="1165.54" y="911.5" ></text>
</g>
<g >
<title>base::internal::Sequence::BeginTransaction() (1 samples, 0.02%)</title><rect x="257.4" y="629" width="0.2" height="15.0" fill="rgb(244,22,7)" rx="2" ry="2" />
<text  x="260.38" y="639.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="139.1" y="501" width="0.3" height="15.0" fill="rgb(217,108,28)" rx="2" ry="2" />
<text  x="142.13" y="511.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (4 samples, 0.08%)</title><rect x="371.2" y="837" width="1.0" height="15.0" fill="rgb(224,158,39)" rx="2" ry="2" />
<text  x="374.17" y="847.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (10 samples, 0.21%)</title><rect x="412.7" y="661" width="2.5" height="15.0" fill="rgb(205,115,8)" rx="2" ry="2" />
<text  x="415.73" y="671.5" ></text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::RunWork() (133 samples, 2.79%)</title><rect x="14.0" y="757" width="32.9" height="15.0" fill="rgb(208,168,32)" rx="2" ry="2" />
<text  x="16.96" y="767.5" >ba..</text>
</g>
<g >
<title>base::SequenceToken::IsValid() const (1 samples, 0.02%)</title><rect x="45.4" y="629" width="0.2" height="15.0" fill="rgb(238,173,10)" rx="2" ry="2" />
<text  x="48.38" y="639.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="140.6" y="325" width="0.3" height="15.0" fill="rgb(211,23,0)" rx="2" ry="2" />
<text  x="143.62" y="335.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="311.1" y="565" width="0.2" height="15.0" fill="rgb(251,7,44)" rx="2" ry="2" />
<text  x="314.06" y="575.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::SendChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (1 samples, 0.02%)</title><rect x="236.1" y="469" width="0.3" height="15.0" fill="rgb(205,5,39)" rx="2" ry="2" />
<text  x="239.10" y="479.5" ></text>
</g>
<g >
<title>vpx_variance16x16_avx2 (3 samples, 0.06%)</title><rect x="598.3" y="661" width="0.7" height="15.0" fill="rgb(217,8,3)" rx="2" ry="2" />
<text  x="601.27" y="671.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="32.8" y="597" width="0.2" height="15.0" fill="rgb(251,95,36)" rx="2" ry="2" />
<text  x="35.76" y="607.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (19 samples, 0.40%)</title><rect x="54.3" y="1013" width="4.7" height="15.0" fill="rgb(207,205,41)" rx="2" ry="2" />
<text  x="57.28" y="1023.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (2 samples, 0.04%)</title><rect x="556.0" y="933" width="0.5" height="15.0" fill="rgb(215,28,44)" rx="2" ry="2" />
<text  x="558.97" y="943.5" ></text>
</g>
<g >
<title>silk_NLSF_encode (2 samples, 0.04%)</title><rect x="1000.8" y="661" width="0.4" height="15.0" fill="rgb(226,6,40)" rx="2" ry="2" />
<text  x="1003.75" y="671.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::~WeakReference() (1 samples, 0.02%)</title><rect x="1067.8" y="757" width="0.2" height="15.0" fill="rgb(244,67,4)" rx="2" ry="2" />
<text  x="1070.79" y="767.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (2 samples, 0.04%)</title><rect x="272.0" y="517" width="0.5" height="15.0" fill="rgb(212,96,18)" rx="2" ry="2" />
<text  x="274.97" y="527.5" ></text>
</g>
<g >
<title>cc::ProxyImpl::ScheduledActionDrawIfPossible() (4 samples, 0.08%)</title><rect x="1068.0" y="805" width="1.0" height="15.0" fill="rgb(223,125,43)" rx="2" ry="2" />
<text  x="1071.04" y="815.5" ></text>
</g>
<g >
<title>object_setClass (1 samples, 0.02%)</title><rect x="10.7" y="837" width="0.3" height="15.0" fill="rgb(250,141,3)" rx="2" ry="2" />
<text  x="13.74" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="187.4" y="821" width="0.2" height="15.0" fill="rgb(239,113,9)" rx="2" ry="2" />
<text  x="190.37" y="831.5" ></text>
</g>
<g >
<title>mach_port_extract_member (4 samples, 0.08%)</title><rect x="49.1" y="837" width="1.0" height="15.0" fill="rgb(226,6,14)" rx="2" ry="2" />
<text  x="52.09" y="847.5" ></text>
</g>
<g >
<title>thread_start (12 samples, 0.25%)</title><rect x="62.7" y="1061" width="3.0" height="15.0" fill="rgb(248,216,49)" rx="2" ry="2" />
<text  x="65.69" y="1071.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::GetClock() (1 samples, 0.02%)</title><rect x="223.5" y="869" width="0.2" height="15.0" fill="rgb(238,151,23)" rx="2" ry="2" />
<text  x="226.49" y="879.5" ></text>
</g>
<g >
<title>vp8_loop_filter_partial_frame (1 samples, 0.02%)</title><rect x="462.7" y="709" width="0.3" height="15.0" fill="rgb(248,115,51)" rx="2" ry="2" />
<text  x="465.70" y="719.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="1181.6" y="709" width="0.2" height="15.0" fill="rgb(208,2,36)" rx="2" ry="2" />
<text  x="1184.59" y="719.5" ></text>
</g>
<g >
<title>webrtc::DecoderDatabase::IsComfortNoise(unsigned char) const (1 samples, 0.02%)</title><rect x="1126.9" y="757" width="0.3" height="15.0" fill="rgb(233,37,43)" rx="2" ry="2" />
<text  x="1129.92" y="767.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (1 samples, 0.02%)</title><rect x="989.1" y="677" width="0.3" height="15.0" fill="rgb(223,58,46)" rx="2" ry="2" />
<text  x="992.13" y="687.5" ></text>
</g>
<g >
<title>gpu::MailboxHolder::MailboxHolder() (1 samples, 0.02%)</title><rect x="137.6" y="501" width="0.3" height="15.0" fill="rgb(251,66,51)" rx="2" ry="2" />
<text  x="140.65" y="511.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;), base::internal::UnretainedWrapper&lt;(anonymous namespace)::WebrtcTaskQueue&gt;, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (461 samples, 9.66%)</title><rect x="578.7" y="885" width="114.1" height="15.0" fill="rgb(230,150,22)" rx="2" ry="2" />
<text  x="581.73" y="895.5" >base::internal..</text>
</g>
<g >
<title>vpx_variance16x16_avx2 (3 samples, 0.06%)</title><rect x="746.4" y="661" width="0.8" height="15.0" fill="rgb(214,28,23)" rx="2" ry="2" />
<text  x="749.45" y="671.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="67.4" y="741" width="0.2" height="15.0" fill="rgb(219,42,26)" rx="2" ry="2" />
<text  x="70.39" y="751.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::Accept(mojo::Message*) (21 samples, 0.44%)</title><rect x="136.2" y="661" width="5.2" height="15.0" fill="rgb(229,144,24)" rx="2" ry="2" />
<text  x="139.16" y="671.5" ></text>
</g>
<g >
<title>blink::LayoutObject::GetDocument() const (1 samples, 0.02%)</title><rect x="25.6" y="357" width="0.2" height="15.0" fill="rgb(223,92,11)" rx="2" ry="2" />
<text  x="28.58" y="367.5" ></text>
</g>
<g >
<title>cricket::WebRtcVoiceMediaChannel::OnPacketReceived(rtc::CopyOnWriteBuffer, long long) (29 samples, 0.61%)</title><rect x="275.9" y="789" width="7.2" height="15.0" fill="rgb(254,86,41)" rx="2" ry="2" />
<text  x="278.93" y="799.5" ></text>
</g>
<g >
<title>webrtc::IntervalBudget::budget_ratio() const (2 samples, 0.04%)</title><rect x="580.2" y="805" width="0.5" height="15.0" fill="rgb(254,126,12)" rx="2" ry="2" />
<text  x="583.21" y="815.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="661.4" y="677" width="0.2" height="15.0" fill="rgb(241,1,10)" rx="2" ry="2" />
<text  x="664.35" y="687.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (1 samples, 0.02%)</title><rect x="487.9" y="709" width="0.3" height="15.0" fill="rgb(224,47,7)" rx="2" ry="2" />
<text  x="490.94" y="719.5" ></text>
</g>
<g >
<title>webrtc::Normal::Process(short const*, unsigned long, webrtc::Modes, webrtc::AudioMultiVector*) (1 samples, 0.02%)</title><rect x="1128.2" y="789" width="0.2" height="15.0" fill="rgb(243,34,19)" rx="2" ry="2" />
<text  x="1131.16" y="799.5" ></text>
</g>
<g >
<title>cricket::UDPPort::OnReadPacket(rtc::AsyncPacketSocket*, char const*, unsigned long, rtc::SocketAddress const&amp;, long long const&amp;) (1 samples, 0.02%)</title><rect x="311.6" y="613" width="0.2" height="15.0" fill="rgb(254,28,31)" rx="2" ry="2" />
<text  x="314.56" y="623.5" ></text>
</g>
<g >
<title>backtrace (1 samples, 0.02%)</title><rect x="879.5" y="869" width="0.3" height="15.0" fill="rgb(219,198,23)" rx="2" ry="2" />
<text  x="882.54" y="879.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (1 samples, 0.02%)</title><rect x="19.9" y="453" width="0.2" height="15.0" fill="rgb(234,88,40)" rx="2" ry="2" />
<text  x="22.90" y="463.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::IsShutdownComplete() const (5 samples, 0.10%)</title><rect x="875.3" y="965" width="1.3" height="15.0" fill="rgb(227,212,46)" rx="2" ry="2" />
<text  x="878.33" y="975.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (461 samples, 9.66%)</title><rect x="578.7" y="901" width="114.1" height="15.0" fill="rgb(226,9,34)" rx="2" ry="2" />
<text  x="581.73" y="911.5" >base::TaskAnno..</text>
</g>
<g >
<title>mach_msg (4 samples, 0.08%)</title><rect x="874.3" y="933" width="1.0" height="15.0" fill="rgb(210,228,53)" rx="2" ry="2" />
<text  x="877.34" y="943.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="225.2" y="581" width="0.3" height="15.0" fill="rgb(232,219,37)" rx="2" ry="2" />
<text  x="228.22" y="591.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="138.4" y="453" width="0.2" height="15.0" fill="rgb(233,205,0)" rx="2" ry="2" />
<text  x="141.39" y="463.5" ></text>
</g>
<g >
<title>webrtc::TransportFeedbackAdapter::ProcessTransportFeedback(webrtc::rtcp::TransportFeedback const&amp;, webrtc::Timestamp) (1 samples, 0.02%)</title><rect x="284.8" y="677" width="0.3" height="15.0" fill="rgb(206,207,24)" rx="2" ry="2" />
<text  x="287.84" y="687.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::operator!=(base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter const&amp;) const (4 samples, 0.08%)</title><rect x="31.0" y="677" width="1.0" height="15.0" fill="rgb(205,93,25)" rx="2" ry="2" />
<text  x="34.03" y="687.5" ></text>
</g>
<g >
<title>rtc::RateTracker::AddSamples(unsigned long) (1 samples, 0.02%)</title><rect x="227.4" y="645" width="0.3" height="15.0" fill="rgb(231,182,8)" rx="2" ry="2" />
<text  x="230.45" y="655.5" ></text>
</g>
<g >
<title>mojo::core::Core::WriteMessage(unsigned int, unsigned long, MojoWriteMessageOptions const*) (1 samples, 0.02%)</title><rect x="1067.3" y="661" width="0.2" height="15.0" fill="rgb(205,207,46)" rx="2" ry="2" />
<text  x="1070.30" y="671.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3.filter_block1d8_h4_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="501.0" y="677" width="0.3" height="15.0" fill="rgb(254,188,23)" rx="2" ry="2" />
<text  x="504.05" y="687.5" ></text>
</g>
<g >
<title>base::WriteFileDescriptor(int, char const*, int) (8 samples, 0.17%)</title><rect x="1087.8" y="949" width="2.0" height="15.0" fill="rgb(224,126,42)" rx="2" ry="2" />
<text  x="1090.83" y="959.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Enter() const (1 samples, 0.02%)</title><rect x="1177.9" y="933" width="0.2" height="15.0" fill="rgb(238,120,42)" rx="2" ry="2" />
<text  x="1180.88" y="943.5" ></text>
</g>
<g >
<title>std::__Cr::vector&lt;scoped_refptr&lt;mojo::core::Watch&gt;, base::StackAllocator&lt;scoped_refptr&lt;mojo::core::Watch&gt;, 8ul&gt; &gt;::reserve(unsigned long) (1 samples, 0.02%)</title><rect x="251.4" y="565" width="0.3" height="15.0" fill="rgb(238,3,43)" rx="2" ry="2" />
<text  x="254.44" y="575.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (2 samples, 0.04%)</title><rect x="661.1" y="693" width="0.5" height="15.0" fill="rgb(253,67,14)" rx="2" ry="2" />
<text  x="664.10" y="703.5" ></text>
</g>
<g >
<title>_kernelrpc_mach_port_insert_member_trap (7 samples, 0.15%)</title><rect x="50.1" y="821" width="1.7" height="15.0" fill="rgb(218,154,9)" rx="2" ry="2" />
<text  x="53.08" y="831.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="264.8" y="581" width="0.2" height="15.0" fill="rgb(216,186,4)" rx="2" ry="2" />
<text  x="267.80" y="591.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="186.6" y="805" width="0.5" height="15.0" fill="rgb(231,202,53)" rx="2" ry="2" />
<text  x="189.63" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::GetClock() (1 samples, 0.02%)</title><rect x="334.8" y="869" width="0.3" height="15.0" fill="rgb(230,101,8)" rx="2" ry="2" />
<text  x="337.81" y="879.5" ></text>
</g>
<g >
<title>sctp_timeout_handler (3 samples, 0.06%)</title><rect x="53.5" y="997" width="0.8" height="15.0" fill="rgb(207,198,38)" rx="2" ry="2" />
<text  x="56.54" y="1007.5" ></text>
</g>
<g >
<title>quant_band (1 samples, 0.02%)</title><rect x="684.1" y="709" width="0.3" height="15.0" fill="rgb(213,32,54)" rx="2" ry="2" />
<text  x="687.11" y="719.5" ></text>
</g>
<g >
<title>media::VideoResourceUpdater::CreateForHardwarePlanes(scoped_refptr&lt;media::VideoFrame&gt;) (2 samples, 0.04%)</title><rect x="1038.9" y="581" width="0.4" height="15.0" fill="rgb(210,223,28)" rx="2" ry="2" />
<text  x="1041.85" y="591.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="196.5" y="837" width="0.3" height="15.0" fill="rgb(206,148,18)" rx="2" ry="2" />
<text  x="199.52" y="847.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="1026.7" y="821" width="0.5" height="15.0" fill="rgb(219,83,22)" rx="2" ry="2" />
<text  x="1029.73" y="831.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunSharedWorker  0x644dc3 (181 samples, 3.79%)</title><rect x="1020.5" y="1077" width="44.8" height="15.0" fill="rgb(212,47,44)" rx="2" ry="2" />
<text  x="1023.55" y="1087.5" >base..</text>
</g>
<g >
<title>webrtc::OpusFrame::Decode(rtc::ArrayView&lt;short, -4711l&gt;) const (40 samples, 0.84%)</title><rect x="1115.3" y="757" width="9.9" height="15.0" fill="rgb(235,173,20)" rx="2" ry="2" />
<text  x="1118.29" y="767.5" ></text>
</g>
<g >
<title>mojo::Connector::DispatchNextMessageInQueue() (1 samples, 0.02%)</title><rect x="1066.8" y="869" width="0.3" height="15.0" fill="rgb(242,220,39)" rx="2" ry="2" />
<text  x="1069.81" y="879.5" ></text>
</g>
<g >
<title>base::MessagePumpDefault::Run(base::MessagePump::Delegate*) (67 samples, 1.40%)</title><rect x="197.0" y="933" width="16.6" height="15.0" fill="rgb(239,45,8)" rx="2" ry="2" />
<text  x="200.02" y="943.5" ></text>
</g>
<g >
<title>base::RunLoop::RunWithTimeout(base::TimeDelta) (171 samples, 3.58%)</title><rect x="10.0" y="949" width="42.3" height="15.0" fill="rgb(237,74,23)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >bas..</text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="24.1" y="549" width="0.2" height="15.0" fill="rgb(248,83,25)" rx="2" ry="2" />
<text  x="27.10" y="559.5" ></text>
</g>
<g >
<title>small_size (1 samples, 0.02%)</title><rect x="1026.2" y="869" width="0.3" height="15.0" fill="rgb(208,170,46)" rx="2" ry="2" />
<text  x="1029.23" y="879.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (1 samples, 0.02%)</title><rect x="420.2" y="661" width="0.2" height="15.0" fill="rgb(213,207,11)" rx="2" ry="2" />
<text  x="423.16" y="671.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="716.3" y="869" width="0.2" height="15.0" fill="rgb(244,196,15)" rx="2" ry="2" />
<text  x="719.27" y="879.5" ></text>
</g>
<g >
<title>blink::HeapAllocator::FreeVectorBacking(void*) (1 samples, 0.02%)</title><rect x="19.6" y="645" width="0.3" height="15.0" fill="rgb(214,135,10)" rx="2" ry="2" />
<text  x="22.65" y="655.5" ></text>
</g>
<g >
<title>base::ScopedClosureRunner::~ScopedClosureRunner() (1 samples, 0.02%)</title><rect x="64.7" y="917" width="0.2" height="15.0" fill="rgb(254,164,28)" rx="2" ry="2" />
<text  x="67.67" y="927.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3.filter_block1d8_h4_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="991.4" y="693" width="0.2" height="15.0" fill="rgb(222,169,0)" rx="2" ry="2" />
<text  x="994.35" y="703.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Run(void*) (39 samples, 0.82%)</title><rect x="1168.7" y="997" width="9.7" height="15.0" fill="rgb(226,110,40)" rx="2" ry="2" />
<text  x="1171.73" y="1007.5" ></text>
</g>
<g >
<title>mach_msg (18 samples, 0.38%)</title><rect x="97.8" y="869" width="4.5" height="15.0" fill="rgb(213,166,50)" rx="2" ry="2" />
<text  x="100.82" y="879.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::WriteChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (4 samples, 0.08%)</title><rect x="166.6" y="581" width="1.0" height="15.0" fill="rgb(228,98,22)" rx="2" ry="2" />
<text  x="169.59" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (3 samples, 0.06%)</title><rect x="211.1" y="837" width="0.8" height="15.0" fill="rgb(234,132,18)" rx="2" ry="2" />
<text  x="214.12" y="847.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="276.7" y="597" width="0.2" height="15.0" fill="rgb(207,136,4)" rx="2" ry="2" />
<text  x="279.68" y="607.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="31.0" y="613" width="0.3" height="15.0" fill="rgb(232,165,46)" rx="2" ry="2" />
<text  x="34.03" y="623.5" ></text>
</g>
<g >
<title>vp8_get_compressed_data (368 samples, 7.71%)</title><rect x="722.9" y="757" width="91.1" height="15.0" fill="rgb(228,56,44)" rx="2" ry="2" />
<text  x="725.95" y="767.5" >vp8_get_co..</text>
</g>
<g >
<title>base::internal::WeakReferenceOwner::GetRef() const (1 samples, 0.02%)</title><rect x="34.2" y="645" width="0.3" height="15.0" fill="rgb(222,191,15)" rx="2" ry="2" />
<text  x="37.24" y="655.5" ></text>
</g>
<g >
<title>cc::RasterSource::HasRecordings() const (1 samples, 0.02%)</title><rect x="1071.3" y="741" width="0.2" height="15.0" fill="rgb(246,174,10)" rx="2" ry="2" />
<text  x="1074.26" y="751.5" ></text>
</g>
<g >
<title>webrtc::DelayManager::BufferLimits(int*, int*) const (1 samples, 0.02%)</title><rect x="1127.2" y="757" width="0.2" height="15.0" fill="rgb(209,185,19)" rx="2" ry="2" />
<text  x="1130.17" y="767.5" ></text>
</g>
<g >
<title>cc::(anonymous namespace)::CreateTilingSetRasterQueues(std::__Cr::vector&lt;cc::PictureLayerImpl*, std::__Cr::allocator&lt;cc::PictureLayerImpl*&gt; &gt; const&amp;, cc::TreePriority, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;cc::TilingSetRasterQueueAll, std::__Cr::default_delete&lt;cc::TilingSetRasterQueueAll&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;cc::TilingSetRasterQueueAll, std::__Cr::default_delete&lt;cc::TilingSetRasterQueueAll&gt; &gt; &gt; &gt;*) (1 samples, 0.02%)</title><rect x="1067.5" y="693" width="0.3" height="15.0" fill="rgb(254,173,27)" rx="2" ry="2" />
<text  x="1070.55" y="703.5" ></text>
</g>
<g >
<title>webrtc::RtcEventRtpPacketOutgoing::IsConfigEvent() const (1 samples, 0.02%)</title><rect x="380.6" y="805" width="0.2" height="15.0" fill="rgb(234,180,11)" rx="2" ry="2" />
<text  x="383.57" y="815.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="556.5" y="917" width="0.2" height="15.0" fill="rgb(235,9,0)" rx="2" ry="2" />
<text  x="559.46" y="927.5" ></text>
</g>
<g >
<title>CFBasicHashApply (1 samples, 0.02%)</title><rect x="13.7" y="805" width="0.3" height="15.0" fill="rgb(210,35,53)" rx="2" ry="2" />
<text  x="16.71" y="815.5" ></text>
</g>
<g >
<title>malloc_zone_memalign (1 samples, 0.02%)</title><rect x="1080.7" y="853" width="0.2" height="15.0" fill="rgb(232,163,20)" rx="2" ry="2" />
<text  x="1083.66" y="863.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="180.4" y="837" width="0.3" height="15.0" fill="rgb(210,158,4)" rx="2" ry="2" />
<text  x="183.44" y="847.5" ></text>
</g>
<g >
<title>vp8_encode_intra16x16mby (1 samples, 0.02%)</title><rect x="739.5" y="693" width="0.3" height="15.0" fill="rgb(220,24,4)" rx="2" ry="2" />
<text  x="742.52" y="703.5" ></text>
</g>
<g >
<title>cc::RasterTilePriorityQueueAll::Build(std::__Cr::vector&lt;cc::PictureLayerImpl*, std::__Cr::allocator&lt;cc::PictureLayerImpl*&gt; &gt; const&amp;, std::__Cr::vector&lt;cc::PictureLayerImpl*, std::__Cr::allocator&lt;cc::PictureLayerImpl*&gt; &gt; const&amp;, cc::TreePriority) (1 samples, 0.02%)</title><rect x="1067.5" y="709" width="0.3" height="15.0" fill="rgb(249,120,10)" rx="2" ry="2" />
<text  x="1070.55" y="719.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::SendMessageLocked(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (1 samples, 0.02%)</title><rect x="236.1" y="421" width="0.3" height="15.0" fill="rgb(205,196,9)" rx="2" ry="2" />
<text  x="239.10" y="431.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::DidProcessTask(base::internal::RegisteredTaskSource) (5 samples, 0.10%)</title><rect x="856.8" y="965" width="1.2" height="15.0" fill="rgb(205,111,43)" rx="2" ry="2" />
<text  x="859.78" y="975.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::FillHole(unsigned long, base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&amp;&amp;) (1 samples, 0.02%)</title><rect x="85.0" y="741" width="0.2" height="15.0" fill="rgb(235,122,43)" rx="2" ry="2" />
<text  x="87.96" y="751.5" ></text>
</g>
<g >
<title>webrtc::SdpAudioFormat::~SdpAudioFormat() (1 samples, 0.02%)</title><rect x="280.4" y="661" width="0.2" height="15.0" fill="rgb(205,222,33)" rx="2" ry="2" />
<text  x="283.39" y="671.5" ></text>
</g>
<g >
<title>vpx_codec_decode (75 samples, 1.57%)</title><rect x="822.1" y="773" width="18.6" height="15.0" fill="rgb(220,62,9)" rx="2" ry="2" />
<text  x="825.15" y="783.5" ></text>
</g>
<g >
<title>mojo::core::ports::UserMessageEvent::~UserMessageEvent() (4 samples, 0.08%)</title><rect x="1054.4" y="693" width="1.0" height="15.0" fill="rgb(235,159,25)" rx="2" ry="2" />
<text  x="1057.44" y="703.5" ></text>
</g>
<g >
<title>mach_msg (7 samples, 0.15%)</title><rect x="295.2" y="757" width="1.8" height="15.0" fill="rgb(216,217,53)" rx="2" ry="2" />
<text  x="298.23" y="767.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="913.7" y="645" width="0.2" height="15.0" fill="rgb(223,174,32)" rx="2" ry="2" />
<text  x="916.68" y="655.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (20 samples, 0.42%)</title><rect x="1014.1" y="933" width="5.0" height="15.0" fill="rgb(250,165,42)" rx="2" ry="2" />
<text  x="1017.11" y="943.5" ></text>
</g>
<g >
<title>MojoAppendMessageData (1 samples, 0.02%)</title><rect x="168.1" y="773" width="0.2" height="15.0" fill="rgb(232,8,21)" rx="2" ry="2" />
<text  x="171.08" y="783.5" ></text>
</g>
<g >
<title>webrtc::acm2::AcmReceiver::LastDecoder() const (1 samples, 0.02%)</title><rect x="281.1" y="661" width="0.3" height="15.0" fill="rgb(248,98,30)" rx="2" ry="2" />
<text  x="284.13" y="671.5" ></text>
</g>
<g >
<title>void std::__Cr::__function::__policy_invoker&lt;void (std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)&gt;::__call_impl&lt;std::__Cr::__function::__alloc_func&lt;webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)::$_3, std::__Cr::allocator&lt;webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)::$_3&gt;, void (std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)&gt; &gt;(std::__Cr::__function::__policy_storage const*, std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;&amp;&amp;) (4 samples, 0.08%)</title><rect x="720.7" y="837" width="1.0" height="15.0" fill="rgb(246,126,53)" rx="2" ry="2" />
<text  x="723.72" y="847.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::PrepareToDraw(cc::LayerTreeHostImpl::FrameData*) (1 samples, 0.02%)</title><rect x="1068.8" y="773" width="0.2" height="15.0" fill="rgb(237,210,30)" rx="2" ry="2" />
<text  x="1071.78" y="783.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::InterfaceEndpoint::SendMessage(mojo::Message*) (23 samples, 0.48%)</title><rect x="244.8" y="629" width="5.7" height="15.0" fill="rgb(229,213,9)" rx="2" ry="2" />
<text  x="247.76" y="639.5" ></text>
</g>
<g >
<title>base::internal::PriorityQueue::Push(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="1182.3" y="725" width="0.5" height="15.0" fill="rgb(226,36,1)" rx="2" ry="2" />
<text  x="1185.33" y="735.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (3 samples, 0.06%)</title><rect x="272.7" y="565" width="0.8" height="15.0" fill="rgb(252,11,1)" rx="2" ry="2" />
<text  x="275.72" y="575.5" ></text>
</g>
<g >
<title>vp8_encode_frame (235 samples, 4.93%)</title><rect x="883.5" y="741" width="58.1" height="15.0" fill="rgb(209,135,43)" rx="2" ry="2" />
<text  x="886.50" y="751.5" >vp8_en..</text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="652.2" y="613" width="0.2" height="15.0" fill="rgb(229,39,20)" rx="2" ry="2" />
<text  x="655.20" y="623.5" ></text>
</g>
<g >
<title>vpx_subtract_block_sse2.loop_8 (3 samples, 0.06%)</title><rect x="456.3" y="693" width="0.7" height="15.0" fill="rgb(254,64,31)" rx="2" ry="2" />
<text  x="459.27" y="703.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="719.0" y="901" width="0.5" height="15.0" fill="rgb(234,134,14)" rx="2" ry="2" />
<text  x="721.99" y="911.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::CullAcknowledgedPackets(rtc::ArrayView&lt;unsigned short const, -4711l&gt;) (2 samples, 0.04%)</title><rect x="274.4" y="661" width="0.5" height="15.0" fill="rgb(217,129,7)" rx="2" ry="2" />
<text  x="277.45" y="671.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Run  0x6593ed (95 samples, 1.99%)</title><rect x="1140.0" y="1077" width="23.5" height="15.0" fill="rgb(236,115,26)" rx="2" ry="2" />
<text  x="1143.03" y="1087.5" >w..</text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="853.8" y="757" width="0.3" height="15.0" fill="rgb(207,80,31)" rx="2" ry="2" />
<text  x="856.81" y="767.5" ></text>
</g>
<g >
<title>blink::FrameConsole::ReportMessageToClient(blink::mojom::ConsoleMessageSource, blink::mojom::ConsoleMessageLevel, WTF::String const&amp;, blink::SourceLocation*) (1 samples, 0.02%)</title><rect x="19.9" y="277" width="0.2" height="15.0" fill="rgb(210,140,21)" rx="2" ry="2" />
<text  x="22.90" y="287.5" ></text>
</g>
<g >
<title>cc::Scheduler::ProcessScheduledActions() (1 samples, 0.02%)</title><rect x="1072.0" y="581" width="0.2" height="15.0" fill="rgb(249,181,17)" rx="2" ry="2" />
<text  x="1075.00" y="591.5" ></text>
</g>
<g >
<title>mojo::Connector::DispatchMessage(mojo::Message) (100 samples, 2.10%)</title><rect x="1030.7" y="805" width="24.7" height="15.0" fill="rgb(249,214,54)" rx="2" ry="2" />
<text  x="1033.69" y="815.5" >m..</text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (3 samples, 0.06%)</title><rect x="144.6" y="789" width="0.7" height="15.0" fill="rgb(222,69,6)" rx="2" ry="2" />
<text  x="147.57" y="799.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="941.1" y="661" width="0.3" height="15.0" fill="rgb(213,62,48)" rx="2" ry="2" />
<text  x="944.14" y="671.5" ></text>
</g>
<g >
<title>webrtc::NetworkControlUpdate::~NetworkControlUpdate() (1 samples, 0.02%)</title><rect x="882.5" y="837" width="0.3" height="15.0" fill="rgb(226,120,42)" rx="2" ry="2" />
<text  x="885.51" y="847.5" ></text>
</g>
<g >
<title>webrtc::GoogCcNetworkController::OnTransportPacketsFeedback(webrtc::TransportPacketsFeedback) (2 samples, 0.04%)</title><rect x="722.0" y="837" width="0.5" height="15.0" fill="rgb(221,110,12)" rx="2" ry="2" />
<text  x="724.96" y="847.5" ></text>
</g>
<g >
<title>gpu::GpuMemoryBufferImplIOSurface::Unmap() (1 samples, 0.02%)</title><rect x="67.6" y="853" width="0.3" height="15.0" fill="rgb(211,37,7)" rx="2" ry="2" />
<text  x="70.64" y="863.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (2 samples, 0.04%)</title><rect x="282.6" y="597" width="0.5" height="15.0" fill="rgb(236,33,44)" rx="2" ry="2" />
<text  x="285.61" y="607.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="1181.6" y="725" width="0.2" height="15.0" fill="rgb(213,156,23)" rx="2" ry="2" />
<text  x="1184.59" y="735.5" ></text>
</g>
<g >
<title>webrtc::SequenceCheckerImpl::IsCurrent() const (1 samples, 0.02%)</title><rect x="683.1" y="805" width="0.3" height="15.0" fill="rgb(206,199,13)" rx="2" ry="2" />
<text  x="686.12" y="815.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::GetPacketAndSetSendTime(unsigned short) (5 samples, 0.10%)</title><rect x="1162.0" y="917" width="1.3" height="15.0" fill="rgb(245,60,39)" rx="2" ry="2" />
<text  x="1165.05" y="927.5" ></text>
</g>
<g >
<title>mach_msg (28 samples, 0.59%)</title><rect x="864.0" y="917" width="6.9" height="15.0" fill="rgb(254,184,16)" rx="2" ry="2" />
<text  x="866.95" y="927.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::RtpTransportControllerSend::OnReceivedPacket(webrtc::ReceivedPacket const&amp;)::$_6&gt;::Run() (2 samples, 0.04%)</title><rect x="579.7" y="853" width="0.5" height="15.0" fill="rgb(223,183,8)" rx="2" ry="2" />
<text  x="582.71" y="863.5" ></text>
</g>
<g >
<title>base::GetProgramCounter() (1 samples, 0.02%)</title><rect x="133.9" y="581" width="0.3" height="15.0" fill="rgb(211,101,3)" rx="2" ry="2" />
<text  x="136.94" y="591.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;base::internal::Task&gt;::front() (1 samples, 0.02%)</title><rect x="712.1" y="917" width="0.2" height="15.0" fill="rgb(232,115,23)" rx="2" ry="2" />
<text  x="715.06" y="927.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="294.7" y="773" width="0.3" height="15.0" fill="rgb(213,44,41)" rx="2" ry="2" />
<text  x="297.73" y="783.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (64 samples, 1.34%)</title><rect x="1087.1" y="1013" width="15.8" height="15.0" fill="rgb(223,131,46)" rx="2" ry="2" />
<text  x="1090.09" y="1023.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Run  0x659428 (47 samples, 0.99%)</title><rect x="1178.4" y="1077" width="11.6" height="15.0" fill="rgb(239,182,40)" rx="2" ry="2" />
<text  x="1181.37" y="1087.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Leave() const (1 samples, 0.02%)</title><rect x="683.1" y="789" width="0.3" height="15.0" fill="rgb(235,163,41)" rx="2" ry="2" />
<text  x="686.12" y="799.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="255.6" y="821" width="0.3" height="15.0" fill="rgb(221,38,8)" rx="2" ry="2" />
<text  x="258.65" y="831.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (21 samples, 0.44%)</title><rect x="1170.5" y="933" width="5.2" height="15.0" fill="rgb(249,63,49)" rx="2" ry="2" />
<text  x="1173.46" y="943.5" ></text>
</g>
<g >
<title>content::RenderViewImpl::DidCommitCompositorFrameForWidget() (1 samples, 0.02%)</title><rect x="24.1" y="597" width="0.2" height="15.0" fill="rgb(247,130,16)" rx="2" ry="2" />
<text  x="27.10" y="607.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMS::FrameDeliverer::OnVideoFrame(scoped_refptr&lt;media::VideoFrame&gt;) (3 samples, 0.06%)</title><rect x="176.2" y="693" width="0.8" height="15.0" fill="rgb(219,223,39)" rx="2" ry="2" />
<text  x="179.24" y="703.5" ></text>
</g>
<g >
<title>vp8_denoiser_filter_uv_sse2 (5 samples, 0.10%)</title><rect x="911.7" y="661" width="1.2" height="15.0" fill="rgb(234,204,2)" rx="2" ry="2" />
<text  x="914.70" y="671.5" ></text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="488.2" y="789" width="0.2" height="15.0" fill="rgb(253,127,15)" rx="2" ry="2" />
<text  x="491.18" y="799.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::AddRef() const (1 samples, 0.02%)</title><rect x="273.5" y="773" width="0.2" height="15.0" fill="rgb(217,201,16)" rx="2" ry="2" />
<text  x="276.46" y="783.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1153.1" y="741" width="0.3" height="15.0" fill="rgb(207,201,23)" rx="2" ry="2" />
<text  x="1156.14" y="751.5" ></text>
</g>
<g >
<title>vp8_cal_sad (9 samples, 0.19%)</title><rect x="747.7" y="677" width="2.2" height="15.0" fill="rgb(237,56,25)" rx="2" ry="2" />
<text  x="750.69" y="687.5" ></text>
</g>
<g >
<title>webrtc::RtpDemuxer::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (6 samples, 0.13%)</title><rect x="308.6" y="517" width="1.5" height="15.0" fill="rgb(239,101,44)" rx="2" ry="2" />
<text  x="311.59" y="527.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderAudio::SendAudio(webrtc::AudioFrameType, signed char, unsigned int, unsigned char const*, unsigned long) (5 samples, 0.10%)</title><rect x="690.8" y="805" width="1.2" height="15.0" fill="rgb(218,110,32)" rx="2" ry="2" />
<text  x="693.79" y="815.5" ></text>
</g>
<g >
<title>(anonymous namespace)::AutoreleasePoolPage::pop(void*) (1 samples, 0.02%)</title><rect x="197.3" y="885" width="0.2" height="15.0" fill="rgb(226,130,49)" rx="2" ry="2" />
<text  x="200.27" y="895.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (6 samples, 0.13%)</title><rect x="1071.5" y="789" width="1.5" height="15.0" fill="rgb(232,172,38)" rx="2" ry="2" />
<text  x="1074.51" y="799.5" ></text>
</g>
<g >
<title>srtp_aes_icm_openssl_encrypt (1 samples, 0.02%)</title><rect x="306.6" y="501" width="0.3" height="15.0" fill="rgb(208,141,27)" rx="2" ry="2" />
<text  x="309.61" y="511.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (68 samples, 1.43%)</title><rect x="197.0" y="1013" width="16.8" height="15.0" fill="rgb(208,164,52)" rx="2" ry="2" />
<text  x="200.02" y="1023.5" ></text>
</g>
<g >
<title>pthread_mutex_destroy (1 samples, 0.02%)</title><rect x="176.7" y="613" width="0.3" height="15.0" fill="rgb(248,188,32)" rx="2" ry="2" />
<text  x="179.73" y="623.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (4 samples, 0.08%)</title><rect x="878.3" y="901" width="1.0" height="15.0" fill="rgb(247,146,48)" rx="2" ry="2" />
<text  x="881.30" y="911.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3 (2 samples, 0.04%)</title><rect x="971.3" y="677" width="0.5" height="15.0" fill="rgb(252,203,7)" rx="2" ry="2" />
<text  x="974.32" y="687.5" ></text>
</g>
<g >
<title>webrtc::SequenceCheckerImpl::IsCurrent() const (1 samples, 0.02%)</title><rect x="1161.1" y="869" width="0.2" height="15.0" fill="rgb(232,192,41)" rx="2" ry="2" />
<text  x="1164.06" y="879.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::IsShutdownComplete() const (3 samples, 0.06%)</title><rect x="1021.5" y="965" width="0.8" height="15.0" fill="rgb(242,203,41)" rx="2" ry="2" />
<text  x="1024.53" y="975.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="880.0" y="885" width="0.3" height="15.0" fill="rgb(246,205,10)" rx="2" ry="2" />
<text  x="883.03" y="895.5" ></text>
</g>
<g >
<title>non-virtual thunk to cc::PictureLayerImpl::CalculateTileSize(gfx::Size const&amp;) (1 samples, 0.02%)</title><rect x="1069.8" y="629" width="0.2" height="15.0" fill="rgb(212,123,15)" rx="2" ry="2" />
<text  x="1072.77" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (5 samples, 0.10%)</title><rect x="316.0" y="501" width="1.2" height="15.0" fill="rgb(224,94,10)" rx="2" ry="2" />
<text  x="319.01" y="511.5" ></text>
</g>
<g >
<title>cc::Scheduler::NotifyReadyToCommit() (5 samples, 0.10%)</title><rect x="1070.3" y="869" width="1.2" height="15.0" fill="rgb(229,178,35)" rx="2" ry="2" />
<text  x="1073.27" y="879.5" ></text>
</g>
<g >
<title>vp8_mv_bit_cost (1 samples, 0.02%)</title><rect x="773.7" y="677" width="0.2" height="15.0" fill="rgb(233,28,46)" rx="2" ry="2" />
<text  x="776.66" y="687.5" ></text>
</g>
<g >
<title>blink::PaintLayer::GetCompositedLayerMapping() const (1 samples, 0.02%)</title><rect x="27.3" y="469" width="0.3" height="15.0" fill="rgb(207,181,53)" rx="2" ry="2" />
<text  x="30.32" y="479.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (4 samples, 0.08%)</title><rect x="372.2" y="853" width="1.0" height="15.0" fill="rgb(232,198,22)" rx="2" ry="2" />
<text  x="375.16" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyDidProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (1 samples, 0.02%)</title><rect x="179.2" y="869" width="0.3" height="15.0" fill="rgb(252,103,40)" rx="2" ry="2" />
<text  x="182.21" y="879.5" ></text>
</g>
<g >
<title>mojo::core::RequestContext::~RequestContext() (1 samples, 0.02%)</title><rect x="120.1" y="821" width="0.2" height="15.0" fill="rgb(222,6,36)" rx="2" ry="2" />
<text  x="123.08" y="831.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::RtpTransportControllerSend::OnTransportFeedback(webrtc::rtcp::TransportFeedback const&amp;)::$_12&gt;::Run() (1 samples, 0.02%)</title><rect x="581.0" y="853" width="0.2" height="15.0" fill="rgb(206,193,11)" rx="2" ry="2" />
<text  x="583.95" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) (31 samples, 0.65%)</title><rect x="1066.6" y="917" width="7.6" height="15.0" fill="rgb(236,153,39)" rx="2" ry="2" />
<text  x="1069.56" y="927.5" ></text>
</g>
<g >
<title>mojo::core::ports::PortLocker::PortLocker(mojo::core::ports::PortRef const**, unsigned long) (2 samples, 0.04%)</title><rect x="1058.1" y="725" width="0.5" height="15.0" fill="rgb(208,98,18)" rx="2" ry="2" />
<text  x="1061.15" y="735.5" ></text>
</g>
<g >
<title>MojoAppendMessageData (6 samples, 0.13%)</title><rect x="250.7" y="629" width="1.5" height="15.0" fill="rgb(206,108,17)" rx="2" ry="2" />
<text  x="253.70" y="639.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="326.6" y="741" width="0.3" height="15.0" fill="rgb(206,68,22)" rx="2" ry="2" />
<text  x="329.65" y="751.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::UpdateLifecyclePhases(blink::DocumentLifecycle::LifecycleState, blink::DocumentLifecycle::LifecycleUpdateReason) (16 samples, 0.34%)</title><rect x="25.3" y="565" width="4.0" height="15.0" fill="rgb(206,198,46)" rx="2" ry="2" />
<text  x="28.34" y="575.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (11 samples, 0.23%)</title><rect x="1083.9" y="805" width="2.7" height="15.0" fill="rgb(222,165,38)" rx="2" ry="2" />
<text  x="1086.87" y="815.5" ></text>
</g>
<g >
<title>webrtc::PacketBuffer::InsertPacket(webrtc::Packet&amp;&amp;, webrtc::StatisticsCalculator*) (1 samples, 0.02%)</title><rect x="280.1" y="613" width="0.3" height="15.0" fill="rgb(244,211,48)" rx="2" ry="2" />
<text  x="283.14" y="623.5" ></text>
</g>
<g >
<title>thread_start (64 samples, 1.34%)</title><rect x="1087.1" y="1061" width="15.8" height="15.0" fill="rgb(211,59,8)" rx="2" ry="2" />
<text  x="1090.09" y="1071.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::CanGetWorkLockRequired(base::internal::WorkerThread*) (9 samples, 0.19%)</title><rect x="861.2" y="949" width="2.3" height="15.0" fill="rgb(237,2,30)" rx="2" ry="2" />
<text  x="864.23" y="959.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskImpl&lt;webrtc::video_coding::FrameBuffer::StartWaitForNextFrameOnQueue()::$_1&gt;::RunClosure() (1 samples, 0.02%)</title><rect x="551.8" y="837" width="0.2" height="15.0" fill="rgb(230,219,12)" rx="2" ry="2" />
<text  x="554.76" y="847.5" ></text>
</g>
<g >
<title>_thread_stack_pcs (1 samples, 0.02%)</title><rect x="376.6" y="853" width="0.3" height="15.0" fill="rgb(208,41,21)" rx="2" ry="2" />
<text  x="379.62" y="863.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::RtpTransportControllerSend::OnTransportFeedback(webrtc::rtcp::TransportFeedback const&amp;)::$_12&gt;::Run() (2 samples, 0.04%)</title><rect x="722.0" y="853" width="0.5" height="15.0" fill="rgb(209,185,23)" rx="2" ry="2" />
<text  x="724.96" y="863.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1026.0" y="901" width="0.2" height="15.0" fill="rgb(232,173,51)" rx="2" ry="2" />
<text  x="1028.99" y="911.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="264.8" y="597" width="0.2" height="15.0" fill="rgb(236,79,28)" rx="2" ry="2" />
<text  x="267.80" y="607.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendPeerEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (5 samples, 0.10%)</title><rect x="166.3" y="613" width="1.3" height="15.0" fill="rgb(237,74,30)" rx="2" ry="2" />
<text  x="169.34" y="623.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::~SequenceCheckerImpl() (1 samples, 0.02%)</title><rect x="1074.0" y="757" width="0.2" height="15.0" fill="rgb(224,54,34)" rx="2" ry="2" />
<text  x="1076.98" y="767.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="714.0" y="869" width="0.3" height="15.0" fill="rgb(218,62,30)" rx="2" ry="2" />
<text  x="717.04" y="879.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="859.7" y="917" width="0.3" height="15.0" fill="rgb(245,20,19)" rx="2" ry="2" />
<text  x="862.75" y="927.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (12 samples, 0.25%)</title><rect x="1142.0" y="933" width="3.0" height="15.0" fill="rgb(218,13,30)" rx="2" ry="2" />
<text  x="1145.01" y="943.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::HasShutdownStarted() const (1 samples, 0.02%)</title><rect x="366.0" y="965" width="0.2" height="15.0" fill="rgb(250,42,19)" rx="2" ry="2" />
<text  x="368.98" y="975.5" ></text>
</g>
<g >
<title>base::internal::PriorityQueue::Push(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="287.1" y="645" width="0.5" height="15.0" fill="rgb(252,118,45)" rx="2" ry="2" />
<text  x="290.06" y="655.5" ></text>
</g>
<g >
<title>blink::PaintArtifactCompositor::Update(scoped_refptr&lt;blink::PaintArtifact const&gt;, blink::PaintArtifactCompositor::ViewportProperties const&amp;, blink::PaintArtifactCompositor::Settings const&amp;) (1 samples, 0.02%)</title><rect x="27.1" y="501" width="0.2" height="15.0" fill="rgb(205,208,44)" rx="2" ry="2" />
<text  x="30.07" y="511.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::RemoveAllCanceledTasksFromFront() (2 samples, 0.04%)</title><rect x="189.8" y="837" width="0.5" height="15.0" fill="rgb(214,70,38)" rx="2" ry="2" />
<text  x="192.84" y="847.5" ></text>
</g>
<g >
<title>webrtc::RtpTransport::OnReadPacket(rtc::PacketTransportInternal*, char const*, unsigned long, long long const&amp;, int) (19 samples, 0.40%)</title><rect x="306.1" y="565" width="4.7" height="15.0" fill="rgb(211,74,47)" rx="2" ry="2" />
<text  x="309.11" y="575.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="682.9" y="597" width="0.2" height="15.0" fill="rgb(221,132,23)" rx="2" ry="2" />
<text  x="685.87" y="607.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (4 samples, 0.08%)</title><rect x="140.1" y="421" width="1.0" height="15.0" fill="rgb(206,80,10)" rx="2" ry="2" />
<text  x="143.12" y="431.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="187.9" y="805" width="0.2" height="15.0" fill="rgb(254,191,34)" rx="2" ry="2" />
<text  x="190.87" y="815.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_y_sse2 (2 samples, 0.04%)</title><rect x="795.4" y="693" width="0.5" height="15.0" fill="rgb(246,37,40)" rx="2" ry="2" />
<text  x="798.43" y="703.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::MergeInternalValuesFrom(base::Value const&amp;) (2 samples, 0.04%)</title><rect x="138.1" y="549" width="0.5" height="15.0" fill="rgb(241,78,38)" rx="2" ry="2" />
<text  x="141.14" y="559.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__wrap_iter&lt;std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt; const*&gt;, std::__Cr::__wrap_iter&lt;std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt; const*&gt; &gt; base::internal::flat_tree&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;, base::internal::GetKeyFromValuePairFirst&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;, std::__Cr::less&lt;void&gt; &gt;::equal_range&lt;base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; &gt;(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;) const (1 samples, 0.02%)</title><rect x="177.0" y="741" width="0.2" height="15.0" fill="rgb(220,0,26)" rx="2" ry="2" />
<text  x="179.98" y="751.5" ></text>
</g>
<g >
<title>cc::LayerTreeImpl::TotalMaxScrollOffset() const (1 samples, 0.02%)</title><rect x="1072.2" y="517" width="0.3" height="15.0" fill="rgb(245,104,31)" rx="2" ry="2" />
<text  x="1075.25" y="527.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="253.7" y="453" width="0.2" height="15.0" fill="rgb(212,111,49)" rx="2" ry="2" />
<text  x="256.67" y="463.5" ></text>
</g>
<g >
<title>IPC::Message::~Message() (1 samples, 0.02%)</title><rect x="205.2" y="805" width="0.2" height="15.0" fill="rgb(228,195,35)" rx="2" ry="2" />
<text  x="208.18" y="815.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="1153.9" y="757" width="0.5" height="15.0" fill="rgb(217,141,53)" rx="2" ry="2" />
<text  x="1156.88" y="767.5" ></text>
</g>
<g >
<title>mojo::core::ports::UserMessageEvent::~UserMessageEvent() (1 samples, 0.02%)</title><rect x="1072.7" y="693" width="0.3" height="15.0" fill="rgb(239,173,35)" rx="2" ry="2" />
<text  x="1075.74" y="703.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (5 samples, 0.10%)</title><rect x="1007.4" y="949" width="1.3" height="15.0" fill="rgb(209,71,40)" rx="2" ry="2" />
<text  x="1010.43" y="959.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (1 samples, 0.02%)</title><rect x="1112.6" y="853" width="0.2" height="15.0" fill="rgb(213,37,4)" rx="2" ry="2" />
<text  x="1115.57" y="863.5" ></text>
</g>
<g >
<title>base::TaskToken::operator==(base::TaskToken const&amp;) const (1 samples, 0.02%)</title><rect x="178.7" y="837" width="0.3" height="15.0" fill="rgb(208,1,53)" rx="2" ry="2" />
<text  x="181.71" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="487.9" y="581" width="0.3" height="15.0" fill="rgb(232,201,15)" rx="2" ry="2" />
<text  x="490.94" y="591.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="42.4" y="613" width="0.3" height="15.0" fill="rgb(218,14,20)" rx="2" ry="2" />
<text  x="45.41" y="623.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="292.0" y="757" width="0.3" height="15.0" fill="rgb(212,34,5)" rx="2" ry="2" />
<text  x="295.01" y="767.5" ></text>
</g>
<g >
<title>base::  0x644a09 (18 samples, 0.38%)</title><rect x="65.7" y="1077" width="4.4" height="15.0" fill="rgb(229,178,32)" rx="2" ry="2" />
<text  x="68.66" y="1087.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (2 samples, 0.04%)</title><rect x="19.2" y="453" width="0.4" height="15.0" fill="rgb(250,189,46)" rx="2" ry="2" />
<text  x="22.15" y="463.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (2 samples, 0.04%)</title><rect x="501.0" y="693" width="0.5" height="15.0" fill="rgb(234,100,7)" rx="2" ry="2" />
<text  x="504.05" y="703.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), void&gt;::Invoke&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;(void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&amp;&amp;) (3 samples, 0.06%)</title><rect x="57.5" y="885" width="0.7" height="15.0" fill="rgb(228,209,49)" rx="2" ry="2" />
<text  x="60.50" y="895.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="75.1" y="837" width="0.2" height="15.0" fill="rgb(245,19,11)" rx="2" ry="2" />
<text  x="78.06" y="847.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (base::sequence_manager::internal::TaskQueueImpl::*)(base::sequence_manager::Task), base::internal::UnretainedWrapper&lt;base::sequence_manager::internal::TaskQueueImpl&gt;, base::sequence_manager::Task&gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="82.2" y="853" width="0.3" height="15.0" fill="rgb(222,12,25)" rx="2" ry="2" />
<text  x="85.23" y="863.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="30.3" y="661" width="0.2" height="15.0" fill="rgb(217,65,8)" rx="2" ry="2" />
<text  x="33.29" y="671.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunWorker() (181 samples, 3.79%)</title><rect x="1020.5" y="981" width="44.8" height="15.0" fill="rgb(250,135,11)" rx="2" ry="2" />
<text  x="1023.55" y="991.5" >base..</text>
</g>
<g >
<title>downmix_int (1 samples, 0.02%)</title><rect x="684.9" y="693" width="0.2" height="15.0" fill="rgb(250,2,32)" rx="2" ry="2" />
<text  x="687.85" y="703.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::internal::PriorityQueue::TaskSourceAndSortKey&gt;::MoveHoleUpAndFillWithElement(unsigned long, base::internal::PriorityQueue::TaskSourceAndSortKey&amp;&amp;) (1 samples, 0.02%)</title><rect x="287.3" y="629" width="0.3" height="15.0" fill="rgb(246,128,54)" rx="2" ry="2" />
<text  x="290.31" y="639.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="859.3" y="933" width="0.2" height="15.0" fill="rgb(205,166,34)" rx="2" ry="2" />
<text  x="862.25" y="943.5" ></text>
</g>
<g >
<title>compute_mdcts (1 samples, 0.02%)</title><rect x="994.8" y="725" width="0.3" height="15.0" fill="rgb(241,190,41)" rx="2" ry="2" />
<text  x="997.82" y="735.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (3 samples, 0.06%)</title><rect x="330.6" y="853" width="0.7" height="15.0" fill="rgb(215,29,49)" rx="2" ry="2" />
<text  x="333.60" y="863.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="577.7" y="821" width="0.3" height="15.0" fill="rgb(215,51,4)" rx="2" ry="2" />
<text  x="580.74" y="831.5" ></text>
</g>
<g >
<title>DYLD-STUB$$base::internal::SequenceLocalStorageMap::Set(int, base::internal::SequenceLocalStorageMap::ValueDestructorPair) (1 samples, 0.02%)</title><rect x="1032.4" y="677" width="0.3" height="15.0" fill="rgb(245,55,9)" rx="2" ry="2" />
<text  x="1035.42" y="687.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="347.4" y="773" width="0.3" height="15.0" fill="rgb(238,229,30)" rx="2" ry="2" />
<text  x="350.43" y="783.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="45.1" y="645" width="0.5" height="15.0" fill="rgb(232,89,42)" rx="2" ry="2" />
<text  x="48.13" y="655.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="77.3" y="741" width="0.2" height="15.0" fill="rgb(218,59,36)" rx="2" ry="2" />
<text  x="80.29" y="751.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (3 samples, 0.06%)</title><rect x="27.8" y="437" width="0.8" height="15.0" fill="rgb(230,75,44)" rx="2" ry="2" />
<text  x="30.81" y="447.5" ></text>
</g>
<g >
<title>void base::internal::Invoker&lt;base::internal::BindState&lt;void (content::WebMediaPlayerMS::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;), base::WeakPtr&lt;content::WebMediaPlayerMS::FrameDeliverer&gt; &gt;, void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;::RunImpl&lt;void (content::WebMediaPlayerMS::FrameDeliverer::* const&amp;)(scoped_refptr&lt;media::VideoFrame&gt;), std::__Cr::tuple&lt;base::WeakPtr&lt;content::WebMediaPlayerMS::FrameDeliverer&gt; &gt; const&amp;, 0ul&gt;(void (content::WebMediaPlayerMS::FrameDeliverer::* const&amp;&amp;&amp;)(scoped_refptr&lt;media::VideoFrame&gt;), std::__Cr::tuple&lt;base::WeakPtr&lt;content::WebMediaPlayerMS::FrameDeliverer&gt; &gt; const&amp;&amp;&amp;, std::__Cr::integer_sequence&lt;unsigned long, 0ul&gt;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (3 samples, 0.06%)</title><rect x="139.4" y="421" width="0.7" height="15.0" fill="rgb(214,159,3)" rx="2" ry="2" />
<text  x="142.38" y="431.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="693.0" y="917" width="0.3" height="15.0" fill="rgb(239,86,31)" rx="2" ry="2" />
<text  x="696.01" y="927.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TakeImmediateIncomingQueueTasks(base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;*) (1 samples, 0.02%)</title><rect x="210.6" y="789" width="0.3" height="15.0" fill="rgb(215,163,17)" rx="2" ry="2" />
<text  x="213.62" y="799.5" ></text>
</g>
<g >
<title>vpx_codec_decode (96 samples, 2.01%)</title><rect x="968.3" y="773" width="23.8" height="15.0" fill="rgb(218,126,35)" rx="2" ry="2" />
<text  x="971.35" y="783.5" >v..</text>
</g>
<g >
<title>base::ThreadRestrictions::SetWaitAllowed(bool) (5 samples, 0.10%)</title><rect x="718.2" y="917" width="1.3" height="15.0" fill="rgb(216,210,50)" rx="2" ry="2" />
<text  x="721.25" y="927.5" ></text>
</g>
<g >
<title>DYLD-STUB$$base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="119.8" y="821" width="0.3" height="15.0" fill="rgb(220,10,43)" rx="2" ry="2" />
<text  x="122.84" y="831.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.02%)</title><rect x="298.7" y="661" width="0.2" height="15.0" fill="rgb(212,113,40)" rx="2" ry="2" />
<text  x="301.69" y="671.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (3 samples, 0.06%)</title><rect x="1006.4" y="949" width="0.8" height="15.0" fill="rgb(248,214,14)" rx="2" ry="2" />
<text  x="1009.44" y="959.5" ></text>
</g>
<g >
<title>mojo::ArrayTraits&lt;std::__Cr::vector&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;, std::__Cr::allocator&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt; &gt; &gt;::Resize(std::__Cr::vector&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;, std::__Cr::allocator&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt; &gt;&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="1051.7" y="645" width="0.3" height="15.0" fill="rgb(214,165,40)" rx="2" ry="2" />
<text  x="1054.71" y="655.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::Release() const (1 samples, 0.02%)</title><rect x="224.5" y="853" width="0.2" height="15.0" fill="rgb(218,27,12)" rx="2" ry="2" />
<text  x="227.48" y="863.5" ></text>
</g>
<g >
<title>mojo::StructTraits&lt;network::mojom::IPAddressDataView, net::IPAddress&gt;::Read(network::mojom::IPAddressDataView, net::IPAddress*) (1 samples, 0.02%)</title><rect x="311.8" y="645" width="0.3" height="15.0" fill="rgb(210,148,13)" rx="2" ry="2" />
<text  x="314.80" y="655.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="81.7" y="741" width="0.3" height="15.0" fill="rgb(228,20,16)" rx="2" ry="2" />
<text  x="84.74" y="751.5" ></text>
</g>
<g >
<title>mojo::core::Core::ReadMessage(unsigned int, MojoReadMessageOptions const*, unsigned long*) (20 samples, 0.42%)</title><rect x="321.0" y="757" width="4.9" height="15.0" fill="rgb(245,140,46)" rx="2" ry="2" />
<text  x="323.96" y="767.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (2 samples, 0.04%)</title><rect x="1035.6" y="501" width="0.5" height="15.0" fill="rgb(252,2,27)" rx="2" ry="2" />
<text  x="1038.64" y="511.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_zero_loop (1 samples, 0.02%)</title><rect x="612.6" y="661" width="0.3" height="15.0" fill="rgb(218,223,3)" rx="2" ry="2" />
<text  x="615.62" y="671.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::Context::Notify(unsigned int, MojoHandleSignalsState, unsigned int) (86 samples, 1.80%)</title><rect x="121.8" y="773" width="21.3" height="15.0" fill="rgb(230,87,47)" rx="2" ry="2" />
<text  x="124.82" y="783.5" >m..</text>
</g>
<g >
<title>IPC::Message::Message() (2 samples, 0.04%)</title><rect x="241.8" y="645" width="0.5" height="15.0" fill="rgb(214,105,49)" rx="2" ry="2" />
<text  x="244.79" y="655.5" ></text>
</g>
<g >
<title>cc::LayerTreeHost::UpdateLayers() (3 samples, 0.06%)</title><rect x="24.3" y="645" width="0.8" height="15.0" fill="rgb(230,169,23)" rx="2" ry="2" />
<text  x="27.35" y="655.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1153.1" y="821" width="0.3" height="15.0" fill="rgb(209,168,41)" rx="2" ry="2" />
<text  x="1156.14" y="831.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::BeforeRunTask(base::TaskShutdownBehavior) (1 samples, 0.02%)</title><rect x="368.9" y="949" width="0.3" height="15.0" fill="rgb(209,191,47)" rx="2" ry="2" />
<text  x="371.95" y="959.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="105.7" y="821" width="0.3" height="15.0" fill="rgb(213,98,13)" rx="2" ry="2" />
<text  x="108.74" y="831.5" ></text>
</g>
<g >
<title>_CFAutoreleasePoolPop (1 samples, 0.02%)</title><rect x="215.6" y="901" width="0.2" height="15.0" fill="rgb(242,0,30)" rx="2" ry="2" />
<text  x="218.57" y="911.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (2 samples, 0.04%)</title><rect x="636.1" y="677" width="0.5" height="15.0" fill="rgb(206,58,38)" rx="2" ry="2" />
<text  x="639.12" y="687.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (2 samples, 0.04%)</title><rect x="350.6" y="789" width="0.5" height="15.0" fill="rgb(239,102,21)" rx="2" ry="2" />
<text  x="353.64" y="799.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelSend::SendData(webrtc::AudioFrameType, unsigned char, unsigned int, unsigned char const*, unsigned long) (4 samples, 0.08%)</title><rect x="853.8" y="821" width="1.0" height="15.0" fill="rgb(238,167,5)" rx="2" ry="2" />
<text  x="856.81" y="831.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="699.4" y="869" width="0.3" height="15.0" fill="rgb(211,143,50)" rx="2" ry="2" />
<text  x="702.45" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (34 samples, 0.71%)</title><rect x="182.7" y="869" width="8.4" height="15.0" fill="rgb(214,11,32)" rx="2" ry="2" />
<text  x="185.67" y="879.5" ></text>
</g>
<g >
<title>free_tiny (2 samples, 0.04%)</title><rect x="720.0" y="853" width="0.5" height="15.0" fill="rgb(224,226,23)" rx="2" ry="2" />
<text  x="722.98" y="863.5" ></text>
</g>
<g >
<title>MojoWriteMessage (1 samples, 0.02%)</title><rect x="1068.3" y="677" width="0.2" height="15.0" fill="rgb(252,159,50)" rx="2" ry="2" />
<text  x="1071.29" y="687.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (11 samples, 0.23%)</title><rect x="1156.4" y="869" width="2.7" height="15.0" fill="rgb(220,0,49)" rx="2" ry="2" />
<text  x="1159.36" y="879.5" ></text>
</g>
<g >
<title>base::Pickle::Pickle(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="313.3" y="629" width="0.2" height="15.0" fill="rgb(214,105,15)" rx="2" ry="2" />
<text  x="316.29" y="639.5" ></text>
</g>
<g >
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="856.3" y="885" width="0.2" height="15.0" fill="rgb(237,128,43)" rx="2" ry="2" />
<text  x="859.29" y="895.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::RemovePacket(std::__Cr::__map_iterator&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, void*&gt;*, long&gt; &gt;) (1 samples, 0.02%)</title><rect x="854.3" y="741" width="0.3" height="15.0" fill="rgb(235,47,28)" rx="2" ry="2" />
<text  x="857.31" y="751.5" ></text>
</g>
<g >
<title>opus_encode (62 samples, 1.30%)</title><rect x="534.7" y="773" width="15.3" height="15.0" fill="rgb(248,18,39)" rx="2" ry="2" />
<text  x="537.69" y="783.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskImpl&lt;webrtc::video_coding::FrameBuffer::StartWaitForNextFrameOnQueue()::$_1&gt;::RunClosure() (2 samples, 0.04%)</title><rect x="855.0" y="837" width="0.5" height="15.0" fill="rgb(223,153,54)" rx="2" ry="2" />
<text  x="858.05" y="847.5" ></text>
</g>
<g >
<title>webrtc::acm2::AcmReceiver::GetPlayoutTimestamp() (1 samples, 0.02%)</title><rect x="281.4" y="677" width="0.2" height="15.0" fill="rgb(252,120,50)" rx="2" ry="2" />
<text  x="284.38" y="687.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="347.2" y="773" width="0.2" height="15.0" fill="rgb(234,217,7)" rx="2" ry="2" />
<text  x="350.18" y="783.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (4 samples, 0.08%)</title><rect x="875.6" y="933" width="1.0" height="15.0" fill="rgb(227,89,21)" rx="2" ry="2" />
<text  x="878.58" y="943.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), void&gt;::Invoke&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;(void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&amp;&amp;) (2 samples, 0.04%)</title><rect x="67.4" y="885" width="0.5" height="15.0" fill="rgb(206,13,44)" rx="2" ry="2" />
<text  x="70.39" y="895.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_sse2 (2 samples, 0.04%)</title><rect x="527.0" y="677" width="0.5" height="15.0" fill="rgb(208,100,49)" rx="2" ry="2" />
<text  x="530.02" y="687.5" ></text>
</g>
<g >
<title>gpu::GpuChannelHost::Listener::SendMessage(std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt;, IPC::PendingSyncMsg*) (9 samples, 0.19%)</title><rect x="166.1" y="853" width="2.2" height="15.0" fill="rgb(224,209,33)" rx="2" ry="2" />
<text  x="169.10" y="863.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*, mojo::core::ports::MessageFilter*) (4 samples, 0.08%)</title><rect x="112.2" y="741" width="1.0" height="15.0" fill="rgb(220,66,3)" rx="2" ry="2" />
<text  x="115.17" y="751.5" ></text>
</g>
<g >
<title>mojo::core::WatcherDispatcher::InvokeWatchCallback(unsigned long, unsigned int, mojo::core::HandleSignalsState const&amp;, unsigned int) (92 samples, 1.93%)</title><rect x="120.6" y="805" width="22.7" height="15.0" fill="rgb(238,139,12)" rx="2" ry="2" />
<text  x="123.58" y="815.5" >m..</text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="651.7" y="677" width="0.2" height="15.0" fill="rgb(235,152,27)" rx="2" ry="2" />
<text  x="654.70" y="687.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="260.3" y="613" width="0.3" height="15.0" fill="rgb(247,56,19)" rx="2" ry="2" />
<text  x="263.35" y="623.5" ></text>
</g>
<g >
<title>base::Thread::ThreadMain() (2 samples, 0.04%)</title><rect x="213.8" y="997" width="0.5" height="15.0" fill="rgb(210,124,17)" rx="2" ry="2" />
<text  x="216.84" y="1007.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="722.2" y="805" width="0.3" height="15.0" fill="rgb(232,204,48)" rx="2" ry="2" />
<text  x="725.21" y="815.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.02%)</title><rect x="114.4" y="757" width="0.2" height="15.0" fill="rgb(215,151,8)" rx="2" ry="2" />
<text  x="117.39" y="767.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (1 samples, 0.02%)</title><rect x="910.0" y="629" width="0.2" height="15.0" fill="rgb(233,94,31)" rx="2" ry="2" />
<text  x="912.97" y="639.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamDecoder::FrameToRender(webrtc::VideoFrame&amp;, absl::optional&lt;unsigned char&gt;, int, webrtc::VideoContentType) (2 samples, 0.04%)</title><rect x="993.1" y="741" width="0.5" height="15.0" fill="rgb(208,158,53)" rx="2" ry="2" />
<text  x="996.09" y="751.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::~UserMessageImpl() (1 samples, 0.02%)</title><rect x="141.1" y="549" width="0.3" height="15.0" fill="rgb(230,184,34)" rx="2" ry="2" />
<text  x="144.11" y="559.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="179.5" y="869" width="0.2" height="15.0" fill="rgb(248,173,18)" rx="2" ry="2" />
<text  x="182.45" y="879.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (2 samples, 0.04%)</title><rect x="17.7" y="453" width="0.5" height="15.0" fill="rgb(252,125,29)" rx="2" ry="2" />
<text  x="20.67" y="463.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Enter() const (1 samples, 0.02%)</title><rect x="1141.5" y="965" width="0.3" height="15.0" fill="rgb(219,129,38)" rx="2" ry="2" />
<text  x="1144.51" y="975.5" ></text>
</g>
<g >
<title>blink::RootScrollerController::RecomputeEffectiveRootScroller() (1 samples, 0.02%)</title><rect x="29.0" y="485" width="0.3" height="15.0" fill="rgb(205,179,19)" rx="2" ry="2" />
<text  x="32.05" y="495.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="41.4" y="629" width="0.3" height="15.0" fill="rgb(240,76,34)" rx="2" ry="2" />
<text  x="44.42" y="639.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks(v8::internal::Isolate*) (1 samples, 0.02%)</title><rect x="37.7" y="629" width="0.3" height="15.0" fill="rgb(240,226,18)" rx="2" ry="2" />
<text  x="40.71" y="639.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (2 samples, 0.04%)</title><rect x="42.7" y="613" width="0.4" height="15.0" fill="rgb(246,160,49)" rx="2" ry="2" />
<text  x="45.65" y="623.5" ></text>
</g>
<g >
<title>mojo::Message::Message(unsigned int, unsigned int, unsigned long, unsigned long, std::__Cr::vector&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt;, std::__Cr::allocator&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt; &gt; &gt;*) (1 samples, 0.02%)</title><rect x="171.5" y="789" width="0.3" height="15.0" fill="rgb(246,7,42)" rx="2" ry="2" />
<text  x="174.54" y="799.5" ></text>
</g>
<g >
<title>blink::Node::DebugName() const (1 samples, 0.02%)</title><rect x="28.8" y="389" width="0.2" height="15.0" fill="rgb(234,187,2)" rx="2" ry="2" />
<text  x="31.80" y="399.5" ></text>
</g>
<g >
<title>blink::CompositingInputsUpdater::UpdateSelfAndDescendantsRecursively(blink::PaintLayer*, blink::CompositingInputsUpdater::UpdateType, blink::CompositingInputsUpdater::AncestorInfo) (1 samples, 0.02%)</title><rect x="25.3" y="421" width="0.3" height="15.0" fill="rgb(230,72,19)" rx="2" ry="2" />
<text  x="28.34" y="431.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="312.8" y="597" width="0.5" height="15.0" fill="rgb(216,100,38)" rx="2" ry="2" />
<text  x="315.79" y="607.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="32.8" y="613" width="0.2" height="15.0" fill="rgb(247,219,11)" rx="2" ry="2" />
<text  x="35.76" y="623.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="182.2" y="869" width="0.5" height="15.0" fill="rgb(254,99,52)" rx="2" ry="2" />
<text  x="185.18" y="879.5" ></text>
</g>
<g >
<title>base::PendingTask::PendingTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeTicks, base::Nestable) (1 samples, 0.02%)</title><rect x="76.8" y="741" width="0.2" height="15.0" fill="rgb(226,151,53)" rx="2" ry="2" />
<text  x="79.79" y="751.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (1 samples, 0.02%)</title><rect x="284.6" y="517" width="0.2" height="15.0" fill="rgb(254,173,20)" rx="2" ry="2" />
<text  x="287.59" y="527.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="209.4" y="853" width="0.2" height="15.0" fill="rgb(212,62,33)" rx="2" ry="2" />
<text  x="212.39" y="863.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Set(void*) (1 samples, 0.02%)</title><rect x="115.1" y="773" width="0.3" height="15.0" fill="rgb(220,7,35)" rx="2" ry="2" />
<text  x="118.14" y="783.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyDidProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (7 samples, 0.15%)</title><rect x="332.1" y="869" width="1.7" height="15.0" fill="rgb(212,148,29)" rx="2" ry="2" />
<text  x="335.09" y="879.5" ></text>
</g>
<g >
<title>blink::PaintLayerScrollableArea::LayerForScrolling() const (1 samples, 0.02%)</title><rect x="27.3" y="485" width="0.3" height="15.0" fill="rgb(223,134,1)" rx="2" ry="2" />
<text  x="30.32" y="495.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (1 samples, 0.02%)</title><rect x="414.2" y="629" width="0.3" height="15.0" fill="rgb(207,170,22)" rx="2" ry="2" />
<text  x="417.22" y="639.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (2 samples, 0.04%)</title><rect x="345.4" y="773" width="0.5" height="15.0" fill="rgb(235,135,48)" rx="2" ry="2" />
<text  x="348.45" y="783.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;viz::mojom::LocalSurfaceIdDataView, viz::LocalSurfaceId const&gt;::Serialize(viz::LocalSurfaceId const&amp;, mojo::internal::Buffer*, viz::mojom::internal::LocalSurfaceId_Data::BufferWriter*, mojo::internal::SerializationContext*) (2 samples, 0.04%)</title><rect x="1043.3" y="629" width="0.5" height="15.0" fill="rgb(253,73,47)" rx="2" ry="2" />
<text  x="1046.30" y="639.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::GetBucketIndex(int) const (2 samples, 0.04%)</title><rect x="369.4" y="885" width="0.5" height="15.0" fill="rgb(249,208,31)" rx="2" ry="2" />
<text  x="372.44" y="895.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1056.2" y="709" width="0.2" height="15.0" fill="rgb(249,161,45)" rx="2" ry="2" />
<text  x="1059.17" y="719.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::GetBucketIndex(int) const (1 samples, 0.02%)</title><rect x="877.8" y="885" width="0.3" height="15.0" fill="rgb(234,89,50)" rx="2" ry="2" />
<text  x="880.81" y="895.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::EncodeVideoFrame(webrtc::VideoFrame const&amp;, long long) (429 samples, 8.99%)</title><rect x="381.6" y="821" width="106.1" height="15.0" fill="rgb(246,12,14)" rx="2" ry="2" />
<text  x="384.56" y="831.5" >webrtc::Vide..</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (6 samples, 0.13%)</title><rect x="350.4" y="805" width="1.5" height="15.0" fill="rgb(227,206,46)" rx="2" ry="2" />
<text  x="353.39" y="815.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="1026.7" y="869" width="0.5" height="15.0" fill="rgb(218,123,54)" rx="2" ry="2" />
<text  x="1029.73" y="879.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="577.5" y="805" width="0.2" height="15.0" fill="rgb(230,190,48)" rx="2" ry="2" />
<text  x="580.49" y="815.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="659.9" y="693" width="0.2" height="15.0" fill="rgb(241,149,4)" rx="2" ry="2" />
<text  x="662.87" y="703.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (3 samples, 0.06%)</title><rect x="887.0" y="677" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="889.96" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::DidRunTask() (33 samples, 0.69%)</title><rect x="30.3" y="709" width="8.1" height="15.0" fill="rgb(223,124,53)" rx="2" ry="2" />
<text  x="33.29" y="719.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="651.7" y="709" width="0.2" height="15.0" fill="rgb(244,12,43)" rx="2" ry="2" />
<text  x="654.70" y="719.5" ></text>
</g>
<g >
<title>base::DefaultTickClock::NowTicks() const (1 samples, 0.02%)</title><rect x="877.1" y="917" width="0.2" height="15.0" fill="rgb(216,124,8)" rx="2" ry="2" />
<text  x="880.06" y="927.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="335.8" y="853" width="0.2" height="15.0" fill="rgb(231,186,46)" rx="2" ry="2" />
<text  x="338.80" y="863.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;mojo::ArrayDataView&lt;viz::mojom::RenderPassDataView&gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; const&gt;::Serialize(std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; const&amp;, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;mojo::internal::Pointer&lt;viz::mojom::internal::RenderPass_Data&gt; &gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (3 samples, 0.06%)</title><rect x="1042.1" y="613" width="0.7" height="15.0" fill="rgb(228,180,7)" rx="2" ry="2" />
<text  x="1045.07" y="623.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::OnChannelMessage(void const*, unsigned long, std::__Cr::vector&lt;mojo::PlatformHandle, std::__Cr::allocator&lt;mojo::PlatformHandle&gt; &gt;) (1 samples, 0.02%)</title><rect x="97.6" y="853" width="0.2" height="15.0" fill="rgb(239,5,2)" rx="2" ry="2" />
<text  x="100.57" y="863.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="330.6" y="837" width="0.3" height="15.0" fill="rgb(222,9,44)" rx="2" ry="2" />
<text  x="333.60" y="847.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (6 samples, 0.13%)</title><rect x="229.4" y="837" width="1.5" height="15.0" fill="rgb(247,133,2)" rx="2" ry="2" />
<text  x="232.43" y="847.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*) (2 samples, 0.04%)</title><rect x="78.5" y="773" width="0.5" height="15.0" fill="rgb(216,6,24)" rx="2" ry="2" />
<text  x="81.52" y="783.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="108.0" y="805" width="0.2" height="15.0" fill="rgb(235,4,8)" rx="2" ry="2" />
<text  x="110.96" y="815.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWait(base::TimeDelta const&amp;) (21 samples, 0.44%)</title><rect x="1170.5" y="949" width="5.2" height="15.0" fill="rgb(229,11,31)" rx="2" ry="2" />
<text  x="1173.46" y="959.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::~UserMessageImpl() (1 samples, 0.02%)</title><rect x="1072.7" y="661" width="0.3" height="15.0" fill="rgb(253,194,32)" rx="2" ry="2" />
<text  x="1075.74" y="671.5" ></text>
</g>
<g >
<title>webrtc::SrtpTransport::OnRtpPacketReceived(rtc::CopyOnWriteBuffer, long long) (16 samples, 0.34%)</title><rect x="306.9" y="549" width="3.9" height="15.0" fill="rgb(225,93,28)" rx="2" ry="2" />
<text  x="309.86" y="559.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="268.0" y="565" width="0.3" height="15.0" fill="rgb(219,195,14)" rx="2" ry="2" />
<text  x="271.02" y="575.5" ></text>
</g>
<g >
<title>base::WorkIdProvider::IncrementWorkId() (2 samples, 0.04%)</title><rect x="326.9" y="885" width="0.5" height="15.0" fill="rgb(210,204,50)" rx="2" ry="2" />
<text  x="329.89" y="895.5" ></text>
</g>
<g >
<title>__select (4 samples, 0.08%)</title><rect x="52.5" y="997" width="1.0" height="15.0" fill="rgb(246,4,17)" rx="2" ry="2" />
<text  x="55.55" y="1007.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="652.2" y="581" width="0.2" height="15.0" fill="rgb(229,78,22)" rx="2" ry="2" />
<text  x="655.20" y="591.5" ></text>
</g>
<g >
<title>base::Pickle::Pickle(int) (1 samples, 0.02%)</title><rect x="1033.9" y="485" width="0.3" height="15.0" fill="rgb(230,49,2)" rx="2" ry="2" />
<text  x="1036.90" y="495.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::WriteMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (7 samples, 0.15%)</title><rect x="169.6" y="693" width="1.7" height="15.0" fill="rgb(241,202,13)" rx="2" ry="2" />
<text  x="172.56" y="703.5" ></text>
</g>
<g >
<title>void std::__Cr::__function::__policy_invoker&lt;void (std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)&gt;::__call_impl&lt;std::__Cr::__function::__alloc_func&lt;webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)::$_3, std::__Cr::allocator&lt;webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)::$_3&gt;, void (std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;)&gt; &gt;(std::__Cr::__function::__policy_storage const*, std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;&amp;&amp;) (2 samples, 0.04%)</title><rect x="380.3" y="837" width="0.5" height="15.0" fill="rgb(227,214,43)" rx="2" ry="2" />
<text  x="383.33" y="847.5" ></text>
</g>
<g >
<title>blink::VideoFrameResourceProvider::ReceiveReturnsFromParent(WTF::Vector&lt;viz::ReturnedResource, 0u, WTF::PartitionAllocator&gt; const&amp;) (6 samples, 0.13%)</title><rect x="1052.2" y="661" width="1.5" height="15.0" fill="rgb(223,125,45)" rx="2" ry="2" />
<text  x="1055.21" y="671.5" ></text>
</g>
<g >
<title>vp8_denoiser_filter_uv_sse2 (5 samples, 0.10%)</title><rect x="418.9" y="661" width="1.3" height="15.0" fill="rgb(250,90,9)" rx="2" ry="2" />
<text  x="421.92" y="671.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="267.8" y="421" width="0.2" height="15.0" fill="rgb(206,44,4)" rx="2" ry="2" />
<text  x="270.77" y="431.5" ></text>
</g>
<g >
<title>objc_alloc (1 samples, 0.02%)</title><rect x="222.7" y="901" width="0.3" height="15.0" fill="rgb(205,28,22)" rx="2" ry="2" />
<text  x="225.75" y="911.5" ></text>
</g>
<g >
<title>base::WaitableEvent::PeekPort(unsigned int, bool) (5 samples, 0.10%)</title><rect x="874.1" y="949" width="1.2" height="15.0" fill="rgb(214,176,29)" rx="2" ry="2" />
<text  x="877.10" y="959.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1070.0" y="805" width="0.3" height="15.0" fill="rgb(220,81,19)" rx="2" ry="2" />
<text  x="1073.02" y="815.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker  0x659341 (670 samples, 14.05%)</title><rect x="707.4" y="1077" width="165.7" height="15.0" fill="rgb(231,44,45)" rx="2" ry="2" />
<text  x="710.36" y="1087.5" >base::internal::Worke..</text>
</g>
<g >
<title>CopyPlane (4 samples, 0.08%)</title><rect x="992.1" y="741" width="1.0" height="15.0" fill="rgb(206,168,9)" rx="2" ry="2" />
<text  x="995.10" y="751.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1004.2" y="773" width="0.3" height="15.0" fill="rgb(241,124,0)" rx="2" ry="2" />
<text  x="1007.22" y="783.5" ></text>
</g>
<g >
<title>_platform_memset$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="483.5" y="709" width="0.5" height="15.0" fill="rgb(220,188,29)" rx="2" ry="2" />
<text  x="486.48" y="719.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;base::internal::IgnoreResultHelper&lt;bool (mojo::Connector::*)()&gt;, base::WeakPtr&lt;mojo::Connector&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="1066.8" y="885" width="0.3" height="15.0" fill="rgb(239,127,27)" rx="2" ry="2" />
<text  x="1069.81" y="895.5" ></text>
</g>
<g >
<title>WTF::PartitionAllocator::AllocateBacking(unsigned long, char const*) (1 samples, 0.02%)</title><rect x="1051.5" y="597" width="0.2" height="15.0" fill="rgb(214,195,46)" rx="2" ry="2" />
<text  x="1054.47" y="607.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::BeginUnusedPeriod() (1 samples, 0.02%)</title><rect x="558.7" y="901" width="0.2" height="15.0" fill="rgb(238,82,26)" rx="2" ry="2" />
<text  x="561.69" y="911.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="208.4" y="821" width="0.2" height="15.0" fill="rgb(213,164,48)" rx="2" ry="2" />
<text  x="211.40" y="831.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Set(void*) (1 samples, 0.02%)</title><rect x="1164.3" y="885" width="0.2" height="15.0" fill="rgb(215,229,34)" rx="2" ry="2" />
<text  x="1167.27" y="895.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (2 samples, 0.04%)</title><rect x="267.0" y="485" width="0.5" height="15.0" fill="rgb(239,123,1)" rx="2" ry="2" />
<text  x="270.03" y="495.5" ></text>
</g>
<g >
<title>mojo::Connector::ReadAllAvailableMessages() (7 samples, 0.15%)</title><rect x="1071.5" y="821" width="1.7" height="15.0" fill="rgb(225,214,9)" rx="2" ry="2" />
<text  x="1074.51" y="831.5" ></text>
</g>
<g >
<title>webrtc::VideoFrame::~VideoFrame() (1 samples, 0.02%)</title><rect x="487.4" y="805" width="0.3" height="15.0" fill="rgb(225,24,34)" rx="2" ry="2" />
<text  x="490.44" y="815.5" ></text>
</g>
<g >
<title>sctp_lowlevel_chunk_output (3 samples, 0.06%)</title><rect x="53.5" y="949" width="0.8" height="15.0" fill="rgb(205,2,32)" rx="2" ry="2" />
<text  x="56.54" y="959.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="533.2" y="533" width="0.3" height="15.0" fill="rgb(209,73,52)" rx="2" ry="2" />
<text  x="536.21" y="543.5" ></text>
</g>
<g >
<title>cc::mojo_embedder::AsyncLayerTreeFrameSink::SubmitCompositorFrame(viz::CompositorFrame, bool, bool) (3 samples, 0.06%)</title><rect x="1068.0" y="757" width="0.8" height="15.0" fill="rgb(235,56,28)" rx="2" ry="2" />
<text  x="1071.04" y="767.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (1 samples, 0.02%)</title><rect x="861.0" y="949" width="0.2" height="15.0" fill="rgb(220,53,36)" rx="2" ry="2" />
<text  x="863.99" y="959.5" ></text>
</g>
<g >
<title>mojo::Connector::DispatchMessage(mojo::Message) (16 samples, 0.34%)</title><rect x="224.7" y="837" width="4.0" height="15.0" fill="rgb(231,120,16)" rx="2" ry="2" />
<text  x="227.73" y="847.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="105.0" y="725" width="0.2" height="15.0" fill="rgb(248,208,1)" rx="2" ry="2" />
<text  x="107.99" y="735.5" ></text>
</g>
<g >
<title>base::Thread::Run(base::RunLoop*) (597 samples, 12.52%)</title><rect x="214.3" y="981" width="147.7" height="15.0" fill="rgb(236,158,53)" rx="2" ry="2" />
<text  x="217.34" y="991.5" >base::Thread::Run(..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="652.7" y="597" width="0.2" height="15.0" fill="rgb(214,25,36)" rx="2" ry="2" />
<text  x="655.69" y="607.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="212.9" y="821" width="0.2" height="15.0" fill="rgb(214,82,11)" rx="2" ry="2" />
<text  x="215.85" y="831.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::AllocatePacket() const (2 samples, 0.04%)</title><rect x="1004.2" y="789" width="0.5" height="15.0" fill="rgb(224,204,43)" rx="2" ry="2" />
<text  x="1007.22" y="799.5" ></text>
</g>
<g >
<title>rtc::TimeMillis() (2 samples, 0.04%)</title><rect x="310.8" y="597" width="0.5" height="15.0" fill="rgb(213,54,15)" rx="2" ry="2" />
<text  x="313.81" y="607.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.02%)</title><rect x="696.0" y="917" width="0.2" height="15.0" fill="rgb(208,90,12)" rx="2" ry="2" />
<text  x="698.98" y="927.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="171.8" y="773" width="0.2" height="15.0" fill="rgb(207,43,47)" rx="2" ry="2" />
<text  x="174.79" y="783.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (6 samples, 0.13%)</title><rect x="276.2" y="645" width="1.5" height="15.0" fill="rgb(222,96,42)" rx="2" ry="2" />
<text  x="279.18" y="655.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1171.2" y="869" width="0.2" height="15.0" fill="rgb(239,74,46)" rx="2" ry="2" />
<text  x="1174.20" y="879.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (6 samples, 0.13%)</title><rect x="1052.2" y="565" width="1.5" height="15.0" fill="rgb(223,66,0)" rx="2" ry="2" />
<text  x="1055.21" y="575.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.02%)</title><rect x="44.1" y="613" width="0.3" height="15.0" fill="rgb(228,196,2)" rx="2" ry="2" />
<text  x="47.14" y="623.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (2 samples, 0.04%)</title><rect x="177.5" y="821" width="0.5" height="15.0" fill="rgb(217,82,15)" rx="2" ry="2" />
<text  x="180.48" y="831.5" ></text>
</g>
<g >
<title>blink::Event::InitEventPath(blink::Node&amp;) (1 samples, 0.02%)</title><rect x="22.6" y="629" width="0.3" height="15.0" fill="rgb(239,134,46)" rx="2" ry="2" />
<text  x="25.62" y="639.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::BeforeQueueTaskSource(base::TaskShutdownBehavior) (1 samples, 0.02%)</title><rect x="124.5" y="693" width="0.3" height="15.0" fill="rgb(228,219,13)" rx="2" ry="2" />
<text  x="127.54" y="703.5" ></text>
</g>
<g >
<title>small_size (1 samples, 0.02%)</title><rect x="576.5" y="869" width="0.2" height="15.0" fill="rgb(217,167,5)" rx="2" ry="2" />
<text  x="579.50" y="879.5" ></text>
</g>
<g >
<title>rtc::FireAndForgetAsyncClosure&lt;rtc::MethodFunctor&lt;cricket::P2PTransportChannel, void (cricket::P2PTransportChannel::*)(), void&gt; &gt;::~FireAndForgetAsyncClosure() (2 samples, 0.04%)</title><rect x="297.0" y="805" width="0.5" height="15.0" fill="rgb(237,225,33)" rx="2" ry="2" />
<text  x="299.96" y="815.5" ></text>
</g>
<g >
<title>mach_msg (10 samples, 0.21%)</title><rect x="1165.5" y="917" width="2.5" height="15.0" fill="rgb(212,67,31)" rx="2" ry="2" />
<text  x="1168.51" y="927.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="1111.6" y="853" width="0.5" height="15.0" fill="rgb(205,142,26)" rx="2" ry="2" />
<text  x="1114.58" y="863.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="297.0" y="741" width="0.5" height="15.0" fill="rgb(206,89,16)" rx="2" ry="2" />
<text  x="299.96" y="751.5" ></text>
</g>
<g >
<title>base::Histogram::ranges(unsigned int) const (2 samples, 0.04%)</title><rect x="712.8" y="901" width="0.5" height="15.0" fill="rgb(240,179,34)" rx="2" ry="2" />
<text  x="715.81" y="911.5" ></text>
</g>
<g >
<title>rtc::CritScope::CritScope(rtc::CriticalSection const*) (1 samples, 0.02%)</title><rect x="1189.8" y="949" width="0.2" height="15.0" fill="rgb(248,163,39)" rx="2" ry="2" />
<text  x="1192.75" y="959.5" ></text>
</g>
<g >
<title>vpx_subtract_block_sse2.loop_8 (2 samples, 0.04%)</title><rect x="790.2" y="693" width="0.5" height="15.0" fill="rgb(230,126,47)" rx="2" ry="2" />
<text  x="793.23" y="703.5" ></text>
</g>
<g >
<title>__CFRunLoopRun (165 samples, 3.46%)</title><rect x="11.0" y="853" width="40.8" height="15.0" fill="rgb(229,53,7)" rx="2" ry="2" />
<text  x="13.99" y="863.5" >__C..</text>
</g>
<g >
<title>v8_inspector::V8ConsoleMessage::createForConsoleAPI(v8::Local&lt;v8::Context&gt;, int, int, v8_inspector::V8InspectorImpl*, double, v8_inspector::ConsoleAPIType, std::__Cr::vector&lt;v8::Local&lt;v8::Value&gt;, std::__Cr::allocator&lt;v8::Local&lt;v8::Value&gt; &gt; &gt; const&amp;, v8_inspector::String16 const&amp;, std::__Cr::unique_ptr&lt;v8_inspector::V8StackTraceImpl, std::__Cr::default_delete&lt;v8_inspector::V8StackTraceImpl&gt; &gt;) (1 samples, 0.02%)</title><rect x="19.9" y="309" width="0.2" height="15.0" fill="rgb(235,37,9)" rx="2" ry="2" />
<text  x="22.90" y="319.5" ></text>
</g>
<g >
<title>vp8_encode_bool (1 samples, 0.02%)</title><rect x="463.9" y="709" width="0.3" height="15.0" fill="rgb(216,228,21)" rx="2" ry="2" />
<text  x="466.94" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::LazyNow::Now() (1 samples, 0.02%)</title><rect x="186.4" y="805" width="0.2" height="15.0" fill="rgb(208,134,3)" rx="2" ry="2" />
<text  x="189.38" y="815.5" ></text>
</g>
<g >
<title>vp8cx_pick_filter_level_fast (2 samples, 0.04%)</title><rect x="462.7" y="725" width="0.5" height="15.0" fill="rgb(223,69,19)" rx="2" ry="2" />
<text  x="465.70" y="735.5" ></text>
</g>
<g >
<title>thread_start (39 samples, 0.82%)</title><rect x="1168.7" y="1061" width="9.7" height="15.0" fill="rgb(212,66,1)" rx="2" ry="2" />
<text  x="1171.73" y="1071.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::GetNumAwakeWorkersLockRequired() const (1 samples, 0.02%)</title><rect x="698.5" y="933" width="0.2" height="15.0" fill="rgb(214,113,49)" rx="2" ry="2" />
<text  x="701.46" y="943.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="367.0" y="949" width="0.2" height="15.0" fill="rgb(216,32,43)" rx="2" ry="2" />
<text  x="369.97" y="959.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (3 samples, 0.06%)</title><rect x="1154.9" y="757" width="0.7" height="15.0" fill="rgb(229,78,54)" rx="2" ry="2" />
<text  x="1157.87" y="767.5" ></text>
</g>
<g >
<title>base::WaitableEvent::ReceiveRight::~ReceiveRight() (4 samples, 0.08%)</title><rect x="1036.6" y="501" width="1.0" height="15.0" fill="rgb(228,187,24)" rx="2" ry="2" />
<text  x="1039.62" y="511.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="1153.1" y="789" width="0.3" height="15.0" fill="rgb(234,209,21)" rx="2" ry="2" />
<text  x="1156.14" y="799.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;blink::WebRtcVideoFrameAdapter&gt;::~RefCountedObject() (2 samples, 0.04%)</title><rect x="487.7" y="821" width="0.5" height="15.0" fill="rgb(230,127,11)" rx="2" ry="2" />
<text  x="490.69" y="831.5" ></text>
</g>
<g >
<title>__commpage_gettimeofday_internal (1 samples, 0.02%)</title><rect x="12.2" y="805" width="0.3" height="15.0" fill="rgb(214,56,25)" rx="2" ry="2" />
<text  x="15.23" y="815.5" ></text>
</g>
<g >
<title>base::ScopedDeferTaskPosting::ScopedDeferTaskPosting() (1 samples, 0.02%)</title><rect x="316.0" y="485" width="0.3" height="15.0" fill="rgb(208,41,13)" rx="2" ry="2" />
<text  x="319.01" y="495.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="285.6" y="773" width="0.2" height="15.0" fill="rgb(233,208,43)" rx="2" ry="2" />
<text  x="288.58" y="783.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="335.8" y="837" width="0.2" height="15.0" fill="rgb(222,113,50)" rx="2" ry="2" />
<text  x="338.80" y="847.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="330.9" y="837" width="0.2" height="15.0" fill="rgb(230,175,46)" rx="2" ry="2" />
<text  x="333.85" y="847.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="1066.8" y="773" width="0.3" height="15.0" fill="rgb(236,173,13)" rx="2" ry="2" />
<text  x="1069.81" y="783.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.02%)</title><rect x="259.6" y="693" width="0.3" height="15.0" fill="rgb(213,157,7)" rx="2" ry="2" />
<text  x="262.61" y="703.5" ></text>
</g>
<g >
<title>base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope() (1 samples, 0.02%)</title><rect x="23.6" y="629" width="0.3" height="15.0" fill="rgb(250,75,6)" rx="2" ry="2" />
<text  x="26.61" y="639.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (2 samples, 0.04%)</title><rect x="190.6" y="757" width="0.5" height="15.0" fill="rgb(217,102,19)" rx="2" ry="2" />
<text  x="193.59" y="767.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::~RefCountedObject() (2 samples, 0.04%)</title><rect x="233.1" y="773" width="0.5" height="15.0" fill="rgb(224,52,2)" rx="2" ry="2" />
<text  x="236.14" y="783.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (4 samples, 0.08%)</title><rect x="283.4" y="725" width="0.9" height="15.0" fill="rgb(214,39,27)" rx="2" ry="2" />
<text  x="286.35" y="735.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (2 samples, 0.04%)</title><rect x="339.0" y="837" width="0.5" height="15.0" fill="rgb(210,198,36)" rx="2" ry="2" />
<text  x="342.01" y="847.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (523 samples, 10.96%)</title><rect x="877.1" y="933" width="129.3" height="15.0" fill="rgb(253,179,26)" rx="2" ry="2" />
<text  x="880.06" y="943.5" >base::internal::..</text>
</g>
<g >
<title>blink::HTMLMediaElement::ProgressEventTimerFired(blink::TimerBase*) (2 samples, 0.04%)</title><rect x="19.2" y="645" width="0.4" height="15.0" fill="rgb(209,3,8)" rx="2" ry="2" />
<text  x="22.15" y="655.5" ></text>
</g>
<g >
<title>webrtc::RmsLevel::Analyze(rtc::ArrayView&lt;short const, -4711l&gt;) (1 samples, 0.02%)</title><rect x="692.0" y="837" width="0.3" height="15.0" fill="rgb(247,167,8)" rx="2" ry="2" />
<text  x="695.03" y="847.5" ></text>
</g>
<g >
<title>non-virtual thunk to cc::ProxyImpl::DidNotProduceFrame(viz::BeginFrameAck const&amp;) (1 samples, 0.02%)</title><rect x="1072.5" y="597" width="0.2" height="15.0" fill="rgb(212,60,32)" rx="2" ry="2" />
<text  x="1075.49" y="607.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="111.7" y="613" width="0.2" height="15.0" fill="rgb(235,223,9)" rx="2" ry="2" />
<text  x="114.67" y="623.5" ></text>
</g>
<g >
<title>vp8e_encode (374 samples, 7.84%)</title><rect x="722.7" y="773" width="92.5" height="15.0" fill="rgb(244,159,12)" rx="2" ry="2" />
<text  x="725.70" y="783.5" >vp8e_encode</text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (12 samples, 0.25%)</title><rect x="823.1" y="709" width="3.0" height="15.0" fill="rgb(211,30,26)" rx="2" ry="2" />
<text  x="826.14" y="719.5" ></text>
</g>
<g >
<title>vp8_copy_and_extend_frame (4 samples, 0.08%)</title><rect x="960.2" y="725" width="1.0" height="15.0" fill="rgb(231,125,42)" rx="2" ry="2" />
<text  x="963.18" y="735.5" ></text>
</g>
<g >
<title>media::VideoFrame::VideoFrame(media::VideoFrameLayout const&amp;, media::VideoFrame::StorageType, gfx::Rect const&amp;, gfx::Size const&amp;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="137.6" y="517" width="0.3" height="15.0" fill="rgb(214,80,24)" rx="2" ry="2" />
<text  x="140.65" y="527.5" ></text>
</g>
<g >
<title>thread_start (150 samples, 3.14%)</title><rect x="1102.9" y="1061" width="37.1" height="15.0" fill="rgb(241,52,21)" rx="2" ry="2" />
<text  x="1105.92" y="1071.5" >thr..</text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (1 samples, 0.02%)</title><rect x="15.7" y="709" width="0.2" height="15.0" fill="rgb(235,109,28)" rx="2" ry="2" />
<text  x="18.69" y="719.5" ></text>
</g>
<g >
<title>blink::Node::HandleLocalEvents(blink::Event&amp;) (8 samples, 0.17%)</title><rect x="20.4" y="613" width="2.0" height="15.0" fill="rgb(214,21,28)" rx="2" ry="2" />
<text  x="23.39" y="623.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (3 samples, 0.06%)</title><rect x="1012.6" y="917" width="0.8" height="15.0" fill="rgb(234,94,10)" rx="2" ry="2" />
<text  x="1015.63" y="927.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (1 samples, 0.02%)</title><rect x="1181.6" y="741" width="0.2" height="15.0" fill="rgb(225,208,11)" rx="2" ry="2" />
<text  x="1184.59" y="751.5" ></text>
</g>
<g >
<title>quant_partition (2 samples, 0.04%)</title><rect x="842.9" y="693" width="0.5" height="15.0" fill="rgb(210,89,11)" rx="2" ry="2" />
<text  x="845.93" y="703.5" ></text>
</g>
<g >
<title>encode_mvcomponent (1 samples, 0.02%)</title><rect x="637.4" y="725" width="0.2" height="15.0" fill="rgb(248,20,21)" rx="2" ry="2" />
<text  x="640.35" y="735.5" ></text>
</g>
<g >
<title>webrtc::FrameCombiner::Combine(std::__Cr::vector&lt;webrtc::AudioFrame*, std::__Cr::allocator&lt;webrtc::AudioFrame*&gt; &gt; const&amp;, unsigned long, int, unsigned long, webrtc::AudioFrame*) (5 samples, 0.10%)</title><rect x="1137.8" y="885" width="1.2" height="15.0" fill="rgb(251,163,25)" rx="2" ry="2" />
<text  x="1140.80" y="895.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::GetEncodedPartitions(webrtc::VideoFrame const&amp;, bool) (5 samples, 0.10%)</title><rect x="651.2" y="789" width="1.2" height="15.0" fill="rgb(210,16,17)" rx="2" ry="2" />
<text  x="654.21" y="799.5" ></text>
</g>
<g >
<title>WTF::StringTypeAdapter&lt;char const*&gt;::StringTypeAdapter(char const*) (1 samples, 0.02%)</title><rect x="20.6" y="469" width="0.3" height="15.0" fill="rgb(207,193,13)" rx="2" ry="2" />
<text  x="23.64" y="479.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_half_loop (1 samples, 0.02%)</title><rect x="922.3" y="661" width="0.3" height="15.0" fill="rgb(231,61,13)" rx="2" ry="2" />
<text  x="925.34" y="671.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::~UserMessageImpl() (3 samples, 0.06%)</title><rect x="1054.7" y="677" width="0.7" height="15.0" fill="rgb(220,130,32)" rx="2" ry="2" />
<text  x="1057.68" y="687.5" ></text>
</g>
<g >
<title>vp8_decode_mode_mvs (3 samples, 0.06%)</title><rect x="836.2" y="709" width="0.8" height="15.0" fill="rgb(209,113,32)" rx="2" ry="2" />
<text  x="839.25" y="719.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="1054.4" y="677" width="0.3" height="15.0" fill="rgb(218,173,13)" rx="2" ry="2" />
<text  x="1057.44" y="687.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="299.2" y="837" width="0.2" height="15.0" fill="rgb(229,160,46)" rx="2" ry="2" />
<text  x="302.19" y="847.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1160.8" y="741" width="0.3" height="15.0" fill="rgb(226,82,9)" rx="2" ry="2" />
<text  x="1163.81" y="751.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="989.9" y="693" width="0.2" height="15.0" fill="rgb(229,146,49)" rx="2" ry="2" />
<text  x="992.87" y="703.5" ></text>
</g>
<g >
<title>scoped_refptr&lt;base::internal::BindStateBase&gt; base::AdoptRef&lt;base::internal::BindStateBase&gt;(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="306.1" y="501" width="0.3" height="15.0" fill="rgb(209,50,11)" rx="2" ry="2" />
<text  x="309.11" y="511.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="281.1" y="533" width="0.3" height="15.0" fill="rgb(237,164,48)" rx="2" ry="2" />
<text  x="284.13" y="543.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="300.4" y="805" width="0.3" height="15.0" fill="rgb(242,140,33)" rx="2" ry="2" />
<text  x="303.42" y="815.5" ></text>
</g>
<g >
<title>CRYPTO_ctr128_encrypt_ctr32 (1 samples, 0.02%)</title><rect x="237.8" y="677" width="0.3" height="15.0" fill="rgb(226,87,54)" rx="2" ry="2" />
<text  x="240.84" y="687.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork() (11 samples, 0.23%)</title><rect x="194.1" y="917" width="2.7" height="15.0" fill="rgb(233,187,53)" rx="2" ry="2" />
<text  x="197.05" y="927.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), void&gt;::Invoke&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;(void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&amp;&amp;) (3 samples, 0.06%)</title><rect x="64.9" y="949" width="0.8" height="15.0" fill="rgb(206,142,47)" rx="2" ry="2" />
<text  x="67.92" y="959.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="255.2" y="629" width="0.2" height="15.0" fill="rgb(244,113,45)" rx="2" ry="2" />
<text  x="258.15" y="639.5" ></text>
</g>
<g >
<title>vpx_post_proc_down_and_across_mb_row_sse2.acrossnextcol (11 samples, 0.23%)</title><rect x="653.4" y="709" width="2.8" height="15.0" fill="rgb(215,113,15)" rx="2" ry="2" />
<text  x="656.43" y="719.5" ></text>
</g>
<g >
<title>base::debug::StackTrace::StackTrace() (1 samples, 0.02%)</title><rect x="370.7" y="901" width="0.2" height="15.0" fill="rgb(244,71,1)" rx="2" ry="2" />
<text  x="373.68" y="911.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::~Transaction() (1 samples, 0.02%)</title><rect x="282.4" y="613" width="0.2" height="15.0" fill="rgb(242,145,6)" rx="2" ry="2" />
<text  x="285.36" y="623.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendPeerEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (5 samples, 0.10%)</title><rect x="169.8" y="613" width="1.2" height="15.0" fill="rgb(224,26,35)" rx="2" ry="2" />
<text  x="172.81" y="623.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (3 samples, 0.06%)</title><rect x="282.4" y="629" width="0.7" height="15.0" fill="rgb(229,147,2)" rx="2" ry="2" />
<text  x="285.36" y="639.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (3 samples, 0.06%)</title><rect x="332.6" y="837" width="0.7" height="15.0" fill="rgb(205,198,1)" rx="2" ry="2" />
<text  x="335.58" y="847.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1095.7" y="933" width="0.3" height="15.0" fill="rgb(243,51,51)" rx="2" ry="2" />
<text  x="1098.75" y="943.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="861.0" y="901" width="0.2" height="15.0" fill="rgb(216,213,45)" rx="2" ry="2" />
<text  x="863.99" y="911.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::GetDelayTillNextDelayedTask(base::sequence_manager::LazyNow*) const (1 samples, 0.02%)</title><rect x="29.8" y="693" width="0.2" height="15.0" fill="rgb(220,187,13)" rx="2" ry="2" />
<text  x="32.79" y="703.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;base::internal::Task&gt;::pop_front() (1 samples, 0.02%)</title><rect x="368.7" y="917" width="0.2" height="15.0" fill="rgb(240,70,33)" rx="2" ry="2" />
<text  x="371.70" y="927.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="880.5" y="885" width="0.3" height="15.0" fill="rgb(235,52,12)" rx="2" ry="2" />
<text  x="883.53" y="895.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="840.2" y="693" width="0.3" height="15.0" fill="rgb(223,75,34)" rx="2" ry="2" />
<text  x="843.21" y="703.5" ></text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::ScheduleDelayedWork(base::TimeTicks const&amp;) (5 samples, 0.10%)</title><rect x="14.0" y="741" width="1.2" height="15.0" fill="rgb(225,223,37)" rx="2" ry="2" />
<text  x="16.96" y="751.5" ></text>
</g>
<g >
<title>media::AudioDeviceThread::ThreadMain() (64 samples, 1.34%)</title><rect x="1087.1" y="997" width="15.8" height="15.0" fill="rgb(221,21,38)" rx="2" ry="2" />
<text  x="1090.09" y="1007.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;gfx::mojom::RRectFDataView, gfx::RRectF&gt;::Serialize(gfx::RRectF&amp;, mojo::internal::Buffer*, gfx::mojom::internal::RRectF_Data::BufferWriter*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1042.3" y="565" width="0.3" height="15.0" fill="rgb(240,7,23)" rx="2" ry="2" />
<text  x="1045.31" y="575.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (2 samples, 0.04%)</title><rect x="299.7" y="837" width="0.5" height="15.0" fill="rgb(233,139,46)" rx="2" ry="2" />
<text  x="302.68" y="847.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="574.3" y="885" width="0.5" height="15.0" fill="rgb(248,153,21)" rx="2" ry="2" />
<text  x="577.27" y="895.5" ></text>
</g>
<g >
<title>blink::DOMTimer::Fired() (6 samples, 0.13%)</title><rect x="16.9" y="645" width="1.5" height="15.0" fill="rgb(210,68,21)" rx="2" ry="2" />
<text  x="19.93" y="655.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_half_loop (1 samples, 0.02%)</title><rect x="404.8" y="661" width="0.3" height="15.0" fill="rgb(247,85,29)" rx="2" ry="2" />
<text  x="407.82" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::pop() (1 samples, 0.02%)</title><rect x="1074.0" y="805" width="0.2" height="15.0" fill="rgb(250,185,2)" rx="2" ry="2" />
<text  x="1076.98" y="815.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="1072.5" y="453" width="0.2" height="15.0" fill="rgb(235,50,9)" rx="2" ry="2" />
<text  x="1075.49" y="463.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_8::__invoke(_malloc_zone_t*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="1039.3" y="501" width="0.3" height="15.0" fill="rgb(236,212,25)" rx="2" ry="2" />
<text  x="1042.35" y="511.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1054.7" y="645" width="0.2" height="15.0" fill="rgb(242,202,16)" rx="2" ry="2" />
<text  x="1057.68" y="655.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="587.9" y="661" width="0.2" height="15.0" fill="rgb(213,156,49)" rx="2" ry="2" />
<text  x="590.88" y="671.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="716.5" y="869" width="0.3" height="15.0" fill="rgb(237,170,5)" rx="2" ry="2" />
<text  x="719.52" y="879.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::~UserMessageImpl() (1 samples, 0.02%)</title><rect x="228.4" y="709" width="0.3" height="15.0" fill="rgb(235,116,45)" rx="2" ry="2" />
<text  x="231.44" y="719.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (2 samples, 0.04%)</title><rect x="857.0" y="933" width="0.5" height="15.0" fill="rgb(232,87,15)" rx="2" ry="2" />
<text  x="860.03" y="943.5" ></text>
</g>
<g >
<title>opus_encode (27 samples, 0.57%)</title><rect x="683.9" y="773" width="6.6" height="15.0" fill="rgb(222,123,38)" rx="2" ry="2" />
<text  x="686.86" y="783.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="30.8" y="613" width="0.2" height="15.0" fill="rgb(241,172,46)" rx="2" ry="2" />
<text  x="33.78" y="623.5" ></text>
</g>
<g >
<title>mach_port_insert_member (7 samples, 0.15%)</title><rect x="50.1" y="837" width="1.7" height="15.0" fill="rgb(219,79,7)" rx="2" ry="2" />
<text  x="53.08" y="847.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::internal::PriorityQueue::TaskSourceAndSortKey&gt;::MoveHoleUpAndFillWithElement(unsigned long, base::internal::PriorityQueue::TaskSourceAndSortKey&amp;&amp;) (4 samples, 0.08%)</title><rect x="122.8" y="677" width="1.0" height="15.0" fill="rgb(247,79,37)" rx="2" ry="2" />
<text  x="125.81" y="687.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.02%)</title><rect x="42.9" y="565" width="0.2" height="15.0" fill="rgb(227,72,42)" rx="2" ry="2" />
<text  x="45.90" y="575.5" ></text>
</g>
<g >
<title>WTF::HashTableAddResult&lt;WTF::HashTable&lt;void const*, void const*, WTF::IdentityExtractor, WTF::PtrHash&lt;void const&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::PartitionAllocator&gt;, void const*&gt; WTF::HashTable&lt;void const*, void const*, WTF::IdentityExtractor, WTF::PtrHash&lt;void const&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::PartitionAllocator&gt;::insert&lt;WTF::IdentityHashTranslator&lt;WTF::PtrHash&lt;void const&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::PartitionAllocator&gt;, blink::EffectPaintPropertyNode const* const&amp;, blink::EffectPaintPropertyNode const*&amp;&gt;(blink::EffectPaintPropertyNode const* const&amp;&amp;&amp;, blink::EffectPaintPropertyNode const*&amp;&amp;&amp;) (1 samples, 0.02%)</title><rect x="27.1" y="469" width="0.2" height="15.0" fill="rgb(221,51,16)" rx="2" ry="2" />
<text  x="30.07" y="479.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.02%)</title><rect x="859.5" y="885" width="0.2" height="15.0" fill="rgb(209,152,51)" rx="2" ry="2" />
<text  x="862.50" y="895.5" ></text>
</g>
<g >
<title>vp8_encode_bool (1 samples, 0.02%)</title><rect x="799.6" y="709" width="0.3" height="15.0" fill="rgb(244,132,42)" rx="2" ry="2" />
<text  x="802.64" y="719.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::internal::PriorityQueue::TaskSourceAndSortKey&gt;::MoveHoleUpAndFillWithElement(unsigned long, base::internal::PriorityQueue::TaskSourceAndSortKey&amp;&amp;) (1 samples, 0.02%)</title><rect x="276.9" y="581" width="0.3" height="15.0" fill="rgb(214,76,9)" rx="2" ry="2" />
<text  x="279.92" y="591.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="255.2" y="597" width="0.2" height="15.0" fill="rgb(206,190,31)" rx="2" ry="2" />
<text  x="258.15" y="607.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="185.4" y="741" width="0.2" height="15.0" fill="rgb(251,138,34)" rx="2" ry="2" />
<text  x="188.39" y="751.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1008.2" y="917" width="0.2" height="15.0" fill="rgb(245,119,25)" rx="2" ry="2" />
<text  x="1011.18" y="927.5" ></text>
</g>
<g >
<title>webrtc::VideoQualityObserver::OnRenderedFrame(webrtc::VideoFrame const&amp;, long long) (1 samples, 0.02%)</title><rect x="841.2" y="693" width="0.2" height="15.0" fill="rgb(219,219,27)" rx="2" ry="2" />
<text  x="844.19" y="703.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (1 samples, 0.02%)</title><rect x="825.1" y="677" width="0.3" height="15.0" fill="rgb(207,108,34)" rx="2" ry="2" />
<text  x="828.12" y="687.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::UpdateBitrateAllocationAndNotifyObserver(webrtc::VideoStreamEncoder::EncoderRateSettings const&amp;) (1 samples, 0.02%)</title><rect x="962.2" y="821" width="0.2" height="15.0" fill="rgb(220,13,23)" rx="2" ry="2" />
<text  x="965.16" y="831.5" ></text>
</g>
<g >
<title>vp8_loopfilter_frame (16 samples, 0.34%)</title><rect x="792.2" y="741" width="4.0" height="15.0" fill="rgb(210,148,29)" rx="2" ry="2" />
<text  x="795.21" y="751.5" ></text>
</g>
<g >
<title>opus_fft_impl (2 samples, 0.04%)</title><rect x="535.2" y="693" width="0.5" height="15.0" fill="rgb(213,29,16)" rx="2" ry="2" />
<text  x="538.19" y="703.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::SendChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (4 samples, 0.08%)</title><rect x="166.6" y="597" width="1.0" height="15.0" fill="rgb(213,42,7)" rx="2" ry="2" />
<text  x="169.59" y="607.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="692.3" y="757" width="0.2" height="15.0" fill="rgb(229,228,47)" rx="2" ry="2" />
<text  x="695.27" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::SelectWorkQueueToService() (2 samples, 0.04%)</title><rect x="45.1" y="661" width="0.5" height="15.0" fill="rgb(234,89,27)" rx="2" ry="2" />
<text  x="48.13" y="671.5" ></text>
</g>
<g >
<title>base::HistogramBase::AddTimeMicrosecondsGranularity(base::TimeDelta const&amp;) (1 samples, 0.02%)</title><rect x="573.0" y="917" width="0.3" height="15.0" fill="rgb(225,9,34)" rx="2" ry="2" />
<text  x="576.04" y="927.5" ></text>
</g>
<g >
<title>blink::MediaControlsImpl::UpdateTimeIndicators() (5 samples, 0.10%)</title><rect x="20.6" y="549" width="1.3" height="15.0" fill="rgb(234,24,6)" rx="2" ry="2" />
<text  x="23.64" y="559.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::MaybeEncodeVideoFrame(webrtc::VideoFrame const&amp;, long long) (287 samples, 6.02%)</title><rect x="581.7" y="837" width="71.0" height="15.0" fill="rgb(229,210,52)" rx="2" ry="2" />
<text  x="584.69" y="847.5" >webrtc::..</text>
</g>
<g >
<title>mach_msg_trap (3 samples, 0.06%)</title><rect x="166.6" y="501" width="0.7" height="15.0" fill="rgb(254,81,23)" rx="2" ry="2" />
<text  x="169.59" y="511.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="486.7" y="565" width="0.2" height="15.0" fill="rgb(245,128,2)" rx="2" ry="2" />
<text  x="489.70" y="575.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="739.3" y="661" width="0.2" height="15.0" fill="rgb(254,14,7)" rx="2" ry="2" />
<text  x="742.27" y="671.5" ></text>
</g>
<g >
<title>cricket::P2PTransportChannel::OnSentPacket(rtc::SentPacket const&amp;) (3 samples, 0.06%)</title><rect x="227.7" y="661" width="0.7" height="15.0" fill="rgb(208,92,26)" rx="2" ry="2" />
<text  x="230.69" y="671.5" ></text>
</g>
<g >
<title>webrtc::RtpTransport::OnSentPacket(rtc::PacketTransportInternal*, rtc::SentPacket const&amp;) (3 samples, 0.06%)</title><rect x="227.7" y="629" width="0.7" height="15.0" fill="rgb(224,63,26)" rx="2" ry="2" />
<text  x="230.69" y="639.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="257.6" y="581" width="0.3" height="15.0" fill="rgb(252,165,53)" rx="2" ry="2" />
<text  x="260.63" y="591.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="264.8" y="565" width="0.2" height="15.0" fill="rgb(224,214,8)" rx="2" ry="2" />
<text  x="267.80" y="575.5" ></text>
</g>
<g >
<title>cyclic_background_refresh (1 samples, 0.02%)</title><rect x="382.8" y="741" width="0.2" height="15.0" fill="rgb(207,99,54)" rx="2" ry="2" />
<text  x="385.80" y="751.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::MachMessageSendLocked(mach_msg_header_t*) (1 samples, 0.02%)</title><rect x="236.1" y="405" width="0.3" height="15.0" fill="rgb(224,210,49)" rx="2" ry="2" />
<text  x="239.10" y="415.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (3 samples, 0.06%)</title><rect x="282.4" y="693" width="0.7" height="15.0" fill="rgb(207,213,20)" rx="2" ry="2" />
<text  x="285.36" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="67.4" y="789" width="0.2" height="15.0" fill="rgb(239,160,2)" rx="2" ry="2" />
<text  x="70.39" y="799.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (13 samples, 0.27%)</title><rect x="256.6" y="725" width="3.3" height="15.0" fill="rgb(223,32,18)" rx="2" ry="2" />
<text  x="259.64" y="735.5" ></text>
</g>
<g >
<title>webrtc::video_coding::FrameBuffer::StartWaitForNextFrameOnQueue() (1 samples, 0.02%)</title><rect x="993.6" y="805" width="0.2" height="15.0" fill="rgb(254,23,45)" rx="2" ry="2" />
<text  x="996.58" y="815.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bh_y_sse2 (1 samples, 0.02%)</title><rect x="526.5" y="693" width="0.3" height="15.0" fill="rgb(251,28,38)" rx="2" ry="2" />
<text  x="529.53" y="703.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="559.7" y="917" width="0.2" height="15.0" fill="rgb(221,161,44)" rx="2" ry="2" />
<text  x="562.68" y="927.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="195.8" y="853" width="0.2" height="15.0" fill="rgb(206,86,43)" rx="2" ry="2" />
<text  x="198.78" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::SelectWorkQueueToService() (1 samples, 0.02%)</title><rect x="15.7" y="661" width="0.2" height="15.0" fill="rgb(236,197,52)" rx="2" ry="2" />
<text  x="18.69" y="671.5" ></text>
</g>
<g >
<title>webrtc::video_coding::FrameBuffer::InsertFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;) (6 samples, 0.13%)</title><rect x="266.5" y="533" width="1.5" height="15.0" fill="rgb(234,69,1)" rx="2" ry="2" />
<text  x="269.53" y="543.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (1 samples, 0.02%)</title><rect x="943.9" y="677" width="0.2" height="15.0" fill="rgb(220,221,11)" rx="2" ry="2" />
<text  x="946.86" y="687.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::InterfaceEndpoint::SendMessage(mojo::Message*) (4 samples, 0.08%)</title><rect x="235.6" y="629" width="1.0" height="15.0" fill="rgb(211,202,52)" rx="2" ry="2" />
<text  x="238.61" y="639.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="18.4" y="437" width="0.3" height="15.0" fill="rgb(212,142,11)" rx="2" ry="2" />
<text  x="21.41" y="447.5" ></text>
</g>
<g >
<title>__psynch_mutexdrop (1 samples, 0.02%)</title><rect x="167.6" y="565" width="0.2" height="15.0" fill="rgb(212,102,11)" rx="2" ry="2" />
<text  x="170.58" y="575.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::SendHelper(int, void const*, unsigned long) (6 samples, 0.13%)</title><rect x="1074.2" y="965" width="1.5" height="15.0" fill="rgb(211,19,27)" rx="2" ry="2" />
<text  x="1077.23" y="975.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="816.0" y="565" width="0.2" height="15.0" fill="rgb(214,54,37)" rx="2" ry="2" />
<text  x="818.96" y="575.5" ></text>
</g>
<g >
<title>_pthread_start (597 samples, 12.52%)</title><rect x="214.3" y="1045" width="147.7" height="15.0" fill="rgb(211,62,44)" rx="2" ry="2" />
<text  x="217.34" y="1055.5" >_pthread_start</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (2 samples, 0.04%)</title><rect x="292.8" y="773" width="0.4" height="15.0" fill="rgb(208,39,3)" rx="2" ry="2" />
<text  x="295.75" y="783.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::WriteMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="1067.3" y="645" width="0.2" height="15.0" fill="rgb(235,71,45)" rx="2" ry="2" />
<text  x="1070.30" y="655.5" ></text>
</g>
<g >
<title>vpx_sad16x16_sse2 (1 samples, 0.02%)</title><rect x="439.0" y="677" width="0.2" height="15.0" fill="rgb(251,207,18)" rx="2" ry="2" />
<text  x="441.96" y="687.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="577.2" y="869" width="0.3" height="15.0" fill="rgb(243,61,20)" rx="2" ry="2" />
<text  x="580.24" y="879.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="341.5" y="709" width="0.2" height="15.0" fill="rgb(205,218,7)" rx="2" ry="2" />
<text  x="344.49" y="719.5" ></text>
</g>
<g >
<title>mojo::core::Core::AppendMessageData(unsigned long, unsigned int, unsigned int const*, unsigned int, MojoAppendMessageDataOptions const*, void**, unsigned int*) (4 samples, 0.08%)</title><rect x="251.2" y="597" width="1.0" height="15.0" fill="rgb(230,168,54)" rx="2" ry="2" />
<text  x="254.19" y="607.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal::(anonymous namespace)::InvokeParams const&amp;) (1 samples, 0.02%)</title><rect x="19.9" y="485" width="0.2" height="15.0" fill="rgb(210,202,21)" rx="2" ry="2" />
<text  x="22.90" y="495.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (2 samples, 0.04%)</title><rect x="266.5" y="517" width="0.5" height="15.0" fill="rgb(236,225,52)" rx="2" ry="2" />
<text  x="269.53" y="527.5" ></text>
</g>
<g >
<title>mk_timer_arm (3 samples, 0.06%)</title><rect x="14.5" y="677" width="0.7" height="15.0" fill="rgb(221,164,32)" rx="2" ry="2" />
<text  x="17.45" y="687.5" ></text>
</g>
<g >
<title>MojoAppendMessageData (1 samples, 0.02%)</title><rect x="236.6" y="613" width="0.2" height="15.0" fill="rgb(244,144,35)" rx="2" ry="2" />
<text  x="239.60" y="623.5" ></text>
</g>
<g >
<title>webrtc::SdpAudioFormat::SdpAudioFormat(webrtc::SdpAudioFormat const&amp;) (1 samples, 0.02%)</title><rect x="281.1" y="645" width="0.3" height="15.0" fill="rgb(230,118,2)" rx="2" ry="2" />
<text  x="284.13" y="655.5" ></text>
</g>
<g >
<title>vp8_pick_inter_mode (122 samples, 2.56%)</title><rect x="592.3" y="693" width="30.2" height="15.0" fill="rgb(241,210,44)" rx="2" ry="2" />
<text  x="595.33" y="703.5" >vp..</text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_8::__invoke(_malloc_zone_t*, unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="104.7" y="757" width="0.5" height="15.0" fill="rgb(227,128,48)" rx="2" ry="2" />
<text  x="107.75" y="767.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::InterfaceEndpoint::SendMessage(mojo::Message*) (3 samples, 0.06%)</title><rect x="1040.8" y="613" width="0.8" height="15.0" fill="rgb(237,44,27)" rx="2" ry="2" />
<text  x="1043.83" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeTaskFromWorkQueue() (3 samples, 0.06%)</title><rect x="190.3" y="837" width="0.8" height="15.0" fill="rgb(218,75,23)" rx="2" ry="2" />
<text  x="193.34" y="847.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="228.2" y="565" width="0.2" height="15.0" fill="rgb(231,114,27)" rx="2" ry="2" />
<text  x="231.19" y="575.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="1053.0" y="389" width="0.4" height="15.0" fill="rgb(230,77,0)" rx="2" ry="2" />
<text  x="1055.95" y="399.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs (5 samples, 0.10%)</title><rect x="433.0" y="661" width="1.3" height="15.0" fill="rgb(231,135,36)" rx="2" ry="2" />
<text  x="436.02" y="671.5" ></text>
</g>
<g >
<title>compute_mdcts (1 samples, 0.02%)</title><rect x="842.7" y="725" width="0.2" height="15.0" fill="rgb(224,87,19)" rx="2" ry="2" />
<text  x="845.68" y="735.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal::(anonymous namespace)::InvokeParams const&amp;) (1 samples, 0.02%)</title><rect x="37.7" y="597" width="0.3" height="15.0" fill="rgb(221,82,47)" rx="2" ry="2" />
<text  x="40.71" y="607.5" ></text>
</g>
<g >
<title>CopyRow_ERMS (7 samples, 0.15%)</title><rect x="59.0" y="885" width="1.7" height="15.0" fill="rgb(214,158,2)" rx="2" ry="2" />
<text  x="61.98" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (13 samples, 0.27%)</title><rect x="209.9" y="869" width="3.2" height="15.0" fill="rgb(250,155,48)" rx="2" ry="2" />
<text  x="212.88" y="879.5" ></text>
</g>
<g >
<title>void rtc::FunctionView&lt;void (webrtc::AudioEncoder*)&gt;::CallVoidPtr&lt;webrtc::voe::(anonymous namespace)::ChannelSend::OnRecoverableUplinkPacketLossRate(float)::$_6&gt;(rtc::FunctionView&lt;void (webrtc::AudioEncoder*)&gt;::VoidUnion, webrtc::AudioEncoder*) (1 samples, 0.02%)</title><rect x="275.4" y="613" width="0.3" height="15.0" fill="rgb(207,117,10)" rx="2" ry="2" />
<text  x="278.44" y="623.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1148.2" y="821" width="0.2" height="15.0" fill="rgb(224,94,25)" rx="2" ry="2" />
<text  x="1151.19" y="831.5" ></text>
</g>
<g >
<title>mojo::Message::Message() (2 samples, 0.04%)</title><rect x="142.3" y="693" width="0.5" height="15.0" fill="rgb(251,141,38)" rx="2" ry="2" />
<text  x="145.35" y="703.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::ForwardEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (2 samples, 0.04%)</title><rect x="173.3" y="645" width="0.5" height="15.0" fill="rgb(244,96,42)" rx="2" ry="2" />
<text  x="176.27" y="655.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="857.8" y="917" width="0.2" height="15.0" fill="rgb(226,123,47)" rx="2" ry="2" />
<text  x="860.77" y="927.5" ></text>
</g>
<g >
<title>cricket::UDPPort::OnSentPacket(rtc::AsyncPacketSocket*, rtc::SentPacket const&amp;) (19 samples, 0.40%)</title><rect x="314.5" y="629" width="4.7" height="15.0" fill="rgb(253,78,28)" rx="2" ry="2" />
<text  x="317.52" y="639.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::Parse(rtc::CopyOnWriteBuffer) (3 samples, 0.06%)</title><rect x="310.1" y="517" width="0.7" height="15.0" fill="rgb(233,68,18)" rx="2" ry="2" />
<text  x="313.07" y="527.5" ></text>
</g>
<g >
<title>_kernelrpc_mach_port_deallocate_trap (1 samples, 0.02%)</title><rect x="1037.6" y="469" width="0.3" height="15.0" fill="rgb(236,57,19)" rx="2" ry="2" />
<text  x="1040.61" y="479.5" ></text>
</g>
<g >
<title>blink::GCInfoTable::GCInfoFromIndex(unsigned int) (1 samples, 0.02%)</title><rect x="19.6" y="613" width="0.3" height="15.0" fill="rgb(222,21,1)" rx="2" ry="2" />
<text  x="22.65" y="623.5" ></text>
</g>
<g >
<title>encode_mvcomponent (1 samples, 0.02%)</title><rect x="799.4" y="709" width="0.2" height="15.0" fill="rgb(206,64,28)" rx="2" ry="2" />
<text  x="802.39" y="719.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="172.3" y="773" width="0.2" height="15.0" fill="rgb(245,106,38)" rx="2" ry="2" />
<text  x="175.28" y="783.5" ></text>
</g>
<g >
<title>blink::RTCDataChannel::ScheduledEventTimerFired(blink::TimerBase*) (1 samples, 0.02%)</title><rect x="19.9" y="645" width="0.2" height="15.0" fill="rgb(254,122,12)" rx="2" ry="2" />
<text  x="22.90" y="655.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="341.0" y="773" width="0.2" height="15.0" fill="rgb(233,55,24)" rx="2" ry="2" />
<text  x="343.99" y="783.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="993.1" y="613" width="0.2" height="15.0" fill="rgb(229,128,35)" rx="2" ry="2" />
<text  x="996.09" y="623.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (16 samples, 0.34%)</title><rect x="1133.1" y="773" width="4.0" height="15.0" fill="rgb(220,17,43)" rx="2" ry="2" />
<text  x="1136.10" y="783.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (19 samples, 0.40%)</title><rect x="245.8" y="533" width="4.7" height="15.0" fill="rgb(238,224,21)" rx="2" ry="2" />
<text  x="248.75" y="543.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::HasOneRef() const (1 samples, 0.02%)</title><rect x="1005.7" y="805" width="0.2" height="15.0" fill="rgb(220,13,38)" rx="2" ry="2" />
<text  x="1008.70" y="815.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="1022.5" y="933" width="0.3" height="15.0" fill="rgb(250,61,53)" rx="2" ry="2" />
<text  x="1025.52" y="943.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunSkipOnShutdown(base::internal::Task*) (461 samples, 9.66%)</title><rect x="578.7" y="917" width="114.1" height="15.0" fill="rgb(220,149,24)" rx="2" ry="2" />
<text  x="581.73" y="927.5" >base::internal..</text>
</g>
<g >
<title>mach_msg (6 samples, 0.13%)</title><rect x="47.4" y="821" width="1.4" height="15.0" fill="rgb(252,118,16)" rx="2" ry="2" />
<text  x="50.35" y="831.5" ></text>
</g>
<g >
<title>check_dot_artifact_candidate (2 samples, 0.04%)</title><rect x="744.5" y="677" width="0.5" height="15.0" fill="rgb(227,62,2)" rx="2" ry="2" />
<text  x="747.47" y="687.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::OnFrame(webrtc::VideoFrame const&amp;) (3 samples, 0.06%)</title><rect x="533.0" y="725" width="0.7" height="15.0" fill="rgb(247,65,9)" rx="2" ry="2" />
<text  x="535.96" y="735.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (2 samples, 0.04%)</title><rect x="173.3" y="693" width="0.5" height="15.0" fill="rgb(205,23,34)" rx="2" ry="2" />
<text  x="176.27" y="703.5" ></text>
</g>
<g >
<title>mojo::core::ports::(anonymous namespace)::UpdateTLS(mojo::core::ports::PortLocker*, mojo::core::ports::PortLocker*) (2 samples, 0.04%)</title><rect x="249.7" y="485" width="0.5" height="15.0" fill="rgb(223,179,8)" rx="2" ry="2" />
<text  x="252.71" y="495.5" ></text>
</g>
<g >
<title>realloc (1 samples, 0.02%)</title><rect x="1033.9" y="453" width="0.3" height="15.0" fill="rgb(236,85,38)" rx="2" ry="2" />
<text  x="1036.90" y="463.5" ></text>
</g>
<g >
<title>base::Value::Clone() const (1 samples, 0.02%)</title><rect x="204.7" y="821" width="0.2" height="15.0" fill="rgb(210,54,41)" rx="2" ry="2" />
<text  x="207.69" y="831.5" ></text>
</g>
<g >
<title>rtc::AsyncInvoker::OnMessage(rtc::Message*) (151 samples, 3.17%)</title><rect x="255.9" y="821" width="37.3" height="15.0" fill="rgb(205,95,46)" rx="2" ry="2" />
<text  x="258.90" y="831.5" >rtc..</text>
</g>
<g >
<title>IPC::mojom::ChannelStubDispatch::Accept(IPC::mojom::Channel*, mojo::Message*) (8 samples, 0.17%)</title><rect x="134.2" y="597" width="2.0" height="15.0" fill="rgb(237,58,29)" rx="2" ry="2" />
<text  x="137.18" y="607.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::video_coding::FrameBuffer::InsertFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;)::$_2&gt;::Run() (1 samples, 0.02%)</title><rect x="841.7" y="853" width="0.2" height="15.0" fill="rgb(207,7,52)" rx="2" ry="2" />
<text  x="844.69" y="863.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="19.2" y="341" width="0.4" height="15.0" fill="rgb(243,22,0)" rx="2" ry="2" />
<text  x="22.15" y="351.5" ></text>
</g>
<g >
<title>mojo::core::ports::(anonymous namespace)::UpdateTLS(mojo::core::ports::PortLocker*, mojo::core::ports::PortLocker*) (1 samples, 0.02%)</title><rect x="322.9" y="709" width="0.3" height="15.0" fill="rgb(205,219,9)" rx="2" ry="2" />
<text  x="325.94" y="719.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;base::internal::Task&gt;::back() (1 samples, 0.02%)</title><rect x="1157.1" y="741" width="0.2" height="15.0" fill="rgb(244,81,17)" rx="2" ry="2" />
<text  x="1160.10" y="751.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (5 samples, 0.10%)</title><rect x="680.6" y="709" width="1.3" height="15.0" fill="rgb(209,61,1)" rx="2" ry="2" />
<text  x="683.65" y="719.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::UnregisterTaskSource(scoped_refptr&lt;base::internal::TaskSource&gt;) (2 samples, 0.04%)</title><rect x="569.3" y="933" width="0.5" height="15.0" fill="rgb(217,91,7)" rx="2" ry="2" />
<text  x="572.32" y="943.5" ></text>
</g>
<g >
<title>CopyPlane (2 samples, 0.04%)</title><rect x="840.7" y="741" width="0.5" height="15.0" fill="rgb(212,67,53)" rx="2" ry="2" />
<text  x="843.70" y="751.5" ></text>
</g>
<g >
<title>base::ScopedAllowBaseSyncPrimitives::ScopedAllowBaseSyncPrimitives() (1 samples, 0.02%)</title><rect x="1038.4" y="613" width="0.2" height="15.0" fill="rgb(217,153,45)" rx="2" ry="2" />
<text  x="1041.36" y="623.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3.filter_block1d8_h4_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="414.7" y="629" width="0.3" height="15.0" fill="rgb(231,186,2)" rx="2" ry="2" />
<text  x="417.71" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="962.7" y="581" width="0.2" height="15.0" fill="rgb(210,118,29)" rx="2" ry="2" />
<text  x="965.66" y="591.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (content::WebMediaPlayerMSCompositor::*)(scoped_refptr&lt;media::VideoFrame&gt;), void&gt;::Invoke&lt;void (content::WebMediaPlayerMSCompositor::*)(scoped_refptr&lt;media::VideoFrame&gt;), scoped_refptr&lt;content::WebMediaPlayerMSCompositor&gt; const&amp;, scoped_refptr&lt;media::VideoFrame&gt; &gt;(void (content::WebMediaPlayerMSCompositor::*)(scoped_refptr&lt;media::VideoFrame&gt;), scoped_refptr&lt;content::WebMediaPlayerMSCompositor&gt; const&amp;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (4 samples, 0.08%)</title><rect x="174.5" y="821" width="1.0" height="15.0" fill="rgb(235,186,6)" rx="2" ry="2" />
<text  x="177.51" y="831.5" ></text>
</g>
<g >
<title>webrtc::video_coding::FrameBuffer::StartWaitForNextFrameOnQueue() (1 samples, 0.02%)</title><rect x="534.2" y="837" width="0.2" height="15.0" fill="rgb(216,132,25)" rx="2" ry="2" />
<text  x="537.20" y="847.5" ></text>
</g>
<g >
<title>_pthread_body (21 samples, 0.44%)</title><rect x="1163.5" y="1029" width="5.2" height="15.0" fill="rgb(233,126,37)" rx="2" ry="2" />
<text  x="1166.53" y="1039.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)(base::RepeatingCallback&lt;void (unsigned int)&gt; const&amp;, unsigned int, mojo::HandleSignalsState const&amp;), base::RepeatingCallback&lt;void (unsigned int)&gt; &gt;, void (unsigned int, mojo::HandleSignalsState const&amp;)&gt;::Run(base::internal::BindStateBase*, unsigned int, mojo::HandleSignalsState const&amp;) (1 samples, 0.02%)</title><rect x="299.4" y="837" width="0.3" height="15.0" fill="rgb(228,49,27)" rx="2" ry="2" />
<text  x="302.43" y="847.5" ></text>
</g>
<g >
<title>WebRtcOpus_Encode (27 samples, 0.57%)</title><rect x="683.9" y="789" width="6.6" height="15.0" fill="rgb(232,152,51)" rx="2" ry="2" />
<text  x="686.86" y="799.5" ></text>
</g>
<g >
<title>vp8_find_best_sub_pixel_step (50 samples, 1.05%)</title><rect x="420.4" y="677" width="12.4" height="15.0" fill="rgb(234,97,29)" rx="2" ry="2" />
<text  x="423.40" y="687.5" ></text>
</g>
<g >
<title>rtc::FireAndForgetAsyncClosure&lt;rtc::MethodFunctor&lt;cricket::BaseChannel, void (cricket::BaseChannel::*)(rtc::SentPacket const&amp;), void, rtc::SentPacket const&amp;&gt; &gt;::~FireAndForgetAsyncClosure() (7 samples, 0.15%)</title><rect x="295.2" y="805" width="1.8" height="15.0" fill="rgb(252,162,53)" rx="2" ry="2" />
<text  x="298.23" y="815.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="269.7" y="709" width="0.3" height="15.0" fill="rgb(253,101,18)" rx="2" ry="2" />
<text  x="272.75" y="719.5" ></text>
</g>
<g >
<title>vp8_loop_filter_partial_frame (3 samples, 0.06%)</title><rect x="943.4" y="709" width="0.7" height="15.0" fill="rgb(231,124,1)" rx="2" ry="2" />
<text  x="946.36" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) (51 samples, 1.07%)</title><rect x="200.5" y="901" width="12.6" height="15.0" fill="rgb(208,203,13)" rx="2" ry="2" />
<text  x="203.48" y="911.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="226.7" y="469" width="0.3" height="15.0" fill="rgb(220,15,42)" rx="2" ry="2" />
<text  x="229.70" y="479.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (2 samples, 0.04%)</title><rect x="267.0" y="437" width="0.5" height="15.0" fill="rgb(251,9,12)" rx="2" ry="2" />
<text  x="270.03" y="447.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="185.4" y="773" width="0.2" height="15.0" fill="rgb(234,213,47)" rx="2" ry="2" />
<text  x="188.39" y="783.5" ></text>
</g>
<g >
<title>base::PendingTask::~PendingTask() (1 samples, 0.02%)</title><rect x="223.7" y="885" width="0.3" height="15.0" fill="rgb(236,109,29)" rx="2" ry="2" />
<text  x="226.74" y="895.5" ></text>
</g>
<g >
<title>rtc::PlatformThread::StartThread(void*) (47 samples, 0.99%)</title><rect x="1178.4" y="1013" width="11.6" height="15.0" fill="rgb(216,16,32)" rx="2" ry="2" />
<text  x="1181.37" y="1023.5" ></text>
</g>
<g >
<title>void std::__Cr::__sort&lt;mojo::core::ports::PortLocker::PortLocker(mojo::core::ports::PortRef const**, unsigned long)::$_0&amp;, mojo::core::ports::PortRef const**&gt;(mojo::core::ports::PortRef const**, mojo::core::ports::PortRef const**, mojo::core::ports::PortLocker::PortLocker(mojo::core::ports::PortRef const**, unsigned long)::$_0&amp;) (1 samples, 0.02%)</title><rect x="117.1" y="773" width="0.3" height="15.0" fill="rgb(229,185,2)" rx="2" ry="2" />
<text  x="120.12" y="783.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnTaskPushedToEmptyQueue(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.02%)</title><rect x="185.6" y="789" width="0.3" height="15.0" fill="rgb(244,71,28)" rx="2" ry="2" />
<text  x="188.64" y="799.5" ></text>
</g>
<g >
<title>IPC::ParamTraits&lt;gfx::GpuFenceHandle&gt;::Write(base::Pickle*, gfx::GpuFenceHandle const&amp;) (1 samples, 0.02%)</title><rect x="205.7" y="789" width="0.2" height="15.0" fill="rgb(244,21,48)" rx="2" ry="2" />
<text  x="208.68" y="799.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (4 samples, 0.08%)</title><rect x="716.8" y="821" width="1.0" height="15.0" fill="rgb(254,187,40)" rx="2" ry="2" />
<text  x="719.76" y="831.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbh_sse2 (1 samples, 0.02%)</title><rect x="679.4" y="693" width="0.3" height="15.0" fill="rgb(210,111,31)" rx="2" ry="2" />
<text  x="682.41" y="703.5" ></text>
</g>
<g >
<title>mojo::Connector::DispatchNextMessageInQueue() (16 samples, 0.34%)</title><rect x="224.7" y="853" width="4.0" height="15.0" fill="rgb(243,129,7)" rx="2" ry="2" />
<text  x="227.73" y="863.5" ></text>
</g>
<g >
<title>blink::GraphicsLayerUpdater::UpdateRecursive(blink::PaintLayer&amp;, blink::GraphicsLayerUpdater::UpdateType, blink::GraphicsLayerUpdater::UpdateContext&amp;, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (4 samples, 0.08%)</title><rect x="25.6" y="453" width="1.0" height="15.0" fill="rgb(252,207,5)" rx="2" ry="2" />
<text  x="28.58" y="463.5" ></text>
</g>
<g >
<title>realloc (1 samples, 0.02%)</title><rect x="961.2" y="741" width="0.2" height="15.0" fill="rgb(240,12,19)" rx="2" ry="2" />
<text  x="964.17" y="751.5" ></text>
</g>
<g >
<title>rtc::RateTracker::AddSamples(unsigned long) (1 samples, 0.02%)</title><rect x="581.4" y="821" width="0.3" height="15.0" fill="rgb(226,12,45)" rx="2" ry="2" />
<text  x="584.45" y="831.5" ></text>
</g>
<g >
<title>WTF::VectorBufferBase&lt;viz::ReturnedResource, false, WTF::PartitionAllocator&gt;::AllocateBuffer(unsigned int) (1 samples, 0.02%)</title><rect x="1049.5" y="645" width="0.2" height="15.0" fill="rgb(250,153,22)" rx="2" ry="2" />
<text  x="1052.49" y="655.5" ></text>
</g>
<g >
<title>_os_unfair_lock_lock_slow (1 samples, 0.02%)</title><rect x="294.7" y="757" width="0.3" height="15.0" fill="rgb(205,163,33)" rx="2" ry="2" />
<text  x="297.73" y="767.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="651.5" y="549" width="0.2" height="15.0" fill="rgb(253,72,37)" rx="2" ry="2" />
<text  x="654.45" y="559.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::CleanUpQueues() (2 samples, 0.04%)</title><rect x="209.1" y="869" width="0.5" height="15.0" fill="rgb(249,138,1)" rx="2" ry="2" />
<text  x="212.14" y="879.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::ArmOrNotify() (2 samples, 0.04%)</title><rect x="1059.4" y="805" width="0.5" height="15.0" fill="rgb(254,132,31)" rx="2" ry="2" />
<text  x="1062.38" y="815.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (36 samples, 0.75%)</title><rect x="1065.3" y="1013" width="8.9" height="15.0" fill="rgb(212,116,51)" rx="2" ry="2" />
<text  x="1068.32" y="1023.5" ></text>
</g>
<g >
<title>mojo::core::RequestContext::RequestContext() (1 samples, 0.02%)</title><rect x="253.2" y="565" width="0.2" height="15.0" fill="rgb(205,124,48)" rx="2" ry="2" />
<text  x="256.17" y="575.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="188.6" y="805" width="0.3" height="15.0" fill="rgb(213,193,22)" rx="2" ry="2" />
<text  x="191.61" y="815.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::AnimateInternal() (1 samples, 0.02%)</title><rect x="1072.2" y="549" width="0.3" height="15.0" fill="rgb(236,104,19)" rx="2" ry="2" />
<text  x="1075.25" y="559.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="312.3" y="629" width="0.2" height="15.0" fill="rgb(226,119,48)" rx="2" ry="2" />
<text  x="315.30" y="639.5" ></text>
</g>
<g >
<title>opus_packet_parse (1 samples, 0.02%)</title><rect x="278.7" y="597" width="0.2" height="15.0" fill="rgb(245,134,7)" rx="2" ry="2" />
<text  x="281.65" y="607.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (7 samples, 0.15%)</title><rect x="79.0" y="773" width="1.8" height="15.0" fill="rgb(228,187,13)" rx="2" ry="2" />
<text  x="82.02" y="783.5" ></text>
</g>
<g >
<title>mojo::core::Watch::NotifyState(mojo::core::HandleSignalsState const&amp;, bool) (5 samples, 0.10%)</title><rect x="110.4" y="709" width="1.3" height="15.0" fill="rgb(239,52,14)" rx="2" ry="2" />
<text  x="113.44" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (3 samples, 0.06%)</title><rect x="139.4" y="357" width="0.7" height="15.0" fill="rgb(211,24,42)" rx="2" ry="2" />
<text  x="142.38" y="367.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_other_loop (4 samples, 0.08%)</title><rect x="428.6" y="661" width="1.0" height="15.0" fill="rgb(215,209,44)" rx="2" ry="2" />
<text  x="431.57" y="671.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="190.3" y="757" width="0.3" height="15.0" fill="rgb(210,164,35)" rx="2" ry="2" />
<text  x="193.34" y="767.5" ></text>
</g>
<g >
<title>vp8_build_intra_predictors_mby_s (2 samples, 0.04%)</title><rect x="747.2" y="677" width="0.5" height="15.0" fill="rgb(250,91,54)" rx="2" ry="2" />
<text  x="750.19" y="687.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="1072.5" y="325" width="0.2" height="15.0" fill="rgb(236,125,3)" rx="2" ry="2" />
<text  x="1075.49" y="335.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="879.0" y="805" width="0.3" height="15.0" fill="rgb(219,177,54)" rx="2" ry="2" />
<text  x="882.04" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::MaybeShrinkQueue() (1 samples, 0.02%)</title><rect x="328.1" y="805" width="0.3" height="15.0" fill="rgb(225,120,28)" rx="2" ry="2" />
<text  x="331.13" y="815.5" ></text>
</g>
<g >
<title>webrtc::PacedSender::Process() (1 samples, 0.02%)</title><rect x="1168.0" y="965" width="0.2" height="15.0" fill="rgb(243,8,24)" rx="2" ry="2" />
<text  x="1170.98" y="975.5" ></text>
</g>
<g >
<title>vp8_encode_motion_vector (2 samples, 0.04%)</title><rect x="799.4" y="725" width="0.5" height="15.0" fill="rgb(219,18,17)" rx="2" ry="2" />
<text  x="802.39" y="735.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper*, mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) (98 samples, 2.05%)</title><rect x="1031.2" y="757" width="24.2" height="15.0" fill="rgb(243,65,17)" rx="2" ry="2" />
<text  x="1034.18" y="767.5" >m..</text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="692.3" y="741" width="0.2" height="15.0" fill="rgb(234,111,33)" rx="2" ry="2" />
<text  x="695.27" y="751.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::push_back(base::sequence_manager::Task) (2 samples, 0.04%)</title><rect x="131.0" y="677" width="0.5" height="15.0" fill="rgb(228,81,12)" rx="2" ry="2" />
<text  x="133.97" y="687.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="714.5" y="869" width="0.3" height="15.0" fill="rgb(210,184,35)" rx="2" ry="2" />
<text  x="717.54" y="879.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.06%)</title><rect x="107.0" y="773" width="0.7" height="15.0" fill="rgb(227,119,1)" rx="2" ry="2" />
<text  x="109.97" y="783.5" ></text>
</g>
<g >
<title>silk_decode_pulses (2 samples, 0.04%)</title><rect x="1122.7" y="613" width="0.5" height="15.0" fill="rgb(232,123,30)" rx="2" ry="2" />
<text  x="1125.71" y="623.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="856.8" y="917" width="0.2" height="15.0" fill="rgb(223,100,46)" rx="2" ry="2" />
<text  x="859.78" y="927.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="64.7" y="837" width="0.2" height="15.0" fill="rgb(249,204,25)" rx="2" ry="2" />
<text  x="67.67" y="847.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_other_loop (2 samples, 0.04%)</title><rect x="922.6" y="661" width="0.5" height="15.0" fill="rgb(226,90,12)" rx="2" ry="2" />
<text  x="925.58" y="671.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (8 samples, 0.17%)</title><rect x="271.5" y="709" width="2.0" height="15.0" fill="rgb(245,133,33)" rx="2" ry="2" />
<text  x="274.48" y="719.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1112.8" y="757" width="0.3" height="15.0" fill="rgb(220,187,50)" rx="2" ry="2" />
<text  x="1115.82" y="767.5" ></text>
</g>
<g >
<title>base::PendingTask::PendingTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeTicks, base::Nestable) (1 samples, 0.02%)</title><rect x="286.3" y="693" width="0.3" height="15.0" fill="rgb(208,80,54)" rx="2" ry="2" />
<text  x="289.32" y="703.5" ></text>
</g>
<g >
<title>mojo::core::ports::Event::GetSerializedSize() const (1 samples, 0.02%)</title><rect x="251.9" y="549" width="0.3" height="15.0" fill="rgb(213,75,30)" rx="2" ry="2" />
<text  x="254.94" y="559.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::Ring::push_back(base::sequence_manager::Task&amp;&amp;) (1 samples, 0.02%)</title><rect x="1151.4" y="741" width="0.3" height="15.0" fill="rgb(237,148,30)" rx="2" ry="2" />
<text  x="1154.41" y="751.5" ></text>
</g>
<g >
<title>content::(anonymous namespace)::IpcPacketSocket::SendTo(void const*, unsigned long, rtc::SocketAddress const&amp;, rtc::PacketOptions const&amp;) (7 samples, 0.15%)</title><rect x="235.1" y="709" width="1.7" height="15.0" fill="rgb(249,105,32)" rx="2" ry="2" />
<text  x="238.12" y="719.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="210.6" y="741" width="0.3" height="15.0" fill="rgb(245,129,37)" rx="2" ry="2" />
<text  x="213.62" y="751.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::UpdateClipParent(blink::PaintLayer const*) (1 samples, 0.02%)</title><rect x="25.6" y="389" width="0.2" height="15.0" fill="rgb(249,228,18)" rx="2" ry="2" />
<text  x="28.58" y="399.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="961.7" y="661" width="0.2" height="15.0" fill="rgb(252,182,48)" rx="2" ry="2" />
<text  x="964.67" y="671.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::ArmOrNotify() (1 samples, 0.02%)</title><rect x="326.6" y="789" width="0.3" height="15.0" fill="rgb(223,76,14)" rx="2" ry="2" />
<text  x="329.65" y="799.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::UpdateGraphicsLayerGeometry(blink::PaintLayer const*, blink::PaintLayer const*, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;, blink::GraphicsLayerUpdater::UpdateContext&amp;) (1 samples, 0.02%)</title><rect x="25.8" y="405" width="0.3" height="15.0" fill="rgb(206,30,16)" rx="2" ry="2" />
<text  x="28.83" y="415.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="862.2" y="901" width="0.3" height="15.0" fill="rgb(205,174,20)" rx="2" ry="2" />
<text  x="865.22" y="911.5" ></text>
</g>
<g >
<title>vpx_mse16x16_avx2 (1 samples, 0.02%)</title><rect x="463.0" y="709" width="0.2" height="15.0" fill="rgb(226,7,20)" rx="2" ry="2" />
<text  x="465.95" y="719.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetSingletonAllowed(bool) (4 samples, 0.08%)</title><rect x="878.3" y="917" width="1.0" height="15.0" fill="rgb(234,44,49)" rx="2" ry="2" />
<text  x="881.30" y="927.5" ></text>
</g>
<g >
<title>WTF::Vector&lt;viz::ReturnedResource, 0u, WTF::PartitionAllocator&gt;::resize(unsigned int) (2 samples, 0.04%)</title><rect x="1049.2" y="661" width="0.5" height="15.0" fill="rgb(238,17,37)" rx="2" ry="2" />
<text  x="1052.24" y="671.5" ></text>
</g>
<g >
<title>base::ScopedBlockingCall::ScopedBlockingCall(base::Location const&amp;, base::BlockingType) (1 samples, 0.02%)</title><rect x="1079.2" y="965" width="0.2" height="15.0" fill="rgb(209,126,29)" rx="2" ry="2" />
<text  x="1082.17" y="975.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1148.2" y="741" width="0.2" height="15.0" fill="rgb(234,129,42)" rx="2" ry="2" />
<text  x="1151.19" y="751.5" ></text>
</g>
<g >
<title>vp8_init_mode_costs (1 samples, 0.02%)</title><rect x="632.7" y="725" width="0.2" height="15.0" fill="rgb(215,194,41)" rx="2" ry="2" />
<text  x="635.65" y="735.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="857.8" y="933" width="0.2" height="15.0" fill="rgb(244,187,51)" rx="2" ry="2" />
<text  x="860.77" y="943.5" ></text>
</g>
<g >
<title>io_connect_method (1 samples, 0.02%)</title><rect x="62.4" y="869" width="0.3" height="15.0" fill="rgb(247,163,47)" rx="2" ry="2" />
<text  x="65.44" y="879.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="267.8" y="389" width="0.2" height="15.0" fill="rgb(250,119,34)" rx="2" ry="2" />
<text  x="270.77" y="399.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;, void&gt;::Invoke&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;, scoped_refptr&lt;media::VideoFrame&gt; &gt;(base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="652.7" y="741" width="0.2" height="15.0" fill="rgb(216,146,29)" rx="2" ry="2" />
<text  x="655.69" y="751.5" ></text>
</g>
<g >
<title>webrtc::VCMGenericDecoder::Decode(webrtc::VCMEncodedFrame const&amp;, long long) (122 samples, 2.56%)</title><rect x="652.9" y="805" width="30.2" height="15.0" fill="rgb(226,101,34)" rx="2" ry="2" />
<text  x="655.94" y="815.5" >we..</text>
</g>
<g >
<title>webrtc::AudioEncoder::Encode(unsigned int, rtc::ArrayView&lt;short const, -4711l&gt;, rtc::BufferT&lt;unsigned char, false&gt;*) (27 samples, 0.57%)</title><rect x="683.9" y="821" width="6.6" height="15.0" fill="rgb(239,42,2)" rx="2" ry="2" />
<text  x="686.86" y="831.5" ></text>
</g>
<g >
<title>content::P2PSocketClientImpl::Send(net::IPEndPoint const&amp;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&amp;, rtc::PacketOptions const&amp;) (7 samples, 0.15%)</title><rect x="235.1" y="693" width="1.7" height="15.0" fill="rgb(253,88,44)" rx="2" ry="2" />
<text  x="238.12" y="703.5" ></text>
</g>
<g >
<title>vp8_setup_intra_recon (1 samples, 0.02%)</title><rect x="791.0" y="709" width="0.2" height="15.0" fill="rgb(243,53,41)" rx="2" ry="2" />
<text  x="793.98" y="719.5" ></text>
</g>
<g >
<title>base::internal::BindState&lt;void (jingle_glue::JingleThreadWrapper::*)(int), base::WeakPtr&lt;jingle_glue::JingleThreadWrapper&gt;, int&gt;::Destroy(base::internal::BindStateBase const*) (2 samples, 0.04%)</title><rect x="224.0" y="869" width="0.5" height="15.0" fill="rgb(206,146,49)" rx="2" ry="2" />
<text  x="226.98" y="879.5" ></text>
</g>
<g >
<title>webrtc::RtcEvent::RtcEvent() (1 samples, 0.02%)</title><rect x="1131.9" y="837" width="0.2" height="15.0" fill="rgb(250,57,8)" rx="2" ry="2" />
<text  x="1134.87" y="847.5" ></text>
</g>
<g >
<title>thread_start (36 samples, 0.75%)</title><rect x="1065.3" y="1061" width="8.9" height="15.0" fill="rgb(246,77,5)" rx="2" ry="2" />
<text  x="1068.32" y="1071.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (2 samples, 0.04%)</title><rect x="876.6" y="917" width="0.5" height="15.0" fill="rgb(221,204,23)" rx="2" ry="2" />
<text  x="879.57" y="927.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="1111.6" y="869" width="0.5" height="15.0" fill="rgb(227,214,10)" rx="2" ry="2" />
<text  x="1114.58" y="879.5" ></text>
</g>
<g >
<title>base::DictionaryValue::GetWithoutPathExpansion(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, base::Value const**) const (1 samples, 0.02%)</title><rect x="177.0" y="757" width="0.2" height="15.0" fill="rgb(210,35,26)" rx="2" ry="2" />
<text  x="179.98" y="767.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="692.3" y="773" width="0.2" height="15.0" fill="rgb(231,147,34)" rx="2" ry="2" />
<text  x="695.27" y="783.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::AssertNoLockHeldOnCurrentThread() (1 samples, 0.02%)</title><rect x="1085.1" y="709" width="0.3" height="15.0" fill="rgb(233,100,34)" rx="2" ry="2" />
<text  x="1088.11" y="719.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="483.2" y="709" width="0.3" height="15.0" fill="rgb(218,119,9)" rx="2" ry="2" />
<text  x="486.24" y="719.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="312.8" y="629" width="0.5" height="15.0" fill="rgb(242,40,2)" rx="2" ry="2" />
<text  x="315.79" y="639.5" ></text>
</g>
<g >
<title>pthread_equal (1 samples, 0.02%)</title><rect x="262.6" y="645" width="0.2" height="15.0" fill="rgb(251,114,5)" rx="2" ry="2" />
<text  x="265.57" y="655.5" ></text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::CopyOnWriteBuffer(unsigned long, unsigned long) (3 samples, 0.06%)</title><rect x="1153.6" y="869" width="0.8" height="15.0" fill="rgb(217,122,17)" rx="2" ry="2" />
<text  x="1156.64" y="879.5" ></text>
</g>
<g >
<title>base::internal::BindState&lt;void (jingle_glue::JingleThreadWrapper::*)(int), base::WeakPtr&lt;jingle_glue::JingleThreadWrapper&gt;, int&gt;::Destroy(base::internal::BindStateBase const*) (1 samples, 0.02%)</title><rect x="327.4" y="885" width="0.2" height="15.0" fill="rgb(208,134,24)" rx="2" ry="2" />
<text  x="330.39" y="895.5" ></text>
</g>
<g >
<title>webrtc::AudioVector::Clear() (1 samples, 0.02%)</title><rect x="1114.5" y="773" width="0.3" height="15.0" fill="rgb(254,180,2)" rx="2" ry="2" />
<text  x="1117.55" y="783.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateRawExtension(int, unsigned long) (1 samples, 0.02%)</title><rect x="816.0" y="677" width="0.2" height="15.0" fill="rgb(242,226,43)" rx="2" ry="2" />
<text  x="818.96" y="687.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="692.3" y="677" width="0.2" height="15.0" fill="rgb(205,187,45)" rx="2" ry="2" />
<text  x="695.27" y="687.5" ></text>
</g>
<g >
<title>void sigslot::_opaque_connection::emitter&lt;cricket::BaseChannel, rtc::SentPacket const&amp;&gt;(sigslot::_opaque_connection const*, rtc::SentPacket const&amp;) (1 samples, 0.02%)</title><rect x="318.0" y="565" width="0.2" height="15.0" fill="rgb(211,72,23)" rx="2" ry="2" />
<text  x="320.99" y="575.5" ></text>
</g>
<g >
<title>_platform_memset$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="813.5" y="709" width="0.2" height="15.0" fill="rgb(229,51,2)" rx="2" ry="2" />
<text  x="816.49" y="719.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (2 samples, 0.04%)</title><rect x="68.4" y="901" width="0.5" height="15.0" fill="rgb(245,170,10)" rx="2" ry="2" />
<text  x="71.38" y="911.5" ></text>
</g>
<g >
<title>webrtc::NetEqImpl::TargetDelayMs() const (1 samples, 0.02%)</title><rect x="1130.6" y="853" width="0.3" height="15.0" fill="rgb(213,31,34)" rx="2" ry="2" />
<text  x="1133.63" y="863.5" ></text>
</g>
<g >
<title>base::internal::RegisteredTaskSource::operator=(base::internal::RegisteredTaskSource&amp;&amp;) (2 samples, 0.04%)</title><rect x="123.3" y="645" width="0.5" height="15.0" fill="rgb(214,37,8)" rx="2" ry="2" />
<text  x="126.30" y="655.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_other_loop (1 samples, 0.02%)</title><rect x="597.8" y="661" width="0.2" height="15.0" fill="rgb(253,118,3)" rx="2" ry="2" />
<text  x="600.77" y="671.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="550.3" y="693" width="0.2" height="15.0" fill="rgb(228,40,31)" rx="2" ry="2" />
<text  x="553.28" y="703.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Run  0x659427 (39 samples, 0.82%)</title><rect x="1168.7" y="1077" width="9.7" height="15.0" fill="rgb(212,108,24)" rx="2" ry="2" />
<text  x="1171.73" y="1087.5" ></text>
</g>
<g >
<title>transient_analysis (1 samples, 0.02%)</title><rect x="684.4" y="725" width="0.2" height="15.0" fill="rgb(205,217,46)" rx="2" ry="2" />
<text  x="687.36" y="735.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="334.1" y="837" width="0.5" height="15.0" fill="rgb(207,213,50)" rx="2" ry="2" />
<text  x="337.07" y="847.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="1039.3" y="469" width="0.3" height="15.0" fill="rgb(239,151,34)" rx="2" ry="2" />
<text  x="1042.35" y="479.5" ></text>
</g>
<g >
<title>webrtc::GoogCcNetworkController::MaybeTriggerOnNetworkChanged(webrtc::NetworkControlUpdate*, webrtc::Timestamp) (1 samples, 0.02%)</title><rect x="381.3" y="821" width="0.3" height="15.0" fill="rgb(227,191,43)" rx="2" ry="2" />
<text  x="384.32" y="831.5" ></text>
</g>
<g >
<title>_os_unfair_lock_lock_slow (1 samples, 0.02%)</title><rect x="880.5" y="869" width="0.3" height="15.0" fill="rgb(231,101,15)" rx="2" ry="2" />
<text  x="883.53" y="879.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_wake (1 samples, 0.02%)</title><rect x="167.6" y="581" width="0.2" height="15.0" fill="rgb(252,172,39)" rx="2" ry="2" />
<text  x="170.58" y="591.5" ></text>
</g>
<g >
<title>opus_encode (47 samples, 0.99%)</title><rect x="842.2" y="773" width="11.6" height="15.0" fill="rgb(241,70,8)" rx="2" ry="2" />
<text  x="845.18" y="783.5" ></text>
</g>
<g >
<title>logging::GetVlogLevelHelper(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="249.5" y="485" width="0.2" height="15.0" fill="rgb(241,85,35)" rx="2" ry="2" />
<text  x="252.46" y="495.5" ></text>
</g>
<g >
<title>webrtc::metrics::HistogramAdd(webrtc::metrics::Histogram*, int) (1 samples, 0.02%)</title><rect x="1137.3" y="853" width="0.3" height="15.0" fill="rgb(234,104,1)" rx="2" ry="2" />
<text  x="1140.31" y="863.5" ></text>
</g>
<g >
<title>viz::mojom::CompositorFrameSinkProxy::DidNotProduceFrame(viz::BeginFrameAck const&amp;) (1 samples, 0.02%)</title><rect x="1067.3" y="741" width="0.2" height="15.0" fill="rgb(230,73,7)" rx="2" ry="2" />
<text  x="1070.30" y="751.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::ShouldQuitRunLoopWhenIdle() (1 samples, 0.02%)</title><rect x="196.5" y="869" width="0.3" height="15.0" fill="rgb(217,134,27)" rx="2" ry="2" />
<text  x="199.52" y="879.5" ></text>
</g>
<g >
<title>base::MessagePumpDefault::Run(base::MessagePump::Delegate*) (36 samples, 0.75%)</title><rect x="1065.3" y="949" width="8.9" height="15.0" fill="rgb(248,183,2)" rx="2" ry="2" />
<text  x="1068.32" y="959.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::ParseBuffer(unsigned char const*, unsigned long) (1 samples, 0.02%)</title><rect x="260.3" y="725" width="0.3" height="15.0" fill="rgb(241,56,10)" rx="2" ry="2" />
<text  x="263.35" y="735.5" ></text>
</g>
<g >
<title>blink::VideoTrackAdapter::DeliverFrameOnIO(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks) (10 samples, 0.21%)</title><rect x="138.6" y="533" width="2.5" height="15.0" fill="rgb(209,126,46)" rx="2" ry="2" />
<text  x="141.64" y="543.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::WillQueueTaskSource(scoped_refptr&lt;base::internal::TaskSource&gt;) (1 samples, 0.02%)</title><rect x="124.5" y="709" width="0.3" height="15.0" fill="rgb(208,96,4)" rx="2" ry="2" />
<text  x="127.54" y="719.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_uv_sse2 (4 samples, 0.08%)</title><rect x="528.8" y="693" width="0.9" height="15.0" fill="rgb(230,47,49)" rx="2" ry="2" />
<text  x="531.75" y="703.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="264.8" y="533" width="0.2" height="15.0" fill="rgb(247,156,12)" rx="2" ry="2" />
<text  x="267.80" y="543.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::RtpPacket(webrtc::RtpPacket const&amp;) (1 samples, 0.02%)</title><rect x="1163.0" y="885" width="0.3" height="15.0" fill="rgb(224,64,50)" rx="2" ry="2" />
<text  x="1166.04" y="895.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::BeginTransaction() (1 samples, 0.02%)</title><rect x="711.6" y="949" width="0.2" height="15.0" fill="rgb(221,186,39)" rx="2" ry="2" />
<text  x="714.57" y="959.5" ></text>
</g>
<g >
<title>vp8_short_fdct8x4_sse2 (9 samples, 0.19%)</title><rect x="932.0" y="693" width="2.2" height="15.0" fill="rgb(234,126,49)" rx="2" ry="2" />
<text  x="934.98" y="703.5" ></text>
</g>
<g >
<title>vp8_loop_filter_row_normal (13 samples, 0.27%)</title><rect x="987.6" y="709" width="3.3" height="15.0" fill="rgb(248,7,12)" rx="2" ry="2" />
<text  x="990.64" y="719.5" ></text>
</g>
<g >
<title>vp8_deblock (21 samples, 0.44%)</title><rect x="817.0" y="725" width="5.1" height="15.0" fill="rgb(243,100,21)" rx="2" ry="2" />
<text  x="819.95" y="735.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LocalFrameView&amp;) (5 samples, 0.10%)</title><rect x="27.8" y="501" width="1.2" height="15.0" fill="rgb(213,128,3)" rx="2" ry="2" />
<text  x="30.81" y="511.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1021.5" y="933" width="0.3" height="15.0" fill="rgb(219,217,17)" rx="2" ry="2" />
<text  x="1024.53" y="943.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="116.4" y="773" width="0.2" height="15.0" fill="rgb(218,11,32)" rx="2" ry="2" />
<text  x="119.37" y="783.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (21 samples, 0.44%)</title><rect x="1132.1" y="837" width="5.2" height="15.0" fill="rgb(207,189,14)" rx="2" ry="2" />
<text  x="1135.11" y="847.5" ></text>
</g>
<g >
<title>webrtc::DecoderDatabase::GetDecoderInfo(unsigned char) const (1 samples, 0.02%)</title><rect x="1126.9" y="741" width="0.3" height="15.0" fill="rgb(207,148,16)" rx="2" ry="2" />
<text  x="1129.92" y="751.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="533.2" y="629" width="0.3" height="15.0" fill="rgb(227,167,42)" rx="2" ry="2" />
<text  x="536.21" y="639.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (2 samples, 0.04%)</title><rect x="267.0" y="453" width="0.5" height="15.0" fill="rgb(231,41,36)" rx="2" ry="2" />
<text  x="270.03" y="463.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::OnTaskCompleted(base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming*, base::sequence_manager::LazyNow*) (17 samples, 0.36%)</title><rect x="33.7" y="677" width="4.3" height="15.0" fill="rgb(253,119,10)" rx="2" ry="2" />
<text  x="36.75" y="687.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="226.5" y="453" width="0.2" height="15.0" fill="rgb(234,164,33)" rx="2" ry="2" />
<text  x="229.46" y="463.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_wake (1 samples, 0.02%)</title><rect x="140.1" y="309" width="0.3" height="15.0" fill="rgb(243,24,43)" rx="2" ry="2" />
<text  x="143.12" y="319.5" ></text>
</g>
<g >
<title>mojo::internal::Buffer::Buffer() (1 samples, 0.02%)</title><rect x="1059.1" y="789" width="0.3" height="15.0" fill="rgb(251,116,0)" rx="2" ry="2" />
<text  x="1062.14" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTaskImpl() (15 samples, 0.31%)</title><rect x="82.7" y="837" width="3.7" height="15.0" fill="rgb(236,173,35)" rx="2" ry="2" />
<text  x="85.73" y="847.5" ></text>
</g>
<g >
<title>backtrace (2 samples, 0.04%)</title><rect x="714.8" y="869" width="0.5" height="15.0" fill="rgb(228,44,36)" rx="2" ry="2" />
<text  x="717.78" y="879.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::GetBinaryValue(media::VideoFrameMetadata::Key) const (1 samples, 0.02%)</title><rect x="137.9" y="533" width="0.2" height="15.0" fill="rgb(243,219,24)" rx="2" ry="2" />
<text  x="140.90" y="543.5" ></text>
</g>
<g >
<title>content::RendererMain(content::MainFunctionParams const&amp;) (171 samples, 3.58%)</title><rect x="10.0" y="965" width="42.3" height="15.0" fill="rgb(239,11,34)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >con..</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="257.4" y="597" width="0.2" height="15.0" fill="rgb(233,193,49)" rx="2" ry="2" />
<text  x="260.38" y="607.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="310.3" y="453" width="0.3" height="15.0" fill="rgb(240,58,40)" rx="2" ry="2" />
<text  x="313.32" y="463.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="283.4" y="613" width="0.2" height="15.0" fill="rgb(239,147,0)" rx="2" ry="2" />
<text  x="286.35" y="623.5" ></text>
</g>
<g >
<title>DYLD-STUB$$memset (1 samples, 0.02%)</title><rect x="959.4" y="725" width="0.3" height="15.0" fill="rgb(209,0,33)" rx="2" ry="2" />
<text  x="962.44" y="735.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="183.7" y="805" width="0.2" height="15.0" fill="rgb(250,4,0)" rx="2" ry="2" />
<text  x="186.66" y="815.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="854.8" y="773" width="0.2" height="15.0" fill="rgb(221,183,39)" rx="2" ry="2" />
<text  x="857.80" y="783.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::num_handles() const (1 samples, 0.02%)</title><rect x="1058.9" y="725" width="0.2" height="15.0" fill="rgb(251,61,40)" rx="2" ry="2" />
<text  x="1061.89" y="735.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (2 samples, 0.04%)</title><rect x="35.2" y="597" width="0.5" height="15.0" fill="rgb(239,6,27)" rx="2" ry="2" />
<text  x="38.23" y="607.5" ></text>
</g>
<g >
<title>v8::Isolate::EnqueueMicrotask(void (*)(void*), void*) (1 samples, 0.02%)</title><rect x="20.4" y="517" width="0.2" height="15.0" fill="rgb(240,20,3)" rx="2" ry="2" />
<text  x="23.39" y="527.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="993.6" y="773" width="0.2" height="15.0" fill="rgb(210,20,5)" rx="2" ry="2" />
<text  x="996.58" y="783.5" ></text>
</g>
<g >
<title>IPC::SyncMessage::SyncMessage(int, unsigned int, IPC::Message::PriorityValue, IPC::MessageReplyDeserializer*) (1 samples, 0.02%)</title><rect x="1033.9" y="517" width="0.3" height="15.0" fill="rgb(231,93,24)" rx="2" ry="2" />
<text  x="1036.90" y="527.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="487.9" y="645" width="0.3" height="15.0" fill="rgb(218,45,1)" rx="2" ry="2" />
<text  x="490.94" y="655.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="332.6" y="805" width="0.2" height="15.0" fill="rgb(239,156,4)" rx="2" ry="2" />
<text  x="335.58" y="815.5" ></text>
</g>
<g >
<title>vp8_yv12_copy_frame_c (11 samples, 0.23%)</title><rect x="646.8" y="741" width="2.7" height="15.0" fill="rgb(254,132,7)" rx="2" ry="2" />
<text  x="649.75" y="751.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunWorker() (568 samples, 11.91%)</title><rect x="566.6" y="981" width="140.5" height="15.0" fill="rgb(242,75,29)" rx="2" ry="2" />
<text  x="569.60" y="991.5" >base::internal::W..</text>
</g>
<g >
<title>mojo::core::NodeChannel::SendChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (2 samples, 0.04%)</title><rect x="173.3" y="613" width="0.5" height="15.0" fill="rgb(220,97,2)" rx="2" ry="2" />
<text  x="176.27" y="623.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Set(void*) (1 samples, 0.02%)</title><rect x="378.6" y="901" width="0.2" height="15.0" fill="rgb(250,5,41)" rx="2" ry="2" />
<text  x="381.60" y="911.5" ></text>
</g>
<g >
<title>_pthread_body (595 samples, 12.47%)</title><rect x="873.1" y="1029" width="147.2" height="15.0" fill="rgb(242,22,35)" rx="2" ry="2" />
<text  x="876.11" y="1039.5" >_pthread_body</text>
</g>
<g >
<title>base::WorkIdProvider::IncrementWorkId() (2 samples, 0.04%)</title><rect x="194.8" y="885" width="0.5" height="15.0" fill="rgb(230,229,12)" rx="2" ry="2" />
<text  x="197.79" y="895.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="33.3" y="645" width="0.2" height="15.0" fill="rgb(218,17,28)" rx="2" ry="2" />
<text  x="36.25" y="655.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="533.2" y="565" width="0.3" height="15.0" fill="rgb(231,165,24)" rx="2" ry="2" />
<text  x="536.21" y="575.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (3 samples, 0.06%)</title><rect x="1025.2" y="869" width="0.8" height="15.0" fill="rgb(242,197,26)" rx="2" ry="2" />
<text  x="1028.25" y="879.5" ></text>
</g>
<g >
<title>webrtc::RtcEventRtcpPacketOutgoing::IsConfigEvent() const (1 samples, 0.02%)</title><rect x="721.5" y="805" width="0.2" height="15.0" fill="rgb(210,111,3)" rx="2" ry="2" />
<text  x="724.46" y="815.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3.filter_block1d8_h4_rowloop_ssse3 (4 samples, 0.08%)</title><rect x="973.3" y="677" width="1.0" height="15.0" fill="rgb(213,161,4)" rx="2" ry="2" />
<text  x="976.30" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) (171 samples, 3.58%)</title><rect x="10.0" y="933" width="42.3" height="15.0" fill="rgb(252,163,4)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >bas..</text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="30.5" y="613" width="0.3" height="15.0" fill="rgb(212,55,49)" rx="2" ry="2" />
<text  x="33.53" y="623.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="353.9" y="757" width="0.2" height="15.0" fill="rgb(229,172,40)" rx="2" ry="2" />
<text  x="356.86" y="767.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="171.8" y="837" width="0.2" height="15.0" fill="rgb(217,46,20)" rx="2" ry="2" />
<text  x="174.79" y="847.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="173.3" y="533" width="0.5" height="15.0" fill="rgb(206,228,43)" rx="2" ry="2" />
<text  x="176.27" y="543.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (1 samples, 0.02%)</title><rect x="878.1" y="901" width="0.2" height="15.0" fill="rgb(245,204,13)" rx="2" ry="2" />
<text  x="881.05" y="911.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="132.9" y="677" width="0.3" height="15.0" fill="rgb(211,88,35)" rx="2" ry="2" />
<text  x="135.95" y="687.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::BeforeQueueTaskSource(base::TaskShutdownBehavior) (2 samples, 0.04%)</title><rect x="78.0" y="789" width="0.5" height="15.0" fill="rgb(225,24,29)" rx="2" ry="2" />
<text  x="81.03" y="799.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (3 samples, 0.06%)</title><rect x="858.8" y="949" width="0.7" height="15.0" fill="rgb(213,47,18)" rx="2" ry="2" />
<text  x="861.76" y="959.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetIOAllowed(bool) (6 samples, 0.13%)</title><rect x="1024.5" y="917" width="1.5" height="15.0" fill="rgb(242,33,49)" rx="2" ry="2" />
<text  x="1027.50" y="927.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="856.5" y="901" width="0.3" height="15.0" fill="rgb(254,83,49)" rx="2" ry="2" />
<text  x="859.53" y="911.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="260.8" y="613" width="0.3" height="15.0" fill="rgb(212,209,1)" rx="2" ry="2" />
<text  x="263.84" y="623.5" ></text>
</g>
<g >
<title>IPC::ParamTraits&lt;unsigned char&gt;::Write(base::Pickle*, unsigned char const&amp;) (1 samples, 0.02%)</title><rect x="243.0" y="597" width="0.3" height="15.0" fill="rgb(215,75,12)" rx="2" ry="2" />
<text  x="246.03" y="607.5" ></text>
</g>
<g >
<title>non-virtual thunk to webrtc::internal::VideoSendStreamImpl::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (1 samples, 0.02%)</title><rect x="486.2" y="757" width="0.3" height="15.0" fill="rgb(239,183,23)" rx="2" ry="2" />
<text  x="489.21" y="767.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="554.5" y="933" width="0.2" height="15.0" fill="rgb(217,171,9)" rx="2" ry="2" />
<text  x="557.48" y="943.5" ></text>
</g>
<g >
<title>rtc::AsyncClosure::~AsyncClosure() (2 samples, 0.04%)</title><rect x="297.0" y="789" width="0.5" height="15.0" fill="rgb(217,217,5)" rx="2" ry="2" />
<text  x="299.96" y="799.5" ></text>
</g>
<g >
<title>webrtc::SrtpTransport::SendRtcpPacket(rtc::CopyOnWriteBuffer*, rtc::PacketOptions const&amp;, int) (9 samples, 0.19%)</title><rect x="234.6" y="789" width="2.2" height="15.0" fill="rgb(234,107,46)" rx="2" ry="2" />
<text  x="237.62" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (1 samples, 0.02%)</title><rect x="15.7" y="693" width="0.2" height="15.0" fill="rgb(245,40,8)" rx="2" ry="2" />
<text  x="18.69" y="703.5" ></text>
</g>
<g >
<title>webrtc::RtpTransport::SendPacket(bool, rtc::CopyOnWriteBuffer*, rtc::PacketOptions const&amp;, int) (8 samples, 0.17%)</title><rect x="234.9" y="773" width="1.9" height="15.0" fill="rgb(225,161,43)" rx="2" ry="2" />
<text  x="237.87" y="783.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3 (1 samples, 0.02%)</title><rect x="588.1" y="645" width="0.3" height="15.0" fill="rgb(231,140,0)" rx="2" ry="2" />
<text  x="591.13" y="655.5" ></text>
</g>
<g >
<title>silk_NSQ_del_dec_c (18 samples, 0.38%)</title><rect x="995.3" y="693" width="4.5" height="15.0" fill="rgb(247,56,41)" rx="2" ry="2" />
<text  x="998.31" y="703.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="180.7" y="853" width="0.2" height="15.0" fill="rgb(234,137,52)" rx="2" ry="2" />
<text  x="183.69" y="863.5" ></text>
</g>
<g >
<title>webrtc::AudioDecoderOpusImpl::ParsePayload(rtc::BufferT&lt;unsigned char, false&gt;&amp;&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="278.7" y="629" width="0.2" height="15.0" fill="rgb(213,76,17)" rx="2" ry="2" />
<text  x="281.65" y="639.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker  0x659343 (595 samples, 12.47%)</title><rect x="873.1" y="1077" width="147.2" height="15.0" fill="rgb(236,228,22)" rx="2" ry="2" />
<text  x="876.11" y="1087.5" >base::internal::Wo..</text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1080.9" y="885" width="0.3" height="15.0" fill="rgb(229,104,41)" rx="2" ry="2" />
<text  x="1083.91" y="895.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (444 samples, 9.31%)</title><rect x="87.2" y="1013" width="109.8" height="15.0" fill="rgb(205,114,41)" rx="2" ry="2" />
<text  x="90.18" y="1023.5" >base::(anonym..</text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="377.6" y="789" width="0.3" height="15.0" fill="rgb(232,177,22)" rx="2" ry="2" />
<text  x="380.61" y="799.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="143.1" y="789" width="0.2" height="15.0" fill="rgb(210,129,25)" rx="2" ry="2" />
<text  x="146.09" y="799.5" ></text>
</g>
<g >
<title>__commpage_gettimeofday_internal (1 samples, 0.02%)</title><rect x="10.2" y="837" width="0.3" height="15.0" fill="rgb(251,22,32)" rx="2" ry="2" />
<text  x="13.25" y="847.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="31.3" y="581" width="0.2" height="15.0" fill="rgb(220,160,24)" rx="2" ry="2" />
<text  x="34.27" y="591.5" ></text>
</g>
<g >
<title>mach_msg_send (1 samples, 0.02%)</title><rect x="993.1" y="581" width="0.2" height="15.0" fill="rgb(241,24,34)" rx="2" ry="2" />
<text  x="996.09" y="591.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (147 samples, 3.08%)</title><rect x="1023.5" y="933" width="36.4" height="15.0" fill="rgb(218,120,26)" rx="2" ry="2" />
<text  x="1026.51" y="943.5" >bas..</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="342.7" y="773" width="0.3" height="15.0" fill="rgb(240,178,50)" rx="2" ry="2" />
<text  x="345.73" y="783.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="298.4" y="645" width="0.3" height="15.0" fill="rgb(209,212,3)" rx="2" ry="2" />
<text  x="301.44" y="655.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (9 samples, 0.19%)</title><rect x="659.4" y="709" width="2.2" height="15.0" fill="rgb(214,16,16)" rx="2" ry="2" />
<text  x="662.37" y="719.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketReceived::GetHeader(webrtc::RTPHeader*) const (1 samples, 0.02%)</title><rect x="278.2" y="693" width="0.2" height="15.0" fill="rgb(230,227,18)" rx="2" ry="2" />
<text  x="281.16" y="703.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_other_loop (4 samples, 0.08%)</title><rect x="431.0" y="661" width="1.0" height="15.0" fill="rgb(234,15,31)" rx="2" ry="2" />
<text  x="434.04" y="671.5" ></text>
</g>
<g >
<title>MojoArmTrap (1 samples, 0.02%)</title><rect x="142.8" y="661" width="0.3" height="15.0" fill="rgb(210,102,3)" rx="2" ry="2" />
<text  x="145.84" y="671.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16x16_ssse3 (1 samples, 0.02%)</title><rect x="404.3" y="661" width="0.3" height="15.0" fill="rgb(232,198,19)" rx="2" ry="2" />
<text  x="407.32" y="671.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::OnWorkerBecomesIdleLockRequired(base::internal::WorkerThread*) (4 samples, 0.08%)</title><rect x="557.9" y="933" width="1.0" height="15.0" fill="rgb(213,45,15)" rx="2" ry="2" />
<text  x="560.95" y="943.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::~RtpPacket() (1 samples, 0.02%)</title><rect x="227.2" y="565" width="0.2" height="15.0" fill="rgb(228,204,8)" rx="2" ry="2" />
<text  x="230.20" y="575.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::WeakReference(base::internal::WeakReference const&amp;) (1 samples, 0.02%)</title><rect x="1151.9" y="837" width="0.3" height="15.0" fill="rgb(253,55,3)" rx="2" ry="2" />
<text  x="1154.90" y="847.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__wrap_iter&lt;std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt; const*&gt;, std::__Cr::__wrap_iter&lt;std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt; const*&gt; &gt; base::internal::flat_tree&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;, base::internal::GetKeyFromValuePairFirst&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;, std::__Cr::less&lt;void&gt; &gt;::equal_range&lt;base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; &gt;(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;) const (1 samples, 0.02%)</title><rect x="1038.6" y="533" width="0.3" height="15.0" fill="rgb(232,174,31)" rx="2" ry="2" />
<text  x="1041.60" y="543.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="207.2" y="821" width="0.2" height="15.0" fill="rgb(246,90,40)" rx="2" ry="2" />
<text  x="210.16" y="831.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="495.6" y="709" width="0.3" height="15.0" fill="rgb(211,100,17)" rx="2" ry="2" />
<text  x="498.61" y="719.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.02%)</title><rect x="27.6" y="485" width="0.2" height="15.0" fill="rgb(228,39,19)" rx="2" ry="2" />
<text  x="30.56" y="495.5" ></text>
</g>
<g >
<title>vp8_pick_inter_mode (132 samples, 2.77%)</title><rect x="899.3" y="693" width="32.7" height="15.0" fill="rgb(239,121,21)" rx="2" ry="2" />
<text  x="902.33" y="703.5" >vp..</text>
</g>
<g >
<title>std::__Cr::enable_if&lt;(__is_forward_iterator&lt;cc::TransformCachedNodeData*&gt;::value) &amp;&amp; (is_constructible&lt;cc::TransformCachedNodeData, std::__Cr::iterator_traits&lt;cc::TransformCachedNodeData*&gt;::reference&gt;::value), void&gt;::type std::__Cr::vector&lt;cc::TransformCachedNodeData, std::__Cr::allocator&lt;cc::TransformCachedNodeData&gt; &gt;::assign&lt;cc::TransformCachedNodeData*&gt;(cc::TransformCachedNodeData*, cc::TransformCachedNodeData*) (1 samples, 0.02%)</title><rect x="1070.5" y="773" width="0.3" height="15.0" fill="rgb(239,215,29)" rx="2" ry="2" />
<text  x="1073.52" y="783.5" ></text>
</g>
<g >
<title>mach_msg_trap (7 samples, 0.15%)</title><rect x="124.8" y="661" width="1.7" height="15.0" fill="rgb(237,170,36)" rx="2" ry="2" />
<text  x="127.78" y="671.5" ></text>
</g>
<g >
<title>mojo::internal::ArraySerializer&lt;mojo::ArrayDataView&lt;viz::mojom::DrawQuadDataView&gt;, viz::QuadList const, mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;viz::QuadList&gt;, viz::QuadList const, true&gt;, void&gt;::SerializeElements(mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;viz::QuadList&gt;, viz::QuadList const, true&gt;*, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;mojo::internal::Pointer&lt;viz::mojom::internal::DrawQuad_Data&gt; &gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1068.5" y="645" width="0.3" height="15.0" fill="rgb(239,18,38)" rx="2" ry="2" />
<text  x="1071.54" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="1035.4" y="469" width="0.2" height="15.0" fill="rgb(243,56,4)" rx="2" ry="2" />
<text  x="1038.39" y="479.5" ></text>
</g>
<g >
<title>backtrace (1 samples, 0.02%)</title><rect x="370.7" y="869" width="0.2" height="15.0" fill="rgb(221,6,21)" rx="2" ry="2" />
<text  x="373.68" y="879.5" ></text>
</g>
<g >
<title>MojoGetMessageDataImpl (1 samples, 0.02%)</title><rect x="1058.9" y="757" width="0.2" height="15.0" fill="rgb(211,133,9)" rx="2" ry="2" />
<text  x="1061.89" y="767.5" ></text>
</g>
<g >
<title>mojo::Connector::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="1067.3" y="693" width="0.2" height="15.0" fill="rgb(242,62,8)" rx="2" ry="2" />
<text  x="1070.30" y="703.5" ></text>
</g>
<g >
<title>base::internal::DecoratorWithTaskSource&lt;base::internal::TaskSource::RunIntent, base::internal::RegisteredTaskSource&gt;::DecoratorWithTaskSource(base::internal::RegisteredTaskSource, base::internal::TaskSource::RunIntent) (1 samples, 0.02%)</title><rect x="556.7" y="949" width="0.3" height="15.0" fill="rgb(219,140,34)" rx="2" ry="2" />
<text  x="559.71" y="959.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoSendStreamImpl::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (3 samples, 0.06%)</title><rect x="961.4" y="757" width="0.8" height="15.0" fill="rgb(235,29,23)" rx="2" ry="2" />
<text  x="964.42" y="767.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="326.6" y="725" width="0.3" height="15.0" fill="rgb(250,194,44)" rx="2" ry="2" />
<text  x="329.65" y="735.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoDelayedWork(base::TimeTicks*) (4 samples, 0.08%)</title><rect x="15.2" y="741" width="1.0" height="15.0" fill="rgb(230,86,6)" rx="2" ry="2" />
<text  x="18.19" y="751.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (569 samples, 11.93%)</title><rect x="566.6" y="1013" width="140.8" height="15.0" fill="rgb(252,18,38)" rx="2" ry="2" />
<text  x="569.60" y="1023.5" >base::(anonymous ..</text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="857.3" y="917" width="0.2" height="15.0" fill="rgb(233,55,36)" rx="2" ry="2" />
<text  x="860.27" y="927.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::DelayTillNextTask(base::sequence_manager::LazyNow*) const (15 samples, 0.31%)</title><rect x="327.6" y="885" width="3.7" height="15.0" fill="rgb(221,88,40)" rx="2" ry="2" />
<text  x="330.64" y="895.5" ></text>
</g>
<g >
<title>webrtc::ModuleRtpRtcpImpl::Process() (2 samples, 0.04%)</title><rect x="1189.3" y="965" width="0.5" height="15.0" fill="rgb(251,33,2)" rx="2" ry="2" />
<text  x="1192.26" y="975.5" ></text>
</g>
<g >
<title>base::mac::CallWithEHFrame(void () block_pointer) (1 samples, 0.02%)</title><rect x="13.0" y="789" width="0.2" height="15.0" fill="rgb(223,6,41)" rx="2" ry="2" />
<text  x="15.97" y="799.5" ></text>
</g>
<g >
<title>blink::MainThreadDebugger::consoleAPIMessage(int, v8::Isolate::MessageErrorLevel, v8_inspector::StringView const&amp;, v8_inspector::StringView const&amp;, unsigned int, unsigned int, v8_inspector::V8StackTrace*) (1 samples, 0.02%)</title><rect x="19.9" y="293" width="0.2" height="15.0" fill="rgb(236,64,19)" rx="2" ry="2" />
<text  x="22.90" y="303.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (6 samples, 0.13%)</title><rect x="191.1" y="885" width="1.5" height="15.0" fill="rgb(252,228,11)" rx="2" ry="2" />
<text  x="194.08" y="895.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (6 samples, 0.13%)</title><rect x="957.2" y="725" width="1.5" height="15.0" fill="rgb(246,47,8)" rx="2" ry="2" />
<text  x="960.22" y="735.5" ></text>
</g>
<g >
<title>mojo::native::internal::NativeStruct_Data::BufferWriter::data() (2 samples, 0.04%)</title><rect x="241.3" y="629" width="0.5" height="15.0" fill="rgb(205,4,27)" rx="2" ry="2" />
<text  x="244.30" y="639.5" ></text>
</g>
<g >
<title>silk_resampler (3 samples, 0.06%)</title><rect x="549.3" y="725" width="0.7" height="15.0" fill="rgb(230,21,28)" rx="2" ry="2" />
<text  x="552.29" y="735.5" ></text>
</g>
<g >
<title>_pthread_start (52 samples, 1.09%)</title><rect x="1074.2" y="1045" width="12.9" height="15.0" fill="rgb(227,122,15)" rx="2" ry="2" />
<text  x="1077.23" y="1055.5" ></text>
</g>
<g >
<title>mach_msg (4 samples, 0.08%)</title><rect x="1085.6" y="661" width="1.0" height="15.0" fill="rgb(236,4,11)" rx="2" ry="2" />
<text  x="1088.61" y="671.5" ></text>
</g>
<g >
<title>_pthread_mutex_lock_init_slow (2 samples, 0.04%)</title><rect x="318.5" y="549" width="0.5" height="15.0" fill="rgb(229,195,26)" rx="2" ry="2" />
<text  x="321.48" y="559.5" ></text>
</g>
<g >
<title>media::AudioDeviceThread::ThreadMain() (52 samples, 1.09%)</title><rect x="1074.2" y="997" width="12.9" height="15.0" fill="rgb(210,11,33)" rx="2" ry="2" />
<text  x="1077.23" y="1007.5" ></text>
</g>
<g >
<title>silk_resampler_private_up2_HQ (1 samples, 0.02%)</title><rect x="1124.4" y="597" width="0.3" height="15.0" fill="rgb(232,107,6)" rx="2" ry="2" />
<text  x="1127.44" y="607.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (8 samples, 0.17%)</title><rect x="479.8" y="725" width="2.0" height="15.0" fill="rgb(243,209,11)" rx="2" ry="2" />
<text  x="482.77" y="735.5" ></text>
</g>
<g >
<title>webrtc::internal::AudioSendStream::OnPacketFeedbackVector(std::__Cr::vector&lt;webrtc::PacketFeedback, std::__Cr::allocator&lt;webrtc::PacketFeedback&gt; &gt; const&amp;) (2 samples, 0.04%)</title><rect x="275.2" y="677" width="0.5" height="15.0" fill="rgb(248,81,44)" rx="2" ry="2" />
<text  x="278.19" y="687.5" ></text>
</g>
<g >
<title>rtc::PacketOptions::PacketOptions(rtc::PacketOptions const&amp;) (1 samples, 0.02%)</title><rect x="255.2" y="661" width="0.2" height="15.0" fill="rgb(253,47,44)" rx="2" ry="2" />
<text  x="258.15" y="671.5" ></text>
</g>
<g >
<title>opus_fft_impl (1 samples, 0.02%)</title><rect x="685.1" y="709" width="0.2" height="15.0" fill="rgb(228,137,20)" rx="2" ry="2" />
<text  x="688.10" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (13 samples, 0.27%)</title><rect x="335.1" y="885" width="3.2" height="15.0" fill="rgb(227,32,1)" rx="2" ry="2" />
<text  x="338.06" y="895.5" ></text>
</g>
<g >
<title>cc::Scheduler::DrawIfPossible() (4 samples, 0.08%)</title><rect x="1068.0" y="821" width="1.0" height="15.0" fill="rgb(240,37,2)" rx="2" ry="2" />
<text  x="1071.04" y="831.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkDeduplicator::WillCheckForMoreWork() (1 samples, 0.02%)</title><rect x="338.3" y="885" width="0.2" height="15.0" fill="rgb(230,1,37)" rx="2" ry="2" />
<text  x="341.27" y="895.5" ></text>
</g>
<g >
<title>gpu::GpuMemoryBufferImplIOSurface::Map() (4 samples, 0.08%)</title><rect x="69.1" y="917" width="1.0" height="15.0" fill="rgb(249,50,54)" rx="2" ry="2" />
<text  x="72.12" y="927.5" ></text>
</g>
<g >
<title>MojoDestroyMessage (4 samples, 0.08%)</title><rect x="1054.4" y="725" width="1.0" height="15.0" fill="rgb(233,48,11)" rx="2" ry="2" />
<text  x="1057.44" y="735.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::IsCancelled() const (1 samples, 0.02%)</title><rect x="190.1" y="821" width="0.2" height="15.0" fill="rgb(251,145,28)" rx="2" ry="2" />
<text  x="193.09" y="831.5" ></text>
</g>
<g >
<title>aes_hw_ctr32_encrypt_blocks (1 samples, 0.02%)</title><rect x="238.1" y="677" width="0.2" height="15.0" fill="rgb(221,23,36)" rx="2" ry="2" />
<text  x="241.08" y="687.5" ></text>
</g>
<g >
<title>WTF::StringView::~StringView() (1 samples, 0.02%)</title><rect x="28.1" y="277" width="0.2" height="15.0" fill="rgb(209,19,23)" rx="2" ry="2" />
<text  x="31.06" y="287.5" ></text>
</g>
<g >
<title>evaluate_inter_mode (16 samples, 0.34%)</title><rect x="403.3" y="677" width="4.0" height="15.0" fill="rgb(253,44,42)" rx="2" ry="2" />
<text  x="406.33" y="687.5" ></text>
</g>
<g >
<title>vpx_post_proc_down_and_across_mb_row_sse2.nextcol (9 samples, 0.19%)</title><rect x="819.9" y="709" width="2.2" height="15.0" fill="rgb(246,104,21)" rx="2" ry="2" />
<text  x="822.92" y="719.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="551.3" y="821" width="0.2" height="15.0" fill="rgb(254,20,47)" rx="2" ry="2" />
<text  x="554.27" y="831.5" ></text>
</g>
<g >
<title>mojo::ScopedInterfaceEndpointHandle::pending_association() const (1 samples, 0.02%)</title><rect x="171.3" y="773" width="0.2" height="15.0" fill="rgb(217,124,26)" rx="2" ry="2" />
<text  x="174.29" y="783.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1155.9" y="869" width="0.2" height="15.0" fill="rgb(213,110,38)" rx="2" ry="2" />
<text  x="1158.86" y="879.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="30.8" y="549" width="0.2" height="15.0" fill="rgb(250,220,36)" rx="2" ry="2" />
<text  x="33.78" y="559.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::Context::CallNotify(MojoTrapEvent const*) (90 samples, 1.89%)</title><rect x="120.8" y="789" width="22.3" height="15.0" fill="rgb(242,120,46)" rx="2" ry="2" />
<text  x="123.83" y="799.5" >m..</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="201.2" y="757" width="0.3" height="15.0" fill="rgb(207,127,44)" rx="2" ry="2" />
<text  x="204.22" y="767.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="272.5" y="565" width="0.2" height="15.0" fill="rgb(245,122,7)" rx="2" ry="2" />
<text  x="275.47" y="575.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (3 samples, 0.06%)</title><rect x="825.4" y="693" width="0.7" height="15.0" fill="rgb(232,126,1)" rx="2" ry="2" />
<text  x="828.36" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() const (1 samples, 0.02%)</title><rect x="342.7" y="789" width="0.3" height="15.0" fill="rgb(244,167,50)" rx="2" ry="2" />
<text  x="345.73" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::TaskQueue::CreateTaskRunner(unsigned char) (1 samples, 0.02%)</title><rect x="18.4" y="533" width="0.3" height="15.0" fill="rgb(235,196,25)" rx="2" ry="2" />
<text  x="21.41" y="543.5" ></text>
</g>
<g >
<title>cc::ProxyImpl::DrawInternal(bool) (4 samples, 0.08%)</title><rect x="1068.0" y="789" width="1.0" height="15.0" fill="rgb(243,71,47)" rx="2" ry="2" />
<text  x="1071.04" y="799.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="298.7" y="629" width="0.2" height="15.0" fill="rgb(218,224,42)" rx="2" ry="2" />
<text  x="301.69" y="639.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="246.2" y="405" width="0.3" height="15.0" fill="rgb(223,75,38)" rx="2" ry="2" />
<text  x="249.25" y="415.5" ></text>
</g>
<g >
<title>blink::MediaStreamAudioDeliverer&lt;blink::MediaStreamAudioTrack&gt;::OnData(media::AudioBus const&amp;, base::TimeTicks) (1 samples, 0.02%)</title><rect x="1131.1" y="821" width="0.3" height="15.0" fill="rgb(234,133,46)" rx="2" ry="2" />
<text  x="1134.12" y="831.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="206.4" y="709" width="0.3" height="15.0" fill="rgb(249,68,54)" rx="2" ry="2" />
<text  x="209.42" y="719.5" ></text>
</g>
<g >
<title>base::GetProgramCounter() (1 samples, 0.02%)</title><rect x="569.1" y="917" width="0.2" height="15.0" fill="rgb(247,89,33)" rx="2" ry="2" />
<text  x="572.08" y="927.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="652.7" y="629" width="0.2" height="15.0" fill="rgb(224,212,46)" rx="2" ry="2" />
<text  x="655.69" y="639.5" ></text>
</g>
<g >
<title>WTF::ThreadSpecific&lt;blink::ThreadState*&gt;::operator blink::ThreadState**() (1 samples, 0.02%)</title><rect x="38.0" y="661" width="0.2" height="15.0" fill="rgb(218,159,27)" rx="2" ry="2" />
<text  x="40.95" y="671.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::Release() const (1 samples, 0.02%)</title><rect x="227.2" y="549" width="0.2" height="15.0" fill="rgb(206,11,35)" rx="2" ry="2" />
<text  x="230.20" y="559.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="353.9" y="773" width="0.2" height="15.0" fill="rgb(214,195,22)" rx="2" ry="2" />
<text  x="356.86" y="783.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="83.0" y="725" width="0.2" height="15.0" fill="rgb(236,67,19)" rx="2" ry="2" />
<text  x="85.98" y="735.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="82.7" y="805" width="0.3" height="15.0" fill="rgb(250,167,41)" rx="2" ry="2" />
<text  x="85.73" y="815.5" ></text>
</g>
<g >
<title>srtp_aes_icm_openssl_encrypt (2 samples, 0.04%)</title><rect x="237.8" y="725" width="0.5" height="15.0" fill="rgb(238,90,51)" rx="2" ry="2" />
<text  x="240.84" y="735.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (18 samples, 0.38%)</title><rect x="65.7" y="1013" width="4.4" height="15.0" fill="rgb(208,54,34)" rx="2" ry="2" />
<text  x="68.66" y="1023.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="103.5" y="837" width="0.3" height="15.0" fill="rgb(220,82,13)" rx="2" ry="2" />
<text  x="106.51" y="847.5" ></text>
</g>
<g >
<title>mojo_base::mojom::internal::TimeDelta_Data::BufferWriter::data() (1 samples, 0.02%)</title><rect x="1042.8" y="581" width="0.3" height="15.0" fill="rgb(210,132,31)" rx="2" ry="2" />
<text  x="1045.81" y="591.5" ></text>
</g>
<g >
<title>mojo::core::Core::WriteMessage(unsigned int, unsigned long, MojoWriteMessageOptions const*) (1 samples, 0.02%)</title><rect x="165.8" y="709" width="0.3" height="15.0" fill="rgb(250,53,20)" rx="2" ry="2" />
<text  x="168.85" y="719.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (127 samples, 2.66%)</title><rect x="1028.5" y="901" width="31.4" height="15.0" fill="rgb(235,40,52)" rx="2" ry="2" />
<text  x="1031.46" y="911.5" >ba..</text>
</g>
<g >
<title>vp8_pack_bitstream (52 samples, 1.09%)</title><rect x="944.4" y="741" width="12.8" height="15.0" fill="rgb(231,18,33)" rx="2" ry="2" />
<text  x="947.35" y="751.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1057.7" y="709" width="0.2" height="15.0" fill="rgb(228,165,3)" rx="2" ry="2" />
<text  x="1060.65" y="719.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (3 samples, 0.06%)</title><rect x="298.2" y="693" width="0.7" height="15.0" fill="rgb(246,18,46)" rx="2" ry="2" />
<text  x="301.20" y="703.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="1158.6" y="805" width="0.2" height="15.0" fill="rgb(223,73,33)" rx="2" ry="2" />
<text  x="1161.58" y="815.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (2 samples, 0.04%)</title><rect x="556.0" y="917" width="0.5" height="15.0" fill="rgb(215,114,52)" rx="2" ry="2" />
<text  x="558.97" y="927.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (2 samples, 0.04%)</title><rect x="717.3" y="773" width="0.5" height="15.0" fill="rgb(232,44,12)" rx="2" ry="2" />
<text  x="720.26" y="783.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::AssertNoLockHeldOnCurrentThread() (1 samples, 0.02%)</title><rect x="555.0" y="933" width="0.2" height="15.0" fill="rgb(237,135,12)" rx="2" ry="2" />
<text  x="557.98" y="943.5" ></text>
</g>
<g >
<title>blink::MemberPointerVerifier&lt;blink::CoreProbeSink, (blink::TracenessMemberConfiguration)0&gt;::CheckPointer(blink::CoreProbeSink*) (1 samples, 0.02%)</title><rect x="22.1" y="549" width="0.3" height="15.0" fill="rgb(216,11,47)" rx="2" ry="2" />
<text  x="25.12" y="559.5" ></text>
</g>
<g >
<title>CFBasicHashGetCountOfKey (1 samples, 0.02%)</title><rect x="51.8" y="821" width="0.3" height="15.0" fill="rgb(231,18,18)" rx="2" ry="2" />
<text  x="54.81" y="831.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="577.2" y="885" width="0.3" height="15.0" fill="rgb(244,221,31)" rx="2" ry="2" />
<text  x="580.24" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::TimeDomain::SetNextWakeUpForQueue(base::sequence_manager::internal::TaskQueueImpl*, base::Optional&lt;base::sequence_manager::internal::DelayedWakeUp&gt;, base::sequence_manager::internal::WakeUpResolution, base::sequence_manager::LazyNow*) (1 samples, 0.02%)</title><rect x="84.2" y="757" width="0.3" height="15.0" fill="rgb(250,203,4)" rx="2" ry="2" />
<text  x="87.21" y="767.5" ></text>
</g>
<g >
<title>mach_msg_trap (4 samples, 0.08%)</title><rect x="258.6" y="533" width="1.0" height="15.0" fill="rgb(239,36,5)" rx="2" ry="2" />
<text  x="261.62" y="543.5" ></text>
</g>
<g >
<title>scheduling_metrics::ThreadMetrics::RecordTaskMetrics(base::sequence_manager::TaskQueue*, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (2 samples, 0.04%)</title><rect x="36.0" y="597" width="0.5" height="15.0" fill="rgb(213,35,36)" rx="2" ry="2" />
<text  x="38.97" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="185.1" y="757" width="0.3" height="15.0" fill="rgb(245,132,21)" rx="2" ry="2" />
<text  x="188.14" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (2 samples, 0.04%)</title><rect x="358.6" y="901" width="0.5" height="15.0" fill="rgb(253,144,31)" rx="2" ry="2" />
<text  x="361.56" y="911.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (2 samples, 0.04%)</title><rect x="173.3" y="677" width="0.5" height="15.0" fill="rgb(246,6,9)" rx="2" ry="2" />
<text  x="176.27" y="687.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1112.8" y="805" width="0.3" height="15.0" fill="rgb(243,66,54)" rx="2" ry="2" />
<text  x="1115.82" y="815.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (2 samples, 0.04%)</title><rect x="369.4" y="901" width="0.5" height="15.0" fill="rgb(240,214,39)" rx="2" ry="2" />
<text  x="372.44" y="911.5" ></text>
</g>
<g >
<title>void rtc::FunctionView&lt;void (rtc::ArrayView&lt;unsigned char const, -4711l&gt;)&gt;::CallVoidPtr&lt;webrtc::RTCPSender::SendFeedbackPacket(webrtc::rtcp::TransportFeedback const&amp;)::$_1&gt;(rtc::FunctionView&lt;void (rtc::ArrayView&lt;unsigned char const, -4711l&gt;)&gt;::VoidUnion, rtc::ArrayView&lt;unsigned char const, -4711l&gt;) (5 samples, 0.10%)</title><rect x="1181.6" y="885" width="1.2" height="15.0" fill="rgb(208,141,7)" rx="2" ry="2" />
<text  x="1184.59" y="895.5" ></text>
</g>
<g >
<title>network::mojom::P2PSocketClientRequestValidator::Accept(mojo::Message*) (3 samples, 0.06%)</title><rect x="319.2" y="693" width="0.8" height="15.0" fill="rgb(252,228,45)" rx="2" ry="2" />
<text  x="322.22" y="703.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="127.0" y="693" width="0.3" height="15.0" fill="rgb(245,138,7)" rx="2" ry="2" />
<text  x="130.01" y="703.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::Accept(mojo::Message*) (98 samples, 2.05%)</title><rect x="1031.2" y="773" width="24.2" height="15.0" fill="rgb(215,219,5)" rx="2" ry="2" />
<text  x="1034.18" y="783.5" >m..</text>
</g>
<g >
<title>io_connect_method (1 samples, 0.02%)</title><rect x="61.2" y="805" width="0.3" height="15.0" fill="rgb(252,191,17)" rx="2" ry="2" />
<text  x="64.21" y="815.5" ></text>
</g>
<g >
<title>vp8_encode_intra16x16mby (1 samples, 0.02%)</title><rect x="396.9" y="693" width="0.2" height="15.0" fill="rgb(207,218,39)" rx="2" ry="2" />
<text  x="399.90" y="703.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::~UserMessageImpl() (1 samples, 0.02%)</title><rect x="228.4" y="693" width="0.3" height="15.0" fill="rgb(236,152,5)" rx="2" ry="2" />
<text  x="231.44" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (1 samples, 0.02%)</title><rect x="815.5" y="629" width="0.2" height="15.0" fill="rgb(218,80,34)" rx="2" ry="2" />
<text  x="818.47" y="639.5" ></text>
</g>
<g >
<title>cricket::SrtpSession::UnprotectRtp(void*, int, int*) (7 samples, 0.15%)</title><rect x="306.9" y="533" width="1.7" height="15.0" fill="rgb(241,78,52)" rx="2" ry="2" />
<text  x="309.86" y="543.5" ></text>
</g>
<g >
<title>_platform_memcmp (1 samples, 0.02%)</title><rect x="1038.6" y="517" width="0.3" height="15.0" fill="rgb(232,13,10)" rx="2" ry="2" />
<text  x="1041.60" y="527.5" ></text>
</g>
<g >
<title>webrtc::SequenceCheckerImpl::IsCurrent() const (1 samples, 0.02%)</title><rect x="261.1" y="693" width="0.2" height="15.0" fill="rgb(217,114,30)" rx="2" ry="2" />
<text  x="264.09" y="703.5" ></text>
</g>
<g >
<title>webrtc::AudioEncoderOpusImpl::EncodeImpl(unsigned int, rtc::ArrayView&lt;short const, -4711l&gt;, rtc::BufferT&lt;unsigned char, false&gt;*) (27 samples, 0.57%)</title><rect x="683.9" y="805" width="6.6" height="15.0" fill="rgb(208,168,13)" rx="2" ry="2" />
<text  x="686.86" y="815.5" ></text>
</g>
<g >
<title>srtp_unprotect (1 samples, 0.02%)</title><rect x="306.9" y="517" width="0.2" height="15.0" fill="rgb(226,228,43)" rx="2" ry="2" />
<text  x="309.86" y="527.5" ></text>
</g>
<g >
<title>vp8_set_speed_features (1 samples, 0.02%)</title><rect x="457.8" y="709" width="0.2" height="15.0" fill="rgb(211,2,13)" rx="2" ry="2" />
<text  x="460.76" y="719.5" ></text>
</g>
<g >
<title>mojo::internal::SerializationContext::SerializationContext() (1 samples, 0.02%)</title><rect x="252.4" y="645" width="0.3" height="15.0" fill="rgb(222,117,34)" rx="2" ry="2" />
<text  x="255.43" y="655.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (2 samples, 0.04%)</title><rect x="294.2" y="773" width="0.5" height="15.0" fill="rgb(241,213,43)" rx="2" ry="2" />
<text  x="297.24" y="783.5" ></text>
</g>
<g >
<title>mojo::core::WatcherSet::NotifyState(mojo::core::HandleSignalsState const&amp;) (12 samples, 0.25%)</title><rect x="109.2" y="741" width="3.0" height="15.0" fill="rgb(208,113,30)" rx="2" ry="2" />
<text  x="112.20" y="751.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="225.2" y="565" width="0.3" height="15.0" fill="rgb(239,130,48)" rx="2" ry="2" />
<text  x="228.22" y="575.5" ></text>
</g>
<g >
<title>base::internal::(anonymous namespace)::WorkerThreadDelegate::EnqueueTaskSource(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.02%)</title><rect x="174.8" y="725" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="177.75" y="735.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="305.9" y="501" width="0.2" height="15.0" fill="rgb(227,119,2)" rx="2" ry="2" />
<text  x="308.87" y="511.5" ></text>
</g>
<g >
<title>base::debug::StackTrace::StackTrace() (1 samples, 0.02%)</title><rect x="1024.8" y="901" width="0.2" height="15.0" fill="rgb(254,99,13)" rx="2" ry="2" />
<text  x="1027.75" y="911.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::VideoStreamEncoder::OnFrame(webrtc::VideoFrame const&amp;)::$_9&gt;::Run() (288 samples, 6.04%)</title><rect x="581.4" y="853" width="71.3" height="15.0" fill="rgb(224,171,11)" rx="2" ry="2" />
<text  x="584.45" y="863.5" >webrtc::..</text>
</g>
<g >
<title>mojo::internal::SerializationContext::SerializationContext() (1 samples, 0.02%)</title><rect x="303.9" y="661" width="0.2" height="15.0" fill="rgb(251,91,3)" rx="2" ry="2" />
<text  x="306.89" y="671.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="414.0" y="629" width="0.2" height="15.0" fill="rgb(248,55,8)" rx="2" ry="2" />
<text  x="416.97" y="639.5" ></text>
</g>
<g >
<title>base::internal::PriorityQueue::Push(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (4 samples, 0.08%)</title><rect x="122.8" y="693" width="1.0" height="15.0" fill="rgb(247,109,49)" rx="2" ry="2" />
<text  x="125.81" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::TimeDomain::SetNextWakeUpForQueue(base::sequence_manager::internal::TaskQueueImpl*, base::Optional&lt;base::sequence_manager::internal::DelayedWakeUp&gt;, base::sequence_manager::internal::WakeUpResolution, base::sequence_manager::LazyNow*) (1 samples, 0.02%)</title><rect x="77.0" y="725" width="0.3" height="15.0" fill="rgb(205,107,38)" rx="2" ry="2" />
<text  x="80.04" y="735.5" ></text>
</g>
<g >
<title>base::internal::TaskTrackerPosix::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (745 samples, 15.62%)</title><rect x="369.2" y="949" width="184.3" height="15.0" fill="rgb(221,115,6)" rx="2" ry="2" />
<text  x="372.19" y="959.5" >base::internal::TaskTrac..</text>
</g>
<g >
<title>base::internal::TaskTracker::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (582 samples, 12.20%)</title><rect x="712.8" y="933" width="144.0" height="15.0" fill="rgb(214,43,28)" rx="2" ry="2" />
<text  x="715.81" y="943.5" >base::internal::Ta..</text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::PostTaskInternal(rtc::Location const&amp;, int, rtc::MessageHandler*, unsigned int, rtc::MessageData*) (19 samples, 0.40%)</title><rect x="1148.7" y="853" width="4.7" height="15.0" fill="rgb(246,114,31)" rx="2" ry="2" />
<text  x="1151.69" y="863.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="29.8" y="661" width="0.2" height="15.0" fill="rgb(245,183,6)" rx="2" ry="2" />
<text  x="32.79" y="671.5" ></text>
</g>
<g >
<title>webrtc::RtpTransportControllerSend::OnTransportFeedback(webrtc::rtcp::TransportFeedback const&amp;) (2 samples, 0.04%)</title><rect x="284.6" y="693" width="0.5" height="15.0" fill="rgb(220,202,52)" rx="2" ry="2" />
<text  x="287.59" y="703.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="279.1" y="597" width="0.3" height="15.0" fill="rgb(215,150,42)" rx="2" ry="2" />
<text  x="282.15" y="607.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (3 samples, 0.06%)</title><rect x="553.7" y="917" width="0.8" height="15.0" fill="rgb(249,159,29)" rx="2" ry="2" />
<text  x="556.74" y="927.5" ></text>
</g>
<g >
<title>vp8_mv_pred (3 samples, 0.06%)</title><rect x="437.7" y="677" width="0.8" height="15.0" fill="rgb(212,11,15)" rx="2" ry="2" />
<text  x="440.72" y="687.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (2 samples, 0.04%)</title><rect x="272.0" y="549" width="0.5" height="15.0" fill="rgb(210,88,37)" rx="2" ry="2" />
<text  x="274.97" y="559.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_y_block_sse2 (8 samples, 0.17%)</title><rect x="584.2" y="693" width="1.9" height="15.0" fill="rgb(249,28,41)" rx="2" ry="2" />
<text  x="587.17" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="78.5" y="789" width="0.5" height="15.0" fill="rgb(251,41,19)" rx="2" ry="2" />
<text  x="81.52" y="799.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_zero_loop (3 samples, 0.06%)</title><rect x="762.0" y="661" width="0.8" height="15.0" fill="rgb(241,143,4)" rx="2" ry="2" />
<text  x="765.03" y="671.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.02%)</title><rect x="257.6" y="549" width="0.3" height="15.0" fill="rgb(218,1,42)" rx="2" ry="2" />
<text  x="260.63" y="559.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (2 samples, 0.04%)</title><rect x="839.7" y="677" width="0.5" height="15.0" fill="rgb(248,72,43)" rx="2" ry="2" />
<text  x="842.71" y="687.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.02%)</title><rect x="32.3" y="613" width="0.2" height="15.0" fill="rgb(234,79,13)" rx="2" ry="2" />
<text  x="35.26" y="623.5" ></text>
</g>
<g >
<title>mojo::Connector::Accept(mojo::Message*) (23 samples, 0.48%)</title><rect x="244.8" y="613" width="5.7" height="15.0" fill="rgb(209,174,10)" rx="2" ry="2" />
<text  x="247.76" y="623.5" ></text>
</g>
<g >
<title>silk_find_pred_coefs_FLP (3 samples, 0.06%)</title><rect x="689.1" y="709" width="0.7" height="15.0" fill="rgb(243,165,47)" rx="2" ry="2" />
<text  x="692.06" y="719.5" ></text>
</g>
<g >
<title>media::VideoRendererAlgorithm::EnqueueFrame(scoped_refptr&lt;media::VideoFrame&gt;) (1 samples, 0.02%)</title><rect x="175.2" y="789" width="0.3" height="15.0" fill="rgb(242,222,28)" rx="2" ry="2" />
<text  x="178.25" y="799.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="343.5" y="821" width="0.2" height="15.0" fill="rgb(251,120,42)" rx="2" ry="2" />
<text  x="346.47" y="831.5" ></text>
</g>
<g >
<title>posix_memalign (5 samples, 0.10%)</title><rect x="104.3" y="805" width="1.2" height="15.0" fill="rgb(222,123,39)" rx="2" ry="2" />
<text  x="107.25" y="815.5" ></text>
</g>
<g >
<title>mojo::core::ports::PortLocker::PortLocker(mojo::core::ports::PortRef const**, unsigned long) (2 samples, 0.04%)</title><rect x="141.9" y="613" width="0.4" height="15.0" fill="rgb(210,226,30)" rx="2" ry="2" />
<text  x="144.85" y="623.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.02%)</title><rect x="284.6" y="581" width="0.2" height="15.0" fill="rgb(228,50,45)" rx="2" ry="2" />
<text  x="287.59" y="591.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="993.1" y="565" width="0.2" height="15.0" fill="rgb(235,209,41)" rx="2" ry="2" />
<text  x="996.09" y="575.5" ></text>
</g>
<g >
<title>webrtc::AudioEncoder::Encode(unsigned int, rtc::ArrayView&lt;short const, -4711l&gt;, rtc::BufferT&lt;unsigned char, false&gt;*) (62 samples, 1.30%)</title><rect x="534.7" y="821" width="15.3" height="15.0" fill="rgb(223,97,15)" rx="2" ry="2" />
<text  x="537.69" y="831.5" ></text>
</g>
<g >
<title>base::internal::(anonymous namespace)::WorkerThreadDelegate::DidProcessTask(base::internal::RegisteredTaskSource) (2 samples, 0.04%)</title><rect x="1020.8" y="965" width="0.5" height="15.0" fill="rgb(225,127,32)" rx="2" ry="2" />
<text  x="1023.79" y="975.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="350.4" y="789" width="0.2" height="15.0" fill="rgb(242,24,14)" rx="2" ry="2" />
<text  x="353.39" y="799.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="300.4" y="789" width="0.3" height="15.0" fill="rgb(217,21,2)" rx="2" ry="2" />
<text  x="303.42" y="799.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="257.6" y="597" width="0.3" height="15.0" fill="rgb(226,111,48)" rx="2" ry="2" />
<text  x="260.63" y="607.5" ></text>
</g>
<g >
<title>vpx_post_proc_down_and_across_mb_row_sse2.nextcol (14 samples, 0.29%)</title><rect x="491.4" y="709" width="3.5" height="15.0" fill="rgb(215,183,8)" rx="2" ry="2" />
<text  x="494.40" y="719.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="212.1" y="757" width="0.3" height="15.0" fill="rgb(236,169,30)" rx="2" ry="2" />
<text  x="215.11" y="767.5" ></text>
</g>
<g >
<title>silk_process_NLSFs (2 samples, 0.04%)</title><rect x="1000.8" y="677" width="0.4" height="15.0" fill="rgb(222,13,44)" rx="2" ry="2" />
<text  x="1003.75" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (2 samples, 0.04%)</title><rect x="226.0" y="485" width="0.5" height="15.0" fill="rgb(239,70,26)" rx="2" ry="2" />
<text  x="228.96" y="495.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ConsoleLog(int, unsigned long*, v8::internal::Isolate*) (1 samples, 0.02%)</title><rect x="19.9" y="405" width="0.2" height="15.0" fill="rgb(213,139,43)" rx="2" ry="2" />
<text  x="22.90" y="415.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::EndUnusedPeriod() (1 samples, 0.02%)</title><rect x="283.8" y="581" width="0.3" height="15.0" fill="rgb(206,129,20)" rx="2" ry="2" />
<text  x="286.85" y="591.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::VideoFrameCopyRequest&amp; base::circular_deque&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl::VideoFrameCopyRequest&gt;::emplace_back&lt;scoped_refptr&lt;media::VideoFrame&gt;, base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;, bool&amp;&gt;(scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;&amp;&amp;, bool&amp;&amp;&amp;) (1 samples, 0.02%)</title><rect x="203.9" y="821" width="0.3" height="15.0" fill="rgb(244,195,11)" rx="2" ry="2" />
<text  x="206.95" y="831.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (3 samples, 0.06%)</title><rect x="971.8" y="677" width="0.8" height="15.0" fill="rgb(240,79,4)" rx="2" ry="2" />
<text  x="974.81" y="687.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="322.2" y="693" width="0.2" height="15.0" fill="rgb(218,161,8)" rx="2" ry="2" />
<text  x="325.19" y="703.5" ></text>
</g>
<g >
<title>cc::UniqueNotifier::Notify() (4 samples, 0.08%)</title><rect x="1069.3" y="869" width="1.0" height="15.0" fill="rgb(252,96,29)" rx="2" ry="2" />
<text  x="1072.28" y="879.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_y_sse2 (3 samples, 0.06%)</title><rect x="678.4" y="693" width="0.8" height="15.0" fill="rgb(230,89,27)" rx="2" ry="2" />
<text  x="681.42" y="703.5" ></text>
</g>
<g >
<title>_pthread_mutex_fairshare_unlock_slow (1 samples, 0.02%)</title><rect x="1161.6" y="869" width="0.2" height="15.0" fill="rgb(230,57,35)" rx="2" ry="2" />
<text  x="1164.55" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::NotifyDidProcessTask(base::PendingTask const&amp;) (1 samples, 0.02%)</title><rect x="209.6" y="853" width="0.3" height="15.0" fill="rgb(224,135,11)" rx="2" ry="2" />
<text  x="212.64" y="863.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::OnWorkerBecomesIdleLockRequired(base::internal::WorkerThread*) (6 samples, 0.13%)</title><rect x="1011.1" y="933" width="1.5" height="15.0" fill="rgb(232,60,2)" rx="2" ry="2" />
<text  x="1014.14" y="943.5" ></text>
</g>
<g >
<title>cc::LayerTreeHost::CommitComplete() (2 samples, 0.04%)</title><rect x="23.9" y="645" width="0.4" height="15.0" fill="rgb(219,113,17)" rx="2" ry="2" />
<text  x="26.85" y="655.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1155.9" y="805" width="0.2" height="15.0" fill="rgb(226,83,37)" rx="2" ry="2" />
<text  x="1158.86" y="815.5" ></text>
</g>
<g >
<title>0x7fff731fdbe0 (1 samples, 0.02%)</title><rect x="815.7" y="693" width="0.3" height="15.0" fill="rgb(210,118,42)" rx="2" ry="2" />
<text  x="818.71" y="703.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_full_2x_sse2 (1 samples, 0.02%)</title><rect x="899.1" y="693" width="0.2" height="15.0" fill="rgb(227,194,14)" rx="2" ry="2" />
<text  x="902.08" y="703.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbh_sse2 (1 samples, 0.02%)</title><rect x="912.9" y="661" width="0.3" height="15.0" fill="rgb(209,75,21)" rx="2" ry="2" />
<text  x="915.94" y="671.5" ></text>
</g>
<g >
<title>vp8_decode_frame (75 samples, 1.57%)</title><rect x="822.1" y="725" width="18.6" height="15.0" fill="rgb(249,58,31)" rx="2" ry="2" />
<text  x="825.15" y="735.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;mojo::ArrayDataView&lt;viz::mojom::DrawQuadDataView&gt;, viz::QuadList const&gt;::Serialize(viz::QuadList const&amp;, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;mojo::internal::Pointer&lt;viz::mojom::internal::DrawQuad_Data&gt; &gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1068.5" y="661" width="0.3" height="15.0" fill="rgb(230,110,3)" rx="2" ry="2" />
<text  x="1071.54" y="671.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (2 samples, 0.04%)</title><rect x="634.1" y="709" width="0.5" height="15.0" fill="rgb(213,171,43)" rx="2" ry="2" />
<text  x="637.14" y="719.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="186.9" y="789" width="0.2" height="15.0" fill="rgb(231,162,31)" rx="2" ry="2" />
<text  x="189.88" y="799.5" ></text>
</g>
<g >
<title>_pthread_mutex_fairshare_lock_slow (1 samples, 0.02%)</title><rect x="1168.5" y="933" width="0.2" height="15.0" fill="rgb(249,159,23)" rx="2" ry="2" />
<text  x="1171.48" y="943.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="1072.5" y="341" width="0.2" height="15.0" fill="rgb(208,117,39)" rx="2" ry="2" />
<text  x="1075.49" y="351.5" ></text>
</g>
<g >
<title>free_tiny (2 samples, 0.04%)</title><rect x="1146.2" y="917" width="0.5" height="15.0" fill="rgb(220,225,23)" rx="2" ry="2" />
<text  x="1149.21" y="927.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (2 samples, 0.04%)</title><rect x="1157.8" y="741" width="0.5" height="15.0" fill="rgb(235,130,25)" rx="2" ry="2" />
<text  x="1160.84" y="751.5" ></text>
</g>
<g >
<title>v8_inspector::toProtocolString(v8::Isolate*, v8::Local&lt;v8::String&gt;) (1 samples, 0.02%)</title><rect x="17.9" y="309" width="0.3" height="15.0" fill="rgb(225,166,2)" rx="2" ry="2" />
<text  x="20.92" y="319.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="632.7" y="661" width="0.2" height="15.0" fill="rgb(221,196,26)" rx="2" ry="2" />
<text  x="635.65" y="671.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::Release() const (1 samples, 0.02%)</title><rect x="166.3" y="597" width="0.3" height="15.0" fill="rgb(219,206,25)" rx="2" ry="2" />
<text  x="169.34" y="607.5" ></text>
</g>
<g >
<title>webrtc::TickTimer::Stopwatch::Stopwatch(webrtc::TickTimer const&amp;) (1 samples, 0.02%)</title><rect x="280.1" y="597" width="0.3" height="15.0" fill="rgb(233,102,2)" rx="2" ry="2" />
<text  x="283.14" y="607.5" ></text>
</g>
<g >
<title>blink::BoxPainter::PaintBoxDecorationBackground(blink::PaintInfo const&amp;, blink::PhysicalOffset const&amp;) (1 samples, 0.02%)</title><rect x="26.6" y="197" width="0.2" height="15.0" fill="rgb(207,184,16)" rx="2" ry="2" />
<text  x="29.57" y="207.5" ></text>
</g>
<g >
<title>fcntl (9 samples, 0.19%)</title><rect x="1089.8" y="965" width="2.2" height="15.0" fill="rgb(207,103,33)" rx="2" ry="2" />
<text  x="1092.81" y="975.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="722.2" y="757" width="0.3" height="15.0" fill="rgb(248,229,33)" rx="2" ry="2" />
<text  x="725.21" y="767.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="31.8" y="629" width="0.2" height="15.0" fill="rgb(245,72,42)" rx="2" ry="2" />
<text  x="34.77" y="639.5" ></text>
</g>
<g >
<title>blink::DOMWindowPerformance::performance(blink::LocalDOMWindow&amp;) (1 samples, 0.02%)</title><rect x="22.4" y="613" width="0.2" height="15.0" fill="rgb(245,107,8)" rx="2" ry="2" />
<text  x="25.37" y="623.5" ></text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="1025.0" y="885" width="0.2" height="15.0" fill="rgb(224,26,18)" rx="2" ry="2" />
<text  x="1028.00" y="895.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (3 samples, 0.06%)</title><rect x="587.1" y="661" width="0.8" height="15.0" fill="rgb(227,212,1)" rx="2" ry="2" />
<text  x="590.14" y="671.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (3 samples, 0.06%)</title><rect x="283.4" y="629" width="0.7" height="15.0" fill="rgb(206,54,15)" rx="2" ry="2" />
<text  x="286.35" y="639.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (3 samples, 0.06%)</title><rect x="1153.6" y="773" width="0.8" height="15.0" fill="rgb(244,162,36)" rx="2" ry="2" />
<text  x="1156.64" y="783.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="854.8" y="741" width="0.2" height="15.0" fill="rgb(234,178,29)" rx="2" ry="2" />
<text  x="857.80" y="751.5" ></text>
</g>
<g >
<title>mach_msg_trap (6 samples, 0.13%)</title><rect x="47.4" y="805" width="1.4" height="15.0" fill="rgb(209,156,22)" rx="2" ry="2" />
<text  x="50.35" y="815.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_other_loop (2 samples, 0.04%)</title><rect x="905.0" y="661" width="0.5" height="15.0" fill="rgb(243,9,24)" rx="2" ry="2" />
<text  x="908.02" y="671.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::DiscardReadyState(base::RepeatingCallback&lt;void (unsigned int)&gt; const&amp;, unsigned int, mojo::HandleSignalsState const&amp;) (41 samples, 0.86%)</title><rect x="132.9" y="741" width="10.2" height="15.0" fill="rgb(246,121,29)" rx="2" ry="2" />
<text  x="135.95" y="751.5" ></text>
</g>
<g >
<title>webrtc::PacedSender::UpdateOutstandingData(long long) (1 samples, 0.02%)</title><rect x="291.0" y="773" width="0.3" height="15.0" fill="rgb(220,35,14)" rx="2" ry="2" />
<text  x="294.02" y="783.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="698.2" y="933" width="0.3" height="15.0" fill="rgb(210,163,28)" rx="2" ry="2" />
<text  x="701.21" y="943.5" ></text>
</g>
<g >
<title>silk_Decode (14 samples, 0.29%)</title><rect x="1121.2" y="645" width="3.5" height="15.0" fill="rgb(211,31,30)" rx="2" ry="2" />
<text  x="1124.23" y="655.5" ></text>
</g>
<g >
<title>thread_start (181 samples, 3.79%)</title><rect x="1020.5" y="1061" width="44.8" height="15.0" fill="rgb(213,198,0)" rx="2" ry="2" />
<text  x="1023.55" y="1071.5" >thre..</text>
</g>
<g >
<title>extend_plane (1 samples, 0.02%)</title><rect x="813.5" y="725" width="0.2" height="15.0" fill="rgb(250,99,34)" rx="2" ry="2" />
<text  x="816.49" y="735.5" ></text>
</g>
<g >
<title>malloc_zone_memalign (1 samples, 0.02%)</title><rect x="253.7" y="501" width="0.2" height="15.0" fill="rgb(217,80,9)" rx="2" ry="2" />
<text  x="256.67" y="511.5" ></text>
</g>
<g >
<title>blink::V8ScriptRunner::CallFunction(v8::Local&lt;v8::Function&gt;, blink::ExecutionContext*, v8::Local&lt;v8::Value&gt;, int, v8::Local&lt;v8::Value&gt;*, v8::Isolate*) (5 samples, 0.10%)</title><rect x="16.9" y="565" width="1.3" height="15.0" fill="rgb(253,95,2)" rx="2" ry="2" />
<text  x="19.93" y="575.5" ></text>
</g>
<g >
<title>rtc::SystemTimeNanos() (1 samples, 0.02%)</title><rect x="551.5" y="789" width="0.3" height="15.0" fill="rgb(247,144,11)" rx="2" ry="2" />
<text  x="554.51" y="799.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::GetSizeEstimateImpl(base::allocator::AllocatorDispatch const*, void*, void*) (1 samples, 0.02%)</title><rect x="295.0" y="741" width="0.2" height="15.0" fill="rgb(239,54,54)" rx="2" ry="2" />
<text  x="297.98" y="751.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="249.7" y="469" width="0.3" height="15.0" fill="rgb(212,189,31)" rx="2" ry="2" />
<text  x="252.71" y="479.5" ></text>
</g>
<g >
<title>media::VideoRendererAlgorithm::UpdateFrameStatistics() (6 samples, 0.13%)</title><rect x="1044.3" y="613" width="1.5" height="15.0" fill="rgb(209,8,43)" rx="2" ry="2" />
<text  x="1047.29" y="623.5" ></text>
</g>
<g >
<title>blink::HeapObjectHeader::FromInnerAddress(void const*) (1 samples, 0.02%)</title><rect x="22.1" y="533" width="0.3" height="15.0" fill="rgb(227,129,26)" rx="2" ry="2" />
<text  x="25.12" y="543.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="1145.0" y="933" width="0.2" height="15.0" fill="rgb(251,229,30)" rx="2" ry="2" />
<text  x="1147.98" y="943.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3 (1 samples, 0.02%)</title><rect x="395.9" y="661" width="0.3" height="15.0" fill="rgb(242,205,3)" rx="2" ry="2" />
<text  x="398.91" y="671.5" ></text>
</g>
<g >
<title>base::debug::StackTrace::StackTrace() (1 samples, 0.02%)</title><rect x="713.8" y="901" width="0.2" height="15.0" fill="rgb(226,153,51)" rx="2" ry="2" />
<text  x="716.79" y="911.5" ></text>
</g>
<g >
<title>mojo::Message::Message(unsigned int, unsigned int, unsigned long, unsigned long, std::__Cr::vector&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt;, std::__Cr::allocator&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt; &gt; &gt;*) (1 samples, 0.02%)</title><rect x="168.1" y="789" width="0.2" height="15.0" fill="rgb(246,216,37)" rx="2" ry="2" />
<text  x="171.08" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="487.9" y="597" width="0.3" height="15.0" fill="rgb(237,92,11)" rx="2" ry="2" />
<text  x="490.94" y="607.5" ></text>
</g>
<g >
<title>cc::PropertyTrees::operator=(cc::PropertyTrees const&amp;) (2 samples, 0.04%)</title><rect x="1070.3" y="789" width="0.5" height="15.0" fill="rgb(250,168,30)" rx="2" ry="2" />
<text  x="1073.27" y="799.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::MoveHoleUpAndFillWithElement(unsigned long, base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&amp;&amp;) (1 samples, 0.02%)</title><rect x="85.0" y="757" width="0.2" height="15.0" fill="rgb(211,14,3)" rx="2" ry="2" />
<text  x="87.96" y="767.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="140.4" y="309" width="0.2" height="15.0" fill="rgb(225,122,37)" rx="2" ry="2" />
<text  x="143.37" y="319.5" ></text>
</g>
<g >
<title>quant_band (1 samples, 0.02%)</title><rect x="535.9" y="709" width="0.3" height="15.0" fill="rgb(223,194,16)" rx="2" ry="2" />
<text  x="538.93" y="719.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (jingle_glue::JingleThreadWrapper::*)(int), base::WeakPtr&lt;jingle_glue::JingleThreadWrapper&gt;, int&gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (278 samples, 5.83%)</title><rect x="228.7" y="869" width="68.8" height="15.0" fill="rgb(214,190,14)" rx="2" ry="2" />
<text  x="231.68" y="879.5" >base::i..</text>
</g>
<g >
<title>mojo::core::WatcherDispatcher::NotifyHandleState(mojo::core::Dispatcher*, mojo::core::HandleSignalsState const&amp;) (1 samples, 0.02%)</title><rect x="141.6" y="613" width="0.3" height="15.0" fill="rgb(227,220,14)" rx="2" ry="2" />
<text  x="144.61" y="623.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (1 samples, 0.02%)</title><rect x="943.9" y="693" width="0.2" height="15.0" fill="rgb(215,134,8)" rx="2" ry="2" />
<text  x="946.86" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (5 samples, 0.10%)</title><rect x="287.1" y="661" width="1.2" height="15.0" fill="rgb(242,129,52)" rx="2" ry="2" />
<text  x="290.06" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::NotifyDidProcessTask(base::PendingTask const&amp;) (1 samples, 0.02%)</title><rect x="1073.5" y="869" width="0.2" height="15.0" fill="rgb(237,87,13)" rx="2" ry="2" />
<text  x="1076.48" y="879.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="299.2" y="821" width="0.2" height="15.0" fill="rgb(223,173,10)" rx="2" ry="2" />
<text  x="302.19" y="831.5" ></text>
</g>
<g >
<title>vp8_loop_filter_horizontal_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="679.2" y="693" width="0.2" height="15.0" fill="rgb(253,102,39)" rx="2" ry="2" />
<text  x="682.16" y="703.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (24 samples, 0.50%)</title><rect x="701.2" y="933" width="5.9" height="15.0" fill="rgb(206,27,11)" rx="2" ry="2" />
<text  x="704.18" y="943.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (4 samples, 0.08%)</title><rect x="716.8" y="837" width="1.0" height="15.0" fill="rgb(247,63,9)" rx="2" ry="2" />
<text  x="719.76" y="847.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="958.9" y="709" width="0.5" height="15.0" fill="rgb(232,200,1)" rx="2" ry="2" />
<text  x="961.95" y="719.5" ></text>
</g>
<g >
<title>_pthread_body (36 samples, 0.75%)</title><rect x="1065.3" y="1029" width="8.9" height="15.0" fill="rgb(206,8,38)" rx="2" ry="2" />
<text  x="1068.32" y="1039.5" ></text>
</g>
<g >
<title>webrtc::DefaultTemporalLayers::NextFrameConfig(unsigned long, unsigned int) (1 samples, 0.02%)</title><rect x="652.4" y="773" width="0.3" height="15.0" fill="rgb(227,161,51)" rx="2" ry="2" />
<text  x="655.44" y="783.5" ></text>
</g>
<g >
<title>mojo::core::RequestContext::~RequestContext() (1 samples, 0.02%)</title><rect x="142.8" y="629" width="0.3" height="15.0" fill="rgb(243,226,6)" rx="2" ry="2" />
<text  x="145.84" y="639.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.02%)</title><rect x="276.7" y="533" width="0.2" height="15.0" fill="rgb(235,36,16)" rx="2" ry="2" />
<text  x="279.68" y="543.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::WriteChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (2 samples, 0.04%)</title><rect x="1041.1" y="437" width="0.5" height="15.0" fill="rgb(224,154,45)" rx="2" ry="2" />
<text  x="1044.08" y="447.5" ></text>
</g>
<g >
<title>mojo::core::HandleTable::GetDispatcher(unsigned int) const (1 samples, 0.02%)</title><rect x="1059.6" y="741" width="0.3" height="15.0" fill="rgb(244,190,33)" rx="2" ry="2" />
<text  x="1062.63" y="751.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bh_y_sse2 (1 samples, 0.02%)</title><rect x="458.5" y="709" width="0.2" height="15.0" fill="rgb(234,128,22)" rx="2" ry="2" />
<text  x="461.50" y="719.5" ></text>
</g>
<g >
<title>__psynch_cvwait (2 samples, 0.04%)</title><rect x="65.7" y="949" width="0.5" height="15.0" fill="rgb(229,209,43)" rx="2" ry="2" />
<text  x="68.66" y="959.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="575.3" y="901" width="0.2" height="15.0" fill="rgb(253,89,27)" rx="2" ry="2" />
<text  x="578.26" y="911.5" ></text>
</g>
<g >
<title>media::AudioDeviceThread::ThreadMain  0x65942f (150 samples, 3.14%)</title><rect x="1102.9" y="1077" width="37.1" height="15.0" fill="rgb(241,33,50)" rx="2" ry="2" />
<text  x="1105.92" y="1087.5" >med..</text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (1 samples, 0.02%)</title><rect x="758.6" y="661" width="0.2" height="15.0" fill="rgb(231,9,53)" rx="2" ry="2" />
<text  x="761.57" y="671.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (5 samples, 0.10%)</title><rect x="1085.4" y="693" width="1.2" height="15.0" fill="rgb(249,12,16)" rx="2" ry="2" />
<text  x="1088.36" y="703.5" ></text>
</g>
<g >
<title>cricket::SctpTransport::UsrSctpWrapper::OnSctpOutboundPacket(void*, void*, unsigned long, unsigned char, unsigned char) (3 samples, 0.06%)</title><rect x="53.5" y="933" width="0.8" height="15.0" fill="rgb(223,184,10)" rx="2" ry="2" />
<text  x="56.54" y="943.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::SendChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (1 samples, 0.02%)</title><rect x="1072.5" y="373" width="0.2" height="15.0" fill="rgb(251,65,25)" rx="2" ry="2" />
<text  x="1075.49" y="383.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Run(void*) (95 samples, 1.99%)</title><rect x="1140.0" y="997" width="23.5" height="15.0" fill="rgb(228,135,46)" rx="2" ry="2" />
<text  x="1143.03" y="1007.5" >w..</text>
</g>
<g >
<title>content::(anonymous namespace)::IpcPacketSocket::OnSendComplete(network::P2PSendPacketMetrics const&amp;) (3 samples, 0.06%)</title><rect x="227.7" y="693" width="0.7" height="15.0" fill="rgb(236,86,34)" rx="2" ry="2" />
<text  x="230.69" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::TimeDomain::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (1 samples, 0.02%)</title><rect x="1074.0" y="837" width="0.2" height="15.0" fill="rgb(223,222,1)" rx="2" ry="2" />
<text  x="1076.98" y="847.5" ></text>
</g>
<g >
<title>cricket::P2PTransportChannel::OnSentPacket(rtc::SentPacket const&amp;) (18 samples, 0.38%)</title><rect x="314.8" y="613" width="4.4" height="15.0" fill="rgb(251,169,25)" rx="2" ry="2" />
<text  x="317.77" y="623.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::GetEncodedPartitions(webrtc::VideoFrame const&amp;, bool) (4 samples, 0.08%)</title><rect x="486.2" y="789" width="1.0" height="15.0" fill="rgb(234,122,38)" rx="2" ry="2" />
<text  x="489.21" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::UpdateDelayedWakeUpImpl(base::sequence_manager::LazyNow*, base::Optional&lt;base::sequence_manager::internal::DelayedWakeUp&gt;) (1 samples, 0.02%)</title><rect x="77.0" y="741" width="0.3" height="15.0" fill="rgb(228,34,3)" rx="2" ry="2" />
<text  x="80.04" y="751.5" ></text>
</g>
<g >
<title>blink::EventTarget::FireEventListeners(blink::Event&amp;, blink::EventTargetData*, blink::HeapVector&lt;blink::RegisteredEventListener, 1u&gt;&amp;) (1 samples, 0.02%)</title><rect x="19.9" y="597" width="0.2" height="15.0" fill="rgb(214,182,38)" rx="2" ry="2" />
<text  x="22.90" y="607.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="577.5" y="789" width="0.2" height="15.0" fill="rgb(219,54,14)" rx="2" ry="2" />
<text  x="580.49" y="799.5" ></text>
</g>
<g >
<title>webrtc::RealTimeClock::TimeInMicroseconds() (1 samples, 0.02%)</title><rect x="1163.3" y="949" width="0.2" height="15.0" fill="rgb(247,89,53)" rx="2" ry="2" />
<text  x="1166.28" y="959.5" ></text>
</g>
<g >
<title>mojo::core::ports::UserMessageEvent::~UserMessageEvent() (1 samples, 0.02%)</title><rect x="141.1" y="581" width="0.3" height="15.0" fill="rgb(235,14,51)" rx="2" ry="2" />
<text  x="144.11" y="591.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="312.1" y="549" width="0.2" height="15.0" fill="rgb(218,149,49)" rx="2" ry="2" />
<text  x="315.05" y="559.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="138.1" y="517" width="0.5" height="15.0" fill="rgb(242,26,51)" rx="2" ry="2" />
<text  x="141.14" y="527.5" ></text>
</g>
<g >
<title>vp8_get_frame (25 samples, 0.52%)</title><rect x="488.7" y="773" width="6.2" height="15.0" fill="rgb(218,211,51)" rx="2" ry="2" />
<text  x="491.68" y="783.5" ></text>
</g>
<g >
<title>blink::EventDispatcher::DispatchEvent(blink::Node&amp;, blink::Event&amp;) (10 samples, 0.21%)</title><rect x="20.4" y="661" width="2.5" height="15.0" fill="rgb(252,72,27)" rx="2" ry="2" />
<text  x="23.39" y="671.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="207.7" y="821" width="0.5" height="15.0" fill="rgb(248,191,41)" rx="2" ry="2" />
<text  x="210.66" y="831.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*, gpu::SyncToken const&amp;), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;, void (gpu::SyncToken const&amp;)&gt;::RunOnce(base::internal::BindStateBase*, gpu::SyncToken const&amp;) (4 samples, 0.08%)</title><rect x="1052.7" y="533" width="1.0" height="15.0" fill="rgb(242,154,8)" rx="2" ry="2" />
<text  x="1055.70" y="543.5" ></text>
</g>
<g >
<title>_pthread_start (69 samples, 1.45%)</title><rect x="70.1" y="1045" width="17.1" height="15.0" fill="rgb(217,219,29)" rx="2" ry="2" />
<text  x="73.11" y="1055.5" ></text>
</g>
<g >
<title>thread_start (670 samples, 14.05%)</title><rect x="707.4" y="1061" width="165.7" height="15.0" fill="rgb(232,224,1)" rx="2" ry="2" />
<text  x="710.36" y="1071.5" >thread_start</text>
</g>
<g >
<title>mojo::core::WatcherSet::NotifyState(mojo::core::HandleSignalsState const&amp;) (1 samples, 0.02%)</title><rect x="141.6" y="629" width="0.3" height="15.0" fill="rgb(247,142,8)" rx="2" ry="2" />
<text  x="144.61" y="639.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="357.3" y="773" width="0.3" height="15.0" fill="rgb(220,163,15)" rx="2" ry="2" />
<text  x="360.32" y="783.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::BarrierInfo::Run() (1 samples, 0.02%)</title><rect x="64.7" y="901" width="0.2" height="15.0" fill="rgb(242,26,4)" rx="2" ry="2" />
<text  x="67.67" y="911.5" ></text>
</g>
<g >
<title>decltype(auto) base::internal::BindImpl&lt;base::OnceCallback, void (*)(scoped_refptr&lt;rtc::RefCountInterface&gt; const&amp;), scoped_refptr&lt;webrtc::VideoFrameBuffer&gt; &gt;(void (*&amp;&amp;)(scoped_refptr&lt;rtc::RefCountInterface&gt; const&amp;), scoped_refptr&lt;webrtc::VideoFrameBuffer&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="993.3" y="661" width="0.3" height="15.0" fill="rgb(243,187,49)" rx="2" ry="2" />
<text  x="996.33" y="671.5" ></text>
</g>
<g >
<title>base::internal::WeakPtrBase::WeakPtrBase(base::internal::WeakReference const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="34.0" y="645" width="0.2" height="15.0" fill="rgb(223,72,48)" rx="2" ry="2" />
<text  x="37.00" y="655.5" ></text>
</g>
<g >
<title>vp8_denoiser_filter_sse2 (5 samples, 0.10%)</title><rect x="603.5" y="661" width="1.2" height="15.0" fill="rgb(221,21,15)" rx="2" ry="2" />
<text  x="606.46" y="671.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetIOAllowed(bool) (5 samples, 0.10%)</title><rect x="713.5" y="917" width="1.3" height="15.0" fill="rgb(232,106,34)" rx="2" ry="2" />
<text  x="716.55" y="927.5" ></text>
</g>
<g >
<title>szone_size (1 samples, 0.02%)</title><rect x="882.8" y="789" width="0.2" height="15.0" fill="rgb(241,73,28)" rx="2" ry="2" />
<text  x="885.75" y="799.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="19.9" y="53" width="0.2" height="15.0" fill="rgb(217,29,14)" rx="2" ry="2" />
<text  x="22.90" y="63.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="192.3" y="869" width="0.3" height="15.0" fill="rgb(213,44,50)" rx="2" ry="2" />
<text  x="195.32" y="879.5" ></text>
</g>
<g >
<title>silk_resampler (1 samples, 0.02%)</title><rect x="1003.7" y="725" width="0.3" height="15.0" fill="rgb(237,96,22)" rx="2" ry="2" />
<text  x="1006.72" y="735.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="652.2" y="645" width="0.2" height="15.0" fill="rgb(243,202,8)" rx="2" ry="2" />
<text  x="655.20" y="655.5" ></text>
</g>
<g >
<title>mojo::core::RequestContext::current() (1 samples, 0.02%)</title><rect x="109.0" y="741" width="0.2" height="15.0" fill="rgb(249,98,17)" rx="2" ry="2" />
<text  x="111.95" y="751.5" ></text>
</g>
<g >
<title>content::VideoCaptureImpl::DidFinishConsumingFrame(media::VideoFrameMetadata const*, base::OnceCallback&lt;void (double)&gt;) (1 samples, 0.02%)</title><rect x="487.9" y="677" width="0.3" height="15.0" fill="rgb(219,74,16)" rx="2" ry="2" />
<text  x="490.94" y="687.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="274.0" y="693" width="0.2" height="15.0" fill="rgb(233,216,24)" rx="2" ry="2" />
<text  x="276.95" y="703.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="1006.9" y="933" width="0.3" height="15.0" fill="rgb(251,28,37)" rx="2" ry="2" />
<text  x="1009.94" y="943.5" ></text>
</g>
<g >
<title>v8_inspector::V8Console::Log(v8::debug::ConsoleCallArguments const&amp;, v8::debug::ConsoleContext const&amp;) (2 samples, 0.04%)</title><rect x="17.7" y="389" width="0.5" height="15.0" fill="rgb(217,39,32)" rx="2" ry="2" />
<text  x="20.67" y="399.5" ></text>
</g>
<g >
<title>cricket::WebRtcVideoChannel::WebRtcVideoReceiveStream::OnFrame(webrtc::VideoFrame const&amp;) (2 samples, 0.04%)</title><rect x="533.0" y="709" width="0.5" height="15.0" fill="rgb(234,63,0)" rx="2" ry="2" />
<text  x="535.96" y="719.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1142.5" y="869" width="0.3" height="15.0" fill="rgb(233,135,39)" rx="2" ry="2" />
<text  x="1145.50" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) (597 samples, 12.52%)</title><rect x="214.3" y="949" width="147.7" height="15.0" fill="rgb(241,223,44)" rx="2" ry="2" />
<text  x="217.34" y="959.5" >base::sequence_man..</text>
</g>
<g >
<title>unsigned long std::__Cr::__tree&lt;webrtc::RtpPacketHistory::StoredPacket*, webrtc::RtpPacketHistory::MoreUseful, std::__Cr::allocator&lt;webrtc::RtpPacketHistory::StoredPacket*&gt; &gt;::__erase_unique&lt;webrtc::RtpPacketHistory::StoredPacket*&gt;(webrtc::RtpPacketHistory::StoredPacket* const&amp;) (1 samples, 0.02%)</title><rect x="274.7" y="629" width="0.2" height="15.0" fill="rgb(225,21,32)" rx="2" ry="2" />
<text  x="277.70" y="639.5" ></text>
</g>
<g >
<title>quant_band (7 samples, 0.15%)</title><rect x="1119.5" y="613" width="1.7" height="15.0" fill="rgb(241,126,10)" rx="2" ry="2" />
<text  x="1122.50" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnTaskPushedToEmptyQueue(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.02%)</title><rect x="83.2" y="773" width="0.3" height="15.0" fill="rgb(214,188,29)" rx="2" ry="2" />
<text  x="86.22" y="783.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::MachMessageSendLocked(mach_msg_header_t*) (2 samples, 0.04%)</title><rect x="1041.1" y="389" width="0.5" height="15.0" fill="rgb(234,15,36)" rx="2" ry="2" />
<text  x="1044.08" y="399.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::OnSystemIdle() (1 samples, 0.02%)</title><rect x="13.2" y="725" width="0.3" height="15.0" fill="rgb(244,160,23)" rx="2" ry="2" />
<text  x="16.22" y="735.5" ></text>
</g>
<g >
<title>malloc_zone_realloc (1 samples, 0.02%)</title><rect x="961.2" y="725" width="0.2" height="15.0" fill="rgb(254,103,27)" rx="2" ry="2" />
<text  x="964.17" y="735.5" ></text>
</g>
<g >
<title>backtrace (1 samples, 0.02%)</title><rect x="713.8" y="869" width="0.2" height="15.0" fill="rgb(227,93,14)" rx="2" ry="2" />
<text  x="716.79" y="879.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="141.9" y="597" width="0.2" height="15.0" fill="rgb(215,186,11)" rx="2" ry="2" />
<text  x="144.85" y="607.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (2 samples, 0.04%)</title><rect x="826.1" y="709" width="0.5" height="15.0" fill="rgb(232,19,22)" rx="2" ry="2" />
<text  x="829.10" y="719.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (1 samples, 0.02%)</title><rect x="368.7" y="901" width="0.2" height="15.0" fill="rgb(246,14,21)" rx="2" ry="2" />
<text  x="371.70" y="911.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (4 samples, 0.08%)</title><rect x="258.6" y="581" width="1.0" height="15.0" fill="rgb(241,78,2)" rx="2" ry="2" />
<text  x="261.62" y="591.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="206.2" y="773" width="0.2" height="15.0" fill="rgb(253,76,14)" rx="2" ry="2" />
<text  x="209.17" y="783.5" ></text>
</g>
<g >
<title>cricket::UDPPort::HandleIncomingPacket(rtc::AsyncPacketSocket*, char const*, unsigned long, rtc::SocketAddress const&amp;, long long) (28 samples, 0.59%)</title><rect x="304.9" y="629" width="6.9" height="15.0" fill="rgb(239,74,14)" rx="2" ry="2" />
<text  x="307.88" y="639.5" ></text>
</g>
<g >
<title>mojo::core::WatcherSet::NotifyState(mojo::core::HandleSignalsState const&amp;) (4 samples, 0.08%)</title><rect x="321.7" y="725" width="1.0" height="15.0" fill="rgb(233,34,10)" rx="2" ry="2" />
<text  x="324.70" y="735.5" ></text>
</g>
<g >
<title>base::mac::ScopedNSAutoreleasePool::ScopedNSAutoreleasePool() (4 samples, 0.08%)</title><rect x="871.1" y="965" width="1.0" height="15.0" fill="rgb(238,177,3)" rx="2" ry="2" />
<text  x="874.13" y="975.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="195.8" y="837" width="0.2" height="15.0" fill="rgb(240,66,42)" rx="2" ry="2" />
<text  x="198.78" y="847.5" ></text>
</g>
<g >
<title>vp8_post_proc_frame (25 samples, 0.52%)</title><rect x="488.7" y="741" width="6.2" height="15.0" fill="rgb(219,77,48)" rx="2" ry="2" />
<text  x="491.68" y="751.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessageInternal(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (1 samples, 0.02%)</title><rect x="1072.5" y="421" width="0.2" height="15.0" fill="rgb(254,148,11)" rx="2" ry="2" />
<text  x="1075.49" y="431.5" ></text>
</g>
<g >
<title>opus_decode (39 samples, 0.82%)</title><rect x="1115.3" y="693" width="9.6" height="15.0" fill="rgb(218,124,49)" rx="2" ry="2" />
<text  x="1118.29" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (6 samples, 0.13%)</title><rect x="276.2" y="661" width="1.5" height="15.0" fill="rgb(225,167,51)" rx="2" ry="2" />
<text  x="279.18" y="671.5" ></text>
</g>
<g >
<title>base::internal::WorkerThreadStack::Pop() (1 samples, 0.02%)</title><rect x="283.8" y="597" width="0.3" height="15.0" fill="rgb(224,22,51)" rx="2" ry="2" />
<text  x="286.85" y="607.5" ></text>
</g>
<g >
<title>base::PendingTask::PendingTask(base::PendingTask&amp;&amp;) (1 samples, 0.02%)</title><rect x="75.3" y="837" width="0.3" height="15.0" fill="rgb(206,56,9)" rx="2" ry="2" />
<text  x="78.31" y="847.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="301.2" y="757" width="0.2" height="15.0" fill="rgb(207,212,36)" rx="2" ry="2" />
<text  x="304.17" y="767.5" ></text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::RunWorkSource(void*) (133 samples, 2.79%)</title><rect x="14.0" y="789" width="32.9" height="15.0" fill="rgb(220,83,11)" rx="2" ry="2" />
<text  x="16.96" y="799.5" >ba..</text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1004.2" y="757" width="0.3" height="15.0" fill="rgb(210,92,1)" rx="2" ry="2" />
<text  x="1007.22" y="767.5" ></text>
</g>
<g >
<title>read (1 samples, 0.02%)</title><rect x="1096.0" y="965" width="0.2" height="15.0" fill="rgb(221,215,46)" rx="2" ry="2" />
<text  x="1099.00" y="975.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (blink::MediaStreamVideoTrack::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), void&gt;::Invoke&lt;void (blink::MediaStreamVideoTrack::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), scoped_refptr&lt;blink::MediaStreamVideoTrack::FrameDeliverer&gt; const&amp;, scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks&gt;(void (blink::MediaStreamVideoTrack::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), scoped_refptr&lt;blink::MediaStreamVideoTrack::FrameDeliverer&gt; const&amp;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, base::TimeTicks&amp;&amp;) (4 samples, 0.08%)</title><rect x="176.0" y="773" width="1.0" height="15.0" fill="rgb(220,124,14)" rx="2" ry="2" />
<text  x="178.99" y="783.5" ></text>
</g>
<g >
<title>blink::LayoutObject::DebugName() const (1 samples, 0.02%)</title><rect x="28.1" y="293" width="0.2" height="15.0" fill="rgb(208,174,26)" rx="2" ry="2" />
<text  x="31.06" y="303.5" ></text>
</g>
<g >
<title>quant_partition (1 samples, 0.02%)</title><rect x="843.2" y="677" width="0.2" height="15.0" fill="rgb(248,53,42)" rx="2" ry="2" />
<text  x="846.17" y="687.5" ></text>
</g>
<g >
<title>base::Thread::ThreadMain() (68 samples, 1.43%)</title><rect x="197.0" y="997" width="16.8" height="15.0" fill="rgb(242,76,19)" rx="2" ry="2" />
<text  x="200.02" y="1007.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (504 samples, 10.57%)</title><rect x="881.8" y="901" width="124.6" height="15.0" fill="rgb(250,109,10)" rx="2" ry="2" />
<text  x="884.77" y="911.5" >base::TaskAnnot..</text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::VideoStreamEncoder::OnFrame(webrtc::VideoFrame const&amp;)::$_9&gt;::Run() (429 samples, 8.99%)</title><rect x="381.6" y="853" width="106.1" height="15.0" fill="rgb(224,68,46)" rx="2" ry="2" />
<text  x="384.56" y="863.5" >webrtc::webr..</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="299.2" y="805" width="0.2" height="15.0" fill="rgb(231,51,23)" rx="2" ry="2" />
<text  x="302.19" y="815.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (3 samples, 0.06%)</title><rect x="396.2" y="661" width="0.7" height="15.0" fill="rgb(210,68,17)" rx="2" ry="2" />
<text  x="399.16" y="671.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (1 samples, 0.02%)</title><rect x="486.7" y="597" width="0.2" height="15.0" fill="rgb(233,219,12)" rx="2" ry="2" />
<text  x="489.70" y="607.5" ></text>
</g>
<g >
<title>webrtc::RtpTransport::DemuxPacket(rtc::CopyOnWriteBuffer, long long) (9 samples, 0.19%)</title><rect x="308.6" y="533" width="2.2" height="15.0" fill="rgb(234,221,25)" rx="2" ry="2" />
<text  x="311.59" y="543.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="413.7" y="645" width="0.3" height="15.0" fill="rgb(227,27,35)" rx="2" ry="2" />
<text  x="416.72" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="209.6" y="837" width="0.3" height="15.0" fill="rgb(249,74,37)" rx="2" ry="2" />
<text  x="212.64" y="847.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3.vp8_filter_block1d8_v4_ssse3_loop (2 samples, 0.04%)</title><rect x="891.7" y="645" width="0.5" height="15.0" fill="rgb(220,13,1)" rx="2" ry="2" />
<text  x="894.66" y="655.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (4 samples, 0.08%)</title><rect x="371.2" y="853" width="1.0" height="15.0" fill="rgb(236,156,17)" rx="2" ry="2" />
<text  x="374.17" y="863.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_y_sse2 (2 samples, 0.04%)</title><rect x="988.1" y="693" width="0.5" height="15.0" fill="rgb(214,49,17)" rx="2" ry="2" />
<text  x="991.14" y="703.5" ></text>
</g>
<g >
<title>copy_and_extend_plane (5 samples, 0.10%)</title><rect x="814.0" y="709" width="1.2" height="15.0" fill="rgb(230,171,44)" rx="2" ry="2" />
<text  x="816.98" y="719.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::OnMachMessageReceived(unsigned int) (204 samples, 4.28%)</title><rect x="94.9" y="885" width="50.4" height="15.0" fill="rgb(248,184,45)" rx="2" ry="2" />
<text  x="97.85" y="895.5" >mojo:..</text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="346.4" y="773" width="0.3" height="15.0" fill="rgb(245,98,27)" rx="2" ry="2" />
<text  x="349.44" y="783.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (2 samples, 0.04%)</title><rect x="27.8" y="373" width="0.5" height="15.0" fill="rgb(253,96,23)" rx="2" ry="2" />
<text  x="30.81" y="383.5" ></text>
</g>
<g >
<title>scoped_refptr&lt;base::internal::BindStateBase&gt; base::AdoptRef&lt;base::internal::BindStateBase&gt;(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="1152.6" y="837" width="0.3" height="15.0" fill="rgb(208,47,3)" rx="2" ry="2" />
<text  x="1155.65" y="847.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelSend::SendData(webrtc::AudioFrameType, unsigned char, unsigned int, unsigned char const*, unsigned long) (6 samples, 0.13%)</title><rect x="690.5" y="821" width="1.5" height="15.0" fill="rgb(209,186,40)" rx="2" ry="2" />
<text  x="693.54" y="831.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (20 samples, 0.42%)</title><rect x="126.8" y="741" width="4.9" height="15.0" fill="rgb(254,47,25)" rx="2" ry="2" />
<text  x="129.76" y="751.5" ></text>
</g>
<g >
<title>WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::String, char const*&gt;, WTF::String&gt;, char const*&gt;, WTF::String&gt;::operator WTF::String() const (1 samples, 0.02%)</title><rect x="20.6" y="517" width="0.3" height="15.0" fill="rgb(212,193,22)" rx="2" ry="2" />
<text  x="23.64" y="527.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (29 samples, 0.61%)</title><rect x="39.4" y="693" width="7.2" height="15.0" fill="rgb(229,90,23)" rx="2" ry="2" />
<text  x="42.44" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::GetFrontTaskEnqueueOrder(base::sequence_manager::internal::EnqueueOrder*) const (1 samples, 0.02%)</title><rect x="185.6" y="773" width="0.3" height="15.0" fill="rgb(221,184,45)" rx="2" ry="2" />
<text  x="188.64" y="783.5" ></text>
</g>
<g >
<title>silk_warped_autocorrelation_FLP (2 samples, 0.04%)</title><rect x="690.0" y="693" width="0.5" height="15.0" fill="rgb(223,39,43)" rx="2" ry="2" />
<text  x="693.05" y="703.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="211.6" y="805" width="0.3" height="15.0" fill="rgb(205,31,46)" rx="2" ry="2" />
<text  x="214.61" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeImmediateIncomingQueueTasks() (3 samples, 0.06%)</title><rect x="341.2" y="805" width="0.8" height="15.0" fill="rgb(218,111,12)" rx="2" ry="2" />
<text  x="344.24" y="815.5" ></text>
</g>
<g >
<title>webrtc::VCMCodecTimer::AddTiming(long long, long long) (1 samples, 0.02%)</title><rect x="532.7" y="725" width="0.3" height="15.0" fill="rgb(227,118,44)" rx="2" ry="2" />
<text  x="535.71" y="735.5" ></text>
</g>
<g >
<title>cricket::Connection::OnReadPacket(char const*, unsigned long, long long) (27 samples, 0.57%)</title><rect x="304.9" y="613" width="6.7" height="15.0" fill="rgb(232,95,28)" rx="2" ry="2" />
<text  x="307.88" y="623.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="632.7" y="709" width="0.2" height="15.0" fill="rgb(233,129,3)" rx="2" ry="2" />
<text  x="635.65" y="719.5" ></text>
</g>
<g >
<title>default_zone_malloc (1 samples, 0.02%)</title><rect x="82.0" y="757" width="0.2" height="15.0" fill="rgb(254,150,11)" rx="2" ry="2" />
<text  x="84.99" y="767.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="791.2" y="677" width="0.3" height="15.0" fill="rgb(244,199,18)" rx="2" ry="2" />
<text  x="794.22" y="687.5" ></text>
</g>
<g >
<title>IPC::ParamTraits&lt;net::IPEndPoint&gt;::Write(base::Pickle*, net::IPEndPoint const&amp;) (7 samples, 0.15%)</title><rect x="242.3" y="629" width="1.7" height="15.0" fill="rgb(244,226,30)" rx="2" ry="2" />
<text  x="245.29" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (2 samples, 0.04%)</title><rect x="1073.7" y="885" width="0.5" height="15.0" fill="rgb(245,48,31)" rx="2" ry="2" />
<text  x="1076.73" y="895.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="651.5" y="709" width="0.2" height="15.0" fill="rgb(235,203,15)" rx="2" ry="2" />
<text  x="654.45" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (5 samples, 0.10%)</title><rect x="187.9" y="837" width="1.2" height="15.0" fill="rgb(249,13,2)" rx="2" ry="2" />
<text  x="190.87" y="847.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) (89 samples, 1.87%)</title><rect x="1031.7" y="709" width="22.0" height="15.0" fill="rgb(246,77,36)" rx="2" ry="2" />
<text  x="1034.68" y="719.5" >m..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (4 samples, 0.08%)</title><rect x="1052.7" y="485" width="1.0" height="15.0" fill="rgb(212,65,53)" rx="2" ry="2" />
<text  x="1055.70" y="495.5" ></text>
</g>
<g >
<title>blink::PaintLayer::RenderingContextRoot() (1 samples, 0.02%)</title><rect x="25.8" y="373" width="0.3" height="15.0" fill="rgb(237,210,25)" rx="2" ry="2" />
<text  x="28.83" y="383.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoSomeWork() (54 samples, 1.13%)</title><rect x="73.6" y="901" width="13.3" height="15.0" fill="rgb(207,127,54)" rx="2" ry="2" />
<text  x="76.58" y="911.5" ></text>
</g>
<g >
<title>blink::WebRtcAudioRenderer::SourceCallback(int, media::AudioBus*) (126 samples, 2.64%)</title><rect x="1108.1" y="949" width="31.2" height="15.0" fill="rgb(219,44,39)" rx="2" ry="2" />
<text  x="1111.12" y="959.5" >bl..</text>
</g>
<g >
<title>mach_msg (3 samples, 0.06%)</title><rect x="166.6" y="517" width="0.7" height="15.0" fill="rgb(234,26,2)" rx="2" ry="2" />
<text  x="169.59" y="527.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TraceQueueSize() const (1 samples, 0.02%)</title><rect x="309.1" y="373" width="0.2" height="15.0" fill="rgb(223,66,39)" rx="2" ry="2" />
<text  x="312.08" y="383.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.02%)</title><rect x="327.9" y="757" width="0.2" height="15.0" fill="rgb(213,210,42)" rx="2" ry="2" />
<text  x="330.88" y="767.5" ></text>
</g>
<g >
<title>webrtc::AudioVector::Empty() const (1 samples, 0.02%)</title><rect x="1128.2" y="773" width="0.2" height="15.0" fill="rgb(247,71,16)" rx="2" ry="2" />
<text  x="1131.16" y="783.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (2 samples, 0.04%)</title><rect x="913.2" y="645" width="0.5" height="15.0" fill="rgb(230,210,53)" rx="2" ry="2" />
<text  x="916.18" y="655.5" ></text>
</g>
<g >
<title>base::  0x644a08 (12 samples, 0.25%)</title><rect x="62.7" y="1077" width="3.0" height="15.0" fill="rgb(213,213,38)" rx="2" ry="2" />
<text  x="65.69" y="1087.5" ></text>
</g>
<g >
<title>set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="300.9" y="661" width="0.3" height="15.0" fill="rgb(248,174,49)" rx="2" ry="2" />
<text  x="303.92" y="671.5" ></text>
</g>
<g >
<title>exp_rotation (1 samples, 0.02%)</title><rect x="1121.0" y="549" width="0.2" height="15.0" fill="rgb(251,210,22)" rx="2" ry="2" />
<text  x="1123.98" y="559.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::voe::(anonymous namespace)::ChannelSend::ProcessAndEncodeAudio(std::__Cr::unique_ptr&lt;webrtc::AudioFrame, std::__Cr::default_delete&lt;webrtc::AudioFrame&gt; &gt;)::ProcessAndEncodeAudio&gt;::~ClosureTask() (1 samples, 0.02%)</title><rect x="1005.2" y="853" width="0.3" height="15.0" fill="rgb(236,100,5)" rx="2" ry="2" />
<text  x="1008.21" y="863.5" ></text>
</g>
<g >
<title>check_dot_artifact_candidate (1 samples, 0.02%)</title><rect x="596.8" y="677" width="0.2" height="15.0" fill="rgb(246,121,40)" rx="2" ry="2" />
<text  x="599.78" y="687.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (3 samples, 0.06%)</title><rect x="298.2" y="709" width="0.7" height="15.0" fill="rgb(238,150,28)" rx="2" ry="2" />
<text  x="301.20" y="719.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::Parse(rtc::CopyOnWriteBuffer) (1 samples, 0.02%)</title><rect x="227.0" y="565" width="0.2" height="15.0" fill="rgb(249,85,23)" rx="2" ry="2" />
<text  x="229.95" y="575.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::SelectWorkQueueToService() (6 samples, 0.13%)</title><rect x="351.9" y="837" width="1.5" height="15.0" fill="rgb(220,220,2)" rx="2" ry="2" />
<text  x="354.88" y="847.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="264.8" y="517" width="0.2" height="15.0" fill="rgb(231,87,16)" rx="2" ry="2" />
<text  x="267.80" y="527.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="171.8" y="789" width="0.2" height="15.0" fill="rgb(236,25,14)" rx="2" ry="2" />
<text  x="174.79" y="799.5" ></text>
</g>
<g >
<title>__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ (133 samples, 2.79%)</title><rect x="14.0" y="805" width="32.9" height="15.0" fill="rgb(231,99,4)" rx="2" ry="2" />
<text  x="16.96" y="815.5" >__..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (2 samples, 0.04%)</title><rect x="19.2" y="405" width="0.4" height="15.0" fill="rgb(243,120,53)" rx="2" ry="2" />
<text  x="22.15" y="415.5" ></text>
</g>
<g >
<title>base::internal::ScopedBlockingCallWithBaseSyncPrimitives::ScopedBlockingCallWithBaseSyncPrimitives(base::Location const&amp;, base::BlockingType) (4 samples, 0.08%)</title><rect x="1164.3" y="901" width="1.0" height="15.0" fill="rgb(244,176,18)" rx="2" ry="2" />
<text  x="1167.27" y="911.5" ></text>
</g>
<g >
<title>MojoAppendMessageData (1 samples, 0.02%)</title><rect x="1041.8" y="597" width="0.3" height="15.0" fill="rgb(207,214,49)" rx="2" ry="2" />
<text  x="1044.82" y="607.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::MaybeScheduleAdjustMaxTasksLockRequired(base::internal::ThreadGroupImpl::ScopedWorkersExecutor*) (1 samples, 0.02%)</title><rect x="287.6" y="629" width="0.2" height="15.0" fill="rgb(240,207,33)" rx="2" ry="2" />
<text  x="290.56" y="639.5" ></text>
</g>
<g >
<title>webrtc::SyncBuffer::FutureLength() const (2 samples, 0.04%)</title><rect x="1127.7" y="773" width="0.5" height="15.0" fill="rgb(216,94,32)" rx="2" ry="2" />
<text  x="1130.66" y="783.5" ></text>
</g>
<g >
<title>clt_mdct_forward_c (1 samples, 0.02%)</title><rect x="994.8" y="709" width="0.3" height="15.0" fill="rgb(247,45,4)" rx="2" ry="2" />
<text  x="997.82" y="719.5" ></text>
</g>
<g >
<title>vp8_receive_raw_frame (7 samples, 0.15%)</title><rect x="484.5" y="757" width="1.7" height="15.0" fill="rgb(208,140,14)" rx="2" ry="2" />
<text  x="487.47" y="767.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="682.9" y="581" width="0.2" height="15.0" fill="rgb(233,145,30)" rx="2" ry="2" />
<text  x="685.87" y="591.5" ></text>
</g>
<g >
<title>base::internal::TaskTrackerPosix::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (583 samples, 12.22%)</title><rect x="712.6" y="949" width="144.2" height="15.0" fill="rgb(235,103,54)" rx="2" ry="2" />
<text  x="715.56" y="959.5" >base::internal::Ta..</text>
</g>
<g >
<title>rtc::Event::Wait(int) (25 samples, 0.52%)</title><rect x="1183.1" y="965" width="6.2" height="15.0" fill="rgb(238,149,13)" rx="2" ry="2" />
<text  x="1186.07" y="975.5" ></text>
</g>
<g >
<title>base::Thread::ThreadMain() (69 samples, 1.45%)</title><rect x="70.1" y="997" width="17.1" height="15.0" fill="rgb(248,30,46)" rx="2" ry="2" />
<text  x="73.11" y="1007.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::GetFrontTaskEnqueueOrder(base::sequence_manager::internal::EnqueueOrder*) const (3 samples, 0.06%)</title><rect x="352.6" y="805" width="0.8" height="15.0" fill="rgb(219,153,52)" rx="2" ry="2" />
<text  x="355.62" y="815.5" ></text>
</g>
<g >
<title>mojo::core::Core::DestroyMessage(unsigned long) (1 samples, 0.02%)</title><rect x="228.4" y="741" width="0.3" height="15.0" fill="rgb(206,112,29)" rx="2" ry="2" />
<text  x="231.44" y="751.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1039.3" y="485" width="0.3" height="15.0" fill="rgb(251,28,15)" rx="2" ry="2" />
<text  x="1042.35" y="495.5" ></text>
</g>
<g >
<title>webrtc::RTCPSender::TMMBR() const (1 samples, 0.02%)</title><rect x="1177.9" y="949" width="0.2" height="15.0" fill="rgb(226,144,15)" rx="2" ry="2" />
<text  x="1180.88" y="959.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (9 samples, 0.19%)</title><rect x="288.3" y="661" width="2.2" height="15.0" fill="rgb(230,168,22)" rx="2" ry="2" />
<text  x="291.30" y="671.5" ></text>
</g>
<g >
<title>I420ToNV12 (9 samples, 0.19%)</title><rect x="59.0" y="917" width="2.2" height="15.0" fill="rgb(233,182,48)" rx="2" ry="2" />
<text  x="61.98" y="927.5" ></text>
</g>
<g >
<title>objc_msgSend (1 samples, 0.02%)</title><rect x="707.1" y="981" width="0.3" height="15.0" fill="rgb(232,13,12)" rx="2" ry="2" />
<text  x="710.12" y="991.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="300.7" y="741" width="0.5" height="15.0" fill="rgb(250,182,5)" rx="2" ry="2" />
<text  x="303.67" y="751.5" ></text>
</g>
<g >
<title>vp8_estimate_entropy_savings (1 samples, 0.02%)</title><rect x="458.3" y="741" width="0.2" height="15.0" fill="rgb(224,197,41)" rx="2" ry="2" />
<text  x="461.25" y="751.5" ></text>
</g>
<g >
<title>void base::internal::InvokeHelper&lt;true, void&gt;::MakeItSo&lt;void (cc::ProxyMain::*)(std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt;), base::WeakPtr&lt;cc::ProxyMain&gt;, std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt; &gt;(void (cc::ProxyMain::*&amp;&amp;)(std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt;), base::WeakPtr&lt;cc::ProxyMain&gt;&amp;&amp;, std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt;&amp;&amp;) (24 samples, 0.50%)</title><rect x="23.4" y="677" width="5.9" height="15.0" fill="rgb(220,15,50)" rx="2" ry="2" />
<text  x="26.36" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnQueuesFrontTaskChanged(base::sequence_manager::internal::WorkQueue*) (3 samples, 0.06%)</title><rect x="357.6" y="821" width="0.7" height="15.0" fill="rgb(206,214,51)" rx="2" ry="2" />
<text  x="360.57" y="831.5" ></text>
</g>
<g >
<title>free_tiny (2 samples, 0.04%)</title><rect x="232.6" y="773" width="0.5" height="15.0" fill="rgb(217,212,11)" rx="2" ry="2" />
<text  x="235.64" y="783.5" ></text>
</g>
<g >
<title>webrtc::RemoteEstimatorProxy::OnPacketArrival(unsigned short, long long, absl::optional&lt;webrtc::FeedbackRequest&gt;) (2 samples, 0.04%)</title><rect x="281.6" y="709" width="0.5" height="15.0" fill="rgb(249,200,20)" rx="2" ry="2" />
<text  x="284.62" y="719.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="1039.3" y="549" width="0.3" height="15.0" fill="rgb(206,170,8)" rx="2" ry="2" />
<text  x="1042.35" y="559.5" ></text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::PreSourceObserver(__CFRunLoopObserver*, unsigned long, void*) (1 samples, 0.02%)</title><rect x="13.0" y="805" width="0.2" height="15.0" fill="rgb(250,110,19)" rx="2" ry="2" />
<text  x="15.97" y="815.5" ></text>
</g>
<g >
<title>webrtc::TransportFeedbackAdapter::AddPacket(webrtc::RtpPacketSendInfo const&amp;, unsigned long, webrtc::Timestamp) (3 samples, 0.06%)</title><rect x="1147.7" y="869" width="0.7" height="15.0" fill="rgb(230,9,1)" rx="2" ry="2" />
<text  x="1150.70" y="879.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="1011.9" y="917" width="0.2" height="15.0" fill="rgb(229,68,53)" rx="2" ry="2" />
<text  x="1014.89" y="927.5" ></text>
</g>
<g >
<title>_pthread_body (68 samples, 1.43%)</title><rect x="197.0" y="1029" width="16.8" height="15.0" fill="rgb(245,181,18)" rx="2" ry="2" />
<text  x="200.02" y="1039.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="714.3" y="885" width="0.2" height="15.0" fill="rgb(220,40,54)" rx="2" ry="2" />
<text  x="717.29" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyDidProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (2 samples, 0.04%)</title><rect x="1073.2" y="885" width="0.5" height="15.0" fill="rgb(225,72,27)" rx="2" ry="2" />
<text  x="1076.24" y="895.5" ></text>
</g>
<g >
<title>vp8_receive_raw_frame (4 samples, 0.08%)</title><rect x="650.2" y="757" width="1.0" height="15.0" fill="rgb(235,179,51)" rx="2" ry="2" />
<text  x="653.22" y="767.5" ></text>
</g>
<g >
<title>webrtc::video_coding::RtpFrameReferenceFinder::ManageFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::RtpFrameObject, std::__Cr::default_delete&lt;webrtc::video_coding::RtpFrameObject&gt; &gt;) (6 samples, 0.13%)</title><rect x="266.5" y="581" width="1.5" height="15.0" fill="rgb(248,49,44)" rx="2" ry="2" />
<text  x="269.53" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (8 samples, 0.17%)</title><rect x="1149.9" y="773" width="2.0" height="15.0" fill="rgb(233,94,31)" rx="2" ry="2" />
<text  x="1152.92" y="783.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt; &gt;::*)(), base::WeakPtr&lt;base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt; &gt; &gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (8 samples, 0.17%)</title><rect x="1067.1" y="885" width="1.9" height="15.0" fill="rgb(251,159,16)" rx="2" ry="2" />
<text  x="1070.05" y="895.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="260.8" y="661" width="0.3" height="15.0" fill="rgb(231,164,29)" rx="2" ry="2" />
<text  x="263.84" y="671.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::DetachFromSequence() (1 samples, 0.02%)</title><rect x="1069.3" y="677" width="0.2" height="15.0" fill="rgb(222,41,13)" rx="2" ry="2" />
<text  x="1072.28" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() const (6 samples, 0.13%)</title><rect x="350.4" y="821" width="1.5" height="15.0" fill="rgb(237,228,48)" rx="2" ry="2" />
<text  x="353.39" y="831.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (2 samples, 0.04%)</title><rect x="341.2" y="757" width="0.5" height="15.0" fill="rgb(215,153,49)" rx="2" ry="2" />
<text  x="344.24" y="767.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessageInternal(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (7 samples, 0.15%)</title><rect x="1046.8" y="517" width="1.7" height="15.0" fill="rgb(234,58,38)" rx="2" ry="2" />
<text  x="1049.77" y="527.5" ></text>
</g>
<g >
<title>base::WaitableEvent::WaitableEvent(base::WaitableEvent::ResetPolicy, base::WaitableEvent::InitialState) (2 samples, 0.04%)</title><rect x="1036.1" y="517" width="0.5" height="15.0" fill="rgb(241,155,1)" rx="2" ry="2" />
<text  x="1039.13" y="527.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="34.5" y="629" width="0.5" height="15.0" fill="rgb(229,220,23)" rx="2" ry="2" />
<text  x="37.49" y="639.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_nonzero (1 samples, 0.02%)</title><rect x="904.3" y="661" width="0.2" height="15.0" fill="rgb(247,37,28)" rx="2" ry="2" />
<text  x="907.28" y="671.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::operator!=(base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter const&amp;) const (1 samples, 0.02%)</title><rect x="331.3" y="853" width="0.3" height="15.0" fill="rgb(246,160,3)" rx="2" ry="2" />
<text  x="334.35" y="863.5" ></text>
</g>
<g >
<title>content::(anonymous namespace)::IpcPacketSocket::OnDataReceived(net::IPEndPoint const&amp;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&amp;, base::TimeTicks const&amp;) (30 samples, 0.63%)</title><rect x="304.4" y="645" width="7.4" height="15.0" fill="rgb(251,28,23)" rx="2" ry="2" />
<text  x="307.38" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::ReloadEmptyImmediateWorkQueue() (3 samples, 0.06%)</title><rect x="327.9" y="853" width="0.7" height="15.0" fill="rgb(248,167,4)" rx="2" ry="2" />
<text  x="330.88" y="863.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (2 samples, 0.04%)</title><rect x="19.2" y="373" width="0.4" height="15.0" fill="rgb(214,58,41)" rx="2" ry="2" />
<text  x="22.15" y="383.5" ></text>
</g>
<g >
<title>base::SequenceToken::IsValid() const (1 samples, 0.02%)</title><rect x="358.6" y="869" width="0.2" height="15.0" fill="rgb(226,195,24)" rx="2" ry="2" />
<text  x="361.56" y="879.5" ></text>
</g>
<g >
<title>base::time_internal::SaturatedAdd(long long, base::TimeDelta) (1 samples, 0.02%)</title><rect x="699.9" y="885" width="0.3" height="15.0" fill="rgb(222,101,52)" rx="2" ry="2" />
<text  x="702.94" y="895.5" ></text>
</g>
<g >
<title>vp8_short_inv_walsh4x4_sse2 (2 samples, 0.04%)</title><rect x="530.0" y="709" width="0.5" height="15.0" fill="rgb(233,13,2)" rx="2" ry="2" />
<text  x="532.99" y="719.5" ></text>
</g>
<g >
<title>vp8dx_get_raw_frame (21 samples, 0.44%)</title><rect x="817.0" y="757" width="5.1" height="15.0" fill="rgb(219,51,34)" rx="2" ry="2" />
<text  x="819.95" y="767.5" ></text>
</g>
<g >
<title>webrtc::RmsLevel::Analyze(rtc::ArrayView&lt;short const, -4711l&gt;) (2 samples, 0.04%)</title><rect x="1004.7" y="837" width="0.5" height="15.0" fill="rgb(248,210,49)" rx="2" ry="2" />
<text  x="1007.71" y="847.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="315.3" y="533" width="0.2" height="15.0" fill="rgb(232,74,52)" rx="2" ry="2" />
<text  x="318.27" y="543.5" ></text>
</g>
<g >
<title>base::internal::BindState&lt;void (base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt; &gt;::*)(), base::WeakPtr&lt;base::internal::CancelableCallbackImpl&lt;base::OnceCallback&lt;void ()&gt; &gt; &gt; &gt;::Destroy(base::internal::BindStateBase const*) (1 samples, 0.02%)</title><rect x="1074.0" y="789" width="0.2" height="15.0" fill="rgb(241,75,37)" rx="2" ry="2" />
<text  x="1076.98" y="799.5" ></text>
</g>
<g >
<title>CopyPlane (3 samples, 0.06%)</title><rect x="55.3" y="901" width="0.7" height="15.0" fill="rgb(211,220,14)" rx="2" ry="2" />
<text  x="58.27" y="911.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="85.7" y="805" width="0.2" height="15.0" fill="rgb(226,15,25)" rx="2" ry="2" />
<text  x="88.70" y="815.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;viz::mojom::CompositorFrameMetadataDataView, viz::CompositorFrameMetadata const&gt;::Serialize(viz::CompositorFrameMetadata const&amp;, mojo::internal::Buffer*, viz::mojom::internal::CompositorFrameMetadata_Data::BufferWriter*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1042.8" y="613" width="0.3" height="15.0" fill="rgb(206,25,36)" rx="2" ry="2" />
<text  x="1045.81" y="623.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="133.9" y="597" width="0.3" height="15.0" fill="rgb(229,224,24)" rx="2" ry="2" />
<text  x="136.94" y="607.5" ></text>
</g>
<g >
<title>DYLD-STUB$$IPC::ParamTraits&lt;unsigned char&gt;::Write(base::Pickle*, unsigned char const&amp;) (2 samples, 0.04%)</title><rect x="242.3" y="613" width="0.5" height="15.0" fill="rgb(209,144,24)" rx="2" ry="2" />
<text  x="245.29" y="623.5" ></text>
</g>
<g >
<title>webrtc::TransportPacketsFeedback::SortedByReceiveTime() const (1 samples, 0.02%)</title><rect x="722.2" y="821" width="0.3" height="15.0" fill="rgb(240,218,50)" rx="2" ry="2" />
<text  x="725.21" y="831.5" ></text>
</g>
<g >
<title>blink::ReplacedPainter::Paint(blink::PaintInfo const&amp;) (1 samples, 0.02%)</title><rect x="26.6" y="213" width="0.2" height="15.0" fill="rgb(227,67,6)" rx="2" ry="2" />
<text  x="29.57" y="223.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::WalkInternal(blink::LayoutObject const&amp;, blink::PrePaintTreeWalk::PrePaintTreeWalkContext&amp;) (2 samples, 0.04%)</title><rect x="28.6" y="469" width="0.4" height="15.0" fill="rgb(236,111,15)" rx="2" ry="2" />
<text  x="31.55" y="479.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1113.8" y="789" width="0.3" height="15.0" fill="rgb(253,163,4)" rx="2" ry="2" />
<text  x="1116.81" y="799.5" ></text>
</g>
<g >
<title>blink::scheduler::MetricsHelper::RecordCommonTaskMetrics(base::sequence_manager::TaskQueue*, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (2 samples, 0.04%)</title><rect x="36.0" y="613" width="0.5" height="15.0" fill="rgb(220,32,33)" rx="2" ry="2" />
<text  x="38.97" y="623.5" ></text>
</g>
<g >
<title>vp8_extend_mb_row (1 samples, 0.02%)</title><rect x="582.9" y="709" width="0.3" height="15.0" fill="rgb(235,226,29)" rx="2" ry="2" />
<text  x="585.93" y="719.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (gpu::GpuChannelHost::Listener::*)(std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt;, IPC::PendingSyncMsg*), base::internal::UnretainedWrapper&lt;gpu::GpuChannelHost::Listener&gt;, std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt;, IPC::PendingSyncMsg*&gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (9 samples, 0.19%)</title><rect x="166.1" y="869" width="2.2" height="15.0" fill="rgb(220,193,0)" rx="2" ry="2" />
<text  x="169.10" y="879.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ConsoleLog(int, unsigned long*, v8::internal::Isolate*) (2 samples, 0.04%)</title><rect x="17.7" y="437" width="0.5" height="15.0" fill="rgb(207,193,39)" rx="2" ry="2" />
<text  x="20.67" y="447.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="279.1" y="517" width="0.3" height="15.0" fill="rgb(234,105,37)" rx="2" ry="2" />
<text  x="282.15" y="527.5" ></text>
</g>
<g >
<title>vp8_lookahead_push (4 samples, 0.08%)</title><rect x="650.2" y="741" width="1.0" height="15.0" fill="rgb(241,179,48)" rx="2" ry="2" />
<text  x="653.22" y="751.5" ></text>
</g>
<g >
<title>v8::internal::ReadOnlyRoots::CheckType(v8::internal::RootIndex) const (1 samples, 0.02%)</title><rect x="18.2" y="565" width="0.2" height="15.0" fill="rgb(229,80,47)" rx="2" ry="2" />
<text  x="21.16" y="575.5" ></text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::Send(rtc::Location const&amp;, rtc::MessageHandler*, unsigned int, rtc::MessageData*) (1 samples, 0.02%)</title><rect x="292.5" y="757" width="0.3" height="15.0" fill="rgb(252,82,5)" rx="2" ry="2" />
<text  x="295.51" y="767.5" ></text>
</g>
<g >
<title>Main Thread  0x6449f5 (171 samples, 3.58%)</title><rect x="10.0" y="1077" width="42.3" height="15.0" fill="rgb(225,113,13)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >Mai..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TakeImmediateIncomingQueueTasks(base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;*) (3 samples, 0.06%)</title><rect x="190.3" y="821" width="0.8" height="15.0" fill="rgb(232,215,21)" rx="2" ry="2" />
<text  x="193.34" y="831.5" ></text>
</g>
<g >
<title>mojo::internal::MessageDispatchContext::MessageDispatchContext(mojo::Message*) (2 samples, 0.04%)</title><rect x="1049.7" y="677" width="0.5" height="15.0" fill="rgb(222,199,45)" rx="2" ry="2" />
<text  x="1052.74" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (2 samples, 0.04%)</title><rect x="15.2" y="709" width="0.5" height="15.0" fill="rgb(243,147,0)" rx="2" ry="2" />
<text  x="18.19" y="719.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="714.5" y="901" width="0.3" height="15.0" fill="rgb(235,29,40)" rx="2" ry="2" />
<text  x="717.54" y="911.5" ></text>
</g>
<g >
<title>blink::EventTarget::FireEventListeners(blink::Event&amp;) (1 samples, 0.02%)</title><rect x="19.9" y="613" width="0.2" height="15.0" fill="rgb(231,53,22)" rx="2" ry="2" />
<text  x="22.90" y="623.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="351.6" y="789" width="0.3" height="15.0" fill="rgb(209,89,28)" rx="2" ry="2" />
<text  x="354.63" y="799.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3 (1 samples, 0.02%)</title><rect x="735.3" y="645" width="0.3" height="15.0" fill="rgb(234,112,39)" rx="2" ry="2" />
<text  x="738.32" y="655.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_y_block_sse2 (8 samples, 0.17%)</title><rect x="386.5" y="693" width="2.0" height="15.0" fill="rgb(251,17,8)" rx="2" ry="2" />
<text  x="389.51" y="703.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (4 samples, 0.08%)</title><rect x="347.9" y="821" width="1.0" height="15.0" fill="rgb(241,91,39)" rx="2" ry="2" />
<text  x="350.92" y="831.5" ></text>
</g>
<g >
<title>alg_quant (1 samples, 0.02%)</title><rect x="535.9" y="645" width="0.3" height="15.0" fill="rgb(232,139,47)" rx="2" ry="2" />
<text  x="538.93" y="655.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (2 samples, 0.04%)</title><rect x="229.9" y="789" width="0.5" height="15.0" fill="rgb(222,208,20)" rx="2" ry="2" />
<text  x="232.92" y="799.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (2 samples, 0.04%)</title><rect x="301.2" y="789" width="0.5" height="15.0" fill="rgb(247,133,24)" rx="2" ry="2" />
<text  x="304.17" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (4 samples, 0.08%)</title><rect x="347.9" y="837" width="1.0" height="15.0" fill="rgb(233,56,46)" rx="2" ry="2" />
<text  x="350.92" y="847.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::BarrierInfo::Run() (4 samples, 0.08%)</title><rect x="57.2" y="901" width="1.0" height="15.0" fill="rgb(226,102,51)" rx="2" ry="2" />
<text  x="60.25" y="911.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (5 samples, 0.10%)</title><rect x="696.2" y="949" width="1.3" height="15.0" fill="rgb(252,9,29)" rx="2" ry="2" />
<text  x="699.23" y="959.5" ></text>
</g>
<g >
<title>v8::MicrotasksScope::PerformCheckpoint(v8::Isolate*) (1 samples, 0.02%)</title><rect x="37.5" y="629" width="0.2" height="15.0" fill="rgb(236,201,10)" rx="2" ry="2" />
<text  x="40.46" y="639.5" ></text>
</g>
<g >
<title>media::AudioDeviceThread::ThreadMain() (150 samples, 3.14%)</title><rect x="1102.9" y="997" width="37.1" height="15.0" fill="rgb(232,191,3)" rx="2" ry="2" />
<text  x="1105.92" y="1007.5" >med..</text>
</g>
<g >
<title>base::AlignedAlloc(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="1041.8" y="517" width="0.3" height="15.0" fill="rgb(223,71,2)" rx="2" ry="2" />
<text  x="1044.82" y="527.5" ></text>
</g>
<g >
<title>content::RenderFrameImpl::ShouldReportDetailedMessageForSource(blink::WebString const&amp;) (1 samples, 0.02%)</title><rect x="17.7" y="277" width="0.2" height="15.0" fill="rgb(224,227,32)" rx="2" ry="2" />
<text  x="20.67" y="287.5" ></text>
</g>
<g >
<title>vp8_copy32xn_sse3.block_copy_sse3_loopx4 (2 samples, 0.04%)</title><rect x="749.9" y="677" width="0.5" height="15.0" fill="rgb(224,62,19)" rx="2" ry="2" />
<text  x="752.91" y="687.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="179.2" y="821" width="0.3" height="15.0" fill="rgb(237,148,33)" rx="2" ry="2" />
<text  x="182.21" y="831.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="41.9" y="613" width="0.3" height="15.0" fill="rgb(236,109,10)" rx="2" ry="2" />
<text  x="44.91" y="623.5" ></text>
</g>
<g >
<title>mach_msg (19 samples, 0.40%)</title><rect x="1060.4" y="917" width="4.7" height="15.0" fill="rgb(213,56,0)" rx="2" ry="2" />
<text  x="1063.37" y="927.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (3 samples, 0.06%)</title><rect x="31.0" y="629" width="0.8" height="15.0" fill="rgb(214,53,1)" rx="2" ry="2" />
<text  x="34.03" y="639.5" ></text>
</g>
<g >
<title>webrtc::OveruseFrameDetector::FrameCaptured(webrtc::VideoFrame const&amp;, long long) (1 samples, 0.02%)</title><rect x="487.2" y="805" width="0.2" height="15.0" fill="rgb(211,219,21)" rx="2" ry="2" />
<text  x="490.19" y="815.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.02%)</title><rect x="30.3" y="677" width="0.2" height="15.0" fill="rgb(213,165,44)" rx="2" ry="2" />
<text  x="33.29" y="687.5" ></text>
</g>
<g >
<title>network::mojom::internal::IPEndPoint_Data::Validate(void const*, mojo::internal::ValidationContext*) (1 samples, 0.02%)</title><rect x="319.5" y="661" width="0.2" height="15.0" fill="rgb(210,219,7)" rx="2" ry="2" />
<text  x="322.47" y="671.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="239.8" y="725" width="0.3" height="15.0" fill="rgb(209,57,24)" rx="2" ry="2" />
<text  x="242.82" y="735.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="359.1" y="885" width="0.2" height="15.0" fill="rgb(249,16,23)" rx="2" ry="2" />
<text  x="362.05" y="895.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;viz::mojom::DrawQuadDataView, mojo::DrawQuadWithSharedQuadState&gt;::Serialize(mojo::DrawQuadWithSharedQuadState&amp;, mojo::internal::Buffer*, viz::mojom::internal::DrawQuad_Data::BufferWriter*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1068.5" y="629" width="0.3" height="15.0" fill="rgb(215,158,53)" rx="2" ry="2" />
<text  x="1071.54" y="639.5" ></text>
</g>
<g >
<title>_pthread_start (569 samples, 11.93%)</title><rect x="566.6" y="1045" width="140.8" height="15.0" fill="rgb(208,57,13)" rx="2" ry="2" />
<text  x="569.60" y="1055.5" >_pthread_start</text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::is_end() const (1 samples, 0.02%)</title><rect x="41.7" y="629" width="0.2" height="15.0" fill="rgb(250,191,20)" rx="2" ry="2" />
<text  x="44.66" y="639.5" ></text>
</g>
<g >
<title>vp8_pack_tokens (49 samples, 1.03%)</title><rect x="800.1" y="725" width="12.2" height="15.0" fill="rgb(228,169,34)" rx="2" ry="2" />
<text  x="803.13" y="735.5" ></text>
</g>
<g >
<title>vp8_pick_inter_mode (187 samples, 3.92%)</title><rect x="397.1" y="693" width="46.3" height="15.0" fill="rgb(221,24,4)" rx="2" ry="2" />
<text  x="400.15" y="703.5" >vp8_..</text>
</g>
<g >
<title>webrtc::TransportFeedbackPacketLossTracker::OnPacketFeedbackVector(std::__Cr::vector&lt;webrtc::PacketFeedback, std::__Cr::allocator&lt;webrtc::PacketFeedback&gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="275.2" y="661" width="0.2" height="15.0" fill="rgb(220,127,2)" rx="2" ry="2" />
<text  x="278.19" y="671.5" ></text>
</g>
<g >
<title>vp8_cost_mv_ref (3 samples, 0.06%)</title><rect x="601.0" y="677" width="0.7" height="15.0" fill="rgb(211,200,44)" rx="2" ry="2" />
<text  x="603.99" y="687.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="1041.8" y="501" width="0.3" height="15.0" fill="rgb(216,117,50)" rx="2" ry="2" />
<text  x="1044.82" y="511.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="359.8" y="869" width="0.2" height="15.0" fill="rgb(236,205,48)" rx="2" ry="2" />
<text  x="362.79" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnTaskPushedToEmptyQueue(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.02%)</title><rect x="341.7" y="789" width="0.3" height="15.0" fill="rgb(245,190,25)" rx="2" ry="2" />
<text  x="344.74" y="799.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (3 samples, 0.06%)</title><rect x="485.5" y="693" width="0.7" height="15.0" fill="rgb(234,198,52)" rx="2" ry="2" />
<text  x="488.46" y="703.5" ></text>
</g>
<g >
<title>vp8_short_walsh4x4_sse2 (1 samples, 0.02%)</title><rect x="738.8" y="677" width="0.2" height="15.0" fill="rgb(241,23,8)" rx="2" ry="2" />
<text  x="741.78" y="687.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::GetEncodedPartitions(webrtc::VideoFrame const&amp;, bool) (4 samples, 0.08%)</title><rect x="961.2" y="789" width="1.0" height="15.0" fill="rgb(224,67,24)" rx="2" ry="2" />
<text  x="964.17" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::NotifyWillProcessTask(base::PendingTask const&amp;) (1 samples, 0.02%)</title><rect x="43.9" y="645" width="0.2" height="15.0" fill="rgb(244,25,32)" rx="2" ry="2" />
<text  x="46.89" y="655.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (3 samples, 0.06%)</title><rect x="877.3" y="917" width="0.8" height="15.0" fill="rgb(207,91,5)" rx="2" ry="2" />
<text  x="880.31" y="927.5" ></text>
</g>
<g >
<title>void base::internal::Invoker&lt;base::internal::BindState&lt;void (mojo::SimpleWatcher::*)(int, unsigned int, mojo::HandleSignalsState const&amp;), base::WeakPtr&lt;mojo::SimpleWatcher&gt;, int, unsigned int, mojo::HandleSignalsState&gt;, void ()&gt;::RunImpl&lt;void (mojo::SimpleWatcher::*)(int, unsigned int, mojo::HandleSignalsState const&amp;), std::__Cr::tuple&lt;base::WeakPtr&lt;mojo::SimpleWatcher&gt;, int, unsigned int, mojo::HandleSignalsState&gt;, 0ul, 1ul, 2ul, 3ul&gt;(void (mojo::SimpleWatcher::*&amp;&amp;)(int, unsigned int, mojo::HandleSignalsState const&amp;), std::__Cr::tuple&lt;base::WeakPtr&lt;mojo::SimpleWatcher&gt;, int, unsigned int, mojo::HandleSignalsState&gt;&amp;&amp;, std::__Cr::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul&gt;) (120 samples, 2.52%)</title><rect x="1030.2" y="885" width="29.7" height="15.0" fill="rgb(251,128,44)" rx="2" ry="2" />
<text  x="1033.19" y="895.5" >vo..</text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="651.5" y="661" width="0.2" height="15.0" fill="rgb(254,169,27)" rx="2" ry="2" />
<text  x="654.45" y="671.5" ></text>
</g>
<g >
<title>mojo::internal::Buffer::Buffer() (1 samples, 0.02%)</title><rect x="252.2" y="629" width="0.2" height="15.0" fill="rgb(239,206,18)" rx="2" ry="2" />
<text  x="255.18" y="639.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessageInternal(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (2 samples, 0.04%)</title><rect x="1041.1" y="501" width="0.5" height="15.0" fill="rgb(205,42,29)" rx="2" ry="2" />
<text  x="1044.08" y="511.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="45.1" y="629" width="0.3" height="15.0" fill="rgb(214,189,31)" rx="2" ry="2" />
<text  x="48.13" y="639.5" ></text>
</g>
<g >
<title>webrtc::TransportFeedbackAdapter::AddPacket(webrtc::RtpPacketSendInfo const&amp;, unsigned long, webrtc::Timestamp) (4 samples, 0.08%)</title><rect x="1146.7" y="885" width="1.0" height="15.0" fill="rgb(209,125,47)" rx="2" ry="2" />
<text  x="1149.71" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (2 samples, 0.04%)</title><rect x="206.4" y="741" width="0.5" height="15.0" fill="rgb(238,101,4)" rx="2" ry="2" />
<text  x="209.42" y="751.5" ></text>
</g>
<g >
<title>rtc::AsyncInvoker::DoInvoke(rtc::Location const&amp;, rtc::Thread*, std::__Cr::unique_ptr&lt;rtc::AsyncClosure, std::__Cr::default_delete&lt;rtc::AsyncClosure&gt; &gt;, unsigned int) (1 samples, 0.02%)</title><rect x="309.6" y="469" width="0.2" height="15.0" fill="rgb(253,215,9)" rx="2" ry="2" />
<text  x="312.58" y="479.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="333.6" y="805" width="0.2" height="15.0" fill="rgb(248,122,45)" rx="2" ry="2" />
<text  x="336.57" y="815.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::~RefCountedObject() (1 samples, 0.02%)</title><rect x="295.0" y="773" width="0.2" height="15.0" fill="rgb(208,77,46)" rx="2" ry="2" />
<text  x="297.98" y="783.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Enter() const (1 samples, 0.02%)</title><rect x="1130.6" y="837" width="0.3" height="15.0" fill="rgb(247,18,34)" rx="2" ry="2" />
<text  x="1133.63" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="67.4" y="805" width="0.2" height="15.0" fill="rgb(207,26,34)" rx="2" ry="2" />
<text  x="70.39" y="815.5" ></text>
</g>
<g >
<title>base::RunLoop::Delegate::ShouldQuitWhenIdle() (1 samples, 0.02%)</title><rect x="196.3" y="869" width="0.2" height="15.0" fill="rgb(225,228,23)" rx="2" ry="2" />
<text  x="199.28" y="879.5" ></text>
</g>
<g >
<title>szone_size (1 samples, 0.02%)</title><rect x="576.7" y="869" width="0.3" height="15.0" fill="rgb(254,209,20)" rx="2" ry="2" />
<text  x="579.75" y="879.5" ></text>
</g>
<g >
<title>base::TaskToken::operator==(base::TaskToken const&amp;) const (1 samples, 0.02%)</title><rect x="188.4" y="805" width="0.2" height="15.0" fill="rgb(208,197,10)" rx="2" ry="2" />
<text  x="191.36" y="815.5" ></text>
</g>
<g >
<title>thread_start (1 samples, 0.02%)</title><rect x="1020.3" y="1061" width="0.2" height="15.0" fill="rgb(246,40,33)" rx="2" ry="2" />
<text  x="1023.30" y="1071.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="281.1" y="549" width="0.3" height="15.0" fill="rgb(222,211,31)" rx="2" ry="2" />
<text  x="284.13" y="559.5" ></text>
</g>
<g >
<title>std::__Cr::vector&lt;mojo::core::RequestContext::WatchNotifyFinalizer, base::StackAllocator&lt;mojo::core::RequestContext::WatchNotifyFinalizer, 8ul&gt; &gt;::reserve(unsigned long) (1 samples, 0.02%)</title><rect x="119.1" y="821" width="0.2" height="15.0" fill="rgb(234,92,43)" rx="2" ry="2" />
<text  x="122.09" y="831.5" ></text>
</g>
<g >
<title>webrtc::NetEqImpl::ExtractPackets(unsigned long, std::__Cr::list&lt;webrtc::Packet, std::__Cr::allocator&lt;webrtc::Packet&gt; &gt;*) (1 samples, 0.02%)</title><rect x="1127.4" y="773" width="0.3" height="15.0" fill="rgb(223,48,48)" rx="2" ry="2" />
<text  x="1130.41" y="783.5" ></text>
</g>
<g >
<title>blink::InputType::InRangeChanged() const (1 samples, 0.02%)</title><rect x="21.1" y="469" width="0.3" height="15.0" fill="rgb(247,23,5)" rx="2" ry="2" />
<text  x="24.13" y="479.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="279.1" y="549" width="0.3" height="15.0" fill="rgb(249,3,13)" rx="2" ry="2" />
<text  x="282.15" y="559.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (3 samples, 0.06%)</title><rect x="1154.9" y="805" width="0.7" height="15.0" fill="rgb(224,64,7)" rx="2" ry="2" />
<text  x="1157.87" y="815.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (7 samples, 0.15%)</title><rect x="823.6" y="693" width="1.8" height="15.0" fill="rgb(225,111,54)" rx="2" ry="2" />
<text  x="826.63" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*) (1 samples, 0.02%)</title><rect x="557.7" y="949" width="0.2" height="15.0" fill="rgb(247,9,18)" rx="2" ry="2" />
<text  x="560.70" y="959.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="140.4" y="325" width="0.2" height="15.0" fill="rgb(206,207,4)" rx="2" ry="2" />
<text  x="143.37" y="335.5" ></text>
</g>
<g >
<title>std::__Cr::vector&lt;unsigned char, std::__Cr::allocator&lt;unsigned char&gt; &gt;::vector&lt;base::CheckedRandomAccessIterator&lt;unsigned char const&gt; &gt;(base::CheckedRandomAccessIterator&lt;unsigned char const&gt;, std::__Cr::enable_if&lt;(__is_forward_iterator&lt;base::CheckedRandomAccessIterator&lt;unsigned char const&gt; &gt;::value) &amp;&amp; (is_constructible&lt;unsigned char, std::__Cr::iterator_traits&lt;base::CheckedRandomAccessIterator&lt;unsigned char const&gt; &gt;::reference&gt;::value), base::CheckedRandomAccessIterator&lt;unsigned char const&gt; &gt;::type) (1 samples, 0.02%)</title><rect x="204.7" y="789" width="0.2" height="15.0" fill="rgb(207,88,22)" rx="2" ry="2" />
<text  x="207.69" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::AtomicFlagSet::RunActiveCallbacks() const (1 samples, 0.02%)</title><rect x="39.4" y="661" width="0.3" height="15.0" fill="rgb(217,158,4)" rx="2" ry="2" />
<text  x="42.44" y="671.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::SendProcessingUsage2::FrameCaptured(webrtc::VideoFrame const&amp;, long long, long long) (1 samples, 0.02%)</title><rect x="487.2" y="789" width="0.2" height="15.0" fill="rgb(239,97,52)" rx="2" ry="2" />
<text  x="490.19" y="799.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.02%)</title><rect x="693.8" y="885" width="0.2" height="15.0" fill="rgb(242,178,46)" rx="2" ry="2" />
<text  x="696.76" y="895.5" ></text>
</g>
<g >
<title>webrtc::AudioEncoder::Encode(unsigned int, rtc::ArrayView&lt;short const, -4711l&gt;, rtc::BufferT&lt;unsigned char, false&gt;*) (47 samples, 0.99%)</title><rect x="842.2" y="821" width="11.6" height="15.0" fill="rgb(252,222,34)" rx="2" ry="2" />
<text  x="845.18" y="831.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::internal::PriorityQueue::TaskSourceAndSortKey&gt;::MoveHoleUpAndFillWithElement(unsigned long, base::internal::PriorityQueue::TaskSourceAndSortKey&amp;&amp;) (1 samples, 0.02%)</title><rect x="1134.8" y="693" width="0.3" height="15.0" fill="rgb(224,134,5)" rx="2" ry="2" />
<text  x="1137.83" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (3 samples, 0.06%)</title><rect x="1053.0" y="453" width="0.7" height="15.0" fill="rgb(220,155,29)" rx="2" ry="2" />
<text  x="1055.95" y="463.5" ></text>
</g>
<g >
<title>vp8e_encode (316 samples, 6.62%)</title><rect x="883.0" y="773" width="78.2" height="15.0" fill="rgb(227,222,34)" rx="2" ry="2" />
<text  x="886.00" y="783.5" >vp8e_encode</text>
</g>
<g >
<title>base::HistogramBase::CheckName(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;) const (1 samples, 0.02%)</title><rect x="35.7" y="613" width="0.3" height="15.0" fill="rgb(230,111,46)" rx="2" ry="2" />
<text  x="38.73" y="623.5" ></text>
</g>
<g >
<title>decode_pulses (2 samples, 0.04%)</title><rect x="1120.5" y="549" width="0.5" height="15.0" fill="rgb(221,167,31)" rx="2" ry="2" />
<text  x="1123.49" y="559.5" ></text>
</g>
<g >
<title>webrtc::RemoteEstimatorProxy::IncomingPacket(long long, unsigned long, webrtc::RTPHeader const&amp;) (2 samples, 0.04%)</title><rect x="281.6" y="725" width="0.5" height="15.0" fill="rgb(208,207,30)" rx="2" ry="2" />
<text  x="284.62" y="735.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::ThreadCheckerImpl() (1 samples, 0.02%)</title><rect x="45.6" y="581" width="0.3" height="15.0" fill="rgb(229,65,16)" rx="2" ry="2" />
<text  x="48.62" y="591.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::MallocImpl(base::allocator::AllocatorDispatch const*, unsigned long, void*) (1 samples, 0.02%)</title><rect x="286.1" y="709" width="0.2" height="15.0" fill="rgb(219,214,29)" rx="2" ry="2" />
<text  x="289.08" y="719.5" ></text>
</g>
<g >
<title>rtc::SystemTimeNanos() (3 samples, 0.06%)</title><rect x="1175.9" y="949" width="0.7" height="15.0" fill="rgb(219,57,0)" rx="2" ry="2" />
<text  x="1178.90" y="959.5" ></text>
</g>
<g >
<title>MergeUVPlane (2 samples, 0.04%)</title><rect x="66.9" y="901" width="0.5" height="15.0" fill="rgb(225,208,35)" rx="2" ry="2" />
<text  x="69.90" y="911.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="82.7" y="821" width="0.3" height="15.0" fill="rgb(254,213,47)" rx="2" ry="2" />
<text  x="85.73" y="831.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="226.0" y="405" width="0.2" height="15.0" fill="rgb(229,126,0)" rx="2" ry="2" />
<text  x="228.96" y="415.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="300.7" y="693" width="0.5" height="15.0" fill="rgb(210,212,51)" rx="2" ry="2" />
<text  x="303.67" y="703.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendPeerEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (14 samples, 0.29%)</title><rect x="246.0" y="485" width="3.5" height="15.0" fill="rgb(206,161,28)" rx="2" ry="2" />
<text  x="249.00" y="495.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::ScopedSetIpcHash::~ScopedSetIpcHash() (2 samples, 0.04%)</title><rect x="135.2" y="581" width="0.5" height="15.0" fill="rgb(222,130,14)" rx="2" ry="2" />
<text  x="138.17" y="591.5" ></text>
</g>
<g >
<title>__psynch_mutexdrop (1 samples, 0.02%)</title><rect x="860.0" y="885" width="0.2" height="15.0" fill="rgb(244,208,15)" rx="2" ry="2" />
<text  x="863.00" y="895.5" ></text>
</g>
<g >
<title>v8::String::Write(v8::Isolate*, unsigned short*, int, int, int) const (1 samples, 0.02%)</title><rect x="17.9" y="293" width="0.3" height="15.0" fill="rgb(233,135,29)" rx="2" ry="2" />
<text  x="20.92" y="303.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="854.8" y="805" width="0.2" height="15.0" fill="rgb(236,197,37)" rx="2" ry="2" />
<text  x="857.80" y="815.5" ></text>
</g>
<g >
<title>vp8_short_walsh4x4_sse2 (1 samples, 0.02%)</title><rect x="592.1" y="677" width="0.2" height="15.0" fill="rgb(212,153,32)" rx="2" ry="2" />
<text  x="595.08" y="687.5" ></text>
</g>
<g >
<title>vp8_quantize_mb (11 samples, 0.23%)</title><rect x="736.1" y="677" width="2.7" height="15.0" fill="rgb(244,178,7)" rx="2" ry="2" />
<text  x="739.06" y="687.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::GetDouble(media::VideoFrameMetadata::Key, double*) const (1 samples, 0.02%)</title><rect x="177.0" y="789" width="0.2" height="15.0" fill="rgb(240,26,52)" rx="2" ry="2" />
<text  x="179.98" y="799.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="714.3" y="853" width="0.2" height="15.0" fill="rgb(245,80,38)" rx="2" ry="2" />
<text  x="717.29" y="863.5" ></text>
</g>
<g >
<title>silk_process_NLSFs_FLP (1 samples, 0.02%)</title><rect x="850.6" y="693" width="0.2" height="15.0" fill="rgb(229,76,52)" rx="2" ry="2" />
<text  x="853.60" y="703.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="993.6" y="661" width="0.2" height="15.0" fill="rgb(244,198,40)" rx="2" ry="2" />
<text  x="996.58" y="671.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="111.7" y="693" width="0.2" height="15.0" fill="rgb(230,179,50)" rx="2" ry="2" />
<text  x="114.67" y="703.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="312.1" y="565" width="0.2" height="15.0" fill="rgb(244,94,37)" rx="2" ry="2" />
<text  x="315.05" y="575.5" ></text>
</g>
<g >
<title>IPC::(anonymous namespace)::ChannelAssociatedGroupController::Endpoint::SendMessage(mojo::Message*) (1 samples, 0.02%)</title><rect x="165.8" y="773" width="0.3" height="15.0" fill="rgb(221,93,25)" rx="2" ry="2" />
<text  x="168.85" y="783.5" ></text>
</g>
<g >
<title>blink::MediaStreamRemoteVideoSource::RemoteVideoSourceDelegate::DoRenderFrameOnIOThread(scoped_refptr&lt;media::VideoFrame&gt;) (7 samples, 0.15%)</title><rect x="175.5" y="853" width="1.7" height="15.0" fill="rgb(254,7,8)" rx="2" ry="2" />
<text  x="178.50" y="863.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (2 samples, 0.04%)</title><rect x="349.4" y="789" width="0.5" height="15.0" fill="rgb(241,108,30)" rx="2" ry="2" />
<text  x="352.40" y="799.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::DetachFromSequence() (1 samples, 0.02%)</title><rect x="137.4" y="533" width="0.2" height="15.0" fill="rgb(246,63,46)" rx="2" ry="2" />
<text  x="140.40" y="543.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="333.1" y="821" width="0.2" height="15.0" fill="rgb(246,56,48)" rx="2" ry="2" />
<text  x="336.08" y="831.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::GetLastUsedTime() const (1 samples, 0.02%)</title><rect x="558.9" y="933" width="0.3" height="15.0" fill="rgb(252,217,0)" rx="2" ry="2" />
<text  x="561.94" y="943.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="240.6" y="693" width="0.2" height="15.0" fill="rgb(222,108,8)" rx="2" ry="2" />
<text  x="243.56" y="703.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (2 samples, 0.04%)</title><rect x="231.2" y="837" width="0.5" height="15.0" fill="rgb(247,157,6)" rx="2" ry="2" />
<text  x="234.16" y="847.5" ></text>
</g>
<g >
<title>vpx_mse16x16_avx2 (1 samples, 0.02%)</title><rect x="944.1" y="709" width="0.3" height="15.0" fill="rgb(236,16,29)" rx="2" ry="2" />
<text  x="947.10" y="719.5" ></text>
</g>
<g >
<title>mach_msg_trap (3 samples, 0.06%)</title><rect x="1154.9" y="725" width="0.7" height="15.0" fill="rgb(207,79,18)" rx="2" ry="2" />
<text  x="1157.87" y="735.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="993.6" y="757" width="0.2" height="15.0" fill="rgb(213,129,53)" rx="2" ry="2" />
<text  x="996.58" y="767.5" ></text>
</g>
<g >
<title>vp8cx_mb_init_quantizer (2 samples, 0.04%)</title><rect x="457.0" y="709" width="0.5" height="15.0" fill="rgb(243,121,25)" rx="2" ry="2" />
<text  x="460.01" y="719.5" ></text>
</g>
<g >
<title>base::RunLoop::RunWithTimeout(base::TimeDelta) (36 samples, 0.75%)</title><rect x="1065.3" y="981" width="8.9" height="15.0" fill="rgb(209,78,15)" rx="2" ry="2" />
<text  x="1068.32" y="991.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::DetachFromSequence() (1 samples, 0.02%)</title><rect x="176.7" y="661" width="0.3" height="15.0" fill="rgb(236,194,2)" rx="2" ry="2" />
<text  x="179.73" y="671.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="317.5" y="421" width="0.2" height="15.0" fill="rgb(223,159,48)" rx="2" ry="2" />
<text  x="320.49" y="431.5" ></text>
</g>
<g >
<title>void base::internal::Invoker&lt;base::internal::BindState&lt;void (content::WebMediaPlayerMS::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;), base::WeakPtr&lt;content::WebMediaPlayerMS::FrameDeliverer&gt; &gt;, void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;::RunImpl&lt;void (content::WebMediaPlayerMS::FrameDeliverer::* const&amp;)(scoped_refptr&lt;media::VideoFrame&gt;), std::__Cr::tuple&lt;base::WeakPtr&lt;content::WebMediaPlayerMS::FrameDeliverer&gt; &gt; const&amp;, 0ul&gt;(void (content::WebMediaPlayerMS::FrameDeliverer::* const&amp;&amp;&amp;)(scoped_refptr&lt;media::VideoFrame&gt;), std::__Cr::tuple&lt;base::WeakPtr&lt;content::WebMediaPlayerMS::FrameDeliverer&gt; &gt; const&amp;&amp;&amp;, std::__Cr::integer_sequence&lt;unsigned long, 0ul&gt;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (3 samples, 0.06%)</title><rect x="176.2" y="709" width="0.8" height="15.0" fill="rgb(246,36,43)" rx="2" ry="2" />
<text  x="179.24" y="719.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="1050.7" y="629" width="0.3" height="15.0" fill="rgb(220,183,21)" rx="2" ry="2" />
<text  x="1053.73" y="639.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;base::OnceCallback&lt;void (double)&gt;, void&gt;::Invoke&lt;base::OnceCallback&lt;void (double)&gt;, double&gt;(base::OnceCallback&lt;void (double)&gt;&amp;&amp;, double&amp;&amp;) (9 samples, 0.19%)</title><rect x="171.8" y="869" width="2.2" height="15.0" fill="rgb(234,91,4)" rx="2" ry="2" />
<text  x="174.79" y="879.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3.vp8_filter_block1d8_v6_ssse3_loop (1 samples, 0.02%)</title><rect x="825.9" y="677" width="0.2" height="15.0" fill="rgb(218,149,30)" rx="2" ry="2" />
<text  x="828.86" y="687.5" ></text>
</g>
<g >
<title>_pthread_body (597 samples, 12.52%)</title><rect x="214.3" y="1029" width="147.7" height="15.0" fill="rgb(213,162,5)" rx="2" ry="2" />
<text  x="217.34" y="1039.5" >_pthread_body</text>
</g>
<g >
<title>media::MultiChannelResampler::ProvideInput(int, int, float*) (5 samples, 0.10%)</title><rect x="1099.5" y="901" width="1.2" height="15.0" fill="rgb(206,99,26)" rx="2" ry="2" />
<text  x="1102.46" y="911.5" ></text>
</g>
<g >
<title>trace_event_internal::AddTraceEvent(char, unsigned char const*, char const*, char const*, unsigned long long, base::trace_event::TraceArguments*, unsigned int) (1 samples, 0.02%)</title><rect x="43.9" y="613" width="0.2" height="15.0" fill="rgb(231,32,17)" rx="2" ry="2" />
<text  x="46.89" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) (444 samples, 9.31%)</title><rect x="87.2" y="949" width="109.8" height="15.0" fill="rgb(205,26,42)" rx="2" ry="2" />
<text  x="90.18" y="959.5" >base::sequenc..</text>
</g>
<g >
<title>silk_encode_frame_FLP (45 samples, 0.94%)</title><rect x="538.2" y="725" width="11.1" height="15.0" fill="rgb(241,149,45)" rx="2" ry="2" />
<text  x="541.16" y="735.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="1008.2" y="933" width="0.2" height="15.0" fill="rgb(225,80,39)" rx="2" ry="2" />
<text  x="1011.18" y="943.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="714.3" y="837" width="0.2" height="15.0" fill="rgb(232,123,49)" rx="2" ry="2" />
<text  x="717.29" y="847.5" ></text>
</g>
<g >
<title>bool base::internal::QueryCancellationTraits&lt;base::internal::BindState&lt;void (jingle_glue::JingleThreadWrapper::*)(int), base::WeakPtr&lt;jingle_glue::JingleThreadWrapper&gt;, int&gt; &gt;(base::internal::BindStateBase const*, base::internal::BindStateBase::CancellationQueryMode) (1 samples, 0.02%)</title><rect x="353.4" y="805" width="0.2" height="15.0" fill="rgb(216,168,15)" rx="2" ry="2" />
<text  x="356.36" y="815.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelReceive::OnReceivedPayloadData(unsigned char const*, unsigned long, webrtc::RTPHeader const&amp;) (8 samples, 0.17%)</title><rect x="278.7" y="693" width="1.9" height="15.0" fill="rgb(238,112,6)" rx="2" ry="2" />
<text  x="281.65" y="703.5" ></text>
</g>
<g >
<title>base::internal::SequenceLocalStorageMap::ValueDestructorPair::~ValueDestructorPair() (1 samples, 0.02%)</title><rect x="1050.2" y="661" width="0.3" height="15.0" fill="rgb(220,201,6)" rx="2" ry="2" />
<text  x="1053.23" y="671.5" ></text>
</g>
<g >
<title>small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="816.0" y="517" width="0.2" height="15.0" fill="rgb(233,113,41)" rx="2" ry="2" />
<text  x="818.96" y="527.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::MaybeScheduleAdjustMaxTasksLockRequired(base::internal::ThreadGroupImpl::ScopedWorkersExecutor*) (2 samples, 0.04%)</title><rect x="1010.2" y="933" width="0.4" height="15.0" fill="rgb(214,91,31)" rx="2" ry="2" />
<text  x="1013.16" y="943.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.02%)</title><rect x="32.3" y="661" width="0.2" height="15.0" fill="rgb(225,198,50)" rx="2" ry="2" />
<text  x="35.26" y="671.5" ></text>
</g>
<g >
<title>mach_msg (17 samples, 0.36%)</title><rect x="1171.4" y="917" width="4.3" height="15.0" fill="rgb(248,133,48)" rx="2" ry="2" />
<text  x="1174.45" y="927.5" ></text>
</g>
<g >
<title>mach_msg (3 samples, 0.06%)</title><rect x="57.5" y="789" width="0.7" height="15.0" fill="rgb(250,173,38)" rx="2" ry="2" />
<text  x="60.50" y="799.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1067.1" y="725" width="0.2" height="15.0" fill="rgb(211,153,6)" rx="2" ry="2" />
<text  x="1070.05" y="735.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.06%)</title><rect x="1025.2" y="901" width="0.8" height="15.0" fill="rgb(243,219,41)" rx="2" ry="2" />
<text  x="1028.25" y="911.5" ></text>
</g>
<g >
<title>silk_noise_shape_quantizer_del_dec (15 samples, 0.31%)</title><rect x="685.3" y="677" width="3.8" height="15.0" fill="rgb(230,94,49)" rx="2" ry="2" />
<text  x="688.35" y="687.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_8::__invoke(_malloc_zone_t*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="253.7" y="469" width="0.2" height="15.0" fill="rgb(221,188,23)" rx="2" ry="2" />
<text  x="256.67" y="479.5" ></text>
</g>
<g >
<title>base::AlignedAlloc(unsigned long, unsigned long) (5 samples, 0.10%)</title><rect x="104.3" y="821" width="1.2" height="15.0" fill="rgb(251,155,30)" rx="2" ry="2" />
<text  x="107.25" y="831.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="1100.4" y="853" width="0.3" height="15.0" fill="rgb(220,52,46)" rx="2" ry="2" />
<text  x="1103.45" y="863.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (2 samples, 0.04%)</title><rect x="589.4" y="661" width="0.5" height="15.0" fill="rgb(228,191,37)" rx="2" ry="2" />
<text  x="592.36" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="357.3" y="805" width="0.3" height="15.0" fill="rgb(240,59,20)" rx="2" ry="2" />
<text  x="360.32" y="815.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="206.2" y="677" width="0.2" height="15.0" fill="rgb(212,127,5)" rx="2" ry="2" />
<text  x="209.17" y="687.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::MachMessageSendLocked(mach_msg_header_t*) (11 samples, 0.23%)</title><rect x="246.5" y="405" width="2.7" height="15.0" fill="rgb(236,70,14)" rx="2" ry="2" />
<text  x="249.49" y="415.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="107.5" y="725" width="0.2" height="15.0" fill="rgb(229,53,19)" rx="2" ry="2" />
<text  x="110.47" y="735.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="187.4" y="789" width="0.2" height="15.0" fill="rgb(214,181,1)" rx="2" ry="2" />
<text  x="190.37" y="799.5" ></text>
</g>
<g >
<title>webrtc::video_coding::PacketBuffer::GetBitstream(webrtc::video_coding::RtpFrameObject const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="268.5" y="565" width="0.3" height="15.0" fill="rgb(221,116,54)" rx="2" ry="2" />
<text  x="271.51" y="575.5" ></text>
</g>
<g >
<title>webrtc::AudioFrame::data() const (3 samples, 0.06%)</title><rect x="1138.1" y="837" width="0.7" height="15.0" fill="rgb(211,61,48)" rx="2" ry="2" />
<text  x="1141.05" y="847.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="716.5" y="885" width="0.3" height="15.0" fill="rgb(219,70,7)" rx="2" ry="2" />
<text  x="719.52" y="895.5" ></text>
</g>
<g >
<title>blink::TrackAudioRenderer::Render(base::TimeDelta, base::TimeTicks, int, media::AudioBus*) (25 samples, 0.52%)</title><rect x="1096.7" y="965" width="6.2" height="15.0" fill="rgb(241,38,39)" rx="2" ry="2" />
<text  x="1099.74" y="975.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_Impl_ConsoleLog(v8::internal::BuiltinArguments, v8::internal::Isolate*) (2 samples, 0.04%)</title><rect x="17.7" y="421" width="0.5" height="15.0" fill="rgb(246,179,4)" rx="2" ry="2" />
<text  x="20.67" y="431.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="651.7" y="613" width="0.2" height="15.0" fill="rgb(238,119,51)" rx="2" ry="2" />
<text  x="654.70" y="623.5" ></text>
</g>
<g >
<title>blink::ScrollingCoordinator::UpdateAfterPaint(blink::LocalFrameView*) (1 samples, 0.02%)</title><rect x="27.3" y="517" width="0.3" height="15.0" fill="rgb(221,170,47)" rx="2" ry="2" />
<text  x="30.32" y="527.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="30.8" y="629" width="0.2" height="15.0" fill="rgb(217,167,22)" rx="2" ry="2" />
<text  x="33.78" y="639.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1112.8" y="789" width="0.3" height="15.0" fill="rgb(229,59,8)" rx="2" ry="2" />
<text  x="1115.82" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() const (6 samples, 0.13%)</title><rect x="348.9" y="821" width="1.5" height="15.0" fill="rgb(247,220,48)" rx="2" ry="2" />
<text  x="351.91" y="831.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoSendStreamImpl::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*)::$_6::operator()() const (1 samples, 0.02%)</title><rect x="683.1" y="837" width="0.3" height="15.0" fill="rgb(250,73,54)" rx="2" ry="2" />
<text  x="686.12" y="847.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) (19 samples, 0.40%)</title><rect x="136.4" y="597" width="4.7" height="15.0" fill="rgb(237,114,18)" rx="2" ry="2" />
<text  x="139.41" y="607.5" ></text>
</g>
<g >
<title>cc::TileManager::CheckPendingGpuWorkAndIssueSignals() (3 samples, 0.06%)</title><rect x="1069.3" y="837" width="0.7" height="15.0" fill="rgb(242,66,39)" rx="2" ry="2" />
<text  x="1072.28" y="847.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::RemovePacket(std::__Cr::__map_iterator&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, void*&gt;*, long&gt; &gt;) (1 samples, 0.02%)</title><rect x="691.5" y="741" width="0.3" height="15.0" fill="rgb(227,65,42)" rx="2" ry="2" />
<text  x="694.53" y="751.5" ></text>
</g>
<g >
<title>WTF::HashTable&lt;blink::DisplayItemClient const*, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::PartitionAllocator&gt;::Rehash(unsigned int, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;*) (1 samples, 0.02%)</title><rect x="26.6" y="69" width="0.2" height="15.0" fill="rgb(210,159,18)" rx="2" ry="2" />
<text  x="29.57" y="79.5" ></text>
</g>
<g >
<title>DYLD-STUB$$mojo::internal::SerializationContext::SerializationContext() (1 samples, 0.02%)</title><rect x="168.6" y="805" width="0.2" height="15.0" fill="rgb(226,4,19)" rx="2" ry="2" />
<text  x="171.57" y="815.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3.vp8_filter_block1d8_v6_ssse3_loop (1 samples, 0.02%)</title><rect x="892.2" y="645" width="0.2" height="15.0" fill="rgb(246,181,35)" rx="2" ry="2" />
<text  x="895.16" y="655.5" ></text>
</g>
<g >
<title>webrtc::PacketRouter::TimeToSendPacket(unsigned int, unsigned short, long long, bool, webrtc::PacedPacketInfo const&amp;) (70 samples, 1.47%)</title><rect x="1146.0" y="949" width="17.3" height="15.0" fill="rgb(230,86,17)" rx="2" ry="2" />
<text  x="1148.97" y="959.5" ></text>
</g>
<g >
<title>silk_resampler_private_down_FIR (3 samples, 0.06%)</title><rect x="549.3" y="709" width="0.7" height="15.0" fill="rgb(223,65,41)" rx="2" ry="2" />
<text  x="552.29" y="719.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::PaintContents(blink::GraphicsLayer const*, blink::GraphicsContext&amp;, unsigned int, blink::IntRect const&amp;) const (2 samples, 0.04%)</title><rect x="26.6" y="341" width="0.5" height="15.0" fill="rgb(227,70,36)" rx="2" ry="2" />
<text  x="29.57" y="351.5" ></text>
</g>
<g >
<title>0x7fff731f1958 (1 samples, 0.02%)</title><rect x="1045.5" y="581" width="0.3" height="15.0" fill="rgb(235,114,43)" rx="2" ry="2" />
<text  x="1048.53" y="591.5" ></text>
</g>
<g >
<title>webrtc::RTPVideoHeader::RTPVideoHeader() (1 samples, 0.02%)</title><rect x="265.5" y="629" width="0.3" height="15.0" fill="rgb(234,105,24)" rx="2" ry="2" />
<text  x="268.54" y="639.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;base::internal::Task&gt;::front() const (1 samples, 0.02%)</title><rect x="1135.1" y="677" width="0.2" height="15.0" fill="rgb(208,201,2)" rx="2" ry="2" />
<text  x="1138.08" y="687.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::FindExtension(webrtc::RTPExtensionType) const (1 samples, 0.02%)</title><rect x="271.2" y="709" width="0.3" height="15.0" fill="rgb(216,110,50)" rx="2" ry="2" />
<text  x="274.23" y="719.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::DoPaintTask(blink::GraphicsLayerPaintInfo const&amp;, blink::GraphicsLayer const&amp;, unsigned int, blink::GraphicsContext&amp;, blink::IntRect const&amp;) const (2 samples, 0.04%)</title><rect x="26.6" y="325" width="0.5" height="15.0" fill="rgb(239,55,33)" rx="2" ry="2" />
<text  x="29.57" y="335.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (31 samples, 0.65%)</title><rect x="200.7" y="885" width="7.7" height="15.0" fill="rgb(209,25,10)" rx="2" ry="2" />
<text  x="203.73" y="895.5" ></text>
</g>
<g >
<title>base::RunLoop::RunWithTimeout(base::TimeDelta) (597 samples, 12.52%)</title><rect x="214.3" y="965" width="147.7" height="15.0" fill="rgb(239,33,25)" rx="2" ry="2" />
<text  x="217.34" y="975.5" >base::RunLoop::Run..</text>
</g>
<g >
<title>blink::PaintLayerCompositor::UpdateIfNeeded(blink::DocumentLifecycle::LifecycleState, blink::CompositingReasonsStats&amp;) (5 samples, 0.10%)</title><rect x="25.3" y="485" width="1.3" height="15.0" fill="rgb(243,42,50)" rx="2" ry="2" />
<text  x="28.34" y="495.5" ></text>
</g>
<g >
<title>_CFAutoreleasePoolPop (1 samples, 0.02%)</title><rect x="362.8" y="949" width="0.2" height="15.0" fill="rgb(206,159,53)" rx="2" ry="2" />
<text  x="365.76" y="959.5" ></text>
</g>
<g >
<title>content::WebRtcVideoTrackSource::OnFrameCaptured(scoped_refptr&lt;media::VideoFrame&gt;) (4 samples, 0.08%)</title><rect x="297.9" y="837" width="1.0" height="15.0" fill="rgb(232,89,37)" rx="2" ry="2" />
<text  x="300.95" y="847.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::CreateFromChannelMessage(mojo::core::ports::UserMessageEvent*, std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;, void*, unsigned long) (1 samples, 0.02%)</title><rect x="106.2" y="805" width="0.3" height="15.0" fill="rgb(206,120,2)" rx="2" ry="2" />
<text  x="109.23" y="815.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="312.1" y="629" width="0.2" height="15.0" fill="rgb(211,210,28)" rx="2" ry="2" />
<text  x="315.05" y="639.5" ></text>
</g>
<g >
<title>vp8_decode_mode_mvs (12 samples, 0.25%)</title><rect x="521.6" y="709" width="2.9" height="15.0" fill="rgb(224,33,51)" rx="2" ry="2" />
<text  x="524.58" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::SelectWorkQueueToService() (1 samples, 0.02%)</title><rect x="212.9" y="837" width="0.2" height="15.0" fill="rgb(226,34,35)" rx="2" ry="2" />
<text  x="215.85" y="847.5" ></text>
</g>
<g >
<title>pthread_cond_signal (2 samples, 0.04%)</title><rect x="203.0" y="725" width="0.5" height="15.0" fill="rgb(206,211,23)" rx="2" ry="2" />
<text  x="205.96" y="735.5" ></text>
</g>
<g >
<title>silk_burg_modified_FLP (6 samples, 0.13%)</title><rect x="543.4" y="677" width="1.4" height="15.0" fill="rgb(231,140,40)" rx="2" ry="2" />
<text  x="546.35" y="687.5" ></text>
</g>
<g >
<title>rtc::Event::Wait(int) (15 samples, 0.31%)</title><rect x="1164.3" y="965" width="3.7" height="15.0" fill="rgb(212,40,6)" rx="2" ry="2" />
<text  x="1167.27" y="975.5" ></text>
</g>
<g >
<title>mojo::core::ports::MessageQueue::GetNextMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*, mojo::core::ports::MessageFilter*) (2 samples, 0.04%)</title><rect x="112.7" y="725" width="0.5" height="15.0" fill="rgb(237,125,3)" rx="2" ry="2" />
<text  x="115.66" y="735.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="355.6" y="789" width="0.2" height="15.0" fill="rgb(221,11,9)" rx="2" ry="2" />
<text  x="358.59" y="799.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (6 samples, 0.13%)</title><rect x="815.5" y="773" width="1.5" height="15.0" fill="rgb(228,22,29)" rx="2" ry="2" />
<text  x="818.47" y="783.5" ></text>
</g>
<g >
<title>malloc_zone_realloc (1 samples, 0.02%)</title><rect x="243.8" y="533" width="0.2" height="15.0" fill="rgb(224,90,53)" rx="2" ry="2" />
<text  x="246.77" y="543.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs (1 samples, 0.02%)</title><rect x="799.9" y="725" width="0.2" height="15.0" fill="rgb(213,51,41)" rx="2" ry="2" />
<text  x="802.88" y="735.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::GetHandleSignalsStateNoLock() const (1 samples, 0.02%)</title><rect x="173.0" y="693" width="0.3" height="15.0" fill="rgb(206,147,29)" rx="2" ry="2" />
<text  x="176.02" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (3 samples, 0.06%)</title><rect x="282.4" y="645" width="0.7" height="15.0" fill="rgb(209,178,39)" rx="2" ry="2" />
<text  x="285.36" y="655.5" ></text>
</g>
<g >
<title>base::Value::InternalCleanup() (1 samples, 0.02%)</title><rect x="487.7" y="725" width="0.2" height="15.0" fill="rgb(234,47,19)" rx="2" ry="2" />
<text  x="490.69" y="735.5" ></text>
</g>
<g >
<title>blink::V8ScriptRunner::CallFunction(v8::Local&lt;v8::Function&gt;, blink::ExecutionContext*, v8::Local&lt;v8::Value&gt;, int, v8::Local&lt;v8::Value&gt;*, v8::Isolate*) (1 samples, 0.02%)</title><rect x="19.9" y="533" width="0.2" height="15.0" fill="rgb(248,35,28)" rx="2" ry="2" />
<text  x="22.90" y="543.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="651.2" y="709" width="0.3" height="15.0" fill="rgb(232,166,53)" rx="2" ry="2" />
<text  x="654.21" y="719.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.02%)</title><rect x="283.4" y="565" width="0.2" height="15.0" fill="rgb(228,201,2)" rx="2" ry="2" />
<text  x="286.35" y="575.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.02%)</title><rect x="27.6" y="517" width="0.2" height="15.0" fill="rgb(228,109,50)" rx="2" ry="2" />
<text  x="30.56" y="527.5" ></text>
</g>
<g >
<title>CopyPlane (7 samples, 0.15%)</title><rect x="59.0" y="901" width="1.7" height="15.0" fill="rgb(231,227,6)" rx="2" ry="2" />
<text  x="61.98" y="911.5" ></text>
</g>
<g >
<title>blink::InputTypeView::AttributeChanged() (1 samples, 0.02%)</title><rect x="20.9" y="437" width="0.2" height="15.0" fill="rgb(230,16,25)" rx="2" ry="2" />
<text  x="23.88" y="447.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (3 samples, 0.06%)</title><rect x="298.2" y="725" width="0.7" height="15.0" fill="rgb(253,103,52)" rx="2" ry="2" />
<text  x="301.20" y="735.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (2 samples, 0.04%)</title><rect x="19.2" y="389" width="0.4" height="15.0" fill="rgb(225,144,26)" rx="2" ry="2" />
<text  x="22.15" y="399.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="23.6" y="597" width="0.3" height="15.0" fill="rgb(220,192,15)" rx="2" ry="2" />
<text  x="26.61" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnTaskPushedToEmptyQueue(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.02%)</title><rect x="85.0" y="773" width="0.2" height="15.0" fill="rgb(216,44,0)" rx="2" ry="2" />
<text  x="87.96" y="783.5" ></text>
</g>
<g >
<title>base::internal::SequenceLocalStorageMap::Set(int, base::internal::SequenceLocalStorageMap::ValueDestructorPair) (1 samples, 0.02%)</title><rect x="135.9" y="565" width="0.3" height="15.0" fill="rgb(227,174,37)" rx="2" ry="2" />
<text  x="138.92" y="575.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="62.2" y="901" width="0.2" height="15.0" fill="rgb(211,53,5)" rx="2" ry="2" />
<text  x="65.20" y="911.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (5 samples, 0.10%)</title><rect x="1085.4" y="709" width="1.2" height="15.0" fill="rgb(226,220,11)" rx="2" ry="2" />
<text  x="1088.36" y="719.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;base::internal::Task&gt;::CheckValidIndex(unsigned long) const (1 samples, 0.02%)</title><rect x="1157.1" y="709" width="0.2" height="15.0" fill="rgb(212,3,15)" rx="2" ry="2" />
<text  x="1160.10" y="719.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="457.5" y="677" width="0.3" height="15.0" fill="rgb(222,49,54)" rx="2" ry="2" />
<text  x="460.51" y="687.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (47 samples, 0.99%)</title><rect x="165.6" y="885" width="11.6" height="15.0" fill="rgb(236,101,20)" rx="2" ry="2" />
<text  x="168.60" y="895.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (4 samples, 0.08%)</title><rect x="371.2" y="789" width="1.0" height="15.0" fill="rgb(225,149,47)" rx="2" ry="2" />
<text  x="374.17" y="799.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (7 samples, 0.15%)</title><rect x="1046.8" y="549" width="1.7" height="15.0" fill="rgb(208,183,4)" rx="2" ry="2" />
<text  x="1049.77" y="559.5" ></text>
</g>
<g >
<title>base::internal::WorkerThreadStack::Push(base::internal::WorkerThread*) (2 samples, 0.04%)</title><rect x="1012.1" y="917" width="0.5" height="15.0" fill="rgb(205,129,15)" rx="2" ry="2" />
<text  x="1015.13" y="927.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="878.8" y="885" width="0.2" height="15.0" fill="rgb(248,110,44)" rx="2" ry="2" />
<text  x="881.80" y="895.5" ></text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="233.1" y="757" width="0.3" height="15.0" fill="rgb(236,144,31)" rx="2" ry="2" />
<text  x="236.14" y="767.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1148.9" y="789" width="0.3" height="15.0" fill="rgb(233,4,47)" rx="2" ry="2" />
<text  x="1151.94" y="799.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="141.9" y="581" width="0.2" height="15.0" fill="rgb(236,25,46)" rx="2" ry="2" />
<text  x="144.85" y="591.5" ></text>
</g>
<g >
<title>quant_all_bands (1 samples, 0.02%)</title><rect x="684.1" y="725" width="0.3" height="15.0" fill="rgb(207,144,38)" rx="2" ry="2" />
<text  x="687.11" y="735.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (1 samples, 0.02%)</title><rect x="942.6" y="693" width="0.3" height="15.0" fill="rgb(240,109,37)" rx="2" ry="2" />
<text  x="945.62" y="703.5" ></text>
</g>
<g >
<title>_pthread_body (569 samples, 11.93%)</title><rect x="566.6" y="1029" width="140.8" height="15.0" fill="rgb(225,163,1)" rx="2" ry="2" />
<text  x="569.60" y="1039.5" >_pthread_body</text>
</g>
<g >
<title>MergeUVPlane (2 samples, 0.04%)</title><rect x="60.7" y="901" width="0.5" height="15.0" fill="rgb(205,8,29)" rx="2" ry="2" />
<text  x="63.71" y="911.5" ></text>
</g>
<g >
<title>cricket::WebRtcVideoChannel::SendRtp(unsigned char const*, unsigned long, webrtc::PacketOptions const&amp;) (24 samples, 0.50%)</title><rect x="1148.4" y="885" width="6.0" height="15.0" fill="rgb(250,80,42)" rx="2" ry="2" />
<text  x="1151.44" y="895.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Enter() const (1 samples, 0.02%)</title><rect x="1177.4" y="933" width="0.2" height="15.0" fill="rgb(254,226,6)" rx="2" ry="2" />
<text  x="1180.38" y="943.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() const (4 samples, 0.08%)</title><rect x="329.6" y="869" width="1.0" height="15.0" fill="rgb(230,197,8)" rx="2" ry="2" />
<text  x="332.61" y="879.5" ></text>
</g>
<g >
<title>srtp_hmac_compute (1 samples, 0.02%)</title><rect x="307.6" y="501" width="0.2" height="15.0" fill="rgb(234,32,22)" rx="2" ry="2" />
<text  x="310.60" y="511.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (4 samples, 0.08%)</title><rect x="553.7" y="949" width="1.0" height="15.0" fill="rgb(217,116,25)" rx="2" ry="2" />
<text  x="556.74" y="959.5" ></text>
</g>
<g >
<title>vp8_decode_frame (96 samples, 2.01%)</title><rect x="658.4" y="725" width="23.7" height="15.0" fill="rgb(205,65,50)" rx="2" ry="2" />
<text  x="661.38" y="735.5" >v..</text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="114.6" y="725" width="0.3" height="15.0" fill="rgb(239,19,5)" rx="2" ry="2" />
<text  x="117.64" y="735.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="105.0" y="741" width="0.2" height="15.0" fill="rgb(231,45,23)" rx="2" ry="2" />
<text  x="107.99" y="751.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="1039.6" y="581" width="0.2" height="15.0" fill="rgb(242,156,46)" rx="2" ry="2" />
<text  x="1042.59" y="591.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="168.1" y="613" width="0.2" height="15.0" fill="rgb(239,66,18)" rx="2" ry="2" />
<text  x="171.08" y="623.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoStreamReceiver::OnReceivedPayloadData(unsigned char const*, unsigned long, webrtc::RTPHeader const&amp;, webrtc::RTPVideoHeader const&amp;, absl::optional&lt;webrtc::RtpGenericFrameDescriptor&gt; const&amp;, bool) (14 samples, 0.29%)</title><rect x="265.8" y="629" width="3.5" height="15.0" fill="rgb(231,196,18)" rx="2" ry="2" />
<text  x="268.79" y="639.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="1059.4" y="789" width="0.2" height="15.0" fill="rgb(239,118,42)" rx="2" ry="2" />
<text  x="1062.38" y="799.5" ></text>
</g>
<g >
<title>vpx_dc_predictor_16x16_sse2 (1 samples, 0.02%)</title><rect x="438.5" y="677" width="0.2" height="15.0" fill="rgb(220,97,54)" rx="2" ry="2" />
<text  x="441.46" y="687.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.04%)</title><rect x="287.8" y="597" width="0.5" height="15.0" fill="rgb(245,116,36)" rx="2" ry="2" />
<text  x="290.81" y="607.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (6 samples, 0.13%)</title><rect x="202.0" y="789" width="1.5" height="15.0" fill="rgb(212,65,51)" rx="2" ry="2" />
<text  x="204.97" y="799.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (content::WebMediaPlayerMSCompositor::*)(bool, bool, base::Optional&lt;media::VideoRotation&gt;, base::Optional&lt;bool&gt;), scoped_refptr&lt;content::WebMediaPlayerMSCompositor&gt;, bool, bool, base::Optional&lt;media::VideoRotation&gt;, base::Optional&lt;bool&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (5 samples, 0.10%)</title><rect x="1028.7" y="885" width="1.2" height="15.0" fill="rgb(240,56,26)" rx="2" ry="2" />
<text  x="1031.71" y="895.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="193.3" y="869" width="0.3" height="15.0" fill="rgb(212,128,13)" rx="2" ry="2" />
<text  x="196.31" y="879.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="65.2" y="853" width="0.5" height="15.0" fill="rgb(249,216,24)" rx="2" ry="2" />
<text  x="68.17" y="863.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;(anonymous namespace)::FrameAdapter&lt;webrtc::I420BufferInterface&gt; &gt;::~RefCountedObject() (2 samples, 0.04%)</title><rect x="487.7" y="789" width="0.5" height="15.0" fill="rgb(249,170,18)" rx="2" ry="2" />
<text  x="490.69" y="799.5" ></text>
</g>
<g >
<title>-[NSAutoreleasePool drain] (4 samples, 0.08%)</title><rect x="214.6" y="917" width="1.0" height="15.0" fill="rgb(208,115,22)" rx="2" ry="2" />
<text  x="217.58" y="927.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="273.2" y="533" width="0.3" height="15.0" fill="rgb(254,183,37)" rx="2" ry="2" />
<text  x="276.21" y="543.5" ></text>
</g>
<g >
<title>media::MultiChannelResampler::SetRatio(double) (1 samples, 0.02%)</title><rect x="1102.4" y="933" width="0.3" height="15.0" fill="rgb(223,111,15)" rx="2" ry="2" />
<text  x="1105.43" y="943.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, void*&gt;*, long&gt;, bool&gt; std::__Cr::__tree&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__map_value_compare&lt;int, std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::less&lt;int&gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt; &gt; &gt;::__emplace_unique_key_args&lt;int, std::__Cr::pair&lt;int, rtc::Message&gt; &gt;(int const&amp;, std::__Cr::pair&lt;int, rtc::Message&gt;&amp;&amp;) (2 samples, 0.04%)</title><rect x="1152.9" y="837" width="0.5" height="15.0" fill="rgb(236,94,6)" rx="2" ry="2" />
<text  x="1155.89" y="847.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="1157.3" y="741" width="0.3" height="15.0" fill="rgb(221,86,38)" rx="2" ry="2" />
<text  x="1160.35" y="751.5" ></text>
</g>
<g >
<title>blink::ThreadState::FreePersistentNode(blink::PersistentRegion*, blink::PersistentNode*) (1 samples, 0.02%)</title><rect x="18.9" y="581" width="0.3" height="15.0" fill="rgb(227,64,23)" rx="2" ry="2" />
<text  x="21.91" y="591.5" ></text>
</g>
<g >
<title>CopyRow_ERMS (3 samples, 0.06%)</title><rect x="682.1" y="725" width="0.8" height="15.0" fill="rgb(232,48,51)" rx="2" ry="2" />
<text  x="685.13" y="735.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="284.6" y="629" width="0.2" height="15.0" fill="rgb(242,101,54)" rx="2" ry="2" />
<text  x="287.59" y="639.5" ></text>
</g>
<g >
<title>mojo::internal::ArraySerializer&lt;mojo::ArrayDataView&lt;viz::mojom::RenderPassDataView&gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; const, mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; &gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; const, false&gt;, void&gt;::SerializeElements(mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; &gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; const, false&gt;*, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;mojo::internal::Pointer&lt;viz::mojom::internal::RenderPass_Data&gt; &gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (3 samples, 0.06%)</title><rect x="1042.1" y="597" width="0.7" height="15.0" fill="rgb(238,13,34)" rx="2" ry="2" />
<text  x="1045.07" y="607.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="184.9" y="757" width="0.2" height="15.0" fill="rgb(210,150,22)" rx="2" ry="2" />
<text  x="187.90" y="767.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::ClosureTask::~ClosureTask() (1 samples, 0.02%)</title><rect x="202.5" y="773" width="0.2" height="15.0" fill="rgb(244,226,6)" rx="2" ry="2" />
<text  x="205.46" y="783.5" ></text>
</g>
<g >
<title>gpu::SharedImageInterfaceProxy::UpdateSharedImage(gpu::SyncToken const&amp;, gpu::Mailbox const&amp;) (5 samples, 0.10%)</title><rect x="205.2" y="837" width="1.2" height="15.0" fill="rgb(205,36,11)" rx="2" ry="2" />
<text  x="208.18" y="847.5" ></text>
</g>
<g >
<title>mojo::core::Core::GetMessageData(unsigned long, MojoGetMessageDataOptions const*, void**, unsigned int*, unsigned int*, unsigned int*) (1 samples, 0.02%)</title><rect x="1058.9" y="741" width="0.2" height="15.0" fill="rgb(254,152,0)" rx="2" ry="2" />
<text  x="1061.89" y="751.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal::(anonymous namespace)::InvokeParams const&amp;) (5 samples, 0.10%)</title><rect x="16.9" y="517" width="1.3" height="15.0" fill="rgb(214,21,5)" rx="2" ry="2" />
<text  x="19.93" y="527.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::UpdateGraphicsLayerConfiguration(blink::PaintLayer const*) (2 samples, 0.04%)</title><rect x="26.1" y="389" width="0.5" height="15.0" fill="rgb(215,139,25)" rx="2" ry="2" />
<text  x="29.08" y="399.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="191.1" y="853" width="0.2" height="15.0" fill="rgb(235,132,33)" rx="2" ry="2" />
<text  x="194.08" y="863.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (2 samples, 0.04%)</title><rect x="579.2" y="837" width="0.5" height="15.0" fill="rgb(241,214,17)" rx="2" ry="2" />
<text  x="582.22" y="847.5" ></text>
</g>
<g >
<title>run_analysis (1 samples, 0.02%)</title><rect x="995.1" y="741" width="0.2" height="15.0" fill="rgb(236,95,35)" rx="2" ry="2" />
<text  x="998.06" y="751.5" ></text>
</g>
<g >
<title>vp8_tokenize_mb (19 samples, 0.40%)</title><rect x="628.0" y="693" width="4.7" height="15.0" fill="rgb(244,126,33)" rx="2" ry="2" />
<text  x="630.95" y="703.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="178.0" y="821" width="0.2" height="15.0" fill="rgb(213,29,16)" rx="2" ry="2" />
<text  x="180.97" y="831.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="213.1" y="885" width="0.2" height="15.0" fill="rgb(218,59,50)" rx="2" ry="2" />
<text  x="216.10" y="895.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (2 samples, 0.04%)</title><rect x="660.6" y="677" width="0.5" height="15.0" fill="rgb(211,134,40)" rx="2" ry="2" />
<text  x="663.61" y="687.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="352.1" y="821" width="0.5" height="15.0" fill="rgb(236,203,48)" rx="2" ry="2" />
<text  x="355.13" y="831.5" ></text>
</g>
<g >
<title>base::ScopedDeferTaskPosting::Set(base::ScopedDeferTaskPosting*) (1 samples, 0.02%)</title><rect x="23.4" y="581" width="0.2" height="15.0" fill="rgb(215,50,43)" rx="2" ry="2" />
<text  x="26.36" y="591.5" ></text>
</g>
<g >
<title>mojo::core::Channel::TryDispatchMessage(base::span&lt;char const, 18446744073709551615ul&gt;, unsigned long*) (174 samples, 3.65%)</title><rect x="102.3" y="869" width="43.0" height="15.0" fill="rgb(248,220,23)" rx="2" ry="2" />
<text  x="105.27" y="879.5" >mojo..</text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="317.7" y="453" width="0.3" height="15.0" fill="rgb(235,55,35)" rx="2" ry="2" />
<text  x="320.74" y="463.5" ></text>
</g>
<g >
<title>webrtc::VCMDecodedFrameCallback::Decoded(webrtc::VideoFrame&amp;, absl::optional&lt;int&gt;, absl::optional&lt;unsigned char&gt;) (1 samples, 0.02%)</title><rect x="841.2" y="757" width="0.2" height="15.0" fill="rgb(253,167,17)" rx="2" ry="2" />
<text  x="844.19" y="767.5" ></text>
</g>
<g >
<title>viz::mojom::blink::CompositorFrameSinkClientRequestValidator::Accept(mojo::Message*) (3 samples, 0.06%)</title><rect x="1053.7" y="709" width="0.7" height="15.0" fill="rgb(213,108,31)" rx="2" ry="2" />
<text  x="1056.69" y="719.5" ></text>
</g>
<g >
<title>cc::PictureLayerTiling::TakeTilesAndPropertiesFrom(cc::PictureLayerTiling*, cc::Region const&amp;) (1 samples, 0.02%)</title><rect x="1069.8" y="661" width="0.2" height="15.0" fill="rgb(208,177,54)" rx="2" ry="2" />
<text  x="1072.77" y="671.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (3 samples, 0.06%)</title><rect x="525.0" y="693" width="0.8" height="15.0" fill="rgb(234,74,33)" rx="2" ry="2" />
<text  x="528.04" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::TimeDomain::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (4 samples, 0.08%)</title><rect x="342.0" y="821" width="1.0" height="15.0" fill="rgb(225,199,9)" rx="2" ry="2" />
<text  x="344.98" y="831.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (5 samples, 0.10%)</title><rect x="375.1" y="837" width="1.3" height="15.0" fill="rgb(216,178,40)" rx="2" ry="2" />
<text  x="378.13" y="847.5" ></text>
</g>
<g >
<title>cricket::SrtpSession::UnprotectRtp(void*, int, int*) (2 samples, 0.04%)</title><rect x="225.5" y="581" width="0.5" height="15.0" fill="rgb(214,127,31)" rx="2" ry="2" />
<text  x="228.47" y="591.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3 (1 samples, 0.02%)</title><rect x="680.9" y="693" width="0.2" height="15.0" fill="rgb(231,65,38)" rx="2" ry="2" />
<text  x="683.89" y="703.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="86.4" y="869" width="0.5" height="15.0" fill="rgb(245,52,19)" rx="2" ry="2" />
<text  x="89.44" y="879.5" ></text>
</g>
<g >
<title>base::RunLoop::RunWithTimeout(base::TimeDelta) (69 samples, 1.45%)</title><rect x="70.1" y="949" width="17.1" height="15.0" fill="rgb(216,172,0)" rx="2" ry="2" />
<text  x="73.11" y="959.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="283.8" y="549" width="0.3" height="15.0" fill="rgb(245,94,23)" rx="2" ry="2" />
<text  x="286.85" y="559.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="358.3" y="837" width="0.3" height="15.0" fill="rgb(222,28,3)" rx="2" ry="2" />
<text  x="361.31" y="847.5" ></text>
</g>
<g >
<title>base::ReadFromFD(int, char*, unsigned long) (9 samples, 0.19%)</title><rect x="1076.9" y="965" width="2.3" height="15.0" fill="rgb(223,147,4)" rx="2" ry="2" />
<text  x="1079.95" y="975.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="116.6" y="773" width="0.5" height="15.0" fill="rgb(207,112,4)" rx="2" ry="2" />
<text  x="119.62" y="783.5" ></text>
</g>
<g >
<title>base::debug::ScopedTaskRunActivity::ScopedTaskRunActivity(void const*, base::PendingTask const&amp;) (1 samples, 0.02%)</title><rect x="378.8" y="885" width="0.3" height="15.0" fill="rgb(208,224,12)" rx="2" ry="2" />
<text  x="381.84" y="895.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="249.2" y="405" width="0.3" height="15.0" fill="rgb(254,40,47)" rx="2" ry="2" />
<text  x="252.22" y="415.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::ScheduleWork() (1 samples, 0.02%)</title><rect x="1035.4" y="437" width="0.2" height="15.0" fill="rgb(249,92,13)" rx="2" ry="2" />
<text  x="1038.39" y="447.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetStatus(mojo::core::ports::PortRef const&amp;, mojo::core::ports::PortStatus*) (1 samples, 0.02%)</title><rect x="173.0" y="677" width="0.3" height="15.0" fill="rgb(252,140,49)" rx="2" ry="2" />
<text  x="176.02" y="687.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelSend::ProcessAndEncodeAudio(std::__Cr::unique_ptr&lt;webrtc::AudioFrame, std::__Cr::default_delete&lt;webrtc::AudioFrame&gt; &gt;) (13 samples, 0.27%)</title><rect x="1083.4" y="853" width="3.2" height="15.0" fill="rgb(216,180,53)" rx="2" ry="2" />
<text  x="1086.38" y="863.5" ></text>
</g>
<g >
<title>webrtc::RtpTransportControllerSend::UpdateControllerWithTimeInterval() (1 samples, 0.02%)</title><rect x="551.5" y="821" width="0.3" height="15.0" fill="rgb(222,135,12)" rx="2" ry="2" />
<text  x="554.51" y="831.5" ></text>
</g>
<g >
<title>media::AudioInputDevice::AudioThreadCallback::Process(unsigned int) (31 samples, 0.65%)</title><rect x="1079.4" y="981" width="7.7" height="15.0" fill="rgb(234,26,16)" rx="2" ry="2" />
<text  x="1082.42" y="991.5" ></text>
</g>
<g >
<title>base::TaskToken::operator==(base::TaskToken const&amp;) const (1 samples, 0.02%)</title><rect x="346.7" y="773" width="0.2" height="15.0" fill="rgb(207,86,2)" rx="2" ry="2" />
<text  x="349.68" y="783.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="883.2" y="741" width="0.3" height="15.0" fill="rgb(228,19,43)" rx="2" ry="2" />
<text  x="886.25" y="751.5" ></text>
</g>
<g >
<title>base::internal::BindState&lt;base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;)::$_0, scoped_refptr&lt;base::internal::Sequence&gt;, base::internal::UnretainedWrapper&lt;base::internal::ThreadPoolImpl&gt; &gt;::Destroy(base::internal::BindStateBase const*) (1 samples, 0.02%)</title><rect x="75.6" y="837" width="0.2" height="15.0" fill="rgb(216,142,25)" rx="2" ry="2" />
<text  x="78.56" y="847.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_sse2 (1 samples, 0.02%)</title><rect x="679.4" y="677" width="0.3" height="15.0" fill="rgb(242,179,9)" rx="2" ry="2" />
<text  x="682.41" y="687.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_sse2 (1 samples, 0.02%)</title><rect x="757.8" y="645" width="0.3" height="15.0" fill="rgb(253,181,47)" rx="2" ry="2" />
<text  x="760.83" y="655.5" ></text>
</g>
<g >
<title>vp8_encode_bool (1 samples, 0.02%)</title><rect x="799.4" y="693" width="0.2" height="15.0" fill="rgb(251,154,10)" rx="2" ry="2" />
<text  x="802.39" y="703.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1181.3" y="949" width="0.3" height="15.0" fill="rgb(207,166,32)" rx="2" ry="2" />
<text  x="1184.34" y="959.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1112.8" y="837" width="0.3" height="15.0" fill="rgb(251,90,39)" rx="2" ry="2" />
<text  x="1115.82" y="847.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="342.5" y="757" width="0.2" height="15.0" fill="rgb(228,228,44)" rx="2" ry="2" />
<text  x="345.48" y="767.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (11 samples, 0.23%)</title><rect x="128.0" y="677" width="2.7" height="15.0" fill="rgb(243,98,49)" rx="2" ry="2" />
<text  x="131.00" y="687.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_zero_loop (1 samples, 0.02%)</title><rect x="767.2" y="661" width="0.3" height="15.0" fill="rgb(238,68,0)" rx="2" ry="2" />
<text  x="770.23" y="671.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (2 samples, 0.04%)</title><rect x="574.3" y="805" width="0.5" height="15.0" fill="rgb(227,190,47)" rx="2" ry="2" />
<text  x="577.27" y="815.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast (1 samples, 0.02%)</title><rect x="557.9" y="901" width="0.3" height="15.0" fill="rgb(227,159,5)" rx="2" ry="2" />
<text  x="560.95" y="911.5" ></text>
</g>
<g >
<title>blink::ChromeClientImpl::ShouldReportDetailedMessageForSource(blink::LocalFrame&amp;, WTF::String const&amp;) (1 samples, 0.02%)</title><rect x="17.7" y="293" width="0.2" height="15.0" fill="rgb(224,11,34)" rx="2" ry="2" />
<text  x="20.67" y="303.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (827 samples, 17.34%)</title><rect x="362.0" y="1013" width="204.6" height="15.0" fill="rgb(240,36,51)" rx="2" ry="2" />
<text  x="365.02" y="1023.5" >base::(anonymous namespace..</text>
</g>
<g >
<title>IPC::mojom::ChannelProxy::Receive(IPC::MessageView) (1 samples, 0.02%)</title><rect x="165.8" y="805" width="0.3" height="15.0" fill="rgb(249,32,17)" rx="2" ry="2" />
<text  x="168.85" y="815.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::Flag::Invalidate() (1 samples, 0.02%)</title><rect x="1067.1" y="757" width="0.2" height="15.0" fill="rgb(232,137,35)" rx="2" ry="2" />
<text  x="1070.05" y="767.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="312.8" y="645" width="0.5" height="15.0" fill="rgb(239,86,28)" rx="2" ry="2" />
<text  x="315.79" y="655.5" ></text>
</g>
<g >
<title>mojo::internal::MessageDispatchContext::~MessageDispatchContext() (1 samples, 0.02%)</title><rect x="135.9" y="581" width="0.3" height="15.0" fill="rgb(205,84,38)" rx="2" ry="2" />
<text  x="138.92" y="591.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="34.7" y="613" width="0.3" height="15.0" fill="rgb(213,143,21)" rx="2" ry="2" />
<text  x="37.74" y="623.5" ></text>
</g>
<g >
<title>dispatch_queue_get_label (2 samples, 0.04%)</title><rect x="1146.7" y="853" width="0.5" height="15.0" fill="rgb(207,116,14)" rx="2" ry="2" />
<text  x="1149.71" y="863.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="77.8" y="789" width="0.2" height="15.0" fill="rgb(240,186,17)" rx="2" ry="2" />
<text  x="80.78" y="799.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="39.9" y="581" width="0.3" height="15.0" fill="rgb(220,30,27)" rx="2" ry="2" />
<text  x="42.93" y="591.5" ></text>
</g>
<g >
<title>non-virtual thunk to content::P2PSocketClientImpl::SendComplete(network::P2PSendPacketMetrics const&amp;) (3 samples, 0.06%)</title><rect x="227.7" y="709" width="0.7" height="15.0" fill="rgb(234,161,14)" rx="2" ry="2" />
<text  x="230.69" y="719.5" ></text>
</g>
<g >
<title>blink::scheduler::MainThreadTaskQueue::OnTaskCompleted(base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming*, base::sequence_manager::LazyNow*) (17 samples, 0.36%)</title><rect x="33.7" y="661" width="4.3" height="15.0" fill="rgb(252,204,53)" rx="2" ry="2" />
<text  x="36.75" y="671.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::RunTask((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (550 samples, 11.53%)</title><rect x="719.5" y="869" width="136.0" height="15.0" fill="rgb(227,195,23)" rx="2" ry="2" />
<text  x="722.48" y="879.5" >(anonymous namesp..</text>
</g>
<g >
<title>rtc::IPIsAny(rtc::IPAddress const&amp;) (1 samples, 0.02%)</title><rect x="311.6" y="565" width="0.2" height="15.0" fill="rgb(223,103,50)" rx="2" ry="2" />
<text  x="314.56" y="575.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::AllocatePacket() const (1 samples, 0.02%)</title><rect x="853.8" y="789" width="0.3" height="15.0" fill="rgb(216,180,10)" rx="2" ry="2" />
<text  x="856.81" y="799.5" ></text>
</g>
<g >
<title>compute_mdcts (2 samples, 0.04%)</title><rect x="535.2" y="725" width="0.5" height="15.0" fill="rgb(240,142,35)" rx="2" ry="2" />
<text  x="538.19" y="735.5" ></text>
</g>
<g >
<title>(anonymous namespace)::MachAbsoluteTimeToTicks(unsigned long long) (1 samples, 0.02%)</title><rect x="186.4" y="773" width="0.2" height="15.0" fill="rgb(252,43,39)" rx="2" ry="2" />
<text  x="189.38" y="783.5" ></text>
</g>
<g >
<title>base::ScopedDeferTaskPosting::ScopedDeferTaskPosting() (1 samples, 0.02%)</title><rect x="76.5" y="789" width="0.3" height="15.0" fill="rgb(211,107,19)" rx="2" ry="2" />
<text  x="79.55" y="799.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (IPC::ChannelProxy::Context::*)(std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt;), scoped_refptr&lt;IPC::ChannelProxy::Context&gt;, std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="165.8" y="869" width="0.3" height="15.0" fill="rgb(246,156,47)" rx="2" ry="2" />
<text  x="168.85" y="879.5" ></text>
</g>
<g >
<title>cc::LayerTreeHost::FinishCommitOnImplThread(cc::LayerTreeHostImpl*) (2 samples, 0.04%)</title><rect x="1070.3" y="821" width="0.5" height="15.0" fill="rgb(228,131,11)" rx="2" ry="2" />
<text  x="1073.27" y="831.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (2 samples, 0.04%)</title><rect x="877.6" y="901" width="0.5" height="15.0" fill="rgb(221,177,42)" rx="2" ry="2" />
<text  x="880.56" y="911.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="121.6" y="773" width="0.2" height="15.0" fill="rgb(240,162,29)" rx="2" ry="2" />
<text  x="124.57" y="783.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (1 samples, 0.02%)</title><rect x="487.9" y="725" width="0.3" height="15.0" fill="rgb(221,183,49)" rx="2" ry="2" />
<text  x="490.94" y="735.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::ParseBuffer(unsigned char const*, unsigned long) (1 samples, 0.02%)</title><rect x="265.0" y="629" width="0.3" height="15.0" fill="rgb(232,152,42)" rx="2" ry="2" />
<text  x="268.05" y="639.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_nonhalf_y_nonzero (1 samples, 0.02%)</title><rect x="904.5" y="661" width="0.3" height="15.0" fill="rgb(245,202,30)" rx="2" ry="2" />
<text  x="907.52" y="671.5" ></text>
</g>
<g >
<title>0x7fff731fb1a0 (1 samples, 0.02%)</title><rect x="538.2" y="709" width="0.2" height="15.0" fill="rgb(226,221,29)" rx="2" ry="2" />
<text  x="541.16" y="719.5" ></text>
</g>
<g >
<title>vpx_post_proc_down_and_across_mb_row_sse2.acrossnextcol (10 samples, 0.21%)</title><rect x="488.9" y="709" width="2.5" height="15.0" fill="rgb(250,101,19)" rx="2" ry="2" />
<text  x="491.93" y="719.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 0.04%)</title><rect x="26.6" y="469" width="0.5" height="15.0" fill="rgb(217,110,39)" rx="2" ry="2" />
<text  x="29.57" y="479.5" ></text>
</g>
<g >
<title>webrtc::video_coding::PacketBuffer::InsertPacket(webrtc::VCMPacket*) (11 samples, 0.23%)</title><rect x="266.5" y="613" width="2.8" height="15.0" fill="rgb(237,170,9)" rx="2" ry="2" />
<text  x="269.53" y="623.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="879.3" y="901" width="0.2" height="15.0" fill="rgb(206,134,53)" rx="2" ry="2" />
<text  x="882.29" y="911.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="286.1" y="773" width="0.2" height="15.0" fill="rgb(226,123,17)" rx="2" ry="2" />
<text  x="289.08" y="783.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="176.5" y="581" width="0.2" height="15.0" fill="rgb(237,72,16)" rx="2" ry="2" />
<text  x="179.49" y="591.5" ></text>
</g>
<g >
<title>_pthread_start (47 samples, 0.99%)</title><rect x="1178.4" y="1045" width="11.6" height="15.0" fill="rgb(254,223,13)" rx="2" ry="2" />
<text  x="1181.37" y="1055.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (5 samples, 0.10%)</title><rect x="814.0" y="693" width="1.2" height="15.0" fill="rgb(246,9,6)" rx="2" ry="2" />
<text  x="816.98" y="703.5" ></text>
</g>
<g >
<title>blink::PaintPropertyTreeBuilder::UpdateForChildren() (1 samples, 0.02%)</title><rect x="28.6" y="453" width="0.2" height="15.0" fill="rgb(224,31,47)" rx="2" ry="2" />
<text  x="31.55" y="463.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::PrepareToForwardUserMessage(mojo::core::ports::PortRef const&amp;, mojo::core::ports::Port::State, bool, mojo::core::ports::UserMessageEvent*, mojo::core::ports::NodeName*) (4 samples, 0.08%)</title><rect x="249.5" y="501" width="1.0" height="15.0" fill="rgb(212,43,44)" rx="2" ry="2" />
<text  x="252.46" y="511.5" ></text>
</g>
<g >
<title>silk_noise_shape_analysis_FLP (10 samples, 0.21%)</title><rect x="1001.2" y="709" width="2.5" height="15.0" fill="rgb(207,218,53)" rx="2" ry="2" />
<text  x="1004.25" y="719.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::PutRtpPacket(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType, absl::optional&lt;long long&gt;) (1 samples, 0.02%)</title><rect x="652.2" y="677" width="0.2" height="15.0" fill="rgb(241,183,28)" rx="2" ry="2" />
<text  x="655.20" y="687.5" ></text>
</g>
<g >
<title>-[NSAutoreleasePool init] (1 samples, 0.02%)</title><rect x="1065.1" y="949" width="0.2" height="15.0" fill="rgb(220,194,8)" rx="2" ry="2" />
<text  x="1068.07" y="959.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::TakeTask(base::internal::TaskSource::RunIntent) (3 samples, 0.06%)</title><rect x="711.8" y="949" width="0.8" height="15.0" fill="rgb(224,109,1)" rx="2" ry="2" />
<text  x="714.82" y="959.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::CreateEventMessage(unsigned long, unsigned long, void**, unsigned long) (1 samples, 0.02%)</title><rect x="251.7" y="549" width="0.2" height="15.0" fill="rgb(207,113,14)" rx="2" ry="2" />
<text  x="254.69" y="559.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::HandleEncodedFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;) (99 samples, 2.08%)</title><rect x="817.0" y="837" width="24.4" height="15.0" fill="rgb(232,16,25)" rx="2" ry="2" />
<text  x="819.95" y="847.5" >w..</text>
</g>
<g >
<title>rtc::TimeMillis() (1 samples, 0.02%)</title><rect x="291.8" y="773" width="0.2" height="15.0" fill="rgb(218,176,34)" rx="2" ry="2" />
<text  x="294.77" y="783.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="190.1" y="693" width="0.2" height="15.0" fill="rgb(213,51,50)" rx="2" ry="2" />
<text  x="193.09" y="703.5" ></text>
</g>
<g >
<title>small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="372.9" y="789" width="0.3" height="15.0" fill="rgb(238,43,21)" rx="2" ry="2" />
<text  x="375.91" y="799.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="692.3" y="709" width="0.2" height="15.0" fill="rgb(253,185,10)" rx="2" ry="2" />
<text  x="695.27" y="719.5" ></text>
</g>
<g >
<title>base::LazyInstance&lt;base::ThreadLocalPointer&lt;mojo::core::RequestContext&gt;, base::internal::LeakyLazyInstanceTraits&lt;base::ThreadLocalPointer&lt;mojo::core::RequestContext&gt; &gt; &gt;::Pointer() (2 samples, 0.04%)</title><rect x="118.6" y="821" width="0.5" height="15.0" fill="rgb(208,223,27)" rx="2" ry="2" />
<text  x="121.60" y="831.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (2 samples, 0.04%)</title><rect x="184.4" y="805" width="0.5" height="15.0" fill="rgb(254,16,54)" rx="2" ry="2" />
<text  x="187.40" y="815.5" ></text>
</g>
<g >
<title>base::ConditionVariable::Broadcast() (1 samples, 0.02%)</title><rect x="557.9" y="917" width="0.3" height="15.0" fill="rgb(244,76,19)" rx="2" ry="2" />
<text  x="560.95" y="927.5" ></text>
</g>
<g >
<title>cc::Scheduler::ProcessScheduledActions() (3 samples, 0.06%)</title><rect x="1069.3" y="789" width="0.7" height="15.0" fill="rgb(233,199,39)" rx="2" ry="2" />
<text  x="1072.28" y="799.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="81.7" y="757" width="0.3" height="15.0" fill="rgb(220,48,50)" rx="2" ry="2" />
<text  x="84.74" y="767.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (2 samples, 0.04%)</title><rect x="714.0" y="901" width="0.5" height="15.0" fill="rgb(233,64,37)" rx="2" ry="2" />
<text  x="717.04" y="911.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="1153.6" y="757" width="0.3" height="15.0" fill="rgb(251,23,31)" rx="2" ry="2" />
<text  x="1156.64" y="767.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (1 samples, 0.02%)</title><rect x="712.3" y="901" width="0.3" height="15.0" fill="rgb(228,68,48)" rx="2" ry="2" />
<text  x="715.31" y="911.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::GetBoolean(media::VideoFrameMetadata::Key, bool*) const (1 samples, 0.02%)</title><rect x="1038.6" y="581" width="0.3" height="15.0" fill="rgb(233,190,8)" rx="2" ry="2" />
<text  x="1041.60" y="591.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="132.9" y="709" width="0.3" height="15.0" fill="rgb(243,88,12)" rx="2" ry="2" />
<text  x="135.95" y="719.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="45.6" y="549" width="0.3" height="15.0" fill="rgb(219,102,4)" rx="2" ry="2" />
<text  x="48.62" y="559.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::TransportSequenceNumberProxy::AllocateSequenceNumber() (1 samples, 0.02%)</title><rect x="1161.1" y="885" width="0.2" height="15.0" fill="rgb(215,140,44)" rx="2" ry="2" />
<text  x="1164.06" y="895.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (1 samples, 0.02%)</title><rect x="652.7" y="709" width="0.2" height="15.0" fill="rgb(237,32,20)" rx="2" ry="2" />
<text  x="655.69" y="719.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="111.7" y="677" width="0.2" height="15.0" fill="rgb(212,217,20)" rx="2" ry="2" />
<text  x="114.67" y="687.5" ></text>
</g>
<g >
<title>media::VideoRendererAlgorithm::Render(base::TimeTicks, base::TimeTicks, unsigned long*) (6 samples, 0.13%)</title><rect x="1044.3" y="629" width="1.5" height="15.0" fill="rgb(224,89,13)" rx="2" ry="2" />
<text  x="1047.29" y="639.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="816.0" y="613" width="0.2" height="15.0" fill="rgb(218,70,3)" rx="2" ry="2" />
<text  x="818.96" y="623.5" ></text>
</g>
<g >
<title>CopyRow_ERMS (4 samples, 0.08%)</title><rect x="62.7" y="885" width="1.0" height="15.0" fill="rgb(211,18,1)" rx="2" ry="2" />
<text  x="65.69" y="895.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="133.4" y="661" width="0.3" height="15.0" fill="rgb(229,34,27)" rx="2" ry="2" />
<text  x="136.44" y="671.5" ></text>
</g>
<g >
<title>cricket::StunRequest::OnMessage(rtc::Message*) (1 samples, 0.02%)</title><rect x="292.5" y="725" width="0.3" height="15.0" fill="rgb(207,12,25)" rx="2" ry="2" />
<text  x="295.51" y="735.5" ></text>
</g>
<g >
<title>cc::(anonymous namespace)::TaskSetFinishedTaskImpl::~TaskSetFinishedTaskImpl() (1 samples, 0.02%)</title><rect x="1070.0" y="821" width="0.3" height="15.0" fill="rgb(249,16,48)" rx="2" ry="2" />
<text  x="1073.02" y="831.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (1 samples, 0.02%)</title><rect x="176.5" y="597" width="0.2" height="15.0" fill="rgb(238,91,51)" rx="2" ry="2" />
<text  x="179.49" y="607.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs (1 samples, 0.02%)</title><rect x="465.7" y="725" width="0.2" height="15.0" fill="rgb(242,139,5)" rx="2" ry="2" />
<text  x="468.67" y="735.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="722.2" y="709" width="0.3" height="15.0" fill="rgb(247,133,41)" rx="2" ry="2" />
<text  x="725.21" y="719.5" ></text>
</g>
<g >
<title>blink::PaintLayer::SetNeedsCompositingInputsUpdateInternal() (2 samples, 0.04%)</title><rect x="19.2" y="565" width="0.4" height="15.0" fill="rgb(220,87,54)" rx="2" ry="2" />
<text  x="22.15" y="575.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (1 samples, 0.02%)</title><rect x="284.1" y="581" width="0.2" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="287.10" y="591.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (1 samples, 0.02%)</title><rect x="66.2" y="933" width="0.2" height="15.0" fill="rgb(225,83,21)" rx="2" ry="2" />
<text  x="69.16" y="943.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::~Iter() (1 samples, 0.02%)</title><rect x="32.0" y="677" width="0.3" height="15.0" fill="rgb(243,91,16)" rx="2" ry="2" />
<text  x="35.02" y="687.5" ></text>
</g>
<g >
<title>webrtc::AudioFrameOperations::UpmixChannels(unsigned long, webrtc::AudioFrame*) (5 samples, 0.10%)</title><rect x="1137.8" y="853" width="1.2" height="15.0" fill="rgb(233,80,15)" rx="2" ry="2" />
<text  x="1140.80" y="863.5" ></text>
</g>
<g >
<title>blink::VideoFrameResourceProvider::PrepareSendToParent(blink::WebVector&lt;unsigned int&gt; const&amp;, blink::WebVector&lt;viz::TransferableResource&gt;*) (20 samples, 0.42%)</title><rect x="1033.4" y="645" width="5.0" height="15.0" fill="rgb(246,139,4)" rx="2" ry="2" />
<text  x="1036.41" y="655.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_8::__invoke(_malloc_zone_t*, unsigned long, unsigned long) (3 samples, 0.06%)</title><rect x="104.7" y="773" width="0.8" height="15.0" fill="rgb(228,67,36)" rx="2" ry="2" />
<text  x="107.75" y="783.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="346.9" y="773" width="0.3" height="15.0" fill="rgb(223,68,38)" rx="2" ry="2" />
<text  x="349.93" y="783.5" ></text>
</g>
<g >
<title>silk_decode_indices (2 samples, 0.04%)</title><rect x="1122.2" y="613" width="0.5" height="15.0" fill="rgb(208,163,22)" rx="2" ry="2" />
<text  x="1125.22" y="623.5" ></text>
</g>
<g >
<title>write (8 samples, 0.17%)</title><rect x="1087.8" y="933" width="2.0" height="15.0" fill="rgb(212,12,30)" rx="2" ry="2" />
<text  x="1090.83" y="943.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetSingletonAllowed(bool) (6 samples, 0.13%)</title><rect x="1026.0" y="917" width="1.5" height="15.0" fill="rgb(225,10,1)" rx="2" ry="2" />
<text  x="1028.99" y="927.5" ></text>
</g>
<g >
<title>pthread_mach_thread_np (1 samples, 0.02%)</title><rect x="200.7" y="805" width="0.3" height="15.0" fill="rgb(212,215,32)" rx="2" ry="2" />
<text  x="203.73" y="815.5" ></text>
</g>
<g >
<title>vpx_skin_pixel (2 samples, 0.04%)</title><rect x="484.0" y="741" width="0.5" height="15.0" fill="rgb(208,19,13)" rx="2" ry="2" />
<text  x="486.98" y="751.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (2 samples, 0.04%)</title><rect x="226.0" y="453" width="0.5" height="15.0" fill="rgb(249,135,2)" rx="2" ry="2" />
<text  x="228.96" y="463.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="574.3" y="821" width="0.5" height="15.0" fill="rgb(245,80,53)" rx="2" ry="2" />
<text  x="577.27" y="831.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="941.1" y="693" width="0.3" height="15.0" fill="rgb(212,105,43)" rx="2" ry="2" />
<text  x="944.14" y="703.5" ></text>
</g>
<g >
<title>mojo::core::ports::(anonymous namespace)::UpdateTLS(mojo::core::ports::PortLocker*, mojo::core::ports::PortLocker*) (2 samples, 0.04%)</title><rect x="114.6" y="741" width="0.5" height="15.0" fill="rgb(242,70,47)" rx="2" ry="2" />
<text  x="117.64" y="751.5" ></text>
</g>
<g >
<title>webrtc::RTCPSender::TimeToSendRTCPReport(bool) const (1 samples, 0.02%)</title><rect x="1189.5" y="949" width="0.3" height="15.0" fill="rgb(228,152,34)" rx="2" ry="2" />
<text  x="1192.51" y="959.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (13 samples, 0.27%)</title><rect x="1148.7" y="837" width="3.2" height="15.0" fill="rgb(213,178,49)" rx="2" ry="2" />
<text  x="1151.69" y="847.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (9 samples, 0.19%)</title><rect x="389.5" y="677" width="2.2" height="15.0" fill="rgb(248,135,32)" rx="2" ry="2" />
<text  x="392.48" y="687.5" ></text>
</g>
<g >
<title>rtc::TimeMillis() (1 samples, 0.02%)</title><rect x="534.2" y="821" width="0.2" height="15.0" fill="rgb(210,28,21)" rx="2" ry="2" />
<text  x="537.20" y="831.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_wake (1 samples, 0.02%)</title><rect x="857.8" y="901" width="0.2" height="15.0" fill="rgb(207,137,10)" rx="2" ry="2" />
<text  x="860.77" y="911.5" ></text>
</g>
<g >
<title>default_zone_malloc (1 samples, 0.02%)</title><rect x="23.6" y="549" width="0.3" height="15.0" fill="rgb(216,176,28)" rx="2" ry="2" />
<text  x="26.61" y="559.5" ></text>
</g>
<g >
<title>base::SequenceToken::IsValid() const (1 samples, 0.02%)</title><rect x="1030.7" y="757" width="0.2" height="15.0" fill="rgb(218,223,11)" rx="2" ry="2" />
<text  x="1033.69" y="767.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="13.5" y="821" width="0.2" height="15.0" fill="rgb(213,89,8)" rx="2" ry="2" />
<text  x="16.46" y="831.5" ></text>
</g>
<g >
<title>rtc::RateTracker::ComputeRateForInterval(long long) const (1 samples, 0.02%)</title><rect x="486.5" y="741" width="0.2" height="15.0" fill="rgb(217,96,12)" rx="2" ry="2" />
<text  x="489.45" y="751.5" ></text>
</g>
<g >
<title>rtc::OpenSSLStreamAdapter::OnEvent(rtc::StreamInterface*, int, int) (1 samples, 0.02%)</title><rect x="305.9" y="565" width="0.2" height="15.0" fill="rgb(212,12,31)" rx="2" ry="2" />
<text  x="308.87" y="575.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="267.8" y="405" width="0.2" height="15.0" fill="rgb(230,131,42)" rx="2" ry="2" />
<text  x="270.77" y="415.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="179.2" y="837" width="0.3" height="15.0" fill="rgb(209,185,41)" rx="2" ry="2" />
<text  x="182.21" y="847.5" ></text>
</g>
<g >
<title>cricket::(anonymous namespace)::SendPacketMessageData::~SendPacketMessageData() (4 samples, 0.08%)</title><rect x="232.6" y="805" width="1.0" height="15.0" fill="rgb(233,62,10)" rx="2" ry="2" />
<text  x="235.64" y="815.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::VideoStreamEncoder::OnFrame(webrtc::VideoFrame const&amp;)::$_9&gt;::~ClosureTask() (1 samples, 0.02%)</title><rect x="652.7" y="853" width="0.2" height="15.0" fill="rgb(253,25,23)" rx="2" ry="2" />
<text  x="655.69" y="863.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (16 samples, 0.34%)</title><rect x="1133.1" y="757" width="4.0" height="15.0" fill="rgb(250,129,2)" rx="2" ry="2" />
<text  x="1136.10" y="767.5" ></text>
</g>
<g >
<title>std::__Cr::vector&lt;mojo::core::RequestContext::WatchNotifyFinalizer, base::StackAllocator&lt;mojo::core::RequestContext::WatchNotifyFinalizer, 8ul&gt; &gt;::reserve(unsigned long) (1 samples, 0.02%)</title><rect x="251.2" y="565" width="0.2" height="15.0" fill="rgb(246,152,21)" rx="2" ry="2" />
<text  x="254.19" y="575.5" ></text>
</g>
<g >
<title>content::RenderWidget::UpdateVisualState() (17 samples, 0.36%)</title><rect x="25.1" y="645" width="4.2" height="15.0" fill="rgb(237,196,18)" rx="2" ry="2" />
<text  x="28.09" y="655.5" ></text>
</g>
<g >
<title>vp8cx_mb_init_quantizer (1 samples, 0.02%)</title><rect x="939.2" y="693" width="0.2" height="15.0" fill="rgb(220,31,5)" rx="2" ry="2" />
<text  x="942.16" y="703.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::AudioCodingModuleImpl::Add10MsData(webrtc::AudioFrame const&amp;) (35 samples, 0.73%)</title><rect x="683.4" y="837" width="8.6" height="15.0" fill="rgb(249,168,32)" rx="2" ry="2" />
<text  x="686.37" y="847.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="133.4" y="677" width="0.3" height="15.0" fill="rgb(251,75,6)" rx="2" ry="2" />
<text  x="136.44" y="687.5" ></text>
</g>
<g >
<title>mojo::Connector::OnHandleReadyInternal(unsigned int) (7 samples, 0.15%)</title><rect x="1071.5" y="837" width="1.7" height="15.0" fill="rgb(208,218,6)" rx="2" ry="2" />
<text  x="1074.51" y="847.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_half_loop (9 samples, 0.19%)</title><rect x="612.9" y="661" width="2.2" height="15.0" fill="rgb(233,220,16)" rx="2" ry="2" />
<text  x="615.86" y="671.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::FinalizeEventMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="236.4" y="469" width="0.2" height="15.0" fill="rgb(223,65,11)" rx="2" ry="2" />
<text  x="239.35" y="479.5" ></text>
</g>
<g >
<title>cricket::WebRtcVoiceMediaChannel::WebRtcAudioSendStream::OnData(void const*, int, int, unsigned long, unsigned long) (14 samples, 0.29%)</title><rect x="1083.1" y="885" width="3.5" height="15.0" fill="rgb(219,136,47)" rx="2" ry="2" />
<text  x="1086.13" y="895.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;), base::internal::UnretainedWrapper&lt;(anonymous namespace)::WebrtcTaskQueue&gt;, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (699 samples, 14.65%)</title><rect x="379.1" y="885" width="172.9" height="15.0" fill="rgb(237,180,24)" rx="2" ry="2" />
<text  x="382.09" y="895.5" >base::internal::Invoke..</text>
</g>
<g >
<title>rtc::CriticalSection::Enter() const (1 samples, 0.02%)</title><rect x="1168.5" y="949" width="0.2" height="15.0" fill="rgb(222,15,29)" rx="2" ry="2" />
<text  x="1171.48" y="959.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="879.0" y="885" width="0.3" height="15.0" fill="rgb(245,0,10)" rx="2" ry="2" />
<text  x="882.04" y="895.5" ></text>
</g>
<g >
<title>celt_encode_with_ec (7 samples, 0.15%)</title><rect x="842.4" y="741" width="1.8" height="15.0" fill="rgb(239,85,10)" rx="2" ry="2" />
<text  x="845.43" y="751.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::Release() const (1 samples, 0.02%)</title><rect x="202.2" y="741" width="0.3" height="15.0" fill="rgb(208,7,2)" rx="2" ry="2" />
<text  x="205.21" y="751.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_uv_block_sse2 (2 samples, 0.04%)</title><rect x="524.5" y="709" width="0.5" height="15.0" fill="rgb(243,135,42)" rx="2" ry="2" />
<text  x="527.55" y="719.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="333.3" y="805" width="0.3" height="15.0" fill="rgb(235,211,44)" rx="2" ry="2" />
<text  x="336.32" y="815.5" ></text>
</g>
<g >
<title>webrtc::LocalAudioSinkAdapter::OnData(void const*, int, int, unsigned long, unsigned long) (15 samples, 0.31%)</title><rect x="1083.1" y="901" width="3.7" height="15.0" fill="rgb(230,217,24)" rx="2" ry="2" />
<text  x="1086.13" y="911.5" ></text>
</g>
<g >
<title>webrtc::VCMGenericDecoder::Decode(webrtc::VCMEncodedFrame const&amp;, long long) (182 samples, 3.82%)</title><rect x="488.7" y="805" width="45.0" height="15.0" fill="rgb(231,46,5)" rx="2" ry="2" />
<text  x="491.68" y="815.5" >webr..</text>
</g>
<g >
<title>invocation function for block in base::MessagePumpCFRunLoopBase::PreWaitObserver(__CFRunLoopObserver*, unsigned long, void*) (1 samples, 0.02%)</title><rect x="13.2" y="773" width="0.3" height="15.0" fill="rgb(248,52,36)" rx="2" ry="2" />
<text  x="16.22" y="783.5" ></text>
</g>
<g >
<title>vp8_loop_filter_frame_init (1 samples, 0.02%)</title><rect x="635.9" y="693" width="0.2" height="15.0" fill="rgb(228,131,27)" rx="2" ry="2" />
<text  x="638.87" y="703.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="281.1" y="613" width="0.3" height="15.0" fill="rgb(220,218,6)" rx="2" ry="2" />
<text  x="284.13" y="623.5" ></text>
</g>
<g >
<title>tlv_get_addr (1 samples, 0.02%)</title><rect x="380.1" y="853" width="0.2" height="15.0" fill="rgb(208,209,0)" rx="2" ry="2" />
<text  x="383.08" y="863.5" ></text>
</g>
<g >
<title>base::FileDescriptorWatcher::FileDescriptorWatcher(scoped_refptr&lt;base::SingleThreadTaskRunner&gt;) (3 samples, 0.06%)</title><rect x="571.3" y="933" width="0.7" height="15.0" fill="rgb(240,185,33)" rx="2" ry="2" />
<text  x="574.30" y="943.5" ></text>
</g>
<g >
<title>vp8_encode_frame (303 samples, 6.35%)</title><rect x="383.3" y="741" width="75.0" height="15.0" fill="rgb(226,31,36)" rx="2" ry="2" />
<text  x="386.30" y="751.5" >vp8_enco..</text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="45.6" y="565" width="0.3" height="15.0" fill="rgb(243,131,12)" rx="2" ry="2" />
<text  x="48.62" y="575.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (4 samples, 0.08%)</title><rect x="386.5" y="677" width="1.0" height="15.0" fill="rgb(210,54,15)" rx="2" ry="2" />
<text  x="389.51" y="687.5" ></text>
</g>
<g >
<title>base::internal::(anonymous namespace)::WorkerThreadDelegate::EnqueueTaskSource(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (4 samples, 0.08%)</title><rect x="122.8" y="709" width="1.0" height="15.0" fill="rgb(244,164,0)" rx="2" ry="2" />
<text  x="125.81" y="719.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="228.2" y="581" width="0.2" height="15.0" fill="rgb(236,192,12)" rx="2" ry="2" />
<text  x="231.19" y="591.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1042.8" y="597" width="0.3" height="15.0" fill="rgb(223,115,36)" rx="2" ry="2" />
<text  x="1045.81" y="607.5" ></text>
</g>
<g >
<title>webrtc::DefaultTemporalLayersChecker::CheckTemporalConfig(bool, webrtc::Vp8FrameConfig const&amp;) (1 samples, 0.02%)</title><rect x="652.4" y="757" width="0.3" height="15.0" fill="rgb(230,86,2)" rx="2" ry="2" />
<text  x="655.44" y="767.5" ></text>
</g>
<g >
<title>base::mac::ScopedNSAutoreleasePool::ScopedNSAutoreleasePool() (2 samples, 0.04%)</title><rect x="1019.3" y="965" width="0.5" height="15.0" fill="rgb(238,94,32)" rx="2" ry="2" />
<text  x="1022.31" y="975.5" ></text>
</g>
<g >
<title>opus_encode_native (62 samples, 1.30%)</title><rect x="534.7" y="757" width="15.3" height="15.0" fill="rgb(231,165,6)" rx="2" ry="2" />
<text  x="537.69" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (4 samples, 0.08%)</title><rect x="345.4" y="805" width="1.0" height="15.0" fill="rgb(236,12,7)" rx="2" ry="2" />
<text  x="348.45" y="815.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (4 samples, 0.08%)</title><rect x="371.2" y="885" width="1.0" height="15.0" fill="rgb(212,98,37)" rx="2" ry="2" />
<text  x="374.17" y="895.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::WriteChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (5 samples, 0.10%)</title><rect x="169.8" y="581" width="1.2" height="15.0" fill="rgb(232,85,29)" rx="2" ry="2" />
<text  x="172.81" y="591.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1159.3" y="757" width="0.3" height="15.0" fill="rgb(230,183,41)" rx="2" ry="2" />
<text  x="1162.32" y="767.5" ></text>
</g>
<g >
<title>vp8_get_compressed_data (312 samples, 6.54%)</title><rect x="883.0" y="757" width="77.2" height="15.0" fill="rgb(241,121,13)" rx="2" ry="2" />
<text  x="886.00" y="767.5" >vp8_get_..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="1035.4" y="501" width="0.2" height="15.0" fill="rgb(247,70,24)" rx="2" ry="2" />
<text  x="1038.39" y="511.5" ></text>
</g>
<g >
<title>mojo::Message::Message(unsigned int, unsigned int, unsigned long, unsigned long, std::__Cr::vector&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt;, std::__Cr::allocator&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt; &gt; &gt;*) (1 samples, 0.02%)</title><rect x="1048.5" y="645" width="0.2" height="15.0" fill="rgb(215,215,31)" rx="2" ry="2" />
<text  x="1051.50" y="655.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderAudio::SendAudio(webrtc::AudioFrameType, signed char, unsigned int, unsigned char const*, unsigned long) (4 samples, 0.08%)</title><rect x="853.8" y="805" width="1.0" height="15.0" fill="rgb(230,67,6)" rx="2" ry="2" />
<text  x="856.81" y="815.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1027.2" y="901" width="0.3" height="15.0" fill="rgb(240,3,52)" rx="2" ry="2" />
<text  x="1030.22" y="911.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::RtpPacket() (2 samples, 0.04%)</title><rect x="259.9" y="725" width="0.4" height="15.0" fill="rgb(245,103,5)" rx="2" ry="2" />
<text  x="262.85" y="735.5" ></text>
</g>
<g >
<title>blink::LayoutReplaced::Paint(blink::PaintInfo const&amp;) const (1 samples, 0.02%)</title><rect x="26.8" y="213" width="0.3" height="15.0" fill="rgb(206,65,52)" rx="2" ry="2" />
<text  x="29.82" y="223.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::OnPortStatusChanged() (23 samples, 0.48%)</title><rect x="108.5" y="757" width="5.6" height="15.0" fill="rgb(249,166,37)" rx="2" ry="2" />
<text  x="111.46" y="767.5" ></text>
</g>
<g >
<title>IPC::ChannelMojo::Send(IPC::Message*) (13 samples, 0.27%)</title><rect x="168.6" y="837" width="3.2" height="15.0" fill="rgb(240,131,6)" rx="2" ry="2" />
<text  x="171.57" y="847.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="312.1" y="581" width="0.2" height="15.0" fill="rgb(227,16,44)" rx="2" ry="2" />
<text  x="315.05" y="591.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (1 samples, 0.02%)</title><rect x="284.6" y="549" width="0.2" height="15.0" fill="rgb(253,198,41)" rx="2" ry="2" />
<text  x="287.59" y="559.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::RunCompositingLifecyclePhase(blink::DocumentLifecycle::LifecycleState) (5 samples, 0.10%)</title><rect x="25.3" y="533" width="1.3" height="15.0" fill="rgb(251,56,32)" rx="2" ry="2" />
<text  x="28.34" y="543.5" ></text>
</g>
<g >
<title>opus_fft_impl (1 samples, 0.02%)</title><rect x="994.8" y="693" width="0.3" height="15.0" fill="rgb(252,194,43)" rx="2" ry="2" />
<text  x="997.82" y="703.5" ></text>
</g>
<g >
<title>blink::ChromeClientImpl::AddMessageToConsole(blink::LocalFrame*, blink::mojom::ConsoleMessageSource, blink::mojom::ConsoleMessageLevel, WTF::String const&amp;, unsigned int, WTF::String const&amp;, WTF::String const&amp;) (1 samples, 0.02%)</title><rect x="19.9" y="261" width="0.2" height="15.0" fill="rgb(209,176,15)" rx="2" ry="2" />
<text  x="22.90" y="271.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::is_end() const (2 samples, 0.04%)</title><rect x="42.7" y="629" width="0.4" height="15.0" fill="rgb(211,208,8)" rx="2" ry="2" />
<text  x="45.65" y="639.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="652.2" y="629" width="0.2" height="15.0" fill="rgb(245,66,25)" rx="2" ry="2" />
<text  x="655.20" y="639.5" ></text>
</g>
<g >
<title>gpu::gles2::GLES2Implementation::VerifySyncTokensCHROMIUM(signed char**, int) (1 samples, 0.02%)</title><rect x="1037.9" y="581" width="0.2" height="15.0" fill="rgb(239,222,36)" rx="2" ry="2" />
<text  x="1040.86" y="591.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.02%)</title><rect x="1059.9" y="933" width="0.2" height="15.0" fill="rgb(219,41,54)" rx="2" ry="2" />
<text  x="1062.88" y="943.5" ></text>
</g>
<g >
<title>base::time_internal::SaturatedAdd(long long, base::TimeDelta) (1 samples, 0.02%)</title><rect x="1141.8" y="933" width="0.2" height="15.0" fill="rgb(240,116,47)" rx="2" ry="2" />
<text  x="1144.76" y="943.5" ></text>
</g>
<g >
<title>rtc::TimeMillis() (1 samples, 0.02%)</title><rect x="581.4" y="805" width="0.3" height="15.0" fill="rgb(221,110,15)" rx="2" ry="2" />
<text  x="584.45" y="815.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="30.0" y="677" width="0.3" height="15.0" fill="rgb(237,108,44)" rx="2" ry="2" />
<text  x="33.04" y="687.5" ></text>
</g>
<g >
<title>vp8_denoiser_denoise_mb (20 samples, 0.42%)</title><rect x="909.0" y="677" width="4.9" height="15.0" fill="rgb(248,8,28)" rx="2" ry="2" />
<text  x="911.98" y="687.5" ></text>
</g>
<g >
<title>thread_start (444 samples, 9.31%)</title><rect x="87.2" y="1061" width="109.8" height="15.0" fill="rgb(242,13,51)" rx="2" ry="2" />
<text  x="90.18" y="1071.5" >thread_start</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (3 samples, 0.06%)</title><rect x="1154.9" y="821" width="0.7" height="15.0" fill="rgb(251,28,53)" rx="2" ry="2" />
<text  x="1157.87" y="831.5" ></text>
</g>
<g >
<title>silk_encode_pulses (1 samples, 0.02%)</title><rect x="543.1" y="709" width="0.3" height="15.0" fill="rgb(219,207,48)" rx="2" ry="2" />
<text  x="546.10" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoSomeWork() (31 samples, 0.65%)</title><rect x="1066.6" y="933" width="7.6" height="15.0" fill="rgb(254,111,9)" rx="2" ry="2" />
<text  x="1069.56" y="943.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_y_sse2 (3 samples, 0.06%)</title><rect x="839.0" y="693" width="0.7" height="15.0" fill="rgb(213,101,35)" rx="2" ry="2" />
<text  x="841.97" y="703.5" ></text>
</g>
<g >
<title>vp8_encode_inter16x16 (25 samples, 0.52%)</title><rect x="586.1" y="693" width="6.2" height="15.0" fill="rgb(209,64,48)" rx="2" ry="2" />
<text  x="589.15" y="703.5" ></text>
</g>
<g >
<title>vp8dx_receive_compressed_data (75 samples, 1.57%)</title><rect x="822.1" y="741" width="18.6" height="15.0" fill="rgb(214,201,29)" rx="2" ry="2" />
<text  x="825.15" y="751.5" ></text>
</g>
<g >
<title>vp8cx_pick_filter_level_fast (4 samples, 0.08%)</title><rect x="795.2" y="725" width="1.0" height="15.0" fill="rgb(207,102,4)" rx="2" ry="2" />
<text  x="798.18" y="735.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::~UserMessageImpl() (1 samples, 0.02%)</title><rect x="320.2" y="661" width="0.3" height="15.0" fill="rgb(234,28,20)" rx="2" ry="2" />
<text  x="323.21" y="671.5" ></text>
</g>
<g >
<title>media::VideoFrame::WrapExternalYuvData(media::VideoPixelFormat, gfx::Size const&amp;, gfx::Rect const&amp;, gfx::Size const&amp;, int, int, int, unsigned char*, unsigned char*, unsigned char*, base::TimeDelta) (1 samples, 0.02%)</title><rect x="533.2" y="661" width="0.3" height="15.0" fill="rgb(247,186,51)" rx="2" ry="2" />
<text  x="536.21" y="671.5" ></text>
</g>
<g >
<title>mach_msg (23 samples, 0.48%)</title><rect x="559.9" y="917" width="5.7" height="15.0" fill="rgb(218,47,53)" rx="2" ry="2" />
<text  x="562.92" y="927.5" ></text>
</g>
<g >
<title>vp8_decode_mb_tokens (50 samples, 1.05%)</title><rect x="661.8" y="709" width="12.4" height="15.0" fill="rgb(251,122,36)" rx="2" ry="2" />
<text  x="664.84" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::GetHighestPendingPriority() const (3 samples, 0.06%)</title><rect x="330.6" y="869" width="0.7" height="15.0" fill="rgb(237,9,48)" rx="2" ry="2" />
<text  x="333.60" y="879.5" ></text>
</g>
<g >
<title>blink::V8EventHandlerNonNull::InvokeWithoutRunnabilityCheck(blink::bindings::V8ValueOrScriptWrappableAdapter, WTF::Vector&lt;blink::ScriptValue, 0u, WTF::PartitionAllocator&gt; const&amp;) (1 samples, 0.02%)</title><rect x="19.9" y="549" width="0.2" height="15.0" fill="rgb(215,98,43)" rx="2" ry="2" />
<text  x="22.90" y="559.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::FindOrCreateExtensionInfo(int) (1 samples, 0.02%)</title><rect x="310.6" y="485" width="0.2" height="15.0" fill="rgb(221,134,39)" rx="2" ry="2" />
<text  x="313.57" y="495.5" ></text>
</g>
<g >
<title>base::RunLoop::Delegate::ShouldQuitWhenIdle() (1 samples, 0.02%)</title><rect x="13.2" y="709" width="0.3" height="15.0" fill="rgb(213,152,52)" rx="2" ry="2" />
<text  x="16.22" y="719.5" ></text>
</g>
<g >
<title>webrtc::SendStatisticsProxy::DataCountersUpdated(webrtc::StreamDataCounters const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="1160.1" y="885" width="0.2" height="15.0" fill="rgb(244,228,7)" rx="2" ry="2" />
<text  x="1163.07" y="895.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::internal::ThreadPoolImpl::GetThreadGroupForTraits(base::TaskTraits const&amp;) (1 samples, 0.02%)</title><rect x="694.3" y="933" width="0.2" height="15.0" fill="rgb(214,192,39)" rx="2" ry="2" />
<text  x="697.25" y="943.5" ></text>
</g>
<g >
<title>webrtc::RateStatistics::Update(unsigned long, long long) (1 samples, 0.02%)</title><rect x="486.9" y="693" width="0.3" height="15.0" fill="rgb(227,208,4)" rx="2" ry="2" />
<text  x="489.95" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="1181.6" y="773" width="0.2" height="15.0" fill="rgb(228,157,23)" rx="2" ry="2" />
<text  x="1184.59" y="783.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (3 samples, 0.06%)</title><rect x="1025.2" y="821" width="0.8" height="15.0" fill="rgb(238,110,45)" rx="2" ry="2" />
<text  x="1028.25" y="831.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (4 samples, 0.08%)</title><rect x="459.5" y="693" width="1.0" height="15.0" fill="rgb(216,6,53)" rx="2" ry="2" />
<text  x="462.49" y="703.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="840.5" y="693" width="0.2" height="15.0" fill="rgb(249,204,25)" rx="2" ry="2" />
<text  x="843.45" y="703.5" ></text>
</g>
<g >
<title>tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="228.2" y="485" width="0.2" height="15.0" fill="rgb(245,172,3)" rx="2" ry="2" />
<text  x="231.19" y="495.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="251.7" y="501" width="0.2" height="15.0" fill="rgb(212,43,37)" rx="2" ry="2" />
<text  x="254.69" y="511.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::DidRunTask() (4 samples, 0.08%)</title><rect x="208.9" y="885" width="1.0" height="15.0" fill="rgb(216,166,43)" rx="2" ry="2" />
<text  x="211.89" y="895.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="182.4" y="853" width="0.3" height="15.0" fill="rgb(244,10,41)" rx="2" ry="2" />
<text  x="185.42" y="863.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (2 samples, 0.04%)</title><rect x="651.5" y="741" width="0.4" height="15.0" fill="rgb(220,3,19)" rx="2" ry="2" />
<text  x="654.45" y="751.5" ></text>
</g>
<g >
<title>webrtc::SendDelayStats::OnSentPacket(int, long long) (2 samples, 0.04%)</title><rect x="292.0" y="773" width="0.5" height="15.0" fill="rgb(245,41,32)" rx="2" ry="2" />
<text  x="295.01" y="783.5" ></text>
</g>
<g >
<title>compute_theta (1 samples, 0.02%)</title><rect x="843.2" y="661" width="0.2" height="15.0" fill="rgb(250,207,47)" rx="2" ry="2" />
<text  x="846.17" y="671.5" ></text>
</g>
<g >
<title>backtrace (1 samples, 0.02%)</title><rect x="1024.8" y="869" width="0.2" height="15.0" fill="rgb(216,63,10)" rx="2" ry="2" />
<text  x="1027.75" y="879.5" ></text>
</g>
<g >
<title>base::internal::ScopedBlockingCallWithBaseSyncPrimitives::~ScopedBlockingCallWithBaseSyncPrimitives() (1 samples, 0.02%)</title><rect x="1165.3" y="917" width="0.2" height="15.0" fill="rgb(223,2,29)" rx="2" ry="2" />
<text  x="1168.26" y="927.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="1072.5" y="549" width="0.2" height="15.0" fill="rgb(250,190,3)" rx="2" ry="2" />
<text  x="1075.49" y="559.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::MachMessageSendLocked(mach_msg_header_t*) (4 samples, 0.08%)</title><rect x="1046.8" y="405" width="1.0" height="15.0" fill="rgb(254,178,21)" rx="2" ry="2" />
<text  x="1049.77" y="415.5" ></text>
</g>
<g >
<title>cricket::SrtpSession::ProtectRtp(void*, int, int, int*, long long*) (8 samples, 0.17%)</title><rect x="236.8" y="773" width="2.0" height="15.0" fill="rgb(226,1,28)" rx="2" ry="2" />
<text  x="239.85" y="783.5" ></text>
</g>
<g >
<title>mach_msg_trap (23 samples, 0.48%)</title><rect x="701.4" y="901" width="5.7" height="15.0" fill="rgb(216,58,47)" rx="2" ry="2" />
<text  x="704.43" y="911.5" ></text>
</g>
<g >
<title>blink::JSBasedEventListener::Invoke(blink::ExecutionContext*, blink::Event*) (1 samples, 0.02%)</title><rect x="19.9" y="581" width="0.2" height="15.0" fill="rgb(216,62,7)" rx="2" ry="2" />
<text  x="22.90" y="591.5" ></text>
</g>
<g >
<title>_CFAutoreleasePoolPush (1 samples, 0.02%)</title><rect x="871.4" y="933" width="0.2" height="15.0" fill="rgb(243,135,48)" rx="2" ry="2" />
<text  x="874.38" y="943.5" ></text>
</g>
<g >
<title>base::internal::WorkerThreadStack::Peek() const (1 samples, 0.02%)</title><rect x="559.2" y="933" width="0.2" height="15.0" fill="rgb(250,187,48)" rx="2" ry="2" />
<text  x="562.18" y="943.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="309.6" y="437" width="0.2" height="15.0" fill="rgb(241,140,50)" rx="2" ry="2" />
<text  x="312.58" y="447.5" ></text>
</g>
<g >
<title>blink::scheduler::WorkerThread::SimpleThreadImpl::Run  0x644a05 (36 samples, 0.75%)</title><rect x="1065.3" y="1077" width="8.9" height="15.0" fill="rgb(249,193,6)" rx="2" ry="2" />
<text  x="1068.32" y="1087.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;gfx::mojom::TransformDataView, gfx::Transform const&gt;::Serialize(gfx::Transform const&amp;, mojo::internal::Buffer*, gfx::mojom::internal::Transform_Data::BufferWriter*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1068.5" y="597" width="0.3" height="15.0" fill="rgb(213,66,17)" rx="2" ry="2" />
<text  x="1071.54" y="607.5" ></text>
</g>
<g >
<title>base::RunLoop::RunWithTimeout(base::TimeDelta) (2 samples, 0.04%)</title><rect x="213.8" y="965" width="0.5" height="15.0" fill="rgb(222,174,38)" rx="2" ry="2" />
<text  x="216.84" y="975.5" ></text>
</g>
<g >
<title>VP8_UVSSE (2 samples, 0.04%)</title><rect x="403.8" y="661" width="0.5" height="15.0" fill="rgb(222,151,45)" rx="2" ry="2" />
<text  x="406.83" y="671.5" ></text>
</g>
<g >
<title>free_tiny (2 samples, 0.04%)</title><rect x="379.6" y="853" width="0.5" height="15.0" fill="rgb(215,89,33)" rx="2" ry="2" />
<text  x="382.58" y="863.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetIOAllowed(bool) (1 samples, 0.02%)</title><rect x="878.1" y="917" width="0.2" height="15.0" fill="rgb(234,220,52)" rx="2" ry="2" />
<text  x="881.05" y="927.5" ></text>
</g>
<g >
<title>base::SequencedTaskRunnerHandle::~SequencedTaskRunnerHandle() (1 samples, 0.02%)</title><rect x="570.8" y="917" width="0.3" height="15.0" fill="rgb(249,57,17)" rx="2" ry="2" />
<text  x="573.81" y="927.5" ></text>
</g>
<g >
<title>mach_msg_trap (7 samples, 0.15%)</title><rect x="79.0" y="709" width="1.8" height="15.0" fill="rgb(219,139,42)" rx="2" ry="2" />
<text  x="82.02" y="719.5" ></text>
</g>
<g >
<title>base::internal::WeakReferenceOwner::Invalidate() (1 samples, 0.02%)</title><rect x="1067.1" y="773" width="0.2" height="15.0" fill="rgb(222,26,41)" rx="2" ry="2" />
<text  x="1070.05" y="783.5" ></text>
</g>
<g >
<title>vp8_deblock (21 samples, 0.44%)</title><rect x="963.2" y="725" width="5.1" height="15.0" fill="rgb(242,194,37)" rx="2" ry="2" />
<text  x="966.15" y="735.5" ></text>
</g>
<g >
<title>base::debug::StackTrace::StackTrace() (2 samples, 0.04%)</title><rect x="575.5" y="901" width="0.5" height="15.0" fill="rgb(228,131,54)" rx="2" ry="2" />
<text  x="578.51" y="911.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1102.7" y="949" width="0.2" height="15.0" fill="rgb(220,8,29)" rx="2" ry="2" />
<text  x="1105.68" y="959.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="64.7" y="853" width="0.2" height="15.0" fill="rgb(242,104,42)" rx="2" ry="2" />
<text  x="67.67" y="863.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="284.6" y="645" width="0.2" height="15.0" fill="rgb(221,87,8)" rx="2" ry="2" />
<text  x="287.59" y="655.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="370.2" y="901" width="0.2" height="15.0" fill="rgb(235,44,46)" rx="2" ry="2" />
<text  x="373.18" y="911.5" ></text>
</g>
<g >
<title>blink::MediaStreamVideoRendererSink::FrameDeliverer::OnVideoFrame(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks) (3 samples, 0.06%)</title><rect x="139.4" y="437" width="0.7" height="15.0" fill="rgb(252,17,37)" rx="2" ry="2" />
<text  x="142.38" y="447.5" ></text>
</g>
<g >
<title>vp8_loop_filter_row_normal (8 samples, 0.17%)</title><rect x="678.4" y="709" width="2.0" height="15.0" fill="rgb(251,201,7)" rx="2" ry="2" />
<text  x="681.42" y="719.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="569.8" y="917" width="0.3" height="15.0" fill="rgb(222,144,52)" rx="2" ry="2" />
<text  x="572.82" y="927.5" ></text>
</g>
<g >
<title>mach_port_mod_refs (3 samples, 0.06%)</title><rect x="1036.9" y="469" width="0.7" height="15.0" fill="rgb(213,45,15)" rx="2" ry="2" />
<text  x="1039.87" y="479.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (2 samples, 0.04%)</title><rect x="226.0" y="469" width="0.5" height="15.0" fill="rgb(241,9,5)" rx="2" ry="2" />
<text  x="228.96" y="479.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (3 samples, 0.06%)</title><rect x="1154.9" y="789" width="0.7" height="15.0" fill="rgb(253,226,52)" rx="2" ry="2" />
<text  x="1157.87" y="799.5" ></text>
</g>
<g >
<title>webrtc::SendStatisticsProxy::GetStatsEntry(unsigned int) (1 samples, 0.02%)</title><rect x="1178.1" y="917" width="0.3" height="15.0" fill="rgb(253,225,26)" rx="2" ry="2" />
<text  x="1181.13" y="927.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="1183.3" y="885" width="0.3" height="15.0" fill="rgb(213,102,22)" rx="2" ry="2" />
<text  x="1186.32" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="1181.6" y="805" width="0.2" height="15.0" fill="rgb(253,11,27)" rx="2" ry="2" />
<text  x="1184.59" y="815.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (10 samples, 0.21%)</title><rect x="257.1" y="645" width="2.5" height="15.0" fill="rgb(245,175,47)" rx="2" ry="2" />
<text  x="260.13" y="655.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker() (569 samples, 11.93%)</title><rect x="566.6" y="997" width="140.8" height="15.0" fill="rgb(227,224,0)" rx="2" ry="2" />
<text  x="569.60" y="1007.5" >base::internal::W..</text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (17 samples, 0.36%)</title><rect x="286.6" y="709" width="4.2" height="15.0" fill="rgb(219,63,24)" rx="2" ry="2" />
<text  x="289.57" y="719.5" ></text>
</g>
<g >
<title>webrtc::RTCPSender::SendCompoundRTCP(webrtc::RTCPSender::FeedbackState const&amp;, std::__Cr::set&lt;webrtc::RTCPPacketType, std::__Cr::less&lt;webrtc::RTCPPacketType&gt;, std::__Cr::allocator&lt;webrtc::RTCPPacketType&gt; &gt; const&amp;, int, unsigned short const*) (1 samples, 0.02%)</title><rect x="1189.3" y="933" width="0.2" height="15.0" fill="rgb(236,81,33)" rx="2" ry="2" />
<text  x="1192.26" y="943.5" ></text>
</g>
<g >
<title>mach_msg_trap (6 samples, 0.13%)</title><rect x="708.4" y="917" width="1.4" height="15.0" fill="rgb(207,132,43)" rx="2" ry="2" />
<text  x="711.35" y="927.5" ></text>
</g>
<g >
<title>IPC::Message::EnsureMessageAttachmentSet() (1 samples, 0.02%)</title><rect x="253.4" y="629" width="0.3" height="15.0" fill="rgb(240,46,12)" rx="2" ry="2" />
<text  x="256.42" y="639.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (3 samples, 0.06%)</title><rect x="1136.3" y="677" width="0.8" height="15.0" fill="rgb(205,81,24)" rx="2" ry="2" />
<text  x="1139.32" y="687.5" ></text>
</g>
<g >
<title>cc::ProxyMain::BeginMainFrame(std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt;) (24 samples, 0.50%)</title><rect x="23.4" y="661" width="5.9" height="15.0" fill="rgb(250,39,22)" rx="2" ry="2" />
<text  x="26.36" y="671.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_8::__invoke(_malloc_zone_t*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="1039.3" y="517" width="0.3" height="15.0" fill="rgb(212,171,31)" rx="2" ry="2" />
<text  x="1042.35" y="527.5" ></text>
</g>
<g >
<title>IOSurfaceClientLock (2 samples, 0.04%)</title><rect x="65.2" y="901" width="0.5" height="15.0" fill="rgb(237,102,22)" rx="2" ry="2" />
<text  x="68.17" y="911.5" ></text>
</g>
<g >
<title>base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread::ScopedSetSequenceLocalStorageMapForCurrentThread(base::internal::SequenceLocalStorageMap*) (1 samples, 0.02%)</title><rect x="572.0" y="933" width="0.3" height="15.0" fill="rgb(236,122,23)" rx="2" ry="2" />
<text  x="575.05" y="943.5" ></text>
</g>
<g >
<title>mojo::core::RequestContext::RequestContext(mojo::core::RequestContext::Source) (4 samples, 0.08%)</title><rect x="118.4" y="837" width="0.9" height="15.0" fill="rgb(217,103,53)" rx="2" ry="2" />
<text  x="121.35" y="847.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::RunPrePaintLifecyclePhase(blink::DocumentLifecycle::LifecycleState) (5 samples, 0.10%)</title><rect x="27.8" y="533" width="1.2" height="15.0" fill="rgb(214,15,19)" rx="2" ry="2" />
<text  x="30.81" y="543.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (base::sequence_manager::internal::TaskQueueImpl::*)(), base::internal::UnretainedWrapper&lt;base::sequence_manager::internal::TaskQueueImpl&gt; &gt;, void ()&gt;::Run(base::internal::BindStateBase*) (2 samples, 0.04%)</title><rect x="340.3" y="821" width="0.4" height="15.0" fill="rgb(221,44,29)" rx="2" ry="2" />
<text  x="343.25" y="831.5" ></text>
</g>
<g >
<title>cricket::P2PTransportChannel::CheckAndPing() (3 samples, 0.06%)</title><rect x="292.5" y="805" width="0.7" height="15.0" fill="rgb(250,70,42)" rx="2" ry="2" />
<text  x="295.51" y="815.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="30.5" y="629" width="0.3" height="15.0" fill="rgb(215,50,1)" rx="2" ry="2" />
<text  x="33.53" y="639.5" ></text>
</g>
<g >
<title>silk_encode_frame_FLP (21 samples, 0.44%)</title><rect x="685.3" y="725" width="5.2" height="15.0" fill="rgb(232,2,33)" rx="2" ry="2" />
<text  x="688.35" y="735.5" ></text>
</g>
<g >
<title>webrtc::RTCPSender::SendRTCP(webrtc::RTCPSender::FeedbackState const&amp;, webrtc::RTCPPacketType, int, unsigned short const*) (1 samples, 0.02%)</title><rect x="1189.3" y="949" width="0.2" height="15.0" fill="rgb(238,156,54)" rx="2" ry="2" />
<text  x="1192.26" y="959.5" ></text>
</g>
<g >
<title>webrtc::VCMGenericDecoder::Decode(webrtc::VCMEncodedFrame const&amp;, long long) (123 samples, 2.58%)</title><rect x="963.2" y="805" width="30.4" height="15.0" fill="rgb(244,118,14)" rx="2" ry="2" />
<text  x="966.15" y="815.5" >we..</text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="717.8" y="837" width="0.4" height="15.0" fill="rgb(223,79,3)" rx="2" ry="2" />
<text  x="720.75" y="847.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::InterfaceEndpoint::SendMessage(mojo::Message*) (8 samples, 0.17%)</title><rect x="1046.5" y="629" width="2.0" height="15.0" fill="rgb(244,17,19)" rx="2" ry="2" />
<text  x="1049.52" y="639.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketReceived::RtpPacketReceived() (2 samples, 0.04%)</title><rect x="260.6" y="741" width="0.5" height="15.0" fill="rgb(221,172,45)" rx="2" ry="2" />
<text  x="263.60" y="751.5" ></text>
</g>
<g >
<title>blink::GraphicsLayerUpdater::UpdateRecursive(blink::PaintLayer&amp;, blink::GraphicsLayerUpdater::UpdateType, blink::GraphicsLayerUpdater::UpdateContext&amp;, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 0.04%)</title><rect x="26.1" y="405" width="0.5" height="15.0" fill="rgb(240,183,5)" rx="2" ry="2" />
<text  x="29.08" y="415.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (4 samples, 0.08%)</title><rect x="960.2" y="693" width="1.0" height="15.0" fill="rgb(246,225,29)" rx="2" ry="2" />
<text  x="963.18" y="703.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::SendMessageLocked(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (5 samples, 0.10%)</title><rect x="169.8" y="549" width="1.2" height="15.0" fill="rgb(205,157,8)" rx="2" ry="2" />
<text  x="172.81" y="559.5" ></text>
</g>
<g >
<title>vpx_variance16x16_avx2 (3 samples, 0.06%)</title><rect x="931.2" y="677" width="0.8" height="15.0" fill="rgb(217,5,26)" rx="2" ry="2" />
<text  x="934.24" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="358.3" y="853" width="0.3" height="15.0" fill="rgb(244,203,45)" rx="2" ry="2" />
<text  x="361.31" y="863.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (3 samples, 0.06%)</title><rect x="712.8" y="917" width="0.7" height="15.0" fill="rgb(246,213,20)" rx="2" ry="2" />
<text  x="715.81" y="927.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::~UserMessageImpl() (3 samples, 0.06%)</title><rect x="1054.7" y="661" width="0.7" height="15.0" fill="rgb(252,37,1)" rx="2" ry="2" />
<text  x="1057.68" y="671.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1032.2" y="677" width="0.2" height="15.0" fill="rgb(252,172,50)" rx="2" ry="2" />
<text  x="1035.17" y="687.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="1035.4" y="517" width="0.2" height="15.0" fill="rgb(244,223,10)" rx="2" ry="2" />
<text  x="1038.39" y="527.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::TakeTask(base::internal::TaskSource::RunIntent) (1 samples, 0.02%)</title><rect x="1022.8" y="949" width="0.2" height="15.0" fill="rgb(211,105,25)" rx="2" ry="2" />
<text  x="1025.77" y="959.5" ></text>
</g>
<g >
<title>blink::PaintLayerCompositor::UpdateIfNeededRecursiveInternal(blink::DocumentLifecycle::LifecycleState, blink::CompositingReasonsStats&amp;) (5 samples, 0.10%)</title><rect x="25.3" y="501" width="1.3" height="15.0" fill="rgb(242,226,27)" rx="2" ry="2" />
<text  x="28.34" y="511.5" ></text>
</g>
<g >
<title>IPC::(anonymous namespace)::ChannelAssociatedGroupController::SendMessage(mojo::Message*) (7 samples, 0.15%)</title><rect x="166.3" y="757" width="1.8" height="15.0" fill="rgb(252,148,2)" rx="2" ry="2" />
<text  x="169.34" y="767.5" ></text>
</g>
<g >
<title>cc::ProxyMain::SetNeedsAnimate() (2 samples, 0.04%)</title><rect x="19.2" y="485" width="0.4" height="15.0" fill="rgb(248,208,43)" rx="2" ry="2" />
<text  x="22.15" y="495.5" ></text>
</g>
<g >
<title>webrtc::PacedSender::InsertPacket(webrtc::RtpPacketSender::Priority, unsigned int, unsigned short, long long, unsigned long, bool) (1 samples, 0.02%)</title><rect x="854.6" y="757" width="0.2" height="15.0" fill="rgb(230,109,27)" rx="2" ry="2" />
<text  x="857.55" y="767.5" ></text>
</g>
<g >
<title>webrtc::AudioDecoder::Decode(unsigned char const*, unsigned long, int, unsigned long, short*, webrtc::AudioDecoder::SpeechType*) (40 samples, 0.84%)</title><rect x="1115.3" y="741" width="9.9" height="15.0" fill="rgb(253,38,12)" rx="2" ry="2" />
<text  x="1118.29" y="751.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::OnFrame(webrtc::VideoFrame const&amp;) (1 samples, 0.02%)</title><rect x="682.9" y="725" width="0.2" height="15.0" fill="rgb(217,181,40)" rx="2" ry="2" />
<text  x="685.87" y="735.5" ></text>
</g>
<g >
<title>rtc::PlatformThread::StartThread(void*) (39 samples, 0.82%)</title><rect x="1168.7" y="1013" width="9.7" height="15.0" fill="rgb(209,127,51)" rx="2" ry="2" />
<text  x="1171.73" y="1023.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoSender::DeliverRtcp(unsigned char const*, unsigned long) (8 samples, 0.17%)</title><rect x="274.0" y="757" width="1.9" height="15.0" fill="rgb(218,211,13)" rx="2" ry="2" />
<text  x="276.95" y="767.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="357.3" y="789" width="0.3" height="15.0" fill="rgb(245,68,15)" rx="2" ry="2" />
<text  x="360.32" y="799.5" ></text>
</g>
<g >
<title>non-virtual thunk to content::ProcessedLocalAudioSource::Capture(media::AudioBus const*, int, double, bool) (1 samples, 0.02%)</title><rect x="1086.8" y="965" width="0.3" height="15.0" fill="rgb(216,34,36)" rx="2" ry="2" />
<text  x="1089.84" y="975.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::WriteChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (4 samples, 0.08%)</title><rect x="1046.8" y="453" width="1.0" height="15.0" fill="rgb(241,105,34)" rx="2" ry="2" />
<text  x="1049.77" y="463.5" ></text>
</g>
<g >
<title>base::HistogramBase::CheckName(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;) const (1 samples, 0.02%)</title><rect x="1071.8" y="549" width="0.2" height="15.0" fill="rgb(207,62,23)" rx="2" ry="2" />
<text  x="1074.75" y="559.5" ></text>
</g>
<g >
<title>base::internal::BindState&lt;void (*)(int, int, int, media::VideoFrame const*, unsigned char*, int, unsigned char*, int, base::OnceCallback&lt;void ()&gt;), int, int, int, base::internal::UnretainedWrapper&lt;media::VideoFrame&gt;, unsigned char*, int, unsigned char*, int, base::RepeatingCallback&lt;void ()&gt; &gt;::Destroy(base::internal::BindStateBase const*) (1 samples, 0.02%)</title><rect x="66.2" y="949" width="0.2" height="15.0" fill="rgb(252,172,20)" rx="2" ry="2" />
<text  x="69.16" y="959.5" ></text>
</g>
<g >
<title>+[NSAutoreleasePool allocWithZone:] (1 samples, 0.02%)</title><rect x="567.1" y="965" width="0.2" height="15.0" fill="rgb(205,133,46)" rx="2" ry="2" />
<text  x="570.10" y="975.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="1069.0" y="853" width="0.3" height="15.0" fill="rgb(218,179,23)" rx="2" ry="2" />
<text  x="1072.03" y="863.5" ></text>
</g>
<g >
<title>IPC::ParamTraits&lt;base::FileDescriptor&gt;::Write(base::Pickle*, base::FileDescriptor const&amp;) (1 samples, 0.02%)</title><rect x="205.7" y="773" width="0.2" height="15.0" fill="rgb(225,190,23)" rx="2" ry="2" />
<text  x="208.68" y="783.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1052.5" y="501" width="0.2" height="15.0" fill="rgb(205,54,28)" rx="2" ry="2" />
<text  x="1055.46" y="511.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (4 samples, 0.08%)</title><rect x="329.6" y="853" width="1.0" height="15.0" fill="rgb(233,58,30)" rx="2" ry="2" />
<text  x="332.61" y="863.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="283.4" y="597" width="0.2" height="15.0" fill="rgb(242,226,37)" rx="2" ry="2" />
<text  x="286.35" y="607.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_uv_sse2 (2 samples, 0.04%)</title><rect x="634.9" y="709" width="0.5" height="15.0" fill="rgb(238,92,13)" rx="2" ry="2" />
<text  x="637.88" y="719.5" ></text>
</g>
<g >
<title>DYLD-STUB$$base::WaitableEvent::TimedWait(base::TimeDelta const&amp;) (1 samples, 0.02%)</title><rect x="1164.0" y="965" width="0.3" height="15.0" fill="rgb(216,68,50)" rx="2" ry="2" />
<text  x="1167.03" y="975.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="18.4" y="405" width="0.3" height="15.0" fill="rgb(239,73,28)" rx="2" ry="2" />
<text  x="21.41" y="415.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;content::RenderViewObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.02%)</title><rect x="24.1" y="565" width="0.2" height="15.0" fill="rgb(220,113,20)" rx="2" ry="2" />
<text  x="27.10" y="575.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper*, mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) (72 samples, 1.51%)</title><rect x="302.6" y="741" width="17.9" height="15.0" fill="rgb(205,139,52)" rx="2" ry="2" />
<text  x="305.65" y="751.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (31 samples, 0.65%)</title><rect x="133.7" y="677" width="7.7" height="15.0" fill="rgb(229,114,10)" rx="2" ry="2" />
<text  x="136.69" y="687.5" ></text>
</g>
<g >
<title>v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::AllocationType) (1 samples, 0.02%)</title><rect x="17.9" y="277" width="0.3" height="15.0" fill="rgb(235,222,8)" rx="2" ry="2" />
<text  x="20.92" y="287.5" ></text>
</g>
<g >
<title>silk_A2NLSF_FLP (2 samples, 0.04%)</title><rect x="1000.0" y="677" width="0.5" height="15.0" fill="rgb(240,209,51)" rx="2" ry="2" />
<text  x="1003.01" y="687.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.02%)</title><rect x="323.7" y="677" width="0.2" height="15.0" fill="rgb(247,92,29)" rx="2" ry="2" />
<text  x="326.68" y="687.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="307.6" y="453" width="0.2" height="15.0" fill="rgb(215,209,53)" rx="2" ry="2" />
<text  x="310.60" y="463.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (8 samples, 0.17%)</title><rect x="1084.6" y="741" width="2.0" height="15.0" fill="rgb(210,122,23)" rx="2" ry="2" />
<text  x="1087.62" y="751.5" ></text>
</g>
<g >
<title>base::MessagePumpKqueue::ScheduleWork() (1 samples, 0.02%)</title><rect x="993.1" y="597" width="0.2" height="15.0" fill="rgb(243,160,20)" rx="2" ry="2" />
<text  x="996.09" y="607.5" ></text>
</g>
<g >
<title>base::Location::CreateFromHere(char const*, char const*, int) (1 samples, 0.02%)</title><rect x="121.8" y="757" width="0.3" height="15.0" fill="rgb(254,203,51)" rx="2" ry="2" />
<text  x="124.82" y="767.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::AudioCodingModuleImpl::Add10MsData(webrtc::AudioFrame const&amp;) (65 samples, 1.36%)</title><rect x="534.7" y="837" width="16.1" height="15.0" fill="rgb(249,219,51)" rx="2" ry="2" />
<text  x="537.69" y="847.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::TimeToSendPacket(unsigned int, unsigned short, long long, bool, webrtc::PacedPacketInfo const&amp;) (70 samples, 1.47%)</title><rect x="1146.0" y="933" width="17.3" height="15.0" fill="rgb(217,8,44)" rx="2" ry="2" />
<text  x="1148.97" y="943.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::internal::PriorityQueue::TaskSourceAndSortKey&gt;::FillHole(unsigned long, base::internal::PriorityQueue::TaskSourceAndSortKey&amp;&amp;) (3 samples, 0.06%)</title><rect x="123.1" y="661" width="0.7" height="15.0" fill="rgb(226,124,38)" rx="2" ry="2" />
<text  x="126.05" y="671.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::GetThreadGroupForTraits(base::TaskTraits const&amp;) (1 samples, 0.02%)</title><rect x="290.5" y="677" width="0.3" height="15.0" fill="rgb(239,161,0)" rx="2" ry="2" />
<text  x="293.53" y="687.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="249.7" y="453" width="0.3" height="15.0" fill="rgb(214,36,52)" rx="2" ry="2" />
<text  x="252.71" y="463.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunWorker() (593 samples, 12.43%)</title><rect x="873.1" y="981" width="146.7" height="15.0" fill="rgb(230,93,13)" rx="2" ry="2" />
<text  x="876.11" y="991.5" >base::internal::Wo..</text>
</g>
<g >
<title>unsigned char* rtc::CopyOnWriteBuffer::data&lt;unsigned char, (void*)0&gt;() (1 samples, 0.02%)</title><rect x="1161.3" y="869" width="0.3" height="15.0" fill="rgb(251,190,44)" rx="2" ry="2" />
<text  x="1164.30" y="879.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="302.2" y="757" width="0.2" height="15.0" fill="rgb(234,171,11)" rx="2" ry="2" />
<text  x="305.16" y="767.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::GetTimeTicks(media::VideoFrameMetadata::Key, base::TimeTicks*) const (2 samples, 0.04%)</title><rect x="1045.8" y="645" width="0.5" height="15.0" fill="rgb(208,32,29)" rx="2" ry="2" />
<text  x="1048.78" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (80 samples, 1.68%)</title><rect x="338.8" y="869" width="19.8" height="15.0" fill="rgb(223,206,51)" rx="2" ry="2" />
<text  x="341.77" y="879.5" ></text>
</g>
<g >
<title>silk_warped_autocorrelation_FLP (11 samples, 0.23%)</title><rect x="850.8" y="693" width="2.8" height="15.0" fill="rgb(227,20,18)" rx="2" ry="2" />
<text  x="853.84" y="703.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::IsCancelled() const (1 samples, 0.02%)</title><rect x="342.5" y="789" width="0.2" height="15.0" fill="rgb(249,146,13)" rx="2" ry="2" />
<text  x="345.48" y="799.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::RemovePacket(std::__Cr::__map_iterator&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, void*&gt;*, long&gt; &gt;) (1 samples, 0.02%)</title><rect x="284.8" y="629" width="0.3" height="15.0" fill="rgb(217,178,48)" rx="2" ry="2" />
<text  x="287.84" y="639.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::BeginTransaction() (3 samples, 0.06%)</title><rect x="367.7" y="949" width="0.8" height="15.0" fill="rgb(216,135,30)" rx="2" ry="2" />
<text  x="370.71" y="959.5" ></text>
</g>
<g >
<title>mojo::Connector::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="165.8" y="741" width="0.3" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="168.85" y="751.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_other_loop (1 samples, 0.02%)</title><rect x="745.7" y="661" width="0.3" height="15.0" fill="rgb(228,158,4)" rx="2" ry="2" />
<text  x="748.71" y="671.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="1080.9" y="853" width="0.3" height="15.0" fill="rgb(209,152,7)" rx="2" ry="2" />
<text  x="1083.91" y="863.5" ></text>
</g>
<g >
<title>mojo::core::Core::WriteMessage(unsigned int, unsigned long, MojoWriteMessageOptions const*) (4 samples, 0.08%)</title><rect x="235.6" y="581" width="1.0" height="15.0" fill="rgb(248,101,6)" rx="2" ry="2" />
<text  x="238.61" y="591.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) (8 samples, 0.17%)</title><rect x="134.2" y="613" width="2.0" height="15.0" fill="rgb(239,73,17)" rx="2" ry="2" />
<text  x="137.18" y="623.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="35.0" y="613" width="0.2" height="15.0" fill="rgb(247,43,47)" rx="2" ry="2" />
<text  x="37.99" y="623.5" ></text>
</g>
<g >
<title>blink::WebRtcAudioRenderer::Render(base::TimeDelta, base::TimeTicks, int, media::AudioBus*) (130 samples, 2.73%)</title><rect x="1107.6" y="965" width="32.2" height="15.0" fill="rgb(229,114,18)" rx="2" ry="2" />
<text  x="1110.62" y="975.5" >bl..</text>
</g>
<g >
<title>mach_msg (3 samples, 0.06%)</title><rect x="1065.8" y="901" width="0.8" height="15.0" fill="rgb(253,120,21)" rx="2" ry="2" />
<text  x="1068.82" y="911.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), void&gt;::Invoke&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;(void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&amp;&amp;) (16 samples, 0.34%)</title><rect x="204.4" y="869" width="4.0" height="15.0" fill="rgb(222,82,39)" rx="2" ry="2" />
<text  x="207.44" y="879.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Decoder::Decode(webrtc::EncodedImage const&amp;, bool, long long) (182 samples, 3.82%)</title><rect x="488.7" y="789" width="45.0" height="15.0" fill="rgb(239,210,13)" rx="2" ry="2" />
<text  x="491.68" y="799.5" >webr..</text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="1136.6" y="645" width="0.5" height="15.0" fill="rgb(252,205,1)" rx="2" ry="2" />
<text  x="1139.57" y="655.5" ></text>
</g>
<g >
<title>webrtc::SequenceCheckerImpl::IsCurrent() const (1 samples, 0.02%)</title><rect x="269.3" y="693" width="0.2" height="15.0" fill="rgb(216,26,39)" rx="2" ry="2" />
<text  x="272.25" y="703.5" ></text>
</g>
<g >
<title>vp8_denoiser_filter_sse2 (8 samples, 0.17%)</title><rect x="755.1" y="661" width="2.0" height="15.0" fill="rgb(236,95,46)" rx="2" ry="2" />
<text  x="758.11" y="671.5" ></text>
</g>
<g >
<title>cc::TaskState::DidStart() (1 samples, 0.02%)</title><rect x="55.0" y="949" width="0.3" height="15.0" fill="rgb(209,177,53)" rx="2" ry="2" />
<text  x="58.02" y="959.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="358.6" y="885" width="0.5" height="15.0" fill="rgb(222,123,49)" rx="2" ry="2" />
<text  x="361.56" y="895.5" ></text>
</g>
<g >
<title>_pthread_start (18 samples, 0.38%)</title><rect x="65.7" y="1045" width="4.4" height="15.0" fill="rgb(212,37,44)" rx="2" ry="2" />
<text  x="68.66" y="1055.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (blink::MediaStreamVideoRendererSink::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), WTF::CrossThreadUnretainedWrapper&lt;blink::MediaStreamVideoRendererSink::FrameDeliverer&gt; &gt;, void (scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks)&gt;::Run(base::internal::BindStateBase*, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, base::TimeTicks&amp;&amp;) (4 samples, 0.08%)</title><rect x="176.0" y="741" width="1.0" height="15.0" fill="rgb(236,40,23)" rx="2" ry="2" />
<text  x="178.99" y="751.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (5 samples, 0.10%)</title><rect x="375.1" y="805" width="1.3" height="15.0" fill="rgb(232,202,33)" rx="2" ry="2" />
<text  x="378.13" y="815.5" ></text>
</g>
<g >
<title>base::internal::RegisteredTaskSource::~RegisteredTaskSource() (1 samples, 0.02%)</title><rect x="1133.4" y="741" width="0.2" height="15.0" fill="rgb(211,148,49)" rx="2" ry="2" />
<text  x="1136.35" y="751.5" ></text>
</g>
<g >
<title>bool base::internal::QueryCancellationTraits&lt;base::internal::BindState&lt;void (content::WebMediaPlayerMS::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;), base::WeakPtr&lt;content::WebMediaPlayerMS::FrameDeliverer&gt; &gt; &gt;(base::internal::BindStateBase const*, base::internal::BindStateBase::CancellationQueryMode) (1 samples, 0.02%)</title><rect x="190.1" y="789" width="0.2" height="15.0" fill="rgb(224,107,31)" rx="2" ry="2" />
<text  x="193.09" y="799.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::PortObserverThunk::OnPortStatusChanged() (23 samples, 0.48%)</title><rect x="108.5" y="773" width="5.6" height="15.0" fill="rgb(214,221,45)" rx="2" ry="2" />
<text  x="111.46" y="783.5" ></text>
</g>
<g >
<title>non-virtual thunk to mojo::core::NodeController::OnEventMessage(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (1 samples, 0.02%)</title><rect x="143.3" y="837" width="0.3" height="15.0" fill="rgb(218,179,22)" rx="2" ry="2" />
<text  x="146.34" y="847.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::ScheduleTasksWithLockAcquired(cc::NamespaceToken, cc::TaskGraph*) (2 samples, 0.04%)</title><rect x="68.4" y="885" width="0.5" height="15.0" fill="rgb(213,35,24)" rx="2" ry="2" />
<text  x="71.38" y="895.5" ></text>
</g>
<g >
<title>init_encode_frame_mb_context (1 samples, 0.02%)</title><rect x="791.0" y="725" width="0.2" height="15.0" fill="rgb(214,139,3)" rx="2" ry="2" />
<text  x="793.98" y="735.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (25 samples, 0.52%)</title><rect x="244.3" y="645" width="6.2" height="15.0" fill="rgb(211,25,2)" rx="2" ry="2" />
<text  x="247.27" y="655.5" ></text>
</g>
<g >
<title>base::debug::StackTrace::StackTrace() (1 samples, 0.02%)</title><rect x="879.5" y="901" width="0.3" height="15.0" fill="rgb(244,62,51)" rx="2" ry="2" />
<text  x="882.54" y="911.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_wake (1 samples, 0.02%)</title><rect x="1020.3" y="901" width="0.2" height="15.0" fill="rgb(250,14,39)" rx="2" ry="2" />
<text  x="1023.30" y="911.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_0::__invoke(_malloc_zone_t*, void const*) (1 samples, 0.02%)</title><rect x="1068.0" y="709" width="0.3" height="15.0" fill="rgb(242,71,16)" rx="2" ry="2" />
<text  x="1071.04" y="719.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="268.0" y="549" width="0.3" height="15.0" fill="rgb(234,103,41)" rx="2" ry="2" />
<text  x="271.02" y="559.5" ></text>
</g>
<g >
<title>base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt; media::BindToCurrentLoop&lt;scoped_refptr&lt;media::VideoFrame&gt; &gt;(base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;) (1 samples, 0.02%)</title><rect x="176.2" y="677" width="0.3" height="15.0" fill="rgb(250,16,24)" rx="2" ry="2" />
<text  x="179.24" y="687.5" ></text>
</g>
<g >
<title>silk_resampler_private_down_FIR (1 samples, 0.02%)</title><rect x="1003.7" y="709" width="0.3" height="15.0" fill="rgb(248,41,39)" rx="2" ry="2" />
<text  x="1006.72" y="719.5" ></text>
</g>
<g >
<title>set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="993.6" y="629" width="0.2" height="15.0" fill="rgb(216,166,44)" rx="2" ry="2" />
<text  x="996.58" y="639.5" ></text>
</g>
<g >
<title>mojo::internal::MessageDispatchContext::~MessageDispatchContext() (5 samples, 0.10%)</title><rect x="1050.2" y="677" width="1.3" height="15.0" fill="rgb(247,192,16)" rx="2" ry="2" />
<text  x="1053.23" y="687.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="488.2" y="773" width="0.2" height="15.0" fill="rgb(211,7,41)" rx="2" ry="2" />
<text  x="491.18" y="783.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (2 samples, 0.04%)</title><rect x="272.0" y="565" width="0.5" height="15.0" fill="rgb(253,111,17)" rx="2" ry="2" />
<text  x="274.97" y="575.5" ></text>
</g>
<g >
<title>mojo::core::Core::WriteMessage(unsigned int, unsigned long, MojoWriteMessageOptions const*) (5 samples, 0.10%)</title><rect x="172.5" y="725" width="1.3" height="15.0" fill="rgb(247,220,28)" rx="2" ry="2" />
<text  x="175.53" y="735.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::OnCompleteFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;) (6 samples, 0.13%)</title><rect x="266.5" y="549" width="1.5" height="15.0" fill="rgb(223,100,4)" rx="2" ry="2" />
<text  x="269.53" y="559.5" ></text>
</g>
<g >
<title>non-virtual thunk to blink::VideoFrameSubmitter::DidReceiveCompositorFrameAck(WTF::Vector&lt;viz::ReturnedResource, 0u, WTF::PartitionAllocator&gt; const&amp;) (1 samples, 0.02%)</title><rect x="1052.0" y="677" width="0.2" height="15.0" fill="rgb(214,37,53)" rx="2" ry="2" />
<text  x="1054.96" y="687.5" ></text>
</g>
<g >
<title>base::Pickle::Pickle(int) (1 samples, 0.02%)</title><rect x="242.0" y="629" width="0.3" height="15.0" fill="rgb(234,9,27)" rx="2" ry="2" />
<text  x="245.04" y="639.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="32.8" y="629" width="0.2" height="15.0" fill="rgb(247,31,26)" rx="2" ry="2" />
<text  x="35.76" y="639.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (4 samples, 0.08%)</title><rect x="985.4" y="693" width="1.0" height="15.0" fill="rgb(216,106,1)" rx="2" ry="2" />
<text  x="988.42" y="703.5" ></text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::CloneDataIfReferenced(unsigned long) (2 samples, 0.04%)</title><rect x="1160.6" y="837" width="0.5" height="15.0" fill="rgb(249,94,5)" rx="2" ry="2" />
<text  x="1163.56" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TakeImmediateIncomingQueueTasks(base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;*) (1 samples, 0.02%)</title><rect x="83.0" y="773" width="0.2" height="15.0" fill="rgb(227,102,4)" rx="2" ry="2" />
<text  x="85.98" y="783.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="353.9" y="789" width="0.2" height="15.0" fill="rgb(228,130,29)" rx="2" ry="2" />
<text  x="356.86" y="799.5" ></text>
</g>
<g >
<title>webrtc::I420BufferInterface::ToI420() (1 samples, 0.02%)</title><rect x="815.2" y="789" width="0.3" height="15.0" fill="rgb(250,117,48)" rx="2" ry="2" />
<text  x="818.22" y="799.5" ></text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::Dispatch(rtc::Message*) (1 samples, 0.02%)</title><rect x="292.5" y="741" width="0.3" height="15.0" fill="rgb(223,108,18)" rx="2" ry="2" />
<text  x="295.51" y="751.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="165.8" y="789" width="0.3" height="15.0" fill="rgb(249,57,36)" rx="2" ry="2" />
<text  x="168.85" y="799.5" ></text>
</g>
<g >
<title>webrtc::SendTimeHistory::OnSentPacket(unsigned short, long long) (1 samples, 0.02%)</title><rect x="291.3" y="757" width="0.2" height="15.0" fill="rgb(252,58,30)" rx="2" ry="2" />
<text  x="294.27" y="767.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="651.2" y="693" width="0.3" height="15.0" fill="rgb(232,135,26)" rx="2" ry="2" />
<text  x="654.21" y="703.5" ></text>
</g>
<g >
<title>non-virtual thunk to content::RenderWidget::DidCommitCompositorFrame() (1 samples, 0.02%)</title><rect x="24.1" y="613" width="0.2" height="15.0" fill="rgb(254,167,48)" rx="2" ry="2" />
<text  x="27.10" y="623.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::~RtpPacket() (1 samples, 0.02%)</title><rect x="265.3" y="645" width="0.2" height="15.0" fill="rgb(254,69,1)" rx="2" ry="2" />
<text  x="268.30" y="655.5" ></text>
</g>
<g >
<title>IPC::MessageT&lt;GpuChannelMsg_FlushDeferredMessages_Meta, std::__Cr::tuple&lt;std::__Cr::vector&lt;GpuDeferredMessage, std::__Cr::allocator&lt;GpuDeferredMessage&gt; &gt; &gt;, void&gt;::MessageT(IPC::Routing, std::__Cr::vector&lt;GpuDeferredMessage, std::__Cr::allocator&lt;GpuDeferredMessage&gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="1034.2" y="517" width="0.2" height="15.0" fill="rgb(246,165,23)" rx="2" ry="2" />
<text  x="1037.15" y="527.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_other_loop (2 samples, 0.04%)</title><rect x="615.1" y="661" width="0.5" height="15.0" fill="rgb(214,71,3)" rx="2" ry="2" />
<text  x="618.09" y="671.5" ></text>
</g>
<g >
<title>base::WaitableEvent::PeekPort(unsigned int, bool) (10 samples, 0.21%)</title><rect x="363.5" y="949" width="2.5" height="15.0" fill="rgb(215,173,37)" rx="2" ry="2" />
<text  x="366.51" y="959.5" ></text>
</g>
<g >
<title>WTF::PartitionAllocator::AllocateBacking(unsigned long, char const*) (1 samples, 0.02%)</title><rect x="1049.5" y="629" width="0.2" height="15.0" fill="rgb(212,15,34)" rx="2" ry="2" />
<text  x="1052.49" y="639.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (1 samples, 0.02%)</title><rect x="570.3" y="917" width="0.3" height="15.0" fill="rgb(242,211,25)" rx="2" ry="2" />
<text  x="573.31" y="927.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::CanRunPriority(base::TaskPriority) const (1 samples, 0.02%)</title><rect x="1021.3" y="949" width="0.2" height="15.0" fill="rgb(237,217,40)" rx="2" ry="2" />
<text  x="1024.29" y="959.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="226.7" y="437" width="0.3" height="15.0" fill="rgb(230,12,21)" rx="2" ry="2" />
<text  x="229.70" y="447.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="301.4" y="757" width="0.3" height="15.0" fill="rgb(241,114,1)" rx="2" ry="2" />
<text  x="304.41" y="767.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="30.8" y="645" width="0.2" height="15.0" fill="rgb(247,164,35)" rx="2" ry="2" />
<text  x="33.78" y="655.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbh_sse2 (1 samples, 0.02%)</title><rect x="757.8" y="661" width="0.3" height="15.0" fill="rgb(205,70,5)" rx="2" ry="2" />
<text  x="760.83" y="671.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="212.4" y="789" width="0.2" height="15.0" fill="rgb(224,161,10)" rx="2" ry="2" />
<text  x="215.36" y="799.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="714.0" y="885" width="0.3" height="15.0" fill="rgb(222,44,41)" rx="2" ry="2" />
<text  x="717.04" y="895.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (703 samples, 14.74%)</title><rect x="378.8" y="901" width="174.0" height="15.0" fill="rgb(219,78,15)" rx="2" ry="2" />
<text  x="381.84" y="911.5" >base::TaskAnnotator::R..</text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3.vp8_filter_block1d8_v4_ssse3_loop (1 samples, 0.02%)</title><rect x="825.6" y="677" width="0.3" height="15.0" fill="rgb(252,92,35)" rx="2" ry="2" />
<text  x="828.61" y="687.5" ></text>
</g>
<g >
<title>rtc::VideoBroadcaster::OnFrame(webrtc::VideoFrame const&amp;) (1 samples, 0.02%)</title><rect x="682.9" y="693" width="0.2" height="15.0" fill="rgb(214,224,37)" rx="2" ry="2" />
<text  x="685.87" y="703.5" ></text>
</g>
<g >
<title>base::Value::InternalCleanup() (1 samples, 0.02%)</title><rect x="1052.5" y="517" width="0.2" height="15.0" fill="rgb(206,155,28)" rx="2" ry="2" />
<text  x="1055.46" y="527.5" ></text>
</g>
<g >
<title>vp8cx_encode_inter_macroblock (200 samples, 4.19%)</title><rect x="583.2" y="709" width="49.5" height="15.0" fill="rgb(240,150,52)" rx="2" ry="2" />
<text  x="586.18" y="719.5" >vp8c..</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="863.2" y="901" width="0.3" height="15.0" fill="rgb(214,142,50)" rx="2" ry="2" />
<text  x="866.21" y="911.5" ></text>
</g>
<g >
<title>cc::LayerTreeHost::SetNeedsAnimate() (2 samples, 0.04%)</title><rect x="19.2" y="501" width="0.4" height="15.0" fill="rgb(216,143,34)" rx="2" ry="2" />
<text  x="22.15" y="511.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::ParseBuffer(unsigned char const*, unsigned long) (1 samples, 0.02%)</title><rect x="310.6" y="501" width="0.2" height="15.0" fill="rgb(225,39,4)" rx="2" ry="2" />
<text  x="313.57" y="511.5" ></text>
</g>
<g >
<title>MojoWriteMessage (7 samples, 0.15%)</title><rect x="169.6" y="725" width="1.7" height="15.0" fill="rgb(245,110,13)" rx="2" ry="2" />
<text  x="172.56" y="735.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="577.7" y="901" width="0.3" height="15.0" fill="rgb(230,51,41)" rx="2" ry="2" />
<text  x="580.74" y="911.5" ></text>
</g>
<g >
<title>viz::mojom::internal::CompositorFrame_Data::CompositorFrame_Data() (1 samples, 0.02%)</title><rect x="1043.1" y="613" width="0.2" height="15.0" fill="rgb(244,43,5)" rx="2" ry="2" />
<text  x="1046.06" y="623.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1161.8" y="869" width="0.2" height="15.0" fill="rgb(234,63,10)" rx="2" ry="2" />
<text  x="1164.80" y="879.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (3 samples, 0.06%)</title><rect x="1025.2" y="837" width="0.8" height="15.0" fill="rgb(220,111,3)" rx="2" ry="2" />
<text  x="1028.25" y="847.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::InterfaceEndpoint::SendMessage(mojo::Message*) (1 samples, 0.02%)</title><rect x="1072.5" y="533" width="0.2" height="15.0" fill="rgb(226,4,24)" rx="2" ry="2" />
<text  x="1075.49" y="543.5" ></text>
</g>
<g >
<title>base::internal::(anonymous namespace)::WorkerThreadDelegate::GetWork(base::internal::WorkerThread*) (1 samples, 0.02%)</title><rect x="1021.3" y="965" width="0.2" height="15.0" fill="rgb(229,15,46)" rx="2" ry="2" />
<text  x="1024.29" y="975.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (6 samples, 0.13%)</title><rect x="169.8" y="677" width="1.5" height="15.0" fill="rgb(244,50,14)" rx="2" ry="2" />
<text  x="172.81" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnTaskPushedToEmptyQueue(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.02%)</title><rect x="1073.7" y="805" width="0.3" height="15.0" fill="rgb(212,202,29)" rx="2" ry="2" />
<text  x="1076.73" y="815.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="1054.7" y="629" width="0.2" height="15.0" fill="rgb(209,46,23)" rx="2" ry="2" />
<text  x="1057.68" y="639.5" ></text>
</g>
<g >
<title>blink::WebViewImpl::EndUpdateLayers() (1 samples, 0.02%)</title><rect x="24.8" y="597" width="0.3" height="15.0" fill="rgb(232,208,53)" rx="2" ry="2" />
<text  x="27.84" y="607.5" ></text>
</g>
<g >
<title>vp8_get_compressed_data (277 samples, 5.81%)</title><rect x="581.7" y="757" width="68.5" height="15.0" fill="rgb(231,87,45)" rx="2" ry="2" />
<text  x="584.69" y="767.5" >vp8_get..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="309.1" y="405" width="0.2" height="15.0" fill="rgb(244,140,28)" rx="2" ry="2" />
<text  x="312.08" y="415.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="753.9" y="629" width="0.2" height="15.0" fill="rgb(251,59,51)" rx="2" ry="2" />
<text  x="756.87" y="639.5" ></text>
</g>
<g >
<title>base::Thread::ThreadMain  0x644ddb (2 samples, 0.04%)</title><rect x="213.8" y="1077" width="0.5" height="15.0" fill="rgb(221,108,6)" rx="2" ry="2" />
<text  x="216.84" y="1087.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (1 samples, 0.02%)</title><rect x="1038.4" y="597" width="0.2" height="15.0" fill="rgb(217,225,11)" rx="2" ry="2" />
<text  x="1041.36" y="607.5" ></text>
</g>
<g >
<title>mojo::core::Channel::Message::ExtendPayload(unsigned long) (1 samples, 0.02%)</title><rect x="236.6" y="549" width="0.2" height="15.0" fill="rgb(230,31,31)" rx="2" ry="2" />
<text  x="239.60" y="559.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_nonhalf_y_nonhalf (1 samples, 0.02%)</title><rect x="610.9" y="661" width="0.2" height="15.0" fill="rgb(225,4,12)" rx="2" ry="2" />
<text  x="613.88" y="671.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) (62 samples, 1.30%)</title><rect x="303.9" y="693" width="15.3" height="15.0" fill="rgb(239,197,35)" rx="2" ry="2" />
<text  x="306.89" y="703.5" ></text>
</g>
<g >
<title>bool base::internal::QueryCancellationTraits&lt;base::internal::BindState&lt;void (jingle_glue::JingleThreadWrapper::*)(int), base::WeakPtr&lt;jingle_glue::JingleThreadWrapper&gt;, int&gt; &gt;(base::internal::BindStateBase const*, base::internal::BindStateBase::CancellationQueryMode) (1 samples, 0.02%)</title><rect x="342.5" y="773" width="0.2" height="15.0" fill="rgb(250,8,30)" rx="2" ry="2" />
<text  x="345.48" y="783.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::IsTrue(media::VideoFrameMetadata::Key) const (1 samples, 0.02%)</title><rect x="175.2" y="773" width="0.3" height="15.0" fill="rgb(240,48,36)" rx="2" ry="2" />
<text  x="178.25" y="783.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (1 samples, 0.02%)</title><rect x="558.2" y="901" width="0.2" height="15.0" fill="rgb(213,59,45)" rx="2" ry="2" />
<text  x="561.19" y="911.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.02%)</title><rect x="68.9" y="901" width="0.2" height="15.0" fill="rgb(241,21,48)" rx="2" ry="2" />
<text  x="71.88" y="911.5" ></text>
</g>
<g >
<title>WebRtcOpus_Encode (62 samples, 1.30%)</title><rect x="534.7" y="789" width="15.3" height="15.0" fill="rgb(212,154,37)" rx="2" ry="2" />
<text  x="537.69" y="799.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="1026.7" y="805" width="0.5" height="15.0" fill="rgb(230,148,22)" rx="2" ry="2" />
<text  x="1029.73" y="815.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostDelayedTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;, unsigned int) (1 samples, 0.02%)</title><rect x="692.3" y="837" width="0.2" height="15.0" fill="rgb(225,36,2)" rx="2" ry="2" />
<text  x="695.27" y="847.5" ></text>
</g>
<g >
<title>rtc::SystemTimeNanos() (1 samples, 0.02%)</title><rect x="311.1" y="581" width="0.2" height="15.0" fill="rgb(247,216,32)" rx="2" ry="2" />
<text  x="314.06" y="591.5" ></text>
</g>
<g >
<title>base::internal::ScopedBlockingCallWithBaseSyncPrimitives::ScopedBlockingCallWithBaseSyncPrimitives(base::Location const&amp;, base::BlockingType) (1 samples, 0.02%)</title><rect x="1142.5" y="901" width="0.3" height="15.0" fill="rgb(211,63,35)" rx="2" ry="2" />
<text  x="1145.50" y="911.5" ></text>
</g>
<g >
<title>void blink::PaintController::CreateAndAppend&lt;blink::DrawingDisplayItem, blink::DisplayItemClient const&amp;, blink::DisplayItem::Type const&amp;, sk_sp&lt;cc::PaintOpBuffer const&gt;, bool&amp;&gt;(blink::DisplayItemClient const&amp;&amp;&amp;, blink::DisplayItem::Type const&amp;&amp;&amp;, sk_sp&lt;cc::PaintOpBuffer const&gt;&amp;&amp;, bool&amp;&amp;&amp;) (1 samples, 0.02%)</title><rect x="26.6" y="149" width="0.2" height="15.0" fill="rgb(212,162,13)" rx="2" ry="2" />
<text  x="29.57" y="159.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::~RefCountedObject() (1 samples, 0.02%)</title><rect x="550.3" y="709" width="0.2" height="15.0" fill="rgb(213,229,45)" rx="2" ry="2" />
<text  x="553.28" y="719.5" ></text>
</g>
<g >
<title>blink::WebViewImpl::UpdateLifecycle(blink::WebWidget::LifecycleUpdate, blink::WebWidget::LifecycleUpdateReason) (17 samples, 0.36%)</title><rect x="25.1" y="613" width="4.2" height="15.0" fill="rgb(219,172,16)" rx="2" ry="2" />
<text  x="28.09" y="623.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="572.8" y="917" width="0.2" height="15.0" fill="rgb(227,173,1)" rx="2" ry="2" />
<text  x="575.79" y="927.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="1182.8" y="901" width="0.3" height="15.0" fill="rgb(221,50,28)" rx="2" ry="2" />
<text  x="1185.83" y="911.5" ></text>
</g>
<g >
<title>webrtc::rtcp::TransportFeedback::AddReceivedPacket(unsigned short, long long) (1 samples, 0.02%)</title><rect x="1182.8" y="917" width="0.3" height="15.0" fill="rgb(251,222,40)" rx="2" ry="2" />
<text  x="1185.83" y="927.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_zero_loop (3 samples, 0.06%)</title><rect x="921.6" y="661" width="0.7" height="15.0" fill="rgb(242,181,31)" rx="2" ry="2" />
<text  x="924.59" y="671.5" ></text>
</g>
<g >
<title>mojo_base::mojom::internal::TimeTicks_Data::Validate(void const*, mojo::internal::ValidationContext*) (1 samples, 0.02%)</title><rect x="319.2" y="661" width="0.3" height="15.0" fill="rgb(236,91,5)" rx="2" ry="2" />
<text  x="322.22" y="671.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (9 samples, 0.19%)</title><rect x="288.3" y="645" width="2.2" height="15.0" fill="rgb(209,6,12)" rx="2" ry="2" />
<text  x="291.30" y="655.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="711.1" y="949" width="0.2" height="15.0" fill="rgb(252,188,34)" rx="2" ry="2" />
<text  x="714.07" y="959.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() const (2 samples, 0.04%)</title><rect x="333.3" y="837" width="0.5" height="15.0" fill="rgb(212,72,48)" rx="2" ry="2" />
<text  x="336.32" y="847.5" ></text>
</g>
<g >
<title>-[NSAutoreleasePool init] (1 samples, 0.02%)</title><rect x="871.4" y="949" width="0.2" height="15.0" fill="rgb(216,68,17)" rx="2" ry="2" />
<text  x="874.38" y="959.5" ></text>
</g>
<g >
<title>webrtc::Packet::Packet() (1 samples, 0.02%)</title><rect x="279.6" y="629" width="0.3" height="15.0" fill="rgb(234,63,35)" rx="2" ry="2" />
<text  x="282.64" y="639.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper*, mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) (1 samples, 0.02%)</title><rect x="1066.8" y="805" width="0.3" height="15.0" fill="rgb(216,208,26)" rx="2" ry="2" />
<text  x="1069.81" y="815.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="1033.2" y="629" width="0.2" height="15.0" fill="rgb(235,178,36)" rx="2" ry="2" />
<text  x="1036.16" y="639.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::UpdateAllLifecyclePhases(blink::DocumentLifecycle::LifecycleUpdateReason) (17 samples, 0.36%)</title><rect x="25.1" y="581" width="4.2" height="15.0" fill="rgb(250,28,47)" rx="2" ry="2" />
<text  x="28.09" y="591.5" ></text>
</g>
<g >
<title>gpu::mojom::internal::SyncToken_Data::Validate(void const*, mojo::internal::ValidationContext*) (1 samples, 0.02%)</title><rect x="1054.2" y="629" width="0.2" height="15.0" fill="rgb(235,45,22)" rx="2" ry="2" />
<text  x="1057.19" y="639.5" ></text>
</g>
<g >
<title>tonality_analysis (1 samples, 0.02%)</title><rect x="995.1" y="725" width="0.2" height="15.0" fill="rgb(219,160,16)" rx="2" ry="2" />
<text  x="998.06" y="735.5" ></text>
</g>
<g >
<title>vpx_sad16x16_sse2.loop (14 samples, 0.29%)</title><rect x="927.8" y="677" width="3.4" height="15.0" fill="rgb(247,118,11)" rx="2" ry="2" />
<text  x="930.78" y="687.5" ></text>
</g>
<g >
<title>vp8cx_pick_filter_level_fast (5 samples, 0.10%)</title><rect x="635.4" y="725" width="1.2" height="15.0" fill="rgb(236,144,36)" rx="2" ry="2" />
<text  x="638.38" y="735.5" ></text>
</g>
<g >
<title>non-virtual thunk to webrtc::RemoteEstimatorProxy::Process() (8 samples, 0.17%)</title><rect x="1181.1" y="965" width="2.0" height="15.0" fill="rgb(229,227,1)" rx="2" ry="2" />
<text  x="1184.09" y="975.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (8 samples, 0.17%)</title><rect x="971.3" y="693" width="2.0" height="15.0" fill="rgb(246,142,2)" rx="2" ry="2" />
<text  x="974.32" y="703.5" ></text>
</g>
<g >
<title>blink::PaintController::AddToIndicesByClientMap(blink::DisplayItemClient const&amp;, unsigned long, WTF::HashMap&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt;, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::PartitionAllocator&gt;&amp;) (1 samples, 0.02%)</title><rect x="26.6" y="117" width="0.2" height="15.0" fill="rgb(230,107,21)" rx="2" ry="2" />
<text  x="29.57" y="127.5" ></text>
</g>
<g >
<title>encode_mvcomponent (1 samples, 0.02%)</title><rect x="638.1" y="709" width="0.2" height="15.0" fill="rgb(210,106,45)" rx="2" ry="2" />
<text  x="641.10" y="719.5" ></text>
</g>
<g >
<title>cricket::P2PTransportChannel::SendPacket(char const*, unsigned long, rtc::PacketOptions const&amp;, int) (66 samples, 1.38%)</title><rect x="239.1" y="757" width="16.3" height="15.0" fill="rgb(218,179,31)" rx="2" ry="2" />
<text  x="242.07" y="767.5" ></text>
</g>
<g >
<title>mach_msg_trap (22 samples, 0.46%)</title><rect x="1183.6" y="901" width="5.4" height="15.0" fill="rgb(205,47,12)" rx="2" ry="2" />
<text  x="1186.57" y="911.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;), void&gt;::Invoke&lt;void (content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;), scoped_refptr&lt;content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter&gt;, scoped_refptr&lt;media::VideoFrame&gt; &gt;(void (content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;), scoped_refptr&lt;content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (4 samples, 0.08%)</title><rect x="297.9" y="869" width="1.0" height="15.0" fill="rgb(235,199,17)" rx="2" ry="2" />
<text  x="300.95" y="879.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (3 samples, 0.06%)</title><rect x="527.5" y="677" width="0.8" height="15.0" fill="rgb(248,3,27)" rx="2" ry="2" />
<text  x="530.52" y="687.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="266.0" y="613" width="0.5" height="15.0" fill="rgb(232,95,21)" rx="2" ry="2" />
<text  x="269.04" y="623.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="1026.7" y="853" width="0.5" height="15.0" fill="rgb(251,112,44)" rx="2" ry="2" />
<text  x="1029.73" y="863.5" ></text>
</g>
<g >
<title>mojo::internal::MessageDispatchContext::current() (2 samples, 0.04%)</title><rect x="1050.5" y="661" width="0.5" height="15.0" fill="rgb(240,224,15)" rx="2" ry="2" />
<text  x="1053.48" y="671.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="1149.7" y="757" width="0.2" height="15.0" fill="rgb(227,23,51)" rx="2" ry="2" />
<text  x="1152.68" y="767.5" ></text>
</g>
<g >
<title>cricket::BaseChannel::SignalSentPacket_n(rtc::SentPacket const&amp;) (11 samples, 0.23%)</title><rect x="315.3" y="565" width="2.7" height="15.0" fill="rgb(211,57,48)" rx="2" ry="2" />
<text  x="318.27" y="575.5" ></text>
</g>
<g >
<title>void media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (double)&gt; &gt;::Run&lt;double&gt;(double) (1 samples, 0.02%)</title><rect x="962.7" y="661" width="0.2" height="15.0" fill="rgb(239,60,32)" rx="2" ry="2" />
<text  x="965.66" y="671.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (1 samples, 0.02%)</title><rect x="815.5" y="725" width="0.2" height="15.0" fill="rgb(236,167,10)" rx="2" ry="2" />
<text  x="818.47" y="735.5" ></text>
</g>
<g >
<title>blink::VideoFrameSubmitter::CreateCompositorFrame(viz::BeginFrameAck const&amp;, scoped_refptr&lt;media::VideoFrame&gt;) (5 samples, 0.10%)</title><rect x="1038.4" y="645" width="1.2" height="15.0" fill="rgb(225,79,6)" rx="2" ry="2" />
<text  x="1041.36" y="655.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="314.3" y="629" width="0.2" height="15.0" fill="rgb(226,56,1)" rx="2" ry="2" />
<text  x="317.28" y="639.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderVideo::UpdateConditionalRetransmit(unsigned char, long long) (1 samples, 0.02%)</title><rect x="486.9" y="709" width="0.3" height="15.0" fill="rgb(230,37,35)" rx="2" ry="2" />
<text  x="489.95" y="719.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="45.6" y="597" width="0.3" height="15.0" fill="rgb(242,88,32)" rx="2" ry="2" />
<text  x="48.62" y="607.5" ></text>
</g>
<g >
<title>mojo::MessageHandle::Close() (1 samples, 0.02%)</title><rect x="228.4" y="773" width="0.3" height="15.0" fill="rgb(239,73,33)" rx="2" ry="2" />
<text  x="231.44" y="783.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.02%)</title><rect x="27.6" y="437" width="0.2" height="15.0" fill="rgb(249,7,24)" rx="2" ry="2" />
<text  x="30.56" y="447.5" ></text>
</g>
<g >
<title>vp8_encode_frame (206 samples, 4.32%)</title><rect x="581.9" y="741" width="51.0" height="15.0" fill="rgb(214,70,20)" rx="2" ry="2" />
<text  x="584.94" y="751.5" >vp8_e..</text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (4 samples, 0.08%)</title><rect x="459.5" y="709" width="1.0" height="15.0" fill="rgb(232,160,32)" rx="2" ry="2" />
<text  x="462.49" y="719.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="377.1" y="869" width="0.3" height="15.0" fill="rgb(253,222,8)" rx="2" ry="2" />
<text  x="380.11" y="879.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="19.9" y="165" width="0.2" height="15.0" fill="rgb(231,227,7)" rx="2" ry="2" />
<text  x="22.90" y="175.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (2 samples, 0.04%)</title><rect x="277.2" y="581" width="0.5" height="15.0" fill="rgb(212,56,49)" rx="2" ry="2" />
<text  x="280.17" y="591.5" ></text>
</g>
<g >
<title>base::internal::RegisteredTaskSource::~RegisteredTaskSource() (2 samples, 0.04%)</title><rect x="367.2" y="949" width="0.5" height="15.0" fill="rgb(211,213,31)" rx="2" ry="2" />
<text  x="370.22" y="959.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (19 samples, 0.40%)</title><rect x="1060.4" y="933" width="4.7" height="15.0" fill="rgb(216,63,36)" rx="2" ry="2" />
<text  x="1063.37" y="943.5" ></text>
</g>
<g >
<title>base::Thread::Run(base::RunLoop*) (69 samples, 1.45%)</title><rect x="70.1" y="965" width="17.1" height="15.0" fill="rgb(205,37,39)" rx="2" ry="2" />
<text  x="73.11" y="975.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateRawExtension(int, unsigned long) (2 samples, 0.04%)</title><rect x="1160.6" y="869" width="0.5" height="15.0" fill="rgb(217,89,36)" rx="2" ry="2" />
<text  x="1163.56" y="879.5" ></text>
</g>
<g >
<title>thread_start (18 samples, 0.38%)</title><rect x="65.7" y="1061" width="4.4" height="15.0" fill="rgb(227,214,20)" rx="2" ry="2" />
<text  x="68.66" y="1071.5" ></text>
</g>
<g >
<title>mojo::native::internal::NativeStruct_Data::NativeStruct_Data() (1 samples, 0.02%)</title><rect x="254.7" y="629" width="0.2" height="15.0" fill="rgb(224,215,48)" rx="2" ry="2" />
<text  x="257.66" y="639.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (1 samples, 0.02%)</title><rect x="699.0" y="917" width="0.2" height="15.0" fill="rgb(207,147,9)" rx="2" ry="2" />
<text  x="701.95" y="927.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="309.1" y="421" width="0.2" height="15.0" fill="rgb(218,115,18)" rx="2" ry="2" />
<text  x="312.08" y="431.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="23.4" y="645" width="0.2" height="15.0" fill="rgb(222,136,30)" rx="2" ry="2" />
<text  x="26.36" y="655.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (9 samples, 0.19%)</title><rect x="288.3" y="613" width="2.2" height="15.0" fill="rgb(228,181,32)" rx="2" ry="2" />
<text  x="291.30" y="623.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="855.5" y="885" width="0.3" height="15.0" fill="rgb(252,220,18)" rx="2" ry="2" />
<text  x="858.54" y="895.5" ></text>
</g>
<g >
<title>mojo::core::WatcherSet::NotifyState(mojo::core::HandleSignalsState const&amp;) (2 samples, 0.04%)</title><rect x="1056.2" y="741" width="0.5" height="15.0" fill="rgb(225,159,13)" rx="2" ry="2" />
<text  x="1059.17" y="751.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="815.5" y="549" width="0.2" height="15.0" fill="rgb(241,124,25)" rx="2" ry="2" />
<text  x="818.47" y="559.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="33.3" y="597" width="0.2" height="15.0" fill="rgb(244,6,28)" rx="2" ry="2" />
<text  x="36.25" y="607.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="185.4" y="757" width="0.2" height="15.0" fill="rgb(239,220,22)" rx="2" ry="2" />
<text  x="188.39" y="767.5" ></text>
</g>
<g >
<title>vp8_loop_filter_row_normal (10 samples, 0.21%)</title><rect x="838.2" y="709" width="2.5" height="15.0" fill="rgb(219,208,11)" rx="2" ry="2" />
<text  x="841.23" y="719.5" ></text>
</g>
<g >
<title>blink::paint_property_tree_printer::UpdateDebugNames(blink::LayoutObject const&amp;, blink::ObjectPaintProperties&amp;) (1 samples, 0.02%)</title><rect x="28.1" y="325" width="0.2" height="15.0" fill="rgb(221,119,20)" rx="2" ry="2" />
<text  x="31.06" y="335.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_nonhalf (1 samples, 0.02%)</title><rect x="404.6" y="661" width="0.2" height="15.0" fill="rgb(210,82,15)" rx="2" ry="2" />
<text  x="407.57" y="671.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork() (1 samples, 0.02%)</title><rect x="213.3" y="917" width="0.3" height="15.0" fill="rgb(205,203,16)" rx="2" ry="2" />
<text  x="216.35" y="927.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (4 samples, 0.08%)</title><rect x="1026.2" y="901" width="1.0" height="15.0" fill="rgb(205,39,5)" rx="2" ry="2" />
<text  x="1029.23" y="911.5" ></text>
</g>
<g >
<title>silk_apply_sine_window_FLP (1 samples, 0.02%)</title><rect x="545.8" y="693" width="0.3" height="15.0" fill="rgb(235,130,13)" rx="2" ry="2" />
<text  x="548.82" y="703.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Decoder::Decode(webrtc::EncodedImage const&amp;, bool, long long) (122 samples, 2.56%)</title><rect x="652.9" y="789" width="30.2" height="15.0" fill="rgb(213,19,20)" rx="2" ry="2" />
<text  x="655.94" y="799.5" >we..</text>
</g>
<g >
<title>webrtc::RemoteEstimatorProxy::BuildFeedbackPacket(unsigned char, unsigned int, long long, std::__Cr::__map_const_iterator&lt;std::__Cr::__tree_const_iterator&lt;std::__Cr::__value_type&lt;long long, long long&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;long long, long long&gt;, void*&gt;*, long&gt; &gt;, std::__Cr::__map_const_iterator&lt;std::__Cr::__tree_const_iterator&lt;std::__Cr::__value_type&lt;long long, long long&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;long long, long long&gt;, void*&gt;*, long&gt; &gt;, webrtc::rtcp::TransportFeedback*) (1 samples, 0.02%)</title><rect x="1182.8" y="933" width="0.3" height="15.0" fill="rgb(248,43,52)" rx="2" ry="2" />
<text  x="1185.83" y="943.5" ></text>
</g>
<g >
<title>mojo::MessageHandle::Close() (4 samples, 0.08%)</title><rect x="1054.4" y="741" width="1.0" height="15.0" fill="rgb(208,185,38)" rx="2" ry="2" />
<text  x="1057.44" y="751.5" ></text>
</g>
<g >
<title>backtrace (1 samples, 0.02%)</title><rect x="376.6" y="869" width="0.3" height="15.0" fill="rgb(216,174,13)" rx="2" ry="2" />
<text  x="379.62" y="879.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, void*&gt;*, long&gt;, bool&gt; std::__Cr::__tree&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__map_value_compare&lt;int, std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::less&lt;int&gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt; &gt; &gt;::__emplace_unique_key_args&lt;int, std::__Cr::pair&lt;int, rtc::Message&gt; &gt;(int const&amp;, std::__Cr::pair&lt;int, rtc::Message&gt;&amp;&amp;) (2 samples, 0.04%)</title><rect x="317.2" y="533" width="0.5" height="15.0" fill="rgb(247,92,14)" rx="2" ry="2" />
<text  x="320.25" y="543.5" ></text>
</g>
<g >
<title>webrtc::VCMDecodedFrameCallback::Decoded(webrtc::VideoFrame&amp;, absl::optional&lt;int&gt;, absl::optional&lt;unsigned char&gt;) (2 samples, 0.04%)</title><rect x="993.1" y="757" width="0.5" height="15.0" fill="rgb(242,1,40)" rx="2" ry="2" />
<text  x="996.09" y="767.5" ></text>
</g>
<g >
<title>objc_removeAssociatedObjects (1 samples, 0.02%)</title><rect x="197.5" y="901" width="0.3" height="15.0" fill="rgb(224,108,12)" rx="2" ry="2" />
<text  x="200.51" y="911.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="321.9" y="693" width="0.3" height="15.0" fill="rgb(237,221,44)" rx="2" ry="2" />
<text  x="324.95" y="703.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunAndPopNextTask(base::internal::DecoratorWithTaskSource&lt;base::internal::TaskSource::RunIntent, base::internal::RegisteredTaskSource&gt;) (590 samples, 12.37%)</title><rect x="710.8" y="965" width="146.0" height="15.0" fill="rgb(214,1,48)" rx="2" ry="2" />
<text  x="713.83" y="975.5" >base::internal::Ta..</text>
</g>
<g >
<title>quant_band (2 samples, 0.04%)</title><rect x="842.9" y="709" width="0.5" height="15.0" fill="rgb(205,225,37)" rx="2" ry="2" />
<text  x="845.93" y="719.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="260.3" y="677" width="0.3" height="15.0" fill="rgb(226,134,1)" rx="2" ry="2" />
<text  x="263.35" y="687.5" ></text>
</g>
<g >
<title>base::Histogram::ranges(unsigned int) const (1 samples, 0.02%)</title><rect x="23.9" y="549" width="0.2" height="15.0" fill="rgb(229,173,13)" rx="2" ry="2" />
<text  x="26.85" y="559.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (3 samples, 0.06%)</title><rect x="1154.9" y="837" width="0.7" height="15.0" fill="rgb(251,101,49)" rx="2" ry="2" />
<text  x="1157.87" y="847.5" ></text>
</g>
<g >
<title>cricket::UDPPort::SendTo(void const*, unsigned long, rtc::SocketAddress const&amp;, rtc::PacketOptions const&amp;, bool) (7 samples, 0.15%)</title><rect x="235.1" y="725" width="1.7" height="15.0" fill="rgb(243,199,40)" rx="2" ry="2" />
<text  x="238.12" y="735.5" ></text>
</g>
<g >
<title>blink::EventDispatcher::EventDispatcher(blink::Node&amp;, blink::Event&amp;) (1 samples, 0.02%)</title><rect x="22.6" y="645" width="0.3" height="15.0" fill="rgb(247,28,47)" rx="2" ry="2" />
<text  x="25.62" y="655.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="326.6" y="757" width="0.3" height="15.0" fill="rgb(254,98,0)" rx="2" ry="2" />
<text  x="329.65" y="767.5" ></text>
</g>
<g >
<title>szone_size (1 samples, 0.02%)</title><rect x="236.6" y="517" width="0.2" height="15.0" fill="rgb(231,29,26)" rx="2" ry="2" />
<text  x="239.60" y="527.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bv_sse2 (1 samples, 0.02%)</title><rect x="942.1" y="709" width="0.3" height="15.0" fill="rgb(210,126,3)" rx="2" ry="2" />
<text  x="945.13" y="719.5" ></text>
</g>
<g >
<title>malloc_zone_memalign (1 samples, 0.02%)</title><rect x="1041.8" y="485" width="0.3" height="15.0" fill="rgb(227,157,3)" rx="2" ry="2" />
<text  x="1044.82" y="495.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() const (5 samples, 0.10%)</title><rect x="346.4" y="805" width="1.3" height="15.0" fill="rgb(223,78,49)" rx="2" ry="2" />
<text  x="349.44" y="815.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (1 samples, 0.02%)</title><rect x="284.1" y="613" width="0.2" height="15.0" fill="rgb(224,194,6)" rx="2" ry="2" />
<text  x="287.10" y="623.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="254.4" y="613" width="0.3" height="15.0" fill="rgb(205,121,28)" rx="2" ry="2" />
<text  x="257.41" y="623.5" ></text>
</g>
<g >
<title>base::internal::PooledSingleThreadTaskRunnerManager::PooledSingleThreadTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (2 samples, 0.04%)</title><rect x="174.5" y="757" width="0.5" height="15.0" fill="rgb(235,137,48)" rx="2" ry="2" />
<text  x="177.51" y="767.5" ></text>
</g>
<g >
<title>base::internal::ServiceThread::Run(base::RunLoop*) (69 samples, 1.45%)</title><rect x="70.1" y="981" width="17.1" height="15.0" fill="rgb(238,31,30)" rx="2" ry="2" />
<text  x="73.11" y="991.5" ></text>
</g>
<g >
<title>blink::ComputedStyle::HasGroupingProperty() const (1 samples, 0.02%)</title><rect x="25.3" y="357" width="0.3" height="15.0" fill="rgb(240,55,52)" rx="2" ry="2" />
<text  x="28.34" y="367.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="556.5" y="949" width="0.2" height="15.0" fill="rgb(242,180,44)" rx="2" ry="2" />
<text  x="559.46" y="959.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::Flag::Invalidate() (1 samples, 0.02%)</title><rect x="38.2" y="597" width="0.2" height="15.0" fill="rgb(252,120,22)" rx="2" ry="2" />
<text  x="41.20" y="607.5" ></text>
</g>
<g >
<title>blink::RuleFeatureSet::CollectInvalidationSetsForPseudoClass(blink::InvalidationLists&amp;, blink::Element&amp;, blink::CSSSelector::PseudoType) const (1 samples, 0.02%)</title><rect x="21.1" y="421" width="0.3" height="15.0" fill="rgb(225,32,28)" rx="2" ry="2" />
<text  x="24.13" y="431.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="962.7" y="645" width="0.2" height="15.0" fill="rgb(221,142,37)" rx="2" ry="2" />
<text  x="965.66" y="655.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="943.1" y="709" width="0.3" height="15.0" fill="rgb(253,142,47)" rx="2" ry="2" />
<text  x="946.12" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::RealTimeDomain::DelayTillNextTask(base::sequence_manager::LazyNow*) (3 samples, 0.06%)</title><rect x="177.2" y="853" width="0.8" height="15.0" fill="rgb(234,50,36)" rx="2" ry="2" />
<text  x="180.23" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::RemoveAllCanceledTasksFromFront() (4 samples, 0.08%)</title><rect x="353.4" y="837" width="1.0" height="15.0" fill="rgb(226,221,0)" rx="2" ry="2" />
<text  x="356.36" y="847.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="281.1" y="565" width="0.3" height="15.0" fill="rgb(233,210,27)" rx="2" ry="2" />
<text  x="284.13" y="575.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetStatus(mojo::core::ports::PortRef const&amp;, mojo::core::ports::PortStatus*) (1 samples, 0.02%)</title><rect x="108.7" y="725" width="0.3" height="15.0" fill="rgb(244,228,16)" rx="2" ry="2" />
<text  x="111.70" y="735.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (3 samples, 0.06%)</title><rect x="372.4" y="821" width="0.8" height="15.0" fill="rgb(240,118,54)" rx="2" ry="2" />
<text  x="375.41" y="831.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (3 samples, 0.06%)</title><rect x="359.8" y="885" width="0.7" height="15.0" fill="rgb(231,146,12)" rx="2" ry="2" />
<text  x="362.79" y="895.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (17 samples, 0.36%)</title><rect x="1132.9" y="789" width="4.2" height="15.0" fill="rgb(235,120,40)" rx="2" ry="2" />
<text  x="1135.86" y="799.5" ></text>
</g>
<g >
<title>media::AudioDeviceThread::ThreadMain  0x6593b8 (52 samples, 1.09%)</title><rect x="1074.2" y="1077" width="12.9" height="15.0" fill="rgb(226,206,21)" rx="2" ry="2" />
<text  x="1077.23" y="1087.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (1 samples, 0.02%)</title><rect x="962.7" y="757" width="0.2" height="15.0" fill="rgb(249,22,40)" rx="2" ry="2" />
<text  x="965.66" y="767.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (media::GpuMemoryBufferVideoFramePool::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;), base::internal::UnretainedWrapper&lt;media::GpuMemoryBufferVideoFramePool&gt;, scoped_refptr&lt;media::VideoFrame&gt;, base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (14 samples, 0.29%)</title><rect x="200.7" y="869" width="3.5" height="15.0" fill="rgb(216,38,4)" rx="2" ry="2" />
<text  x="203.73" y="879.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (3 samples, 0.06%)</title><rect x="752.9" y="645" width="0.7" height="15.0" fill="rgb(248,76,2)" rx="2" ry="2" />
<text  x="755.88" y="655.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;mojo::ArrayDataView&lt;viz::mojom::RenderPassDataView&gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; const&gt;::Serialize(std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; const&amp;, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;mojo::internal::Pointer&lt;viz::mojom::internal::RenderPass_Data&gt; &gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1068.5" y="709" width="0.3" height="15.0" fill="rgb(243,59,13)" rx="2" ry="2" />
<text  x="1071.54" y="719.5" ></text>
</g>
<g >
<title>vp8_denoiser_denoise_mb (38 samples, 0.80%)</title><rect x="411.0" y="677" width="9.4" height="15.0" fill="rgb(206,166,38)" rx="2" ry="2" />
<text  x="414.00" y="687.5" ></text>
</g>
<g >
<title>(anonymous namespace)::MachAbsoluteTimeToTicks(unsigned long long) (1 samples, 0.02%)</title><rect x="699.7" y="869" width="0.2" height="15.0" fill="rgb(239,158,26)" rx="2" ry="2" />
<text  x="702.69" y="879.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="207.7" y="741" width="0.5" height="15.0" fill="rgb(231,137,21)" rx="2" ry="2" />
<text  x="210.66" y="751.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1004.2" y="677" width="0.3" height="15.0" fill="rgb(209,120,37)" rx="2" ry="2" />
<text  x="1007.22" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() const (2 samples, 0.04%)</title><rect x="178.0" y="853" width="0.5" height="15.0" fill="rgb(249,199,18)" rx="2" ry="2" />
<text  x="180.97" y="863.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::SignalHasReadyToRunTasksWithLockAcquired() (2 samples, 0.04%)</title><rect x="203.0" y="757" width="0.5" height="15.0" fill="rgb(230,88,15)" rx="2" ry="2" />
<text  x="205.96" y="767.5" ></text>
</g>
<g >
<title>webrtc::ForwardErrorCorrection::InsertPacket(webrtc::ForwardErrorCorrection::ReceivedPacket const&amp;, std::__Cr::list&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt; &gt; &gt;*) (8 samples, 0.17%)</title><rect x="262.8" y="645" width="2.0" height="15.0" fill="rgb(226,222,1)" rx="2" ry="2" />
<text  x="265.82" y="655.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (10 samples, 0.21%)</title><rect x="1084.1" y="773" width="2.5" height="15.0" fill="rgb(221,39,53)" rx="2" ry="2" />
<text  x="1087.12" y="783.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::~RefCountedObject() (1 samples, 0.02%)</title><rect x="265.3" y="613" width="0.2" height="15.0" fill="rgb(247,159,47)" rx="2" ry="2" />
<text  x="268.30" y="623.5" ></text>
</g>
<g >
<title>vp8_copy_and_extend_frame (5 samples, 0.10%)</title><rect x="814.0" y="725" width="1.2" height="15.0" fill="rgb(242,171,34)" rx="2" ry="2" />
<text  x="816.98" y="735.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (3 samples, 0.06%)</title><rect x="890.7" y="661" width="0.7" height="15.0" fill="rgb(226,197,40)" rx="2" ry="2" />
<text  x="893.67" y="671.5" ></text>
</g>
<g >
<title>MojoArmTrap (1 samples, 0.02%)</title><rect x="1059.6" y="773" width="0.3" height="15.0" fill="rgb(254,164,36)" rx="2" ry="2" />
<text  x="1062.63" y="783.5" ></text>
</g>
<g >
<title>base::debug::CollectStackTrace(void**, unsigned long) (1 samples, 0.02%)</title><rect x="370.7" y="885" width="0.2" height="15.0" fill="rgb(234,156,39)" rx="2" ry="2" />
<text  x="373.68" y="895.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="1111.6" y="773" width="0.5" height="15.0" fill="rgb(235,15,40)" rx="2" ry="2" />
<text  x="1114.58" y="783.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (13 samples, 0.27%)</title><rect x="1148.7" y="821" width="3.2" height="15.0" fill="rgb(248,40,3)" rx="2" ry="2" />
<text  x="1151.69" y="831.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="32.3" y="645" width="0.2" height="15.0" fill="rgb(226,118,19)" rx="2" ry="2" />
<text  x="35.26" y="655.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::~UserMessageImpl() (1 samples, 0.02%)</title><rect x="141.1" y="565" width="0.3" height="15.0" fill="rgb(222,181,19)" rx="2" ry="2" />
<text  x="144.11" y="575.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="1067.1" y="741" width="0.2" height="15.0" fill="rgb(234,154,52)" rx="2" ry="2" />
<text  x="1070.05" y="751.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::VideoStreamEncoder::OnFrame(webrtc::VideoFrame const&amp;)::$_9&gt;::~ClosureTask() (2 samples, 0.04%)</title><rect x="487.7" y="853" width="0.5" height="15.0" fill="rgb(228,171,6)" rx="2" ry="2" />
<text  x="490.69" y="863.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="27.1" y="421" width="0.2" height="15.0" fill="rgb(247,162,50)" rx="2" ry="2" />
<text  x="30.07" y="431.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (5 samples, 0.10%)</title><rect x="346.4" y="789" width="1.3" height="15.0" fill="rgb(205,25,37)" rx="2" ry="2" />
<text  x="349.44" y="799.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="648.7" y="709" width="0.5" height="15.0" fill="rgb(244,198,17)" rx="2" ry="2" />
<text  x="651.73" y="719.5" ></text>
</g>
<g >
<title>cc::TileManager::AssignGpuMemoryToTiles() (1 samples, 0.02%)</title><rect x="1067.5" y="773" width="0.3" height="15.0" fill="rgb(237,155,8)" rx="2" ry="2" />
<text  x="1070.55" y="783.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (1 samples, 0.02%)</title><rect x="524.8" y="693" width="0.2" height="15.0" fill="rgb(251,24,15)" rx="2" ry="2" />
<text  x="527.80" y="703.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="1066.8" y="837" width="0.3" height="15.0" fill="rgb(238,177,48)" rx="2" ry="2" />
<text  x="1069.81" y="847.5" ></text>
</g>
<g >
<title>rtc::TimeMillis() (4 samples, 0.08%)</title><rect x="1175.7" y="965" width="0.9" height="15.0" fill="rgb(241,180,28)" rx="2" ry="2" />
<text  x="1178.65" y="975.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_full_2x_sse2 (4 samples, 0.08%)</title><rect x="387.5" y="677" width="1.0" height="15.0" fill="rgb(252,111,46)" rx="2" ry="2" />
<text  x="390.50" y="687.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="232.1" y="837" width="0.3" height="15.0" fill="rgb(251,33,41)" rx="2" ry="2" />
<text  x="235.15" y="847.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (150 samples, 3.14%)</title><rect x="1102.9" y="1013" width="37.1" height="15.0" fill="rgb(247,126,26)" rx="2" ry="2" />
<text  x="1105.92" y="1023.5" >bas..</text>
</g>
<g >
<title>void std::__Cr::__sift_down&lt;cc::(anonymous namespace)::RasterOrderComparator&amp;, std::__Cr::__wrap_iter&lt;std::__Cr::unique_ptr&lt;cc::TilingSetRasterQueueAll, std::__Cr::default_delete&lt;cc::TilingSetRasterQueueAll&gt; &gt;*&gt; &gt;(std::__Cr::__wrap_iter&lt;std::__Cr::unique_ptr&lt;cc::TilingSetRasterQueueAll, std::__Cr::default_delete&lt;cc::TilingSetRasterQueueAll&gt; &gt;*&gt;, std::__Cr::__wrap_iter&lt;std::__Cr::unique_ptr&lt;cc::TilingSetRasterQueueAll, std::__Cr::default_delete&lt;cc::TilingSetRasterQueueAll&gt; &gt;*&gt;, cc::(anonymous namespace)::RasterOrderComparator&amp;, std::__Cr::iterator_traits&lt;std::__Cr::__wrap_iter&lt;std::__Cr::unique_ptr&lt;cc::TilingSetRasterQueueAll, std::__Cr::default_delete&lt;cc::TilingSetRasterQueueAll&gt; &gt;*&gt; &gt;::difference_type, std::__Cr::__wrap_iter&lt;std::__Cr::unique_ptr&lt;cc::TilingSetRasterQueueAll, std::__Cr::default_delete&lt;cc::TilingSetRasterQueueAll&gt; &gt;*&gt;) (1 samples, 0.02%)</title><rect x="1071.0" y="645" width="0.3" height="15.0" fill="rgb(221,174,49)" rx="2" ry="2" />
<text  x="1074.01" y="655.5" ></text>
</g>
<g >
<title>I420ToNV12 (4 samples, 0.08%)</title><rect x="66.4" y="917" width="1.0" height="15.0" fill="rgb(229,132,22)" rx="2" ry="2" />
<text  x="69.40" y="927.5" ></text>
</g>
<g >
<title>base::internal::RegisteredTaskSource::operator=(base::internal::RegisteredTaskSource&amp;&amp;) (1 samples, 0.02%)</title><rect x="1156.6" y="773" width="0.3" height="15.0" fill="rgb(221,99,45)" rx="2" ry="2" />
<text  x="1159.60" y="783.5" ></text>
</g>
<g >
<title>base::CancelableSyncSocket::Send(void const*, unsigned long) (11 samples, 0.23%)</title><rect x="1074.2" y="981" width="2.7" height="15.0" fill="rgb(242,152,42)" rx="2" ry="2" />
<text  x="1077.23" y="991.5" ></text>
</g>
<g >
<title>base::internal::PriorityQueue::PopTaskSource() (1 samples, 0.02%)</title><rect x="1009.4" y="949" width="0.3" height="15.0" fill="rgb(243,148,44)" rx="2" ry="2" />
<text  x="1012.41" y="959.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="48.8" y="837" width="0.3" height="15.0" fill="rgb(244,54,15)" rx="2" ry="2" />
<text  x="51.84" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork() (10 samples, 0.21%)</title><rect x="194.3" y="901" width="2.5" height="15.0" fill="rgb(223,20,36)" rx="2" ry="2" />
<text  x="197.30" y="911.5" ></text>
</g>
<g >
<title>vp8cx_encode_inter_macroblock (293 samples, 6.14%)</title><rect x="384.5" y="709" width="72.5" height="15.0" fill="rgb(253,83,35)" rx="2" ry="2" />
<text  x="387.53" y="719.5" >vp8cx_en..</text>
</g>
<g >
<title>vp8_decode (147 samples, 3.08%)</title><rect x="494.9" y="757" width="36.3" height="15.0" fill="rgb(208,60,16)" rx="2" ry="2" />
<text  x="497.86" y="767.5" >vp8..</text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (3 samples, 0.06%)</title><rect x="734.6" y="645" width="0.7" height="15.0" fill="rgb(235,118,29)" rx="2" ry="2" />
<text  x="737.57" y="655.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="30.8" y="581" width="0.2" height="15.0" fill="rgb(252,228,30)" rx="2" ry="2" />
<text  x="33.78" y="591.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (3 samples, 0.06%)</title><rect x="190.3" y="773" width="0.8" height="15.0" fill="rgb(208,165,26)" rx="2" ry="2" />
<text  x="193.34" y="783.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Reset() (4 samples, 0.08%)</title><rect x="567.6" y="965" width="1.0" height="15.0" fill="rgb(242,194,46)" rx="2" ry="2" />
<text  x="570.59" y="975.5" ></text>
</g>
<g >
<title>blink::WebViewFrameWidget::EndCommitCompositorFrame() (1 samples, 0.02%)</title><rect x="23.9" y="613" width="0.2" height="15.0" fill="rgb(241,127,53)" rx="2" ry="2" />
<text  x="26.85" y="623.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="179.5" y="837" width="0.2" height="15.0" fill="rgb(249,111,16)" rx="2" ry="2" />
<text  x="182.45" y="847.5" ></text>
</g>
<g >
<title>CopyRow_ERMS (3 samples, 0.06%)</title><rect x="55.3" y="885" width="0.7" height="15.0" fill="rgb(224,119,51)" rx="2" ry="2" />
<text  x="58.27" y="895.5" ></text>
</g>
<g >
<title>all (4,770 samples, 100%)</title><rect x="10.0" y="1093" width="1180.0" height="15.0" fill="rgb(252,164,53)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TakeImmediateIncomingQueueTasks(base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;*) (8 samples, 0.17%)</title><rect x="355.6" y="821" width="2.0" height="15.0" fill="rgb(216,18,47)" rx="2" ry="2" />
<text  x="358.59" y="831.5" ></text>
</g>
<g >
<title>cc::Scheduler::BeginImplFrame(viz::BeginFrameArgs const&amp;, base::TimeTicks) (3 samples, 0.06%)</title><rect x="1071.8" y="597" width="0.7" height="15.0" fill="rgb(231,109,13)" rx="2" ry="2" />
<text  x="1074.75" y="607.5" ></text>
</g>
<g >
<title>tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="1146.2" y="901" width="0.3" height="15.0" fill="rgb(211,15,40)" rx="2" ry="2" />
<text  x="1149.21" y="911.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="354.1" y="773" width="0.3" height="15.0" fill="rgb(243,70,25)" rx="2" ry="2" />
<text  x="357.10" y="783.5" ></text>
</g>
<g >
<title>base::internal::ScopedBlockingCallWithBaseSyncPrimitives::ScopedBlockingCallWithBaseSyncPrimitives(base::BlockingType) (1 samples, 0.02%)</title><rect x="1142.5" y="917" width="0.3" height="15.0" fill="rgb(224,33,20)" rx="2" ry="2" />
<text  x="1145.50" y="927.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="67.4" y="757" width="0.2" height="15.0" fill="rgb(210,206,43)" rx="2" ry="2" />
<text  x="70.39" y="767.5" ></text>
</g>
<g >
<title>mojo::internal::Map_Data&lt;unsigned int, mojo::internal::Pointer&lt;viz::mojom::internal::FrameTimingDetails_Data&gt; &gt;::Validate(void const*, mojo::internal::ValidationContext*, mojo::internal::ContainerValidateParams const*) (1 samples, 0.02%)</title><rect x="1053.9" y="677" width="0.3" height="15.0" fill="rgb(254,100,26)" rx="2" ry="2" />
<text  x="1056.94" y="687.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.02%)</title><rect x="27.6" y="501" width="0.2" height="15.0" fill="rgb(217,28,40)" rx="2" ry="2" />
<text  x="30.56" y="511.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="207.7" y="757" width="0.5" height="15.0" fill="rgb(233,104,16)" rx="2" ry="2" />
<text  x="210.66" y="767.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_zero_loop (9 samples, 0.19%)</title><rect x="425.8" y="661" width="2.3" height="15.0" fill="rgb(213,175,25)" rx="2" ry="2" />
<text  x="428.84" y="671.5" ></text>
</g>
<g >
<title>_thread_stack_pcs (2 samples, 0.04%)</title><rect x="575.5" y="853" width="0.5" height="15.0" fill="rgb(222,197,9)" rx="2" ry="2" />
<text  x="578.51" y="863.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="33.5" y="629" width="0.2" height="15.0" fill="rgb(249,111,22)" rx="2" ry="2" />
<text  x="36.50" y="639.5" ></text>
</g>
<g >
<title>content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter::OnVideoFrameOnIO(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks) (4 samples, 0.08%)</title><rect x="140.1" y="437" width="1.0" height="15.0" fill="rgb(253,155,7)" rx="2" ry="2" />
<text  x="143.12" y="447.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetStatus(mojo::core::ports::PortRef const&amp;, mojo::core::ports::PortStatus*) (1 samples, 0.02%)</title><rect x="113.2" y="741" width="0.2" height="15.0" fill="rgb(241,121,29)" rx="2" ry="2" />
<text  x="116.16" y="751.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="274.4" y="581" width="0.3" height="15.0" fill="rgb(208,160,29)" rx="2" ry="2" />
<text  x="277.45" y="591.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::~RefCountedThreadSafeBase() (1 samples, 0.02%)</title><rect x="75.6" y="821" width="0.2" height="15.0" fill="rgb(241,19,4)" rx="2" ry="2" />
<text  x="78.56" y="831.5" ></text>
</g>
<g >
<title>silk_find_LPC_FLP (3 samples, 0.06%)</title><rect x="1000.0" y="693" width="0.8" height="15.0" fill="rgb(231,196,12)" rx="2" ry="2" />
<text  x="1003.01" y="703.5" ></text>
</g>
<g >
<title>rtc::SystemTimeNanos() (1 samples, 0.02%)</title><rect x="534.2" y="805" width="0.2" height="15.0" fill="rgb(240,171,40)" rx="2" ry="2" />
<text  x="537.20" y="815.5" ></text>
</g>
<g >
<title>base::ScaledLinearHistogram::AddScaledCount(int, int) (2 samples, 0.04%)</title><rect x="36.0" y="565" width="0.5" height="15.0" fill="rgb(214,194,5)" rx="2" ry="2" />
<text  x="38.97" y="575.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoSomeWork() (556 samples, 11.66%)</title><rect x="223.0" y="917" width="137.5" height="15.0" fill="rgb(244,37,53)" rx="2" ry="2" />
<text  x="225.99" y="927.5" >base::sequence_ma..</text>
</g>
<g >
<title>base::GetProgramCounter() (1 samples, 0.02%)</title><rect x="333.6" y="789" width="0.2" height="15.0" fill="rgb(223,156,50)" rx="2" ry="2" />
<text  x="336.57" y="799.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (10 samples, 0.21%)</title><rect x="1084.1" y="757" width="2.5" height="15.0" fill="rgb(239,58,15)" rx="2" ry="2" />
<text  x="1087.12" y="767.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (7 samples, 0.15%)</title><rect x="124.8" y="693" width="1.7" height="15.0" fill="rgb(215,179,44)" rx="2" ry="2" />
<text  x="127.78" y="703.5" ></text>
</g>
<g >
<title>base::internal::PriorityQueue::Push(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.02%)</title><rect x="276.9" y="597" width="0.3" height="15.0" fill="rgb(248,211,52)" rx="2" ry="2" />
<text  x="279.92" y="607.5" ></text>
</g>
<g >
<title>base::ThreadTaskRunnerHandle::~ThreadTaskRunnerHandle() (2 samples, 0.04%)</title><rect x="1027.7" y="917" width="0.5" height="15.0" fill="rgb(253,7,4)" rx="2" ry="2" />
<text  x="1030.72" y="927.5" ></text>
</g>
<g >
<title>vp8_tree_probs_from_distribution (1 samples, 0.02%)</title><rect x="458.3" y="725" width="0.2" height="15.0" fill="rgb(223,103,40)" rx="2" ry="2" />
<text  x="461.25" y="735.5" ></text>
</g>
<g >
<title>set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="168.1" y="565" width="0.2" height="15.0" fill="rgb(211,38,53)" rx="2" ry="2" />
<text  x="171.08" y="575.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="208.4" y="837" width="0.2" height="15.0" fill="rgb(228,198,15)" rx="2" ry="2" />
<text  x="211.40" y="847.5" ></text>
</g>
<g >
<title>cc::TileManager::ScheduleTasks(cc::TileManager::PrioritizedWorkToSchedule) (1 samples, 0.02%)</title><rect x="1067.8" y="773" width="0.2" height="15.0" fill="rgb(222,69,40)" rx="2" ry="2" />
<text  x="1070.79" y="783.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::RtpTransportControllerSend::OnSentPacket(rtc::SentPacket const&amp;)::$_5&gt;::Run() (1 samples, 0.02%)</title><rect x="882.5" y="853" width="0.3" height="15.0" fill="rgb(227,72,27)" rx="2" ry="2" />
<text  x="885.51" y="863.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::BindAndCreateMailboxesHardwareFrameResources(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*) (16 samples, 0.34%)</title><rect x="204.4" y="853" width="4.0" height="15.0" fill="rgb(208,68,27)" rx="2" ry="2" />
<text  x="207.44" y="863.5" ></text>
</g>
<g >
<title>blink::ObjectStartBitmap::FindHeader(unsigned char*) (1 samples, 0.02%)</title><rect x="22.1" y="501" width="0.3" height="15.0" fill="rgb(245,79,30)" rx="2" ry="2" />
<text  x="25.12" y="511.5" ></text>
</g>
<g >
<title>free_tiny (3 samples, 0.06%)</title><rect x="552.0" y="885" width="0.8" height="15.0" fill="rgb(206,147,19)" rx="2" ry="2" />
<text  x="555.01" y="895.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderVideo::SendVideo(webrtc::VideoFrameType, signed char, unsigned int, long long, unsigned char const*, unsigned long, webrtc::RTPFragmentationHeader const*, webrtc::RTPVideoHeader const*, absl::optional&lt;long long&gt;) (1 samples, 0.02%)</title><rect x="486.9" y="725" width="0.3" height="15.0" fill="rgb(231,130,36)" rx="2" ry="2" />
<text  x="489.95" y="735.5" ></text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::CopyOnWriteBuffer(unsigned long) (1 samples, 0.02%)</title><rect x="264.8" y="629" width="0.2" height="15.0" fill="rgb(212,110,50)" rx="2" ry="2" />
<text  x="267.80" y="639.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bh_y_sse2 (1 samples, 0.02%)</title><rect x="943.6" y="693" width="0.3" height="15.0" fill="rgb(212,37,30)" rx="2" ry="2" />
<text  x="946.61" y="703.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::RunsTasksInCurrentSequence() const (3 samples, 0.06%)</title><rect x="552.8" y="885" width="0.7" height="15.0" fill="rgb(254,222,28)" rx="2" ry="2" />
<text  x="555.75" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) (2 samples, 0.04%)</title><rect x="213.8" y="949" width="0.5" height="15.0" fill="rgb(222,140,44)" rx="2" ry="2" />
<text  x="216.84" y="959.5" ></text>
</g>
<g >
<title>cc::PictureLayerImpl::PushPropertiesTo(cc::LayerImpl*) (1 samples, 0.02%)</title><rect x="1069.8" y="725" width="0.2" height="15.0" fill="rgb(246,22,19)" rx="2" ry="2" />
<text  x="1072.77" y="735.5" ></text>
</g>
<g >
<title>base::internal::PooledSingleThreadTaskRunnerManager::PooledSingleThreadTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (18 samples, 0.38%)</title><rect x="122.3" y="741" width="4.5" height="15.0" fill="rgb(227,182,46)" rx="2" ry="2" />
<text  x="125.31" y="751.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (3 samples, 0.06%)</title><rect x="530.5" y="709" width="0.7" height="15.0" fill="rgb(215,196,18)" rx="2" ry="2" />
<text  x="533.49" y="719.5" ></text>
</g>
<g >
<title>cc::ProxyImpl::NotifyReadyToActivate() (3 samples, 0.06%)</title><rect x="1069.3" y="805" width="0.7" height="15.0" fill="rgb(244,200,49)" rx="2" ry="2" />
<text  x="1072.28" y="815.5" ></text>
</g>
<g >
<title>silk_Encode (38 samples, 0.80%)</title><rect x="844.4" y="741" width="9.4" height="15.0" fill="rgb(228,219,23)" rx="2" ry="2" />
<text  x="847.41" y="751.5" ></text>
</g>
<g >
<title>rtc::IsThreadRefEqual(_opaque_pthread_t* const&amp;, _opaque_pthread_t* const&amp;) (1 samples, 0.02%)</title><rect x="1170.2" y="949" width="0.3" height="15.0" fill="rgb(254,172,41)" rx="2" ry="2" />
<text  x="1173.21" y="959.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="210.4" y="789" width="0.2" height="15.0" fill="rgb(208,126,10)" rx="2" ry="2" />
<text  x="213.38" y="799.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__hash_iterator&lt;std::__Cr::__hash_node&lt;std::__Cr::__hash_value_type&lt;cc::Task const*, unsigned long&gt;, void*&gt;*&gt;, bool&gt; std::__Cr::__hash_table&lt;std::__Cr::__hash_value_type&lt;cc::Task const*, unsigned long&gt;, std::__Cr::__unordered_map_hasher&lt;cc::Task const*, std::__Cr::__hash_value_type&lt;cc::Task const*, unsigned long&gt;, std::__Cr::hash&lt;cc::Task const*&gt;, true&gt;, std::__Cr::__unordered_map_equal&lt;cc::Task const*, std::__Cr::__hash_value_type&lt;cc::Task const*, unsigned long&gt;, std::__Cr::equal_to&lt;cc::Task const*&gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__hash_value_type&lt;cc::Task const*, unsigned long&gt; &gt; &gt;::__emplace_unique_key_args&lt;cc::Task const*, std::__Cr::piecewise_construct_t const&amp;, std::__Cr::tuple&lt;cc::Task const*&amp;&amp;&gt;, std::__Cr::tuple&lt;&gt; &gt;(cc::Task const* const&amp;, std::__Cr::piecewise_construct_t const&amp;&amp;&amp;, std::__Cr::tuple&lt;cc::Task const*&amp;&amp;&gt;&amp;&amp;, std::__Cr::tuple&lt;&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="68.4" y="853" width="0.2" height="15.0" fill="rgb(236,65,15)" rx="2" ry="2" />
<text  x="71.38" y="863.5" ></text>
</g>
<g >
<title>webrtc::NackModule::Process() (1 samples, 0.02%)</title><rect x="1189.8" y="965" width="0.2" height="15.0" fill="rgb(213,102,40)" rx="2" ry="2" />
<text  x="1192.75" y="975.5" ></text>
</g>
<g >
<title>IOConnectCallMethod (1 samples, 0.02%)</title><rect x="67.6" y="821" width="0.3" height="15.0" fill="rgb(233,228,19)" rx="2" ry="2" />
<text  x="70.64" y="831.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::TakeTask(base::internal::TaskSource::RunIntent) (3 samples, 0.06%)</title><rect x="570.1" y="949" width="0.7" height="15.0" fill="rgb(205,58,36)" rx="2" ry="2" />
<text  x="573.07" y="959.5" ></text>
</g>
<g >
<title>vp8_compute_skin_block (1 samples, 0.02%)</title><rect x="383.0" y="741" width="0.3" height="15.0" fill="rgb(217,26,48)" rx="2" ry="2" />
<text  x="386.05" y="751.5" ></text>
</g>
<g >
<title>vp8dx_bool_decoder_fill (1 samples, 0.02%)</title><rect x="984.9" y="693" width="0.3" height="15.0" fill="rgb(228,113,40)" rx="2" ry="2" />
<text  x="987.92" y="703.5" ></text>
</g>
<g >
<title>blink::EventTarget::DispatchEventInternal(blink::Event&amp;) (1 samples, 0.02%)</title><rect x="19.9" y="629" width="0.2" height="15.0" fill="rgb(249,163,32)" rx="2" ry="2" />
<text  x="22.90" y="639.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::BeginTransaction() (2 samples, 0.04%)</title><rect x="876.6" y="949" width="0.5" height="15.0" fill="rgb(246,229,10)" rx="2" ry="2" />
<text  x="879.57" y="959.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="168.1" y="645" width="0.2" height="15.0" fill="rgb(240,36,5)" rx="2" ry="2" />
<text  x="171.08" y="655.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl::VideoFrameCopyRequest&gt;::back() (1 samples, 0.02%)</title><rect x="203.9" y="805" width="0.3" height="15.0" fill="rgb(224,184,41)" rx="2" ry="2" />
<text  x="206.95" y="815.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="367.5" y="885" width="0.2" height="15.0" fill="rgb(210,58,11)" rx="2" ry="2" />
<text  x="370.46" y="895.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper*, mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) (15 samples, 0.31%)</title><rect x="225.0" y="789" width="3.7" height="15.0" fill="rgb(214,94,48)" rx="2" ry="2" />
<text  x="227.97" y="799.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="251.2" y="581" width="0.2" height="15.0" fill="rgb(227,34,9)" rx="2" ry="2" />
<text  x="254.19" y="591.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::PutRtpPacket(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType, absl::optional&lt;long long&gt;) (1 samples, 0.02%)</title><rect x="691.5" y="773" width="0.3" height="15.0" fill="rgb(240,44,28)" rx="2" ry="2" />
<text  x="694.53" y="783.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="699.7" y="885" width="0.2" height="15.0" fill="rgb(216,217,33)" rx="2" ry="2" />
<text  x="702.69" y="895.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::IsShutdownComplete() const (2 samples, 0.04%)</title><rect x="568.8" y="965" width="0.5" height="15.0" fill="rgb(227,174,14)" rx="2" ry="2" />
<text  x="571.83" y="975.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (2 samples, 0.04%)</title><rect x="389.5" y="661" width="0.5" height="15.0" fill="rgb(224,6,5)" rx="2" ry="2" />
<text  x="392.48" y="671.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="882.8" y="805" width="0.2" height="15.0" fill="rgb(251,216,2)" rx="2" ry="2" />
<text  x="885.75" y="815.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (4 samples, 0.08%)</title><rect x="1085.6" y="677" width="1.0" height="15.0" fill="rgb(229,158,48)" rx="2" ry="2" />
<text  x="1088.61" y="687.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="255.2" y="565" width="0.2" height="15.0" fill="rgb(224,19,26)" rx="2" ry="2" />
<text  x="258.15" y="575.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="179.5" y="853" width="0.2" height="15.0" fill="rgb(206,188,38)" rx="2" ry="2" />
<text  x="182.45" y="863.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::OnSystemIdle() (2 samples, 0.04%)</title><rect x="360.5" y="885" width="0.5" height="15.0" fill="rgb(224,129,5)" rx="2" ry="2" />
<text  x="363.54" y="895.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="43.1" y="645" width="0.3" height="15.0" fill="rgb(243,168,16)" rx="2" ry="2" />
<text  x="46.15" y="655.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="77.3" y="725" width="0.2" height="15.0" fill="rgb(251,155,13)" rx="2" ry="2" />
<text  x="80.29" y="735.5" ></text>
</g>
<g >
<title>mojo::internal::ArraySerializer&lt;mojo::ArrayDataView&lt;viz::mojom::FrameTimingDetailsDataView&gt;, std::__Cr::vector&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;, std::__Cr::allocator&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt; &gt;, mojo::internal::MapValueReader&lt;WTF::HashMap&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;, WTF::IntHash&lt;unsigned int&gt;, WTF::HashTraits&lt;unsigned int&gt;, WTF::HashTraits&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;, WTF::PartitionAllocator&gt; &gt;, void&gt;::DeserializeElements(mojo::internal::Array_Data&lt;mojo::internal::Pointer&lt;viz::mojom::internal::FrameTimingDetails_Data&gt; &gt;*, std::__Cr::vector&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;, std::__Cr::allocator&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt; &gt;*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1051.7" y="661" width="0.3" height="15.0" fill="rgb(249,115,3)" rx="2" ry="2" />
<text  x="1054.71" y="671.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="236.1" y="373" width="0.3" height="15.0" fill="rgb(248,221,48)" rx="2" ry="2" />
<text  x="239.10" y="383.5" ></text>
</g>
<g >
<title>blink::VideoTrackAdapter::VideoFrameResolutionAdapter::DeliverFrame(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks const&amp;, bool) (7 samples, 0.15%)</title><rect x="175.5" y="805" width="1.7" height="15.0" fill="rgb(208,127,14)" rx="2" ry="2" />
<text  x="178.50" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="211.6" y="821" width="0.3" height="15.0" fill="rgb(215,118,20)" rx="2" ry="2" />
<text  x="214.61" y="831.5" ></text>
</g>
<g >
<title>silk_A2NLSF (1 samples, 0.02%)</title><rect x="689.1" y="661" width="0.2" height="15.0" fill="rgb(209,0,6)" rx="2" ry="2" />
<text  x="692.06" y="671.5" ></text>
</g>
<g >
<title>thread_start (8 samples, 0.17%)</title><rect x="52.3" y="1061" width="2.0" height="15.0" fill="rgb(232,214,51)" rx="2" ry="2" />
<text  x="55.30" y="1071.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (4 samples, 0.08%)</title><rect x="856.8" y="949" width="1.0" height="15.0" fill="rgb(254,219,22)" rx="2" ry="2" />
<text  x="859.78" y="959.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="1020.8" y="933" width="0.2" height="15.0" fill="rgb(232,74,22)" rx="2" ry="2" />
<text  x="1023.79" y="943.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::AppendData(unsigned int, unsigned int const*, unsigned int) (1 samples, 0.02%)</title><rect x="1041.8" y="549" width="0.3" height="15.0" fill="rgb(221,5,17)" rx="2" ry="2" />
<text  x="1044.82" y="559.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.02%)</title><rect x="27.6" y="421" width="0.2" height="15.0" fill="rgb(230,87,19)" rx="2" ry="2" />
<text  x="30.56" y="431.5" ></text>
</g>
<g >
<title>MojoReadMessage (14 samples, 0.29%)</title><rect x="1055.4" y="789" width="3.5" height="15.0" fill="rgb(220,202,5)" rx="2" ry="2" />
<text  x="1058.43" y="799.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::OnHandleReady(int, unsigned int, mojo::HandleSignalsState const&amp;) (120 samples, 2.52%)</title><rect x="1030.2" y="869" width="29.7" height="15.0" fill="rgb(206,119,37)" rx="2" ry="2" />
<text  x="1033.19" y="879.5" >mo..</text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="589.9" y="677" width="0.2" height="15.0" fill="rgb(207,139,35)" rx="2" ry="2" />
<text  x="592.86" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="1035.4" y="453" width="0.2" height="15.0" fill="rgb(226,107,17)" rx="2" ry="2" />
<text  x="1038.39" y="463.5" ></text>
</g>
<g >
<title>cc::ListContainerHelper::~ListContainerHelper() (1 samples, 0.02%)</title><rect x="1039.6" y="597" width="0.2" height="15.0" fill="rgb(205,162,53)" rx="2" ry="2" />
<text  x="1042.59" y="607.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 0.04%)</title><rect x="26.6" y="437" width="0.5" height="15.0" fill="rgb(209,23,20)" rx="2" ry="2" />
<text  x="29.57" y="447.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1041.8" y="421" width="0.3" height="15.0" fill="rgb(222,44,33)" rx="2" ry="2" />
<text  x="1044.82" y="431.5" ></text>
</g>
<g >
<title>base::Thread::ThreadMain  0x644a03 (444 samples, 9.31%)</title><rect x="87.2" y="1077" width="109.8" height="15.0" fill="rgb(236,164,29)" rx="2" ry="2" />
<text  x="90.18" y="1087.5" >base::Thread:..</text>
</g>
<g >
<title>ChromeMain (171 samples, 3.58%)</title><rect x="10.0" y="1029" width="42.3" height="15.0" fill="rgb(213,177,7)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >Chr..</text>
</g>
<g >
<title>_pthread_body (150 samples, 3.14%)</title><rect x="1102.9" y="1029" width="37.1" height="15.0" fill="rgb(244,165,5)" rx="2" ry="2" />
<text  x="1105.92" y="1039.5" >_pt..</text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="816.0" y="629" width="0.2" height="15.0" fill="rgb(241,224,20)" rx="2" ry="2" />
<text  x="818.96" y="639.5" ></text>
</g>
<g >
<title>copy_and_extend_plane (4 samples, 0.08%)</title><rect x="650.2" y="709" width="1.0" height="15.0" fill="rgb(221,144,45)" rx="2" ry="2" />
<text  x="653.22" y="719.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (52 samples, 1.09%)</title><rect x="1074.2" y="1013" width="12.9" height="15.0" fill="rgb(248,213,12)" rx="2" ry="2" />
<text  x="1077.23" y="1023.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoStreamReceiver::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (33 samples, 0.69%)</title><rect x="261.6" y="709" width="8.1" height="15.0" fill="rgb(211,122,4)" rx="2" ry="2" />
<text  x="264.58" y="719.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;blink::WebRtcVideoFrameAdapter&gt;::~RefCountedObject() (1 samples, 0.02%)</title><rect x="962.7" y="821" width="0.2" height="15.0" fill="rgb(226,37,17)" rx="2" ry="2" />
<text  x="965.66" y="831.5" ></text>
</g>
<g >
<title>mojo::core::Core::WriteMessage(unsigned int, unsigned long, MojoWriteMessageOptions const*) (7 samples, 0.15%)</title><rect x="169.6" y="709" width="1.7" height="15.0" fill="rgb(218,30,32)" rx="2" ry="2" />
<text  x="172.56" y="719.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="255.2" y="613" width="0.2" height="15.0" fill="rgb(247,197,42)" rx="2" ry="2" />
<text  x="258.15" y="623.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::Encode(webrtc::VideoFrame const&amp;, std::__Cr::vector&lt;webrtc::VideoFrameType, std::__Cr::allocator&lt;webrtc::VideoFrameType&gt; &gt; const*) (381 samples, 7.99%)</title><rect x="722.7" y="805" width="94.3" height="15.0" fill="rgb(223,76,23)" rx="2" ry="2" />
<text  x="725.70" y="815.5" >webrtc::Lib..</text>
</g>
<g >
<title>MojoWriteMessage (1 samples, 0.02%)</title><rect x="1067.3" y="677" width="0.2" height="15.0" fill="rgb(236,40,48)" rx="2" ry="2" />
<text  x="1070.30" y="687.5" ></text>
</g>
<g >
<title>std::__Cr::basic_streambuf&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;::~basic_streambuf() (1 samples, 0.02%)</title><rect x="117.4" y="789" width="0.2" height="15.0" fill="rgb(231,56,10)" rx="2" ry="2" />
<text  x="120.36" y="799.5" ></text>
</g>
<g >
<title>mach_msg_trap (4 samples, 0.08%)</title><rect x="69.1" y="837" width="1.0" height="15.0" fill="rgb(235,191,5)" rx="2" ry="2" />
<text  x="72.12" y="847.5" ></text>
</g>
<g >
<title>webrtc::TransportFeedbackAdapter::ProcessTransportFeedback(webrtc::rtcp::TransportFeedback const&amp;, webrtc::Timestamp) (5 samples, 0.10%)</title><rect x="274.4" y="693" width="1.3" height="15.0" fill="rgb(223,118,42)" rx="2" ry="2" />
<text  x="277.45" y="703.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="226.0" y="421" width="0.2" height="15.0" fill="rgb(251,216,27)" rx="2" ry="2" />
<text  x="228.96" y="431.5" ></text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks(v8::internal::Isolate*, v8::internal::MicrotaskQueue*, v8::internal::MaybeHandle&lt;v8::internal::Object&gt;*) (1 samples, 0.02%)</title><rect x="37.7" y="613" width="0.3" height="15.0" fill="rgb(230,62,24)" rx="2" ry="2" />
<text  x="40.71" y="623.5" ></text>
</g>
<g >
<title>v8::internal::Factory::NewNumber(double, v8::internal::AllocationType) (1 samples, 0.02%)</title><rect x="17.4" y="357" width="0.3" height="15.0" fill="rgb(231,174,31)" rx="2" ry="2" />
<text  x="20.42" y="367.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="579.0" y="837" width="0.2" height="15.0" fill="rgb(245,122,9)" rx="2" ry="2" />
<text  x="581.97" y="847.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="419.9" y="645" width="0.3" height="15.0" fill="rgb(235,216,1)" rx="2" ry="2" />
<text  x="422.91" y="655.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="1159.3" y="741" width="0.3" height="15.0" fill="rgb(230,68,39)" rx="2" ry="2" />
<text  x="1162.32" y="751.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (8 samples, 0.17%)</title><rect x="1156.4" y="789" width="1.9" height="15.0" fill="rgb(245,39,53)" rx="2" ry="2" />
<text  x="1159.36" y="799.5" ></text>
</g>
<g >
<title>vp8_lookahead_push (7 samples, 0.15%)</title><rect x="484.5" y="741" width="1.7" height="15.0" fill="rgb(209,111,37)" rx="2" ry="2" />
<text  x="487.47" y="751.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="309.6" y="421" width="0.2" height="15.0" fill="rgb(247,209,52)" rx="2" ry="2" />
<text  x="312.58" y="431.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="15.2" y="677" width="0.5" height="15.0" fill="rgb(242,3,31)" rx="2" ry="2" />
<text  x="18.19" y="687.5" ></text>
</g>
<g >
<title>blink::DrawingRecorder::~DrawingRecorder() (1 samples, 0.02%)</title><rect x="26.6" y="165" width="0.2" height="15.0" fill="rgb(235,173,14)" rx="2" ry="2" />
<text  x="29.57" y="175.5" ></text>
</g>
<g >
<title>sctp_med_chunk_output (3 samples, 0.06%)</title><rect x="53.5" y="965" width="0.8" height="15.0" fill="rgb(222,101,5)" rx="2" ry="2" />
<text  x="56.54" y="975.5" ></text>
</g>
<g >
<title>blink::PaintLayer::GetScrollingCoordinator() (1 samples, 0.02%)</title><rect x="25.6" y="373" width="0.2" height="15.0" fill="rgb(237,205,37)" rx="2" ry="2" />
<text  x="28.58" y="383.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="1053.7" y="677" width="0.2" height="15.0" fill="rgb(221,46,54)" rx="2" ry="2" />
<text  x="1056.69" y="687.5" ></text>
</g>
<g >
<title>base::debug::CollectStackTrace(void**, unsigned long) (1 samples, 0.02%)</title><rect x="578.0" y="885" width="0.2" height="15.0" fill="rgb(237,169,49)" rx="2" ry="2" />
<text  x="580.98" y="895.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1058.4" y="709" width="0.2" height="15.0" fill="rgb(224,112,22)" rx="2" ry="2" />
<text  x="1061.39" y="719.5" ></text>
</g>
<g >
<title>cc::RecordingSource::UpdateAndExpandInvalidation(cc::Region*, gfx::Size const&amp;, gfx::Rect const&amp;) (1 samples, 0.02%)</title><rect x="24.6" y="581" width="0.2" height="15.0" fill="rgb(246,124,5)" rx="2" ry="2" />
<text  x="27.60" y="591.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (2 samples, 0.04%)</title><rect x="277.2" y="597" width="0.5" height="15.0" fill="rgb(233,1,43)" rx="2" ry="2" />
<text  x="280.17" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::DidRunTask() (2 samples, 0.04%)</title><rect x="1073.2" y="901" width="0.5" height="15.0" fill="rgb(234,115,11)" rx="2" ry="2" />
<text  x="1076.24" y="911.5" ></text>
</g>
<g >
<title>silk_decode_core (3 samples, 0.06%)</title><rect x="1121.5" y="613" width="0.7" height="15.0" fill="rgb(213,74,16)" rx="2" ry="2" />
<text  x="1124.48" y="623.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1026.2" y="885" width="0.3" height="15.0" fill="rgb(214,121,30)" rx="2" ry="2" />
<text  x="1029.23" y="895.5" ></text>
</g>
<g >
<title>base::internal::PriorityQueue::Size() const (1 samples, 0.02%)</title><rect x="557.7" y="917" width="0.2" height="15.0" fill="rgb(238,189,19)" rx="2" ry="2" />
<text  x="560.70" y="927.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="555.7" y="933" width="0.3" height="15.0" fill="rgb(233,168,27)" rx="2" ry="2" />
<text  x="558.72" y="943.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="206.9" y="821" width="0.3" height="15.0" fill="rgb(218,83,38)" rx="2" ry="2" />
<text  x="209.91" y="831.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (5 samples, 0.10%)</title><rect x="185.9" y="837" width="1.2" height="15.0" fill="rgb(226,86,10)" rx="2" ry="2" />
<text  x="188.89" y="847.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (3 samples, 0.06%)</title><rect x="139.4" y="389" width="0.7" height="15.0" fill="rgb(223,160,8)" rx="2" ry="2" />
<text  x="142.38" y="399.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="240.6" y="661" width="0.2" height="15.0" fill="rgb(234,218,6)" rx="2" ry="2" />
<text  x="243.56" y="671.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="67.6" y="789" width="0.3" height="15.0" fill="rgb(212,121,37)" rx="2" ry="2" />
<text  x="70.64" y="799.5" ></text>
</g>
<g >
<title>vp8_find_best_sub_pixel_step (50 samples, 1.05%)</title><rect x="758.8" y="677" width="12.4" height="15.0" fill="rgb(235,0,17)" rx="2" ry="2" />
<text  x="761.82" y="687.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::MaybeEncodeVideoFrame(webrtc::VideoFrame const&amp;, long long) (429 samples, 8.99%)</title><rect x="381.6" y="837" width="106.1" height="15.0" fill="rgb(235,136,6)" rx="2" ry="2" />
<text  x="384.56" y="847.5" >webrtc::Vide..</text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="317.5" y="501" width="0.2" height="15.0" fill="rgb(229,101,14)" rx="2" ry="2" />
<text  x="320.49" y="511.5" ></text>
</g>
<g >
<title>webrtc::UlpfecReceiverImpl::ProcessReceivedFec() (28 samples, 0.59%)</title><rect x="262.3" y="677" width="7.0" height="15.0" fill="rgb(214,86,42)" rx="2" ry="2" />
<text  x="265.33" y="687.5" ></text>
</g>
<g >
<title>cricket::P2PTransportChannel::OnReadPacket(cricket::Connection*, char const*, unsigned long, long long) (9 samples, 0.19%)</title><rect x="225.2" y="645" width="2.2" height="15.0" fill="rgb(243,211,25)" rx="2" ry="2" />
<text  x="228.22" y="655.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="226.7" y="485" width="0.3" height="15.0" fill="rgb(219,62,50)" rx="2" ry="2" />
<text  x="229.70" y="495.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (2 samples, 0.04%)</title><rect x="1011.4" y="917" width="0.5" height="15.0" fill="rgb(235,139,51)" rx="2" ry="2" />
<text  x="1014.39" y="927.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="961.2" y="661" width="0.2" height="15.0" fill="rgb(216,38,19)" rx="2" ry="2" />
<text  x="964.17" y="671.5" ></text>
</g>
<g >
<title>MojoGetMessageDataImpl (1 samples, 0.02%)</title><rect x="1073.0" y="757" width="0.2" height="15.0" fill="rgb(239,89,33)" rx="2" ry="2" />
<text  x="1075.99" y="767.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::IsTrue(media::VideoFrameMetadata::Key) const (1 samples, 0.02%)</title><rect x="1039.1" y="565" width="0.2" height="15.0" fill="rgb(232,191,25)" rx="2" ry="2" />
<text  x="1042.10" y="575.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="719.7" y="837" width="0.3" height="15.0" fill="rgb(219,212,38)" rx="2" ry="2" />
<text  x="722.73" y="847.5" ></text>
</g>
<g >
<title>webrtc::AudioVector::Size() const (1 samples, 0.02%)</title><rect x="1127.9" y="757" width="0.3" height="15.0" fill="rgb(222,124,17)" rx="2" ry="2" />
<text  x="1130.91" y="767.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Wait() (3 samples, 0.06%)</title><rect x="1065.8" y="933" width="0.8" height="15.0" fill="rgb(216,155,54)" rx="2" ry="2" />
<text  x="1068.82" y="943.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (1 samples, 0.02%)</title><rect x="555.0" y="949" width="0.2" height="15.0" fill="rgb(211,39,19)" rx="2" ry="2" />
<text  x="557.98" y="959.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="1073.5" y="837" width="0.2" height="15.0" fill="rgb(230,189,27)" rx="2" ry="2" />
<text  x="1076.48" y="847.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)(media::VideoFrameMetadata const*, base::OnceCallback&lt;void (double)&gt;), media::VideoFrameMetadata*, base::OnceCallback&lt;void (double)&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="652.7" y="693" width="0.2" height="15.0" fill="rgb(241,107,6)" rx="2" ry="2" />
<text  x="655.69" y="703.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;(anonymous namespace)::FrameAdapter&lt;webrtc::I420BufferInterface&gt; &gt;::Release() const (1 samples, 0.02%)</title><rect x="652.7" y="805" width="0.2" height="15.0" fill="rgb(213,47,19)" rx="2" ry="2" />
<text  x="655.69" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::PostedTask::PostedTask(base::sequence_manager::internal::PostedTask&amp;&amp;) (1 samples, 0.02%)</title><rect x="1148.9" y="773" width="0.3" height="15.0" fill="rgb(222,38,14)" rx="2" ry="2" />
<text  x="1151.94" y="783.5" ></text>
</g>
<g >
<title>webrtc::SrtpTransport::OnRtcpPacketReceived(rtc::CopyOnWriteBuffer, long long) (3 samples, 0.06%)</title><rect x="306.1" y="549" width="0.8" height="15.0" fill="rgb(217,97,41)" rx="2" ry="2" />
<text  x="309.11" y="559.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="43.6" y="613" width="0.3" height="15.0" fill="rgb(230,18,45)" rx="2" ry="2" />
<text  x="46.64" y="623.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::voe::(anonymous namespace)::ChannelSend::ProcessAndEncodeAudio(std::__Cr::unique_ptr&lt;webrtc::AudioFrame, std::__Cr::default_delete&lt;webrtc::AudioFrame&gt; &gt;)::ProcessAndEncodeAudio&gt;::Run() (68 samples, 1.43%)</title><rect x="534.4" y="853" width="16.9" height="15.0" fill="rgb(224,184,5)" rx="2" ry="2" />
<text  x="537.44" y="863.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="719.2" y="853" width="0.3" height="15.0" fill="rgb(215,209,46)" rx="2" ry="2" />
<text  x="722.24" y="863.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="65.2" y="837" width="0.5" height="15.0" fill="rgb(217,188,21)" rx="2" ry="2" />
<text  x="68.17" y="847.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (1 samples, 0.02%)</title><rect x="284.6" y="661" width="0.2" height="15.0" fill="rgb(226,19,42)" rx="2" ry="2" />
<text  x="287.59" y="671.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::PrepareToForwardUserMessage(mojo::core::ports::PortRef const&amp;, mojo::core::ports::Port::State, bool, mojo::core::ports::UserMessageEvent*, mojo::core::ports::NodeName*) (2 samples, 0.04%)</title><rect x="1048.0" y="501" width="0.5" height="15.0" fill="rgb(252,92,48)" rx="2" ry="2" />
<text  x="1051.00" y="511.5" ></text>
</g>
<g >
<title>objc_autoreleasePoolPush (1 samples, 0.02%)</title><rect x="871.4" y="917" width="0.2" height="15.0" fill="rgb(227,218,1)" rx="2" ry="2" />
<text  x="874.38" y="927.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs (4 samples, 0.08%)</title><rect x="945.3" y="725" width="1.0" height="15.0" fill="rgb(234,175,29)" rx="2" ry="2" />
<text  x="948.34" y="735.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunSkipOnShutdown(base::internal::Task*) (504 samples, 10.57%)</title><rect x="881.8" y="917" width="124.6" height="15.0" fill="rgb(254,81,16)" rx="2" ry="2" />
<text  x="884.77" y="927.5" >base::internal:..</text>
</g>
<g >
<title>SkNoDrawCanvas::SkNoDrawCanvas(int, int) (1 samples, 0.02%)</title><rect x="24.3" y="517" width="0.3" height="15.0" fill="rgb(221,84,22)" rx="2" ry="2" />
<text  x="27.35" y="527.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="188.1" y="805" width="0.3" height="15.0" fill="rgb(207,189,15)" rx="2" ry="2" />
<text  x="191.11" y="815.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::InsertEndpointsForMessage(mojo::Message const&amp;) (1 samples, 0.02%)</title><rect x="1071.5" y="757" width="0.3" height="15.0" fill="rgb(218,217,6)" rx="2" ry="2" />
<text  x="1074.51" y="767.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="257.4" y="613" width="0.2" height="15.0" fill="rgb(226,129,26)" rx="2" ry="2" />
<text  x="260.38" y="623.5" ></text>
</g>
<g >
<title>mojo::internal::ArraySerializer&lt;mojo::ArrayDataView&lt;viz::mojom::ReturnedResourceDataView&gt;, WTF::Vector&lt;viz::ReturnedResource, 0u, WTF::PartitionAllocator&gt;, mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;WTF::Vector&lt;viz::ReturnedResource, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::Vector&lt;viz::ReturnedResource, 0u, WTF::PartitionAllocator&gt;, false&gt;, void&gt;::DeserializeElements(mojo::internal::Array_Data&lt;mojo::internal::Pointer&lt;viz::mojom::internal::ReturnedResource_Data&gt; &gt;*, WTF::Vector&lt;viz::ReturnedResource, 0u, WTF::PartitionAllocator&gt;*, mojo::internal::SerializationContext*) (2 samples, 0.04%)</title><rect x="1049.2" y="677" width="0.5" height="15.0" fill="rgb(208,192,7)" rx="2" ry="2" />
<text  x="1052.24" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoSomeWork() (52 samples, 1.09%)</title><rect x="200.5" y="917" width="12.8" height="15.0" fill="rgb(218,199,40)" rx="2" ry="2" />
<text  x="203.48" y="927.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::PushPaintArtifactToCompositor() (1 samples, 0.02%)</title><rect x="27.1" y="517" width="0.2" height="15.0" fill="rgb(219,4,32)" rx="2" ry="2" />
<text  x="30.07" y="527.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (24 samples, 0.50%)</title><rect x="559.7" y="933" width="5.9" height="15.0" fill="rgb(205,129,43)" rx="2" ry="2" />
<text  x="562.68" y="943.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="370.9" y="869" width="0.3" height="15.0" fill="rgb(234,195,39)" rx="2" ry="2" />
<text  x="373.93" y="879.5" ></text>
</g>
<g >
<title>_pthread_body (47 samples, 0.99%)</title><rect x="1178.4" y="1029" width="11.6" height="15.0" fill="rgb(222,137,37)" rx="2" ry="2" />
<text  x="1181.37" y="1039.5" ></text>
</g>
<g >
<title>quant_partition (1 samples, 0.02%)</title><rect x="535.9" y="677" width="0.3" height="15.0" fill="rgb(240,222,28)" rx="2" ry="2" />
<text  x="538.93" y="687.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (9 samples, 0.19%)</title><rect x="78.5" y="805" width="2.3" height="15.0" fill="rgb(232,91,13)" rx="2" ry="2" />
<text  x="81.52" y="815.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (1 samples, 0.02%)</title><rect x="651.5" y="613" width="0.2" height="15.0" fill="rgb(247,52,42)" rx="2" ry="2" />
<text  x="654.45" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) (123 samples, 2.58%)</title><rect x="16.2" y="725" width="30.4" height="15.0" fill="rgb(212,91,17)" rx="2" ry="2" />
<text  x="19.18" y="735.5" >ba..</text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (4 samples, 0.08%)</title><rect x="376.9" y="901" width="1.0" height="15.0" fill="rgb(211,155,39)" rx="2" ry="2" />
<text  x="379.86" y="911.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeTaskFromWorkQueue() (1 samples, 0.02%)</title><rect x="86.2" y="821" width="0.2" height="15.0" fill="rgb(230,126,2)" rx="2" ry="2" />
<text  x="89.19" y="831.5" ></text>
</g>
<g >
<title>mojo::Connector::OnHandleReadyInternal(unsigned int) (41 samples, 0.86%)</title><rect x="132.9" y="725" width="10.2" height="15.0" fill="rgb(230,193,36)" rx="2" ry="2" />
<text  x="135.95" y="735.5" ></text>
</g>
<g >
<title>vp8_find_best_sub_pixel_step (38 samples, 0.80%)</title><rect x="606.2" y="677" width="9.4" height="15.0" fill="rgb(213,217,4)" rx="2" ry="2" />
<text  x="609.18" y="687.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="293.0" y="693" width="0.2" height="15.0" fill="rgb(247,10,21)" rx="2" ry="2" />
<text  x="296.00" y="703.5" ></text>
</g>
<g >
<title>vpx_tm_predictor_16x16_sse2.loop (1 samples, 0.02%)</title><rect x="780.1" y="677" width="0.2" height="15.0" fill="rgb(237,0,53)" rx="2" ry="2" />
<text  x="783.09" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) (69 samples, 1.45%)</title><rect x="70.1" y="933" width="17.1" height="15.0" fill="rgb(240,50,1)" rx="2" ry="2" />
<text  x="73.11" y="943.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="999.5" y="661" width="0.3" height="15.0" fill="rgb(227,91,29)" rx="2" ry="2" />
<text  x="1002.52" y="671.5" ></text>
</g>
<g >
<title>webrtc::video_coding::RtpFrameObject::RtpFrameObject(webrtc::video_coding::PacketBuffer*, unsigned short, unsigned short, unsigned long, int, long long, long long, webrtc::RtpPacketInfos) (2 samples, 0.04%)</title><rect x="268.3" y="581" width="0.5" height="15.0" fill="rgb(234,124,26)" rx="2" ry="2" />
<text  x="271.26" y="591.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="719.0" y="885" width="0.5" height="15.0" fill="rgb(234,180,2)" rx="2" ry="2" />
<text  x="721.99" y="895.5" ></text>
</g>
<g >
<title>rtc::SocketAddress::ToSensitiveString() const (1 samples, 0.02%)</title><rect x="292.5" y="661" width="0.3" height="15.0" fill="rgb(230,79,32)" rx="2" ry="2" />
<text  x="295.51" y="671.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="206.2" y="693" width="0.2" height="15.0" fill="rgb(251,113,8)" rx="2" ry="2" />
<text  x="209.17" y="703.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="358.8" y="869" width="0.3" height="15.0" fill="rgb(229,141,37)" rx="2" ry="2" />
<text  x="361.81" y="879.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="298.4" y="629" width="0.3" height="15.0" fill="rgb(216,32,16)" rx="2" ry="2" />
<text  x="301.44" y="639.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (7 samples, 0.15%)</title><rect x="295.2" y="773" width="1.8" height="15.0" fill="rgb(232,190,41)" rx="2" ry="2" />
<text  x="298.23" y="783.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetSleepTimeout() (2 samples, 0.04%)</title><rect x="565.6" y="949" width="0.5" height="15.0" fill="rgb(243,43,42)" rx="2" ry="2" />
<text  x="568.61" y="959.5" ></text>
</g>
<g >
<title>io_connect_method (1 samples, 0.02%)</title><rect x="67.6" y="805" width="0.3" height="15.0" fill="rgb(229,213,25)" rx="2" ry="2" />
<text  x="70.64" y="815.5" ></text>
</g>
<g >
<title>media::VideoFrameLayout::CreateWithStrides(media::VideoPixelFormat, gfx::Size const&amp;, std::__Cr::vector&lt;int, std::__Cr::allocator&lt;int&gt; &gt;) (1 samples, 0.02%)</title><rect x="207.4" y="805" width="0.3" height="15.0" fill="rgb(253,153,10)" rx="2" ry="2" />
<text  x="210.41" y="815.5" ></text>
</g>
<g >
<title>_CFAutoreleasePoolPop (1 samples, 0.02%)</title><rect x="88.2" y="901" width="0.2" height="15.0" fill="rgb(211,200,45)" rx="2" ry="2" />
<text  x="91.17" y="911.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1155.9" y="885" width="0.2" height="15.0" fill="rgb(224,158,10)" rx="2" ry="2" />
<text  x="1158.86" y="895.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::WillQueueTask(char const*, base::PendingTask*, char const*) (1 samples, 0.02%)</title><rect x="1149.9" y="757" width="0.3" height="15.0" fill="rgb(236,83,35)" rx="2" ry="2" />
<text  x="1152.92" y="767.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="993.6" y="693" width="0.2" height="15.0" fill="rgb(213,13,2)" rx="2" ry="2" />
<text  x="996.58" y="703.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="18.4" y="469" width="0.3" height="15.0" fill="rgb(249,190,35)" rx="2" ry="2" />
<text  x="21.41" y="479.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="335.1" y="853" width="0.2" height="15.0" fill="rgb(205,93,10)" rx="2" ry="2" />
<text  x="338.06" y="863.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="346.2" y="773" width="0.2" height="15.0" fill="rgb(205,175,35)" rx="2" ry="2" />
<text  x="349.19" y="783.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::Ring::pop_front() (1 samples, 0.02%)</title><rect x="355.3" y="805" width="0.3" height="15.0" fill="rgb(244,214,31)" rx="2" ry="2" />
<text  x="358.34" y="815.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="206.4" y="693" width="0.3" height="15.0" fill="rgb(218,177,4)" rx="2" ry="2" />
<text  x="209.42" y="703.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="348.2" y="805" width="0.2" height="15.0" fill="rgb(207,201,41)" rx="2" ry="2" />
<text  x="351.17" y="815.5" ></text>
</g>
<g >
<title>mojo::core::Core::AppendMessageData(unsigned long, unsigned int, unsigned int const*, unsigned int, MojoAppendMessageDataOptions const*, void**, unsigned int*) (1 samples, 0.02%)</title><rect x="168.1" y="741" width="0.2" height="15.0" fill="rgb(253,73,50)" rx="2" ry="2" />
<text  x="171.08" y="751.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::MoveHoleUpAndFillWithElement(unsigned long, base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&amp;&amp;) (1 samples, 0.02%)</title><rect x="39.4" y="597" width="0.3" height="15.0" fill="rgb(225,185,49)" rx="2" ry="2" />
<text  x="42.44" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::DelayTillNextTask(base::sequence_manager::LazyNow*) const (2 samples, 0.04%)</title><rect x="208.4" y="885" width="0.5" height="15.0" fill="rgb(217,203,39)" rx="2" ry="2" />
<text  x="211.40" y="895.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="1022.5" y="917" width="0.3" height="15.0" fill="rgb(219,96,31)" rx="2" ry="2" />
<text  x="1025.52" y="927.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::NotifyPendingTreeFullyPainted() (2 samples, 0.04%)</title><rect x="1070.8" y="789" width="0.5" height="15.0" fill="rgb(243,160,25)" rx="2" ry="2" />
<text  x="1073.76" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::MoveReadyDelayedTasksToWorkQueue(base::sequence_manager::LazyNow*) (2 samples, 0.04%)</title><rect x="342.5" y="805" width="0.5" height="15.0" fill="rgb(209,211,9)" rx="2" ry="2" />
<text  x="345.48" y="815.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (3 samples, 0.06%)</title><rect x="972.6" y="677" width="0.7" height="15.0" fill="rgb(245,187,46)" rx="2" ry="2" />
<text  x="975.55" y="687.5" ></text>
</g>
<g >
<title>mojo::core::Core::WriteMessage(unsigned int, unsigned long, MojoWriteMessageOptions const*) (1 samples, 0.02%)</title><rect x="1072.5" y="485" width="0.2" height="15.0" fill="rgb(220,190,33)" rx="2" ry="2" />
<text  x="1075.49" y="495.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_5::__invoke(_malloc_zone_t*, void*, unsigned long) (1 samples, 0.02%)</title><rect x="243.8" y="501" width="0.2" height="15.0" fill="rgb(232,55,49)" rx="2" ry="2" />
<text  x="246.77" y="511.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="207.9" y="725" width="0.3" height="15.0" fill="rgb(237,214,9)" rx="2" ry="2" />
<text  x="210.90" y="735.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (2 samples, 0.04%)</title><rect x="312.8" y="549" width="0.5" height="15.0" fill="rgb(219,102,4)" rx="2" ry="2" />
<text  x="315.79" y="559.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::OnUserMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="105.7" y="805" width="0.3" height="15.0" fill="rgb(205,131,29)" rx="2" ry="2" />
<text  x="108.74" y="815.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="167.8" y="709" width="0.3" height="15.0" fill="rgb(254,179,49)" rx="2" ry="2" />
<text  x="170.83" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) (548 samples, 11.49%)</title><rect x="223.0" y="901" width="135.6" height="15.0" fill="rgb(216,28,14)" rx="2" ry="2" />
<text  x="225.99" y="911.5" >base::sequence_ma..</text>
</g>
<g >
<title>rtc::RefCountedObject&lt;(anonymous namespace)::FrameAdapter&lt;webrtc::I420BufferInterface&gt; &gt;::Release() const (1 samples, 0.02%)</title><rect x="962.7" y="805" width="0.2" height="15.0" fill="rgb(243,178,51)" rx="2" ry="2" />
<text  x="965.66" y="815.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="962.7" y="533" width="0.2" height="15.0" fill="rgb(231,154,21)" rx="2" ry="2" />
<text  x="965.66" y="543.5" ></text>
</g>
<g >
<title>IOSurfaceClientUnlock (1 samples, 0.02%)</title><rect x="61.2" y="837" width="0.3" height="15.0" fill="rgb(221,84,12)" rx="2" ry="2" />
<text  x="64.21" y="847.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="569.1" y="933" width="0.2" height="15.0" fill="rgb(213,179,47)" rx="2" ry="2" />
<text  x="572.08" y="943.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_uv_block_sse2 (1 samples, 0.02%)</title><rect x="676.9" y="709" width="0.3" height="15.0" fill="rgb(213,36,17)" rx="2" ry="2" />
<text  x="679.94" y="719.5" ></text>
</g>
<g >
<title>blink::PaintLayerCompositor::UpdateIfNeededRecursive(blink::DocumentLifecycle::LifecycleState) (5 samples, 0.10%)</title><rect x="25.3" y="517" width="1.3" height="15.0" fill="rgb(205,89,28)" rx="2" ry="2" />
<text  x="28.34" y="527.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="284.1" y="565" width="0.2" height="15.0" fill="rgb(219,158,2)" rx="2" ry="2" />
<text  x="287.10" y="575.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (2 samples, 0.04%)</title><rect x="27.8" y="389" width="0.5" height="15.0" fill="rgb(239,67,17)" rx="2" ry="2" />
<text  x="30.81" y="399.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="880.0" y="869" width="0.3" height="15.0" fill="rgb(245,30,27)" rx="2" ry="2" />
<text  x="883.03" y="879.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="717.8" y="885" width="0.4" height="15.0" fill="rgb(211,205,3)" rx="2" ry="2" />
<text  x="720.75" y="895.5" ></text>
</g>
<g >
<title>webrtc::AimdRateControl::Update(webrtc::RateControlInput const*, webrtc::Timestamp) (1 samples, 0.02%)</title><rect x="581.0" y="789" width="0.2" height="15.0" fill="rgb(224,26,24)" rx="2" ry="2" />
<text  x="583.95" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::ScheduleWork() (1 samples, 0.02%)</title><rect x="316.8" y="453" width="0.2" height="15.0" fill="rgb(229,66,7)" rx="2" ry="2" />
<text  x="319.75" y="463.5" ></text>
</g>
<g >
<title>v8::TryCatch::TryCatch(v8::Isolate*) (1 samples, 0.02%)</title><rect x="18.2" y="581" width="0.2" height="15.0" fill="rgb(207,95,50)" rx="2" ry="2" />
<text  x="21.16" y="591.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::WalkInternal(blink::LayoutObject const&amp;, blink::PrePaintTreeWalk::PrePaintTreeWalkContext&amp;) (1 samples, 0.02%)</title><rect x="28.3" y="389" width="0.3" height="15.0" fill="rgb(211,177,50)" rx="2" ry="2" />
<text  x="31.31" y="399.5" ></text>
</g>
<g >
<title>webrtc::RateControlSettings::UseCongestionWindow() const (1 samples, 0.02%)</title><rect x="1005.9" y="789" width="0.3" height="15.0" fill="rgb(218,62,0)" rx="2" ry="2" />
<text  x="1008.95" y="799.5" ></text>
</g>
<g >
<title>blink::WebRtcAudioRenderer::CurrentThreadIsRenderingThread() (1 samples, 0.02%)</title><rect x="1109.6" y="917" width="0.2" height="15.0" fill="rgb(214,218,7)" rx="2" ry="2" />
<text  x="1112.60" y="927.5" ></text>
</g>
<g >
<title>IPC::mojom::internal::Channel_Receive_Params_Data::Channel_Receive_Params_Data() (1 samples, 0.02%)</title><rect x="169.3" y="789" width="0.3" height="15.0" fill="rgb(248,110,7)" rx="2" ry="2" />
<text  x="172.31" y="799.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateExtension(webrtc::RTPExtensionType, unsigned long) (1 samples, 0.02%)</title><rect x="691.0" y="773" width="0.3" height="15.0" fill="rgb(207,21,15)" rx="2" ry="2" />
<text  x="694.04" y="783.5" ></text>
</g>
<g >
<title>_pthread_start (39 samples, 0.82%)</title><rect x="1168.7" y="1045" width="9.7" height="15.0" fill="rgb(215,68,0)" rx="2" ry="2" />
<text  x="1171.73" y="1055.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::Run(std::__Cr::vector&lt;cc::TaskCategory, std::__Cr::allocator&lt;cc::TaskCategory&gt; &gt; const&amp;, base::ConditionVariable*) (19 samples, 0.40%)</title><rect x="54.3" y="997" width="4.7" height="15.0" fill="rgb(215,70,49)" rx="2" ry="2" />
<text  x="57.28" y="1007.5" ></text>
</g>
<g >
<title>GetCoeffs (48 samples, 1.01%)</title><rect x="662.3" y="693" width="11.9" height="15.0" fill="rgb(207,71,33)" rx="2" ry="2" />
<text  x="665.34" y="703.5" ></text>
</g>
<g >
<title>webrtc::GoogCcNetworkController::OnTransportPacketsFeedback(webrtc::TransportPacketsFeedback) (1 samples, 0.02%)</title><rect x="581.0" y="837" width="0.2" height="15.0" fill="rgb(206,127,22)" rx="2" ry="2" />
<text  x="583.95" y="847.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="859.5" y="933" width="0.2" height="15.0" fill="rgb(218,164,13)" rx="2" ry="2" />
<text  x="862.50" y="943.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="338.3" y="869" width="0.2" height="15.0" fill="rgb(228,225,45)" rx="2" ry="2" />
<text  x="341.27" y="879.5" ></text>
</g>
<g >
<title>silk_Encode (21 samples, 0.44%)</title><rect x="685.3" y="741" width="5.2" height="15.0" fill="rgb(230,42,26)" rx="2" ry="2" />
<text  x="688.35" y="751.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::PrePaintTreeWalkContext::PrePaintTreeWalkContext(blink::PrePaintTreeWalk::PrePaintTreeWalkContext const&amp;, blink::PaintInvalidatorContext::ParentContextAccessor const&amp;, bool) (1 samples, 0.02%)</title><rect x="27.8" y="357" width="0.3" height="15.0" fill="rgb(252,90,7)" rx="2" ry="2" />
<text  x="30.81" y="367.5" ></text>
</g>
<g >
<title>cc::AppendQuadsData::~AppendQuadsData() (1 samples, 0.02%)</title><rect x="1068.8" y="741" width="0.2" height="15.0" fill="rgb(228,33,5)" rx="2" ry="2" />
<text  x="1071.78" y="751.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::FreeDefiniteSizeImpl(base::allocator::AllocatorDispatch const*, void*, unsigned long, void*) (1 samples, 0.02%)</title><rect x="576.3" y="885" width="0.2" height="15.0" fill="rgb(246,194,40)" rx="2" ry="2" />
<text  x="579.25" y="895.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="577.5" y="821" width="0.2" height="15.0" fill="rgb(205,136,38)" rx="2" ry="2" />
<text  x="580.49" y="831.5" ></text>
</g>
<g >
<title>opus_packet_parse_impl (1 samples, 0.02%)</title><rect x="278.7" y="581" width="0.2" height="15.0" fill="rgb(244,30,22)" rx="2" ry="2" />
<text  x="281.65" y="591.5" ></text>
</g>
<g >
<title>gpu::GpuMemoryBufferImplIOSurface::Unmap() (3 samples, 0.06%)</title><rect x="57.5" y="853" width="0.7" height="15.0" fill="rgb(225,165,1)" rx="2" ry="2" />
<text  x="60.50" y="863.5" ></text>
</g>
<g >
<title>base::internal::Sequence::TakeTask() (3 samples, 0.06%)</title><rect x="711.8" y="933" width="0.8" height="15.0" fill="rgb(212,128,38)" rx="2" ry="2" />
<text  x="714.82" y="943.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (99 samples, 2.08%)</title><rect x="1030.9" y="789" width="24.5" height="15.0" fill="rgb(215,16,24)" rx="2" ry="2" />
<text  x="1033.94" y="799.5" >m..</text>
</g>
<g >
<title>MojoAppendMessageData (1 samples, 0.02%)</title><rect x="253.2" y="613" width="0.2" height="15.0" fill="rgb(218,178,40)" rx="2" ry="2" />
<text  x="256.17" y="623.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl* mojo::core::ports::UserMessageEvent::GetMessage&lt;mojo::core::UserMessageImpl&gt;() (1 samples, 0.02%)</title><rect x="236.4" y="453" width="0.2" height="15.0" fill="rgb(235,136,51)" rx="2" ry="2" />
<text  x="239.35" y="463.5" ></text>
</g>
<g >
<title>mach_msg_trap (4 samples, 0.08%)</title><rect x="134.2" y="501" width="1.0" height="15.0" fill="rgb(226,199,40)" rx="2" ry="2" />
<text  x="137.18" y="511.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (3 samples, 0.06%)</title><rect x="1154.9" y="773" width="0.7" height="15.0" fill="rgb(223,156,54)" rx="2" ry="2" />
<text  x="1157.87" y="783.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1148.2" y="725" width="0.2" height="15.0" fill="rgb(249,137,6)" rx="2" ry="2" />
<text  x="1151.19" y="735.5" ></text>
</g>
<g >
<title>CopyRow_ERMS (2 samples, 0.04%)</title><rect x="840.7" y="725" width="0.5" height="15.0" fill="rgb(219,158,4)" rx="2" ry="2" />
<text  x="843.70" y="735.5" ></text>
</g>
<g >
<title>blink::MainThreadDebugger::consoleAPIMessage(int, v8::Isolate::MessageErrorLevel, v8_inspector::StringView const&amp;, v8_inspector::StringView const&amp;, unsigned int, unsigned int, v8_inspector::V8StackTrace*) (1 samples, 0.02%)</title><rect x="17.7" y="325" width="0.2" height="15.0" fill="rgb(215,70,22)" rx="2" ry="2" />
<text  x="20.67" y="335.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::AtomicFlagSet::RunActiveCallbacks() const (3 samples, 0.06%)</title><rect x="327.9" y="869" width="0.7" height="15.0" fill="rgb(206,110,21)" rx="2" ry="2" />
<text  x="330.88" y="879.5" ></text>
</g>
<g >
<title>silk_process_NLSFs (1 samples, 0.02%)</title><rect x="850.6" y="677" width="0.2" height="15.0" fill="rgb(216,73,49)" rx="2" ry="2" />
<text  x="853.60" y="687.5" ></text>
</g>
<g >
<title>cc::PendingTreeDurationHistogramTimer::~PendingTreeDurationHistogramTimer() (1 samples, 0.02%)</title><rect x="1069.5" y="741" width="0.3" height="15.0" fill="rgb(219,46,15)" rx="2" ry="2" />
<text  x="1072.53" y="751.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::UpdateSyncTreeAfterCommitOrImplSideInvalidation() (3 samples, 0.06%)</title><rect x="1070.8" y="805" width="0.7" height="15.0" fill="rgb(241,133,21)" rx="2" ry="2" />
<text  x="1073.76" y="815.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskBase::Run() (3 samples, 0.06%)</title><rect x="854.8" y="853" width="0.7" height="15.0" fill="rgb(252,171,49)" rx="2" ry="2" />
<text  x="857.80" y="863.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1162.8" y="821" width="0.2" height="15.0" fill="rgb(239,162,5)" rx="2" ry="2" />
<text  x="1165.79" y="831.5" ></text>
</g>
<g >
<title>vp8dx_bool_decoder_fill (2 samples, 0.04%)</title><rect x="521.1" y="677" width="0.5" height="15.0" fill="rgb(229,41,17)" rx="2" ry="2" />
<text  x="524.09" y="687.5" ></text>
</g>
<g >
<title>GetCoeffs (1 samples, 0.02%)</title><rect x="495.6" y="693" width="0.3" height="15.0" fill="rgb(230,30,27)" rx="2" ry="2" />
<text  x="498.61" y="703.5" ></text>
</g>
<g >
<title>content::GpuVideoAcceleratorFactoriesImpl::CheckContextLost() (2 samples, 0.04%)</title><rect x="201.0" y="805" width="0.5" height="15.0" fill="rgb(208,17,46)" rx="2" ry="2" />
<text  x="203.98" y="815.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="854.8" y="821" width="0.2" height="15.0" fill="rgb(226,39,54)" rx="2" ry="2" />
<text  x="857.80" y="831.5" ></text>
</g>
<g >
<title>media::VideoFrame::WrapNativeTextures(media::VideoPixelFormat, gpu::MailboxHolder const (&amp;) [4], base::OnceCallback&lt;void (gpu::SyncToken const&amp;)&gt;, gfx::Size const&amp;, gfx::Rect const&amp;, gfx::Size const&amp;, base::TimeDelta) (4 samples, 0.08%)</title><rect x="207.2" y="837" width="1.0" height="15.0" fill="rgb(230,94,2)" rx="2" ry="2" />
<text  x="210.16" y="847.5" ></text>
</g>
<g >
<title>webrtc::UlpfecGenerator::AddRtpPacketAndGenerateFec(unsigned char const*, unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="961.7" y="693" width="0.5" height="15.0" fill="rgb(248,42,11)" rx="2" ry="2" />
<text  x="964.67" y="703.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="1157.8" y="693" width="0.5" height="15.0" fill="rgb(254,8,40)" rx="2" ry="2" />
<text  x="1160.84" y="703.5" ></text>
</g>
<g >
<title>cc::TilingSetRasterQueueAll::TilingSetRasterQueueAll(cc::PictureLayerTilingSet*, bool, bool) (1 samples, 0.02%)</title><rect x="1067.5" y="677" width="0.3" height="15.0" fill="rgb(208,3,13)" rx="2" ry="2" />
<text  x="1070.55" y="687.5" ></text>
</g>
<g >
<title>cc::(anonymous namespace)::CreateTilingSetRasterQueues(std::__Cr::vector&lt;cc::PictureLayerImpl*, std::__Cr::allocator&lt;cc::PictureLayerImpl*&gt; &gt; const&amp;, cc::TreePriority, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;cc::TilingSetRasterQueueAll, std::__Cr::default_delete&lt;cc::TilingSetRasterQueueAll&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;cc::TilingSetRasterQueueAll, std::__Cr::default_delete&lt;cc::TilingSetRasterQueueAll&gt; &gt; &gt; &gt;*) (2 samples, 0.04%)</title><rect x="1070.8" y="661" width="0.5" height="15.0" fill="rgb(215,202,19)" rx="2" ry="2" />
<text  x="1073.76" y="671.5" ></text>
</g>
<g >
<title>read_mvcomponent (1 samples, 0.02%)</title><rect x="836.7" y="693" width="0.3" height="15.0" fill="rgb(247,187,24)" rx="2" ry="2" />
<text  x="839.74" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (6 samples, 0.13%)</title><rect x="1134.8" y="725" width="1.5" height="15.0" fill="rgb(253,201,36)" rx="2" ry="2" />
<text  x="1137.83" y="735.5" ></text>
</g>
<g >
<title>vp8cx_encode_inter_macroblock (228 samples, 4.78%)</title><rect x="884.2" y="709" width="56.4" height="15.0" fill="rgb(220,29,25)" rx="2" ry="2" />
<text  x="887.24" y="719.5" >vp8cx..</text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="377.6" y="821" width="0.3" height="15.0" fill="rgb(254,2,43)" rx="2" ry="2" />
<text  x="380.61" y="831.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (2 samples, 0.04%)</title><rect x="881.8" y="885" width="0.5" height="15.0" fill="rgb(221,104,2)" rx="2" ry="2" />
<text  x="884.77" y="895.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="76.5" y="757" width="0.3" height="15.0" fill="rgb(241,85,27)" rx="2" ry="2" />
<text  x="79.55" y="767.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="260.3" y="597" width="0.3" height="15.0" fill="rgb(247,220,38)" rx="2" ry="2" />
<text  x="263.35" y="607.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::Release() const (1 samples, 0.02%)</title><rect x="265.3" y="629" width="0.2" height="15.0" fill="rgb(213,115,26)" rx="2" ry="2" />
<text  x="268.30" y="639.5" ></text>
</g>
<g >
<title>tonality_analysis (5 samples, 0.10%)</title><rect x="536.7" y="725" width="1.2" height="15.0" fill="rgb(211,216,35)" rx="2" ry="2" />
<text  x="539.67" y="735.5" ></text>
</g>
<g >
<title>encode_mb_row (267 samples, 5.60%)</title><rect x="724.9" y="725" width="66.1" height="15.0" fill="rgb(221,205,38)" rx="2" ry="2" />
<text  x="727.93" y="735.5" >encode_..</text>
</g>
<g >
<title>mach_msg_trap (9 samples, 0.19%)</title><rect x="198.3" y="869" width="2.2" height="15.0" fill="rgb(247,9,0)" rx="2" ry="2" />
<text  x="201.26" y="879.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (30 samples, 0.63%)</title><rect x="75.1" y="869" width="7.4" height="15.0" fill="rgb(225,37,40)" rx="2" ry="2" />
<text  x="78.06" y="879.5" ></text>
</g>
<g >
<title>vp8_short_fdct8x4_sse2 (20 samples, 0.42%)</title><rect x="443.4" y="693" width="5.0" height="15.0" fill="rgb(254,91,36)" rx="2" ry="2" />
<text  x="446.41" y="703.5" ></text>
</g>
<g >
<title>_pthread_body (12 samples, 0.25%)</title><rect x="62.7" y="1029" width="3.0" height="15.0" fill="rgb(250,72,15)" rx="2" ry="2" />
<text  x="65.69" y="1039.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() const (1 samples, 0.02%)</title><rect x="212.6" y="821" width="0.3" height="15.0" fill="rgb(221,18,33)" rx="2" ry="2" />
<text  x="215.60" y="831.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="94.6" y="853" width="0.3" height="15.0" fill="rgb(231,102,50)" rx="2" ry="2" />
<text  x="97.60" y="863.5" ></text>
</g>
<g >
<title>webrtc::RtpTransportControllerSend::OnTransportFeedback(webrtc::rtcp::TransportFeedback const&amp;) (8 samples, 0.17%)</title><rect x="274.0" y="709" width="1.9" height="15.0" fill="rgb(206,35,12)" rx="2" ry="2" />
<text  x="276.95" y="719.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="358.3" y="821" width="0.3" height="15.0" fill="rgb(207,88,29)" rx="2" ry="2" />
<text  x="361.31" y="831.5" ></text>
</g>
<g >
<title>mojo::core::Channel::Message::~Message() (1 samples, 0.02%)</title><rect x="249.2" y="421" width="0.3" height="15.0" fill="rgb(253,185,30)" rx="2" ry="2" />
<text  x="252.22" y="431.5" ></text>
</g>
<g >
<title>media::VideoResourceUpdater::CreateExternalResourcesFromVideoFrame(scoped_refptr&lt;media::VideoFrame&gt;) (2 samples, 0.04%)</title><rect x="1038.9" y="597" width="0.4" height="15.0" fill="rgb(241,132,3)" rx="2" ry="2" />
<text  x="1041.85" y="607.5" ></text>
</g>
<g >
<title>base::MessagePumpKqueue::ScheduleWork() (1 samples, 0.02%)</title><rect x="962.7" y="565" width="0.2" height="15.0" fill="rgb(206,148,5)" rx="2" ry="2" />
<text  x="965.66" y="575.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="555.5" y="917" width="0.2" height="15.0" fill="rgb(253,62,3)" rx="2" ry="2" />
<text  x="558.47" y="927.5" ></text>
</g>
<g >
<title>blink::VideoTrackAdapter::DeliverFrameOnIO(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks) (7 samples, 0.15%)</title><rect x="175.5" y="821" width="1.7" height="15.0" fill="rgb(207,96,39)" rx="2" ry="2" />
<text  x="178.50" y="831.5" ></text>
</g>
<g >
<title>mach_msg_trap (17 samples, 0.36%)</title><rect x="1171.4" y="901" width="4.3" height="15.0" fill="rgb(237,57,13)" rx="2" ry="2" />
<text  x="1174.45" y="911.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Reset() (6 samples, 0.13%)</title><rect x="873.8" y="965" width="1.5" height="15.0" fill="rgb(225,86,14)" rx="2" ry="2" />
<text  x="876.85" y="975.5" ></text>
</g>
<g >
<title>vp8dx_get_raw_frame (22 samples, 0.46%)</title><rect x="652.9" y="757" width="5.5" height="15.0" fill="rgb(216,86,13)" rx="2" ry="2" />
<text  x="655.94" y="767.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::Run(std::__Cr::vector&lt;cc::TaskCategory, std::__Cr::allocator&lt;cc::TaskCategory&gt; &gt; const&amp;, base::ConditionVariable*) (18 samples, 0.38%)</title><rect x="65.7" y="997" width="4.4" height="15.0" fill="rgb(217,71,15)" rx="2" ry="2" />
<text  x="68.66" y="1007.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="225.2" y="533" width="0.3" height="15.0" fill="rgb(245,80,3)" rx="2" ry="2" />
<text  x="228.22" y="543.5" ></text>
</g>
<g >
<title>webrtc::vcm::VideoReceiver::Decode(webrtc::VCMEncodedFrame const&amp;) (122 samples, 2.56%)</title><rect x="652.9" y="821" width="30.2" height="15.0" fill="rgb(222,227,48)" rx="2" ry="2" />
<text  x="655.94" y="831.5" >we..</text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="343.2" y="789" width="0.3" height="15.0" fill="rgb(237,195,0)" rx="2" ry="2" />
<text  x="346.22" y="799.5" ></text>
</g>
<g >
<title>base::internal::Sequence::GetSortKey() const (2 samples, 0.04%)</title><rect x="1182.3" y="709" width="0.5" height="15.0" fill="rgb(237,20,21)" rx="2" ry="2" />
<text  x="1185.33" y="719.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (3 samples, 0.06%)</title><rect x="1136.3" y="693" width="0.8" height="15.0" fill="rgb(226,127,51)" rx="2" ry="2" />
<text  x="1139.32" y="703.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (1 samples, 0.02%)</title><rect x="1024.3" y="901" width="0.2" height="15.0" fill="rgb(250,202,11)" rx="2" ry="2" />
<text  x="1027.26" y="911.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyWillProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (17 samples, 0.36%)</title><rect x="343.5" y="837" width="4.2" height="15.0" fill="rgb(252,123,36)" rx="2" ry="2" />
<text  x="346.47" y="847.5" ></text>
</g>
<g >
<title>cc::ProxyMain::DidCommitAndDrawFrame() (1 samples, 0.02%)</title><rect x="23.1" y="677" width="0.3" height="15.0" fill="rgb(242,198,2)" rx="2" ry="2" />
<text  x="26.11" y="687.5" ></text>
</g>
<g >
<title>webrtc::ReceiveStatisticsProxy::OnRenderedFrame(webrtc::VideoFrame const&amp;) (1 samples, 0.02%)</title><rect x="841.2" y="709" width="0.2" height="15.0" fill="rgb(212,47,36)" rx="2" ry="2" />
<text  x="844.19" y="719.5" ></text>
</g>
<g >
<title>blink::scheduler::MainThreadMetricsHelper::RecordTaskMetrics(blink::scheduler::MainThreadTaskQueue*, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (8 samples, 0.17%)</title><rect x="35.0" y="629" width="2.0" height="15.0" fill="rgb(243,171,41)" rx="2" ry="2" />
<text  x="37.99" y="639.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::Release() const (2 samples, 0.04%)</title><rect x="310.1" y="485" width="0.5" height="15.0" fill="rgb(205,68,42)" rx="2" ry="2" />
<text  x="313.07" y="495.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::AssignSequenceNumber(webrtc::RtpPacketToSend*) (1 samples, 0.02%)</title><rect x="691.3" y="789" width="0.2" height="15.0" fill="rgb(235,25,3)" rx="2" ry="2" />
<text  x="694.28" y="799.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="196.5" y="821" width="0.3" height="15.0" fill="rgb(249,152,4)" rx="2" ry="2" />
<text  x="199.52" y="831.5" ></text>
</g>
<g >
<title>blink::scheduler::CancelableClosureHolder::Cancel() (1 samples, 0.02%)</title><rect x="38.2" y="645" width="0.2" height="15.0" fill="rgb(235,138,35)" rx="2" ry="2" />
<text  x="41.20" y="655.5" ></text>
</g>
<g >
<title>vp8_loop_filter_vertical_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="942.9" y="709" width="0.2" height="15.0" fill="rgb(231,127,35)" rx="2" ry="2" />
<text  x="945.87" y="719.5" ></text>
</g>
<g >
<title>base::ScopedClosureRunner::~ScopedClosureRunner() (4 samples, 0.08%)</title><rect x="57.2" y="917" width="1.0" height="15.0" fill="rgb(235,149,46)" rx="2" ry="2" />
<text  x="60.25" y="927.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="62.4" y="853" width="0.3" height="15.0" fill="rgb(213,228,15)" rx="2" ry="2" />
<text  x="65.44" y="863.5" ></text>
</g>
<g >
<title>base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread::ScopedSetSequenceLocalStorageMapForCurrentThread(base::internal::SequenceLocalStorageMap*) (1 samples, 0.02%)</title><rect x="378.6" y="917" width="0.2" height="15.0" fill="rgb(250,135,18)" rx="2" ry="2" />
<text  x="381.60" y="927.5" ></text>
</g>
<g >
<title>__psynch_mutexdrop (1 samples, 0.02%)</title><rect x="140.1" y="293" width="0.3" height="15.0" fill="rgb(251,144,33)" rx="2" ry="2" />
<text  x="143.12" y="303.5" ></text>
</g>
<g >
<title>webrtc::RtcEventRtpPacketIncoming::RtcEventRtpPacketIncoming(webrtc::RtpPacketReceived const&amp;) (2 samples, 0.04%)</title><rect x="259.9" y="741" width="0.4" height="15.0" fill="rgb(230,46,25)" rx="2" ry="2" />
<text  x="262.85" y="751.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoSomeWork() (117 samples, 2.45%)</title><rect x="164.9" y="917" width="28.9" height="15.0" fill="rgb(209,142,44)" rx="2" ry="2" />
<text  x="167.86" y="927.5" >ba..</text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (1 samples, 0.02%)</title><rect x="734.3" y="645" width="0.3" height="15.0" fill="rgb(231,103,32)" rx="2" ry="2" />
<text  x="737.33" y="655.5" ></text>
</g>
<g >
<title>start (171 samples, 3.58%)</title><rect x="10.0" y="1061" width="42.3" height="15.0" fill="rgb(223,129,50)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >start</text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (15 samples, 0.31%)</title><rect x="82.7" y="853" width="3.7" height="15.0" fill="rgb(219,48,8)" rx="2" ry="2" />
<text  x="85.73" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::ReloadEmptyImmediateWorkQueue() (6 samples, 0.13%)</title><rect x="184.4" y="821" width="1.5" height="15.0" fill="rgb(241,189,44)" rx="2" ry="2" />
<text  x="187.40" y="831.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="54.8" y="965" width="0.2" height="15.0" fill="rgb(244,92,30)" rx="2" ry="2" />
<text  x="57.78" y="975.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="722.2" y="789" width="0.3" height="15.0" fill="rgb(254,28,32)" rx="2" ry="2" />
<text  x="725.21" y="799.5" ></text>
</g>
<g >
<title>blink::HTMLInputElement::SetNonAttributeValue(WTF::String const&amp;) (1 samples, 0.02%)</title><rect x="21.1" y="485" width="0.3" height="15.0" fill="rgb(230,147,1)" rx="2" ry="2" />
<text  x="24.13" y="495.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (1 samples, 0.02%)</title><rect x="1025.0" y="901" width="0.2" height="15.0" fill="rgb(235,82,13)" rx="2" ry="2" />
<text  x="1028.00" y="911.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="77.5" y="741" width="0.3" height="15.0" fill="rgb(216,162,51)" rx="2" ry="2" />
<text  x="80.53" y="751.5" ></text>
</g>
<g >
<title>pthread_cond_signal (1 samples, 0.02%)</title><rect x="569.6" y="885" width="0.2" height="15.0" fill="rgb(228,186,50)" rx="2" ry="2" />
<text  x="572.57" y="895.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::EndUnusedPeriod() (2 samples, 0.04%)</title><rect x="287.8" y="613" width="0.5" height="15.0" fill="rgb(218,125,2)" rx="2" ry="2" />
<text  x="290.81" y="623.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskImpl&lt;webrtc::RtpTransportControllerSend::StartProcessPeriodicTasks()::$_14&gt;::RunClosure() (1 samples, 0.02%)</title><rect x="551.5" y="837" width="0.3" height="15.0" fill="rgb(205,105,35)" rx="2" ry="2" />
<text  x="554.51" y="847.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker  0x6574f4 (827 samples, 17.34%)</title><rect x="362.0" y="1077" width="204.6" height="15.0" fill="rgb(237,167,42)" rx="2" ry="2" />
<text  x="365.02" y="1087.5" >base::internal::WorkerThre..</text>
</g>
<g >
<title>base::DictionaryValue::GetBooleanWithoutPathExpansion(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, bool*) const (1 samples, 0.02%)</title><rect x="1038.6" y="565" width="0.3" height="15.0" fill="rgb(210,124,45)" rx="2" ry="2" />
<text  x="1041.60" y="575.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (1 samples, 0.02%)</title><rect x="121.6" y="757" width="0.2" height="15.0" fill="rgb(237,73,12)" rx="2" ry="2" />
<text  x="124.57" y="767.5" ></text>
</g>
<g >
<title>mojo::internal::Array_Data&lt;unsigned char&gt;::Validate(void const*, mojo::internal::ValidationContext*, mojo::internal::ContainerValidateParams const*) (1 samples, 0.02%)</title><rect x="319.7" y="645" width="0.3" height="15.0" fill="rgb(252,101,34)" rx="2" ry="2" />
<text  x="322.72" y="655.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="10.2" y="821" width="0.3" height="15.0" fill="rgb(248,198,42)" rx="2" ry="2" />
<text  x="13.25" y="831.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="879.0" y="789" width="0.3" height="15.0" fill="rgb(239,168,30)" rx="2" ry="2" />
<text  x="882.04" y="799.5" ></text>
</g>
<g >
<title>mach_port_deallocate (1 samples, 0.02%)</title><rect x="1037.6" y="485" width="0.3" height="15.0" fill="rgb(253,77,22)" rx="2" ry="2" />
<text  x="1040.61" y="495.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="890.4" y="661" width="0.3" height="15.0" fill="rgb(236,68,18)" rx="2" ry="2" />
<text  x="893.42" y="671.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="312.1" y="597" width="0.2" height="15.0" fill="rgb(240,74,12)" rx="2" ry="2" />
<text  x="315.05" y="607.5" ></text>
</g>
<g >
<title>viz::ContextProviderCommandBuffer::RasterInterface() (1 samples, 0.02%)</title><rect x="1038.1" y="581" width="0.3" height="15.0" fill="rgb(230,225,38)" rx="2" ry="2" />
<text  x="1041.11" y="591.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::operator!=(base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter const&amp;) const (1 samples, 0.02%)</title><rect x="33.3" y="677" width="0.2" height="15.0" fill="rgb(249,18,43)" rx="2" ry="2" />
<text  x="36.25" y="687.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="860.0" y="933" width="0.2" height="15.0" fill="rgb(251,160,27)" rx="2" ry="2" />
<text  x="863.00" y="943.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="174.3" y="773" width="0.2" height="15.0" fill="rgb(220,137,26)" rx="2" ry="2" />
<text  x="177.26" y="783.5" ></text>
</g>
<g >
<title>webrtc::TransportFeedbackAdapter::GetPacketFeedbackVector(webrtc::rtcp::TransportFeedback const&amp;, webrtc::Timestamp) (1 samples, 0.02%)</title><rect x="274.9" y="677" width="0.3" height="15.0" fill="rgb(219,28,13)" rx="2" ry="2" />
<text  x="277.94" y="687.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::FillHole(unsigned long, base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&amp;&amp;) (1 samples, 0.02%)</title><rect x="341.7" y="757" width="0.3" height="15.0" fill="rgb(227,162,40)" rx="2" ry="2" />
<text  x="344.74" y="767.5" ></text>
</g>
<g >
<title>mach_msg (5 samples, 0.10%)</title><rect x="1028.7" y="757" width="1.2" height="15.0" fill="rgb(211,150,15)" rx="2" ry="2" />
<text  x="1031.71" y="767.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bh_y_sse2 (1 samples, 0.02%)</title><rect x="633.1" y="709" width="0.3" height="15.0" fill="rgb(213,20,48)" rx="2" ry="2" />
<text  x="636.15" y="719.5" ></text>
</g>
<g >
<title>blink::StyleEngine::PseudoStateChangedForElement(blink::CSSSelector::PseudoType, blink::Element&amp;) (1 samples, 0.02%)</title><rect x="21.1" y="437" width="0.3" height="15.0" fill="rgb(219,163,21)" rx="2" ry="2" />
<text  x="24.13" y="447.5" ></text>
</g>
<g >
<title>base::MessagePumpKqueue::DoInternalWork(base::MessagePump::Delegate::NextWorkInfo*) (14 samples, 0.29%)</title><rect x="70.1" y="901" width="3.5" height="15.0" fill="rgb(237,180,10)" rx="2" ry="2" />
<text  x="73.11" y="911.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::ScopedSetIpcHash::ScopedSetIpcHash(unsigned int) (1 samples, 0.02%)</title><rect x="304.1" y="661" width="0.3" height="15.0" fill="rgb(208,76,26)" rx="2" ry="2" />
<text  x="307.13" y="671.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="299.7" y="805" width="0.2" height="15.0" fill="rgb(227,188,12)" rx="2" ry="2" />
<text  x="302.68" y="815.5" ></text>
</g>
<g >
<title>CopyRow_ERMS (2 samples, 0.04%)</title><rect x="66.4" y="885" width="0.5" height="15.0" fill="rgb(222,149,40)" rx="2" ry="2" />
<text  x="69.40" y="895.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (12 samples, 0.25%)</title><rect x="335.3" y="869" width="3.0" height="15.0" fill="rgb(241,71,49)" rx="2" ry="2" />
<text  x="338.30" y="879.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::ForwardEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (1 samples, 0.02%)</title><rect x="1072.5" y="405" width="0.2" height="15.0" fill="rgb(221,12,29)" rx="2" ry="2" />
<text  x="1075.49" y="415.5" ></text>
</g>
<g >
<title>deemphasis (3 samples, 0.06%)</title><rect x="1118.5" y="629" width="0.7" height="15.0" fill="rgb(238,163,1)" rx="2" ry="2" />
<text  x="1121.51" y="639.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3.filter_block1d8_h4_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="739.0" y="661" width="0.3" height="15.0" fill="rgb(214,153,0)" rx="2" ry="2" />
<text  x="742.03" y="671.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (2 samples, 0.04%)</title><rect x="487.7" y="773" width="0.5" height="15.0" fill="rgb(233,225,44)" rx="2" ry="2" />
<text  x="490.69" y="783.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_sse2 (1 samples, 0.02%)</title><rect x="605.9" y="645" width="0.3" height="15.0" fill="rgb(207,221,18)" rx="2" ry="2" />
<text  x="608.94" y="655.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="1034.6" y="421" width="0.3" height="15.0" fill="rgb(205,204,53)" rx="2" ry="2" />
<text  x="1037.65" y="431.5" ></text>
</g>
<g >
<title>_pthread_mutex_fairshare_unlock_slow (1 samples, 0.02%)</title><rect x="683.1" y="773" width="0.3" height="15.0" fill="rgb(227,33,35)" rx="2" ry="2" />
<text  x="686.12" y="783.5" ></text>
</g>
<g >
<title>mach_msg (4 samples, 0.08%)</title><rect x="258.6" y="549" width="1.0" height="15.0" fill="rgb(209,13,8)" rx="2" ry="2" />
<text  x="261.62" y="559.5" ></text>
</g>
<g >
<title>webrtc::SendStatisticsProxy::UmaSamplesContainer::RemoveOld(long long, bool*) (1 samples, 0.02%)</title><rect x="651.2" y="725" width="0.3" height="15.0" fill="rgb(211,183,51)" rx="2" ry="2" />
<text  x="654.21" y="735.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (5 samples, 0.10%)</title><rect x="1028.7" y="821" width="1.2" height="15.0" fill="rgb(227,216,7)" rx="2" ry="2" />
<text  x="1031.71" y="831.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (13 samples, 0.27%)</title><rect x="209.9" y="885" width="3.2" height="15.0" fill="rgb(214,64,20)" rx="2" ry="2" />
<text  x="212.88" y="895.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="276.7" y="581" width="0.2" height="15.0" fill="rgb(249,202,37)" rx="2" ry="2" />
<text  x="279.68" y="591.5" ></text>
</g>
<g >
<title>MergeUVRow_AVX2 (4 samples, 0.08%)</title><rect x="63.7" y="885" width="1.0" height="15.0" fill="rgb(233,109,52)" rx="2" ry="2" />
<text  x="66.68" y="895.5" ></text>
</g>
<g >
<title>DYLD-STUB$$base::trace_event::TraceLog::GetInstance() (1 samples, 0.02%)</title><rect x="1034.2" y="501" width="0.2" height="15.0" fill="rgb(215,78,54)" rx="2" ry="2" />
<text  x="1037.15" y="511.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Wait() (11 samples, 0.23%)</title><rect x="197.8" y="917" width="2.7" height="15.0" fill="rgb(244,97,2)" rx="2" ry="2" />
<text  x="200.76" y="927.5" ></text>
</g>
<g >
<title>content::P2PSocketClientImpl::Send(net::IPEndPoint const&amp;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&amp;, rtc::PacketOptions const&amp;) (59 samples, 1.24%)</title><rect x="240.8" y="693" width="14.6" height="15.0" fill="rgb(235,79,23)" rx="2" ry="2" />
<text  x="243.81" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetWork(base::internal::WorkerThread*) (22 samples, 0.46%)</title><rect x="858.0" y="965" width="5.5" height="15.0" fill="rgb(211,34,39)" rx="2" ry="2" />
<text  x="861.02" y="975.5" ></text>
</g>
<g >
<title>thread_start (597 samples, 12.52%)</title><rect x="214.3" y="1061" width="147.7" height="15.0" fill="rgb(206,102,8)" rx="2" ry="2" />
<text  x="217.34" y="1071.5" >thread_start</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="1181.6" y="757" width="0.2" height="15.0" fill="rgb(242,77,9)" rx="2" ry="2" />
<text  x="1184.59" y="767.5" ></text>
</g>
<g >
<title>webrtc::internal::Call::DeliverRtp(webrtc::MediaType, rtc::CopyOnWriteBuffer, long long) (28 samples, 0.59%)</title><rect x="276.2" y="757" width="6.9" height="15.0" fill="rgb(217,34,3)" rx="2" ry="2" />
<text  x="279.18" y="767.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="41.7" y="613" width="0.2" height="15.0" fill="rgb(251,181,1)" rx="2" ry="2" />
<text  x="44.66" y="623.5" ></text>
</g>
<g >
<title>non-virtual thunk to content::P2PSocketClientImpl::SendComplete(network::P2PSendPacketMetrics const&amp;) (21 samples, 0.44%)</title><rect x="314.0" y="661" width="5.2" height="15.0" fill="rgb(244,137,25)" rx="2" ry="2" />
<text  x="317.03" y="671.5" ></text>
</g>
<g >
<title>_platform_memcmp (1 samples, 0.02%)</title><rect x="35.7" y="597" width="0.3" height="15.0" fill="rgb(242,52,53)" rx="2" ry="2" />
<text  x="38.73" y="607.5" ></text>
</g>
<g >
<title>webrtc::RTCPReceiver::RtcpRrTimeout() (1 samples, 0.02%)</title><rect x="1177.6" y="949" width="0.3" height="15.0" fill="rgb(211,168,15)" rx="2" ry="2" />
<text  x="1180.63" y="959.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="879.0" y="853" width="0.3" height="15.0" fill="rgb(236,68,21)" rx="2" ry="2" />
<text  x="882.04" y="863.5" ></text>
</g>
<g >
<title>media::VideoFrame::WrapExternalSharedMemory(media::VideoPixelFormat, gfx::Size const&amp;, gfx::Rect const&amp;, gfx::Size const&amp;, unsigned char*, unsigned long, base::SharedMemoryHandle, unsigned long, base::TimeDelta) (1 samples, 0.02%)</title><rect x="137.6" y="549" width="0.3" height="15.0" fill="rgb(248,168,42)" rx="2" ry="2" />
<text  x="140.65" y="559.5" ></text>
</g>
<g >
<title>vp8_decode_mode_mvs (11 samples, 0.23%)</title><rect x="674.2" y="709" width="2.7" height="15.0" fill="rgb(217,88,12)" rx="2" ry="2" />
<text  x="677.21" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::RunsTasksInCurrentSequence() const (1 samples, 0.02%)</title><rect x="200.7" y="821" width="0.3" height="15.0" fill="rgb(246,84,51)" rx="2" ry="2" />
<text  x="203.73" y="831.5" ></text>
</g>
<g >
<title>alg_unquant (1 samples, 0.02%)</title><rect x="1120.0" y="581" width="0.2" height="15.0" fill="rgb(212,16,23)" rx="2" ry="2" />
<text  x="1122.99" y="591.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (2 samples, 0.04%)</title><rect x="297.5" y="853" width="0.4" height="15.0" fill="rgb(246,50,36)" rx="2" ry="2" />
<text  x="300.45" y="863.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="292.5" y="565" width="0.3" height="15.0" fill="rgb(245,199,33)" rx="2" ry="2" />
<text  x="295.51" y="575.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="588.4" y="645" width="0.2" height="15.0" fill="rgb(234,26,14)" rx="2" ry="2" />
<text  x="591.37" y="655.5" ></text>
</g>
<g >
<title>blink::ChromeClientImpl::ScheduleAnimation(blink::LocalFrameView const*) (2 samples, 0.04%)</title><rect x="19.2" y="517" width="0.4" height="15.0" fill="rgb(221,133,13)" rx="2" ry="2" />
<text  x="22.15" y="527.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (2 samples, 0.04%)</title><rect x="556.0" y="885" width="0.5" height="15.0" fill="rgb(232,141,14)" rx="2" ry="2" />
<text  x="558.97" y="895.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="24.1" y="533" width="0.2" height="15.0" fill="rgb(251,182,24)" rx="2" ry="2" />
<text  x="27.10" y="543.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::RtpPacket() (1 samples, 0.02%)</title><rect x="277.9" y="725" width="0.3" height="15.0" fill="rgb(215,24,42)" rx="2" ry="2" />
<text  x="280.91" y="735.5" ></text>
</g>
<g >
<title>opus_fft_impl (1 samples, 0.02%)</title><rect x="537.7" y="709" width="0.2" height="15.0" fill="rgb(209,112,25)" rx="2" ry="2" />
<text  x="540.66" y="719.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="991.6" y="693" width="0.2" height="15.0" fill="rgb(214,101,30)" rx="2" ry="2" />
<text  x="994.60" y="703.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::ConsoleCall(v8::internal::Isolate*, v8::internal::BuiltinArguments&amp;, void (v8::debug::ConsoleDelegate::*)(v8::debug::ConsoleCallArguments const&amp;, v8::debug::ConsoleContext const&amp;)) (1 samples, 0.02%)</title><rect x="19.9" y="373" width="0.2" height="15.0" fill="rgb(205,160,37)" rx="2" ry="2" />
<text  x="22.90" y="383.5" ></text>
</g>
<g >
<title>cc::mojo_embedder::AsyncLayerTreeFrameSink::DidNotProduceFrame(viz::BeginFrameAck const&amp;) (1 samples, 0.02%)</title><rect x="1072.0" y="533" width="0.2" height="15.0" fill="rgb(220,165,46)" rx="2" ry="2" />
<text  x="1075.00" y="543.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*) (2 samples, 0.04%)</title><rect x="283.6" y="613" width="0.5" height="15.0" fill="rgb(205,85,48)" rx="2" ry="2" />
<text  x="286.60" y="623.5" ></text>
</g>
<g >
<title>IPC::mojom::ChannelProxy::Receive(IPC::MessageView) (12 samples, 0.25%)</title><rect x="168.8" y="805" width="3.0" height="15.0" fill="rgb(229,12,17)" rx="2" ry="2" />
<text  x="171.82" y="815.5" ></text>
</g>
<g >
<title>mach_msg (3 samples, 0.06%)</title><rect x="139.4" y="293" width="0.7" height="15.0" fill="rgb(211,12,21)" rx="2" ry="2" />
<text  x="142.38" y="303.5" ></text>
</g>
<g >
<title>blink::EventTarget::KeepEventInNode(blink::Event const&amp;) const (1 samples, 0.02%)</title><rect x="22.6" y="549" width="0.3" height="15.0" fill="rgb(230,137,9)" rx="2" ry="2" />
<text  x="25.62" y="559.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() const (1 samples, 0.02%)</title><rect x="208.4" y="853" width="0.2" height="15.0" fill="rgb(243,20,19)" rx="2" ry="2" />
<text  x="211.40" y="863.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::ReadMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (11 samples, 0.23%)</title><rect x="1056.2" y="757" width="2.7" height="15.0" fill="rgb(246,161,51)" rx="2" ry="2" />
<text  x="1059.17" y="767.5" ></text>
</g>
<g >
<title>MojoCreateMessageImpl (1 samples, 0.02%)</title><rect x="171.5" y="757" width="0.3" height="15.0" fill="rgb(235,55,43)" rx="2" ry="2" />
<text  x="174.54" y="767.5" ></text>
</g>
<g >
<title>mojo::core::Core::WriteMessage(unsigned int, unsigned long, MojoWriteMessageOptions const*) (8 samples, 0.17%)</title><rect x="1046.5" y="581" width="2.0" height="15.0" fill="rgb(241,2,53)" rx="2" ry="2" />
<text  x="1049.52" y="591.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16x16_ssse3 (5 samples, 0.10%)</title><rect x="915.4" y="661" width="1.2" height="15.0" fill="rgb(241,123,29)" rx="2" ry="2" />
<text  x="918.41" y="671.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="857.8" y="949" width="0.2" height="15.0" fill="rgb(224,67,30)" rx="2" ry="2" />
<text  x="860.77" y="959.5" ></text>
</g>
<g >
<title>DYLD-STUB$$v8::MicrotasksScope::PerformCheckpoint(v8::Isolate*) (1 samples, 0.02%)</title><rect x="33.7" y="645" width="0.3" height="15.0" fill="rgb(215,77,22)" rx="2" ry="2" />
<text  x="36.75" y="655.5" ></text>
</g>
<g >
<title>vpx_sad16x16_sse2.loop (14 samples, 0.29%)</title><rect x="439.2" y="677" width="3.5" height="15.0" fill="rgb(210,58,4)" rx="2" ry="2" />
<text  x="442.20" y="687.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (3 samples, 0.06%)</title><rect x="970.3" y="693" width="0.8" height="15.0" fill="rgb(253,52,30)" rx="2" ry="2" />
<text  x="973.33" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::MoveReadyDelayedTasksToWorkQueue(base::sequence_manager::LazyNow*) (1 samples, 0.02%)</title><rect x="39.9" y="629" width="0.3" height="15.0" fill="rgb(253,211,21)" rx="2" ry="2" />
<text  x="42.93" y="639.5" ></text>
</g>
<g >
<title>base::ScopedBlockingCall::~ScopedBlockingCall() (1 samples, 0.02%)</title><rect x="1095.7" y="965" width="0.3" height="15.0" fill="rgb(253,225,47)" rx="2" ry="2" />
<text  x="1098.75" y="975.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="457.5" y="661" width="0.3" height="15.0" fill="rgb(216,35,3)" rx="2" ry="2" />
<text  x="460.51" y="671.5" ></text>
</g>
<g >
<title>MojoGetMessageData (1 samples, 0.02%)</title><rect x="1058.9" y="773" width="0.2" height="15.0" fill="rgb(231,119,31)" rx="2" ry="2" />
<text  x="1061.89" y="783.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMS::ResetCanvasCache() (1 samples, 0.02%)</title><rect x="29.3" y="677" width="0.2" height="15.0" fill="rgb(242,96,36)" rx="2" ry="2" />
<text  x="32.30" y="687.5" ></text>
</g>
<g >
<title>base::MessagePumpKqueue::ScheduleWork() (1 samples, 0.02%)</title><rect x="652.7" y="565" width="0.2" height="15.0" fill="rgb(219,69,10)" rx="2" ry="2" />
<text  x="655.69" y="575.5" ></text>
</g>
<g >
<title>blink::scheduler::MainThreadSchedulerImpl::RecordTaskUkm(blink::scheduler::MainThreadTaskQueue*, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (1 samples, 0.02%)</title><rect x="37.0" y="629" width="0.2" height="15.0" fill="rgb(245,202,19)" rx="2" ry="2" />
<text  x="39.96" y="639.5" ></text>
</g>
<g >
<title>base::Value::MergeDictionary(base::Value const*) (2 samples, 0.04%)</title><rect x="204.4" y="837" width="0.5" height="15.0" fill="rgb(217,146,21)" rx="2" ry="2" />
<text  x="207.44" y="847.5" ></text>
</g>
<g >
<title>vp8_cal_sad (4 samples, 0.08%)</title><rect x="907.2" y="677" width="1.0" height="15.0" fill="rgb(211,74,45)" rx="2" ry="2" />
<text  x="910.25" y="687.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (1 samples, 0.02%)</title><rect x="602.5" y="661" width="0.2" height="15.0" fill="rgb(239,51,47)" rx="2" ry="2" />
<text  x="605.47" y="671.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (1 samples, 0.02%)</title><rect x="1024.3" y="917" width="0.2" height="15.0" fill="rgb(234,225,18)" rx="2" ry="2" />
<text  x="1027.26" y="927.5" ></text>
</g>
<g >
<title>mach_msg_trap (11 samples, 0.23%)</title><rect x="128.0" y="645" width="2.7" height="15.0" fill="rgb(234,190,28)" rx="2" ry="2" />
<text  x="131.00" y="655.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="1157.8" y="677" width="0.5" height="15.0" fill="rgb(209,116,29)" rx="2" ry="2" />
<text  x="1160.84" y="687.5" ></text>
</g>
<g >
<title>mojo::core::RequestContext::RequestContext() (3 samples, 0.06%)</title><rect x="324.7" y="741" width="0.7" height="15.0" fill="rgb(245,99,16)" rx="2" ry="2" />
<text  x="327.67" y="751.5" ></text>
</g>
<g >
<title>media::AudioBus::CopyPartialFramesTo(int, int, int, media::AudioBus*) const (1 samples, 0.02%)</title><rect x="1100.4" y="869" width="0.3" height="15.0" fill="rgb(241,48,51)" rx="2" ry="2" />
<text  x="1103.45" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (5 samples, 0.10%)</title><rect x="1028.7" y="837" width="1.2" height="15.0" fill="rgb(220,39,2)" rx="2" ry="2" />
<text  x="1031.71" y="847.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::OnWorkerBecomesIdleLockRequired(base::internal::WorkerThread*) (4 samples, 0.08%)</title><rect x="861.5" y="933" width="1.0" height="15.0" fill="rgb(206,133,10)" rx="2" ry="2" />
<text  x="864.48" y="943.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (5 samples, 0.10%)</title><rect x="1028.7" y="853" width="1.2" height="15.0" fill="rgb(233,88,23)" rx="2" ry="2" />
<text  x="1031.71" y="863.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="692.3" y="693" width="0.2" height="15.0" fill="rgb(218,86,32)" rx="2" ry="2" />
<text  x="695.27" y="703.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="135.7" y="533" width="0.2" height="15.0" fill="rgb(207,220,53)" rx="2" ry="2" />
<text  x="138.67" y="543.5" ></text>
</g>
<g >
<title>mach_port_construct (2 samples, 0.04%)</title><rect x="1036.1" y="501" width="0.5" height="15.0" fill="rgb(221,140,4)" rx="2" ry="2" />
<text  x="1039.13" y="511.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (1 samples, 0.02%)</title><rect x="962.7" y="709" width="0.2" height="15.0" fill="rgb(244,169,7)" rx="2" ry="2" />
<text  x="965.66" y="719.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="327.9" y="789" width="0.2" height="15.0" fill="rgb(248,40,50)" rx="2" ry="2" />
<text  x="330.88" y="799.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="193.1" y="869" width="0.2" height="15.0" fill="rgb(220,58,7)" rx="2" ry="2" />
<text  x="196.06" y="879.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::GetNumQueuedCanRunBestEffortTaskSources() const (1 samples, 0.02%)</title><rect x="860.5" y="933" width="0.2" height="15.0" fill="rgb(250,187,47)" rx="2" ry="2" />
<text  x="863.49" y="943.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="266.0" y="597" width="0.5" height="15.0" fill="rgb(235,2,40)" rx="2" ry="2" />
<text  x="269.04" y="607.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="277.2" y="549" width="0.5" height="15.0" fill="rgb(236,158,17)" rx="2" ry="2" />
<text  x="280.17" y="559.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="212.6" y="789" width="0.3" height="15.0" fill="rgb(231,171,0)" rx="2" ry="2" />
<text  x="215.60" y="799.5" ></text>
</g>
<g >
<title>base::internal::BindState&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;, scoped_refptr&lt;media::VideoFrame&gt; &gt;::Destroy(base::internal::BindStateBase const*) (1 samples, 0.02%)</title><rect x="165.6" y="869" width="0.2" height="15.0" fill="rgb(236,215,2)" rx="2" ry="2" />
<text  x="168.60" y="879.5" ></text>
</g>
<g >
<title>rtc::PlatformThread::StartThread(void*) (21 samples, 0.44%)</title><rect x="1163.5" y="1013" width="5.2" height="15.0" fill="rgb(247,152,27)" rx="2" ry="2" />
<text  x="1166.53" y="1023.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="274.7" y="613" width="0.2" height="15.0" fill="rgb(216,207,49)" rx="2" ry="2" />
<text  x="277.70" y="623.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="692.3" y="789" width="0.2" height="15.0" fill="rgb(245,12,26)" rx="2" ry="2" />
<text  x="695.27" y="799.5" ></text>
</g>
<g >
<title>blink::PaintPropertyTreeBuilder::UpdateForSelf() (1 samples, 0.02%)</title><rect x="28.8" y="453" width="0.2" height="15.0" fill="rgb(226,41,43)" rx="2" ry="2" />
<text  x="31.80" y="463.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1153.1" y="805" width="0.3" height="15.0" fill="rgb(239,136,30)" rx="2" ry="2" />
<text  x="1156.14" y="815.5" ></text>
</g>
<g >
<title>base::DefaultTickClock::NowTicks() const (1 samples, 0.02%)</title><rect x="1134.1" y="725" width="0.2" height="15.0" fill="rgb(228,56,45)" rx="2" ry="2" />
<text  x="1137.09" y="735.5" ></text>
</g>
<g >
<title>std::__Cr::basic_ostream&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;&amp; std::__Cr::__put_character_sequence&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;(std::__Cr::basic_ostream&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;&amp;, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="305.9" y="549" width="0.2" height="15.0" fill="rgb(239,131,2)" rx="2" ry="2" />
<text  x="308.87" y="559.5" ></text>
</g>
<g >
<title>vpx_dc_predictor_16x16_sse2 (3 samples, 0.06%)</title><rect x="926.8" y="677" width="0.7" height="15.0" fill="rgb(252,123,41)" rx="2" ry="2" />
<text  x="929.79" y="687.5" ></text>
</g>
<g >
<title>mach_absolute_time (2 samples, 0.04%)</title><rect x="177.5" y="805" width="0.5" height="15.0" fill="rgb(227,75,16)" rx="2" ry="2" />
<text  x="180.48" y="815.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="226.7" y="453" width="0.3" height="15.0" fill="rgb(244,65,28)" rx="2" ry="2" />
<text  x="229.70" y="463.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="317.7" y="469" width="0.3" height="15.0" fill="rgb(223,155,41)" rx="2" ry="2" />
<text  x="320.74" y="479.5" ></text>
</g>
<g >
<title>mojo::core::Core::WriteMessage(unsigned int, unsigned long, MojoWriteMessageOptions const*) (6 samples, 0.13%)</title><rect x="166.3" y="709" width="1.5" height="15.0" fill="rgb(246,90,32)" rx="2" ry="2" />
<text  x="169.34" y="719.5" ></text>
</g>
<g >
<title>webrtc::NetEqImpl::InsertPacket(webrtc::RTPHeader const&amp;, rtc::ArrayView&lt;unsigned char const, -4711l&gt;, unsigned int) (7 samples, 0.15%)</title><rect x="278.7" y="661" width="1.7" height="15.0" fill="rgb(219,184,49)" rx="2" ry="2" />
<text  x="281.65" y="671.5" ></text>
</g>
<g >
<title>Builtins_LdaNamedPropertyHandler (1 samples, 0.02%)</title><rect x="17.4" y="421" width="0.3" height="15.0" fill="rgb(245,30,42)" rx="2" ry="2" />
<text  x="20.42" y="431.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="19.2" y="357" width="0.4" height="15.0" fill="rgb(231,2,22)" rx="2" ry="2" />
<text  x="22.15" y="367.5" ></text>
</g>
<g >
<title>base::debug::CollectStackTrace(void**, unsigned long) (1 samples, 0.02%)</title><rect x="713.8" y="885" width="0.2" height="15.0" fill="rgb(206,172,19)" rx="2" ry="2" />
<text  x="716.79" y="895.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="144.8" y="757" width="0.5" height="15.0" fill="rgb(235,183,28)" rx="2" ry="2" />
<text  x="147.82" y="767.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="693.0" y="901" width="0.3" height="15.0" fill="rgb(244,59,6)" rx="2" ry="2" />
<text  x="696.01" y="911.5" ></text>
</g>
<g >
<title>silk_Encode (49 samples, 1.03%)</title><rect x="537.9" y="741" width="12.1" height="15.0" fill="rgb(237,192,6)" rx="2" ry="2" />
<text  x="540.91" y="751.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="331.3" y="869" width="0.3" height="15.0" fill="rgb(230,115,2)" rx="2" ry="2" />
<text  x="334.35" y="879.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (39 samples, 0.82%)</title><rect x="122.1" y="757" width="9.6" height="15.0" fill="rgb(225,56,36)" rx="2" ry="2" />
<text  x="125.06" y="767.5" ></text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::PostTaskInternal(rtc::Location const&amp;, int, rtc::MessageHandler*, unsigned int, rtc::MessageData*) (3 samples, 0.06%)</title><rect x="226.0" y="517" width="0.7" height="15.0" fill="rgb(241,82,50)" rx="2" ry="2" />
<text  x="228.96" y="527.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="349.2" y="789" width="0.2" height="15.0" fill="rgb(227,19,4)" rx="2" ry="2" />
<text  x="352.16" y="799.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="420.2" y="645" width="0.2" height="15.0" fill="rgb(253,183,10)" rx="2" ry="2" />
<text  x="423.16" y="655.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (4 samples, 0.08%)</title><rect x="271.7" y="597" width="1.0" height="15.0" fill="rgb(224,54,0)" rx="2" ry="2" />
<text  x="274.73" y="607.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (1 samples, 0.02%)</title><rect x="795.9" y="677" width="0.3" height="15.0" fill="rgb(219,22,41)" rx="2" ry="2" />
<text  x="798.92" y="687.5" ></text>
</g>
<g >
<title>cc::(anonymous namespace)::RendererUMAReporter::AddBeginImplFrameLatency(base::TimeDelta) (1 samples, 0.02%)</title><rect x="1071.8" y="565" width="0.2" height="15.0" fill="rgb(254,197,52)" rx="2" ry="2" />
<text  x="1074.75" y="575.5" ></text>
</g>
<g >
<title>v8_inspector::(anonymous namespace)::ConsoleHelper::reportCall(v8_inspector::ConsoleAPIType, std::__Cr::vector&lt;v8::Local&lt;v8::Value&gt;, std::__Cr::allocator&lt;v8::Local&lt;v8::Value&gt; &gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="19.9" y="325" width="0.2" height="15.0" fill="rgb(212,228,24)" rx="2" ry="2" />
<text  x="22.90" y="335.5" ></text>
</g>
<g >
<title>celt_decode_with_ec (22 samples, 0.46%)</title><rect x="1115.8" y="645" width="5.4" height="15.0" fill="rgb(207,23,9)" rx="2" ry="2" />
<text  x="1118.79" y="655.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (2 samples, 0.04%)</title><rect x="1041.1" y="517" width="0.5" height="15.0" fill="rgb(242,220,1)" rx="2" ry="2" />
<text  x="1044.08" y="527.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::GetOldestQueueAndEnqueueOrderInSet(unsigned long, base::sequence_manager::internal::EnqueueOrder*) const (1 samples, 0.02%)</title><rect x="189.6" y="821" width="0.2" height="15.0" fill="rgb(223,155,35)" rx="2" ry="2" />
<text  x="192.60" y="831.5" ></text>
</g>
<g >
<title>vp8_cal_sad (6 samples, 0.13%)</title><rect x="407.5" y="677" width="1.5" height="15.0" fill="rgb(209,118,26)" rx="2" ry="2" />
<text  x="410.54" y="687.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (3 samples, 0.06%)</title><rect x="383.8" y="709" width="0.7" height="15.0" fill="rgb(205,207,21)" rx="2" ry="2" />
<text  x="386.79" y="719.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::AcceptEvent(std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (43 samples, 0.90%)</title><rect x="107.7" y="821" width="10.7" height="15.0" fill="rgb(209,156,6)" rx="2" ry="2" />
<text  x="110.71" y="831.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="300.7" y="725" width="0.5" height="15.0" fill="rgb(245,79,48)" rx="2" ry="2" />
<text  x="303.67" y="735.5" ></text>
</g>
<g >
<title>std::__Cr::deque&lt;std::__Cr::__map_iterator&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;webrtc::video_coding::VideoLayerFrameId, webrtc::video_coding::FrameBuffer::FrameInfo&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;webrtc::video_coding::VideoLayerFrameId, webrtc::video_coding::FrameBuffer::FrameInfo&gt;, void*&gt;*, long&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::__map_iterator&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;webrtc::video_coding::VideoLayerFrameId, webrtc::video_coding::FrameBuffer::FrameInfo&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;webrtc::video_coding::VideoLayerFrameId, webrtc::video_coding::FrameBuffer::FrameInfo&gt;, void*&gt;*, long&gt; &gt; &gt; &gt;::__add_back_capacity() (1 samples, 0.02%)</title><rect x="267.8" y="501" width="0.2" height="15.0" fill="rgb(246,33,1)" rx="2" ry="2" />
<text  x="270.77" y="511.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetWork(base::internal::WorkerThread*) (25 samples, 0.52%)</title><rect x="1007.4" y="965" width="6.2" height="15.0" fill="rgb(242,29,34)" rx="2" ry="2" />
<text  x="1010.43" y="975.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="267.0" y="421" width="0.5" height="15.0" fill="rgb(238,23,23)" rx="2" ry="2" />
<text  x="270.03" y="431.5" ></text>
</g>
<g >
<title>_pthread_body  0x659494 (8 samples, 0.17%)</title><rect x="52.3" y="1077" width="2.0" height="15.0" fill="rgb(223,102,48)" rx="2" ry="2" />
<text  x="55.30" y="1087.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeImmediateIncomingQueueTasks() (2 samples, 0.04%)</title><rect x="83.0" y="789" width="0.5" height="15.0" fill="rgb(227,110,51)" rx="2" ry="2" />
<text  x="85.98" y="799.5" ></text>
</g>
<g >
<title>cricket::WebRtcVoiceMediaChannel::OnRtcpReceived(rtc::CopyOnWriteBuffer, long long) (8 samples, 0.17%)</title><rect x="283.1" y="789" width="2.0" height="15.0" fill="rgb(227,189,10)" rx="2" ry="2" />
<text  x="286.11" y="799.5" ></text>
</g>
<g >
<title>_pthread_start (595 samples, 12.47%)</title><rect x="873.1" y="1045" width="147.2" height="15.0" fill="rgb(208,136,9)" rx="2" ry="2" />
<text  x="876.11" y="1055.5" >_pthread_start</text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (3 samples, 0.06%)</title><rect x="1065.8" y="917" width="0.8" height="15.0" fill="rgb(243,64,51)" rx="2" ry="2" />
<text  x="1068.82" y="927.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), void&gt;::Invoke&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;(void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&amp;&amp;) (3 samples, 0.06%)</title><rect x="58.2" y="949" width="0.8" height="15.0" fill="rgb(209,39,15)" rx="2" ry="2" />
<text  x="61.24" y="959.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="335.1" y="869" width="0.2" height="15.0" fill="rgb(250,119,41)" rx="2" ry="2" />
<text  x="338.06" y="879.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (3 samples, 0.06%)</title><rect x="366.2" y="949" width="0.8" height="15.0" fill="rgb(216,10,49)" rx="2" ry="2" />
<text  x="369.23" y="959.5" ></text>
</g>
<g >
<title>mach_msg (7 samples, 0.15%)</title><rect x="124.8" y="677" width="1.7" height="15.0" fill="rgb(216,10,52)" rx="2" ry="2" />
<text  x="127.78" y="687.5" ></text>
</g>
<g >
<title>mojo::Connector::OnHandleReadyInternal(unsigned int) (119 samples, 2.49%)</title><rect x="1030.4" y="837" width="29.5" height="15.0" fill="rgb(222,64,33)" rx="2" ry="2" />
<text  x="1033.44" y="847.5" >mo..</text>
</g>
<g >
<title>vp8_dequant_idct_add_y_block_sse2 (5 samples, 0.10%)</title><rect x="677.2" y="709" width="1.2" height="15.0" fill="rgb(247,194,17)" rx="2" ry="2" />
<text  x="680.18" y="719.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;::basic_string(std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="1130.4" y="805" width="0.2" height="15.0" fill="rgb(249,137,21)" rx="2" ry="2" />
<text  x="1133.38" y="815.5" ></text>
</g>
<g >
<title>std::__Cr::basic_streambuf&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;::xsputn(char const*, long) (1 samples, 0.02%)</title><rect x="54.0" y="885" width="0.3" height="15.0" fill="rgb(232,23,30)" rx="2" ry="2" />
<text  x="57.03" y="895.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="312.3" y="613" width="0.2" height="15.0" fill="rgb(220,135,51)" rx="2" ry="2" />
<text  x="315.30" y="623.5" ></text>
</g>
<g >
<title>base::ConditionVariable::Wait() (2 samples, 0.04%)</title><rect x="54.3" y="981" width="0.5" height="15.0" fill="rgb(244,192,53)" rx="2" ry="2" />
<text  x="57.28" y="991.5" ></text>
</g>
<g >
<title>media::AudioOutputDevice::CurrentThreadIsRenderingThread() (2 samples, 0.04%)</title><rect x="1139.3" y="949" width="0.5" height="15.0" fill="rgb(212,174,37)" rx="2" ry="2" />
<text  x="1142.29" y="959.5" ></text>
</g>
<g >
<title>media::AudioShifter::ResamplerCallback(int, media::AudioBus*) (3 samples, 0.06%)</title><rect x="1100.0" y="885" width="0.7" height="15.0" fill="rgb(233,143,39)" rx="2" ry="2" />
<text  x="1102.95" y="895.5" ></text>
</g>
<g >
<title>vp8_deblock (25 samples, 0.52%)</title><rect x="488.7" y="725" width="6.2" height="15.0" fill="rgb(248,188,43)" rx="2" ry="2" />
<text  x="491.68" y="735.5" ></text>
</g>
<g >
<title>rtc::SystemTimeNanos() (1 samples, 0.02%)</title><rect x="1168.0" y="933" width="0.2" height="15.0" fill="rgb(242,55,12)" rx="2" ry="2" />
<text  x="1170.98" y="943.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (5 samples, 0.10%)</title><rect x="344.2" y="805" width="1.2" height="15.0" fill="rgb(217,151,12)" rx="2" ry="2" />
<text  x="347.21" y="815.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::Write(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (2 samples, 0.04%)</title><rect x="1041.1" y="421" width="0.5" height="15.0" fill="rgb(218,204,11)" rx="2" ry="2" />
<text  x="1044.08" y="431.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::OnSystemIdle() (2 samples, 0.04%)</title><rect x="196.3" y="885" width="0.5" height="15.0" fill="rgb(241,167,54)" rx="2" ry="2" />
<text  x="199.28" y="895.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="257.6" y="565" width="0.3" height="15.0" fill="rgb(241,9,44)" rx="2" ry="2" />
<text  x="260.63" y="575.5" ></text>
</g>
<g >
<title>free_tiny (2 samples, 0.04%)</title><rect x="1044.5" y="597" width="0.5" height="15.0" fill="rgb(241,55,30)" rx="2" ry="2" />
<text  x="1047.54" y="607.5" ></text>
</g>
<g >
<title>cricket::WebRtcVideoChannel::WebRtcVideoReceiveStream::OnFrame(webrtc::VideoFrame const&amp;) (1 samples, 0.02%)</title><rect x="682.9" y="709" width="0.2" height="15.0" fill="rgb(246,226,20)" rx="2" ry="2" />
<text  x="685.87" y="719.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (1 samples, 0.02%)</title><rect x="1020.3" y="1013" width="0.2" height="15.0" fill="rgb(213,21,47)" rx="2" ry="2" />
<text  x="1023.30" y="1023.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_other_loop (1 samples, 0.02%)</title><rect x="405.1" y="661" width="0.2" height="15.0" fill="rgb(236,147,4)" rx="2" ry="2" />
<text  x="408.06" y="671.5" ></text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="1005.2" y="837" width="0.3" height="15.0" fill="rgb(229,179,11)" rx="2" ry="2" />
<text  x="1008.21" y="847.5" ></text>
</g>
<g >
<title>vp8_loop_filter_row_normal (13 samples, 0.27%)</title><rect x="526.5" y="709" width="3.2" height="15.0" fill="rgb(245,166,42)" rx="2" ry="2" />
<text  x="529.53" y="719.5" ></text>
</g>
<g >
<title>vp8_quantize_mb (16 samples, 0.34%)</title><rect x="391.7" y="677" width="4.0" height="15.0" fill="rgb(210,41,23)" rx="2" ry="2" />
<text  x="394.71" y="687.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (5 samples, 0.10%)</title><rect x="370.9" y="901" width="1.3" height="15.0" fill="rgb(247,216,4)" rx="2" ry="2" />
<text  x="373.93" y="911.5" ></text>
</g>
<g >
<title>base::TaskToken::operator==(base::TaskToken const&amp;) const (1 samples, 0.02%)</title><rect x="1073.5" y="821" width="0.2" height="15.0" fill="rgb(214,14,45)" rx="2" ry="2" />
<text  x="1076.48" y="831.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="132.0" y="709" width="0.2" height="15.0" fill="rgb(242,82,52)" rx="2" ry="2" />
<text  x="134.96" y="719.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (4 samples, 0.08%)</title><rect x="793.2" y="693" width="1.0" height="15.0" fill="rgb(232,177,30)" rx="2" ry="2" />
<text  x="796.20" y="703.5" ></text>
</g>
<g >
<title>bool base::internal::QueryCancellationTraits&lt;base::internal::BindState&lt;void (media::AliveChecker::*)(), base::WeakPtr&lt;media::AliveChecker&gt; &gt; &gt;(base::internal::BindStateBase const*, base::internal::BindStateBase::CancellationQueryMode) (1 samples, 0.02%)</title><rect x="45.6" y="629" width="0.3" height="15.0" fill="rgb(237,55,43)" rx="2" ry="2" />
<text  x="48.62" y="639.5" ></text>
</g>
<g >
<title>blink::CompositingInputsUpdater::UpdateSelfAndDescendantsRecursively(blink::PaintLayer*, blink::CompositingInputsUpdater::UpdateType, blink::CompositingInputsUpdater::AncestorInfo) (1 samples, 0.02%)</title><rect x="25.3" y="437" width="0.3" height="15.0" fill="rgb(242,195,49)" rx="2" ry="2" />
<text  x="28.34" y="447.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="75.1" y="853" width="0.2" height="15.0" fill="rgb(216,30,37)" rx="2" ry="2" />
<text  x="78.06" y="863.5" ></text>
</g>
<g >
<title>base::debug::CollectStackTrace(void**, unsigned long) (2 samples, 0.04%)</title><rect x="714.8" y="885" width="0.5" height="15.0" fill="rgb(253,76,48)" rx="2" ry="2" />
<text  x="717.78" y="895.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3 (1 samples, 0.02%)</title><rect x="597.3" y="661" width="0.2" height="15.0" fill="rgb(208,219,29)" rx="2" ry="2" />
<text  x="600.28" y="671.5" ></text>
</g>
<g >
<title>_pthread_start (12 samples, 0.25%)</title><rect x="62.7" y="1045" width="3.0" height="15.0" fill="rgb(224,36,16)" rx="2" ry="2" />
<text  x="65.69" y="1055.5" ></text>
</g>
<g >
<title>silk_noise_shape_analysis_FLP (11 samples, 0.23%)</title><rect x="850.8" y="709" width="2.8" height="15.0" fill="rgb(246,57,42)" rx="2" ry="2" />
<text  x="853.84" y="719.5" ></text>
</g>
<g >
<title>webrtc::GoogCcNetworkController::OnSentPacket(webrtc::SentPacket) (1 samples, 0.02%)</title><rect x="721.7" y="837" width="0.3" height="15.0" fill="rgb(254,147,21)" rx="2" ry="2" />
<text  x="724.71" y="847.5" ></text>
</g>
<g >
<title>CFAllocatorDeallocate (1 samples, 0.02%)</title><rect x="10.5" y="853" width="0.2" height="15.0" fill="rgb(248,101,28)" rx="2" ry="2" />
<text  x="13.49" y="863.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="349.9" y="789" width="0.5" height="15.0" fill="rgb(208,64,34)" rx="2" ry="2" />
<text  x="352.90" y="799.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="1159.3" y="805" width="0.3" height="15.0" fill="rgb(208,129,50)" rx="2" ry="2" />
<text  x="1162.32" y="815.5" ></text>
</g>
<g >
<title>mach_msg (11 samples, 0.23%)</title><rect x="246.5" y="389" width="2.7" height="15.0" fill="rgb(251,5,14)" rx="2" ry="2" />
<text  x="249.49" y="399.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (3 samples, 0.06%)</title><rect x="298.2" y="757" width="0.7" height="15.0" fill="rgb(241,9,54)" rx="2" ry="2" />
<text  x="301.20" y="767.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="323.7" y="693" width="0.2" height="15.0" fill="rgb(251,209,24)" rx="2" ry="2" />
<text  x="326.68" y="703.5" ></text>
</g>
<g >
<title>gettimeofday (1 samples, 0.02%)</title><rect x="10.2" y="853" width="0.3" height="15.0" fill="rgb(237,119,29)" rx="2" ry="2" />
<text  x="13.25" y="863.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="377.6" y="837" width="0.3" height="15.0" fill="rgb(243,144,40)" rx="2" ry="2" />
<text  x="380.61" y="847.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="879.0" y="837" width="0.3" height="15.0" fill="rgb(250,16,19)" rx="2" ry="2" />
<text  x="882.04" y="847.5" ></text>
</g>
<g >
<title>copy_and_extend_plane (4 samples, 0.08%)</title><rect x="960.2" y="709" width="1.0" height="15.0" fill="rgb(238,170,10)" rx="2" ry="2" />
<text  x="963.18" y="719.5" ></text>
</g>
<g >
<title>std::__Cr::vector&lt;mojo::core::ports::PortRef const*, base::StackAllocator&lt;mojo::core::ports::PortRef const*, 5ul&gt; &gt;::__append(unsigned long) (1 samples, 0.02%)</title><rect x="1068.3" y="565" width="0.2" height="15.0" fill="rgb(251,218,1)" rx="2" ry="2" />
<text  x="1071.29" y="575.5" ></text>
</g>
<g >
<title>base::internal::WorkerThreadStack::Peek() const (1 samples, 0.02%)</title><rect x="700.7" y="933" width="0.2" height="15.0" fill="rgb(237,152,0)" rx="2" ry="2" />
<text  x="703.68" y="943.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostDelayedTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;, unsigned int) (1 samples, 0.02%)</title><rect x="993.6" y="789" width="0.2" height="15.0" fill="rgb(211,208,23)" rx="2" ry="2" />
<text  x="996.58" y="799.5" ></text>
</g>
<g >
<title>MergeUVRow_AVX2 (2 samples, 0.04%)</title><rect x="66.9" y="885" width="0.5" height="15.0" fill="rgb(231,121,16)" rx="2" ry="2" />
<text  x="69.90" y="895.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="309.3" y="453" width="0.3" height="15.0" fill="rgb(213,153,36)" rx="2" ry="2" />
<text  x="312.33" y="463.5" ></text>
</g>
<g >
<title>mojo::core::RequestContext::~RequestContext() (97 samples, 2.03%)</title><rect x="119.3" y="837" width="24.0" height="15.0" fill="rgb(227,175,33)" rx="2" ry="2" />
<text  x="122.34" y="847.5" >m..</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="15.2" y="693" width="0.5" height="15.0" fill="rgb(205,27,6)" rx="2" ry="2" />
<text  x="18.19" y="703.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="81.2" y="821" width="0.3" height="15.0" fill="rgb(207,14,49)" rx="2" ry="2" />
<text  x="84.25" y="831.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (content::WebMediaPlayerMSCompositor::*)(scoped_refptr&lt;media::VideoFrame&gt;), void&gt;::Invoke&lt;void (content::WebMediaPlayerMSCompositor::*)(scoped_refptr&lt;media::VideoFrame&gt;), scoped_refptr&lt;content::WebMediaPlayerMSCompositor&gt;, scoped_refptr&lt;media::VideoFrame&gt; &gt;(void (content::WebMediaPlayerMSCompositor::*)(scoped_refptr&lt;media::VideoFrame&gt;), scoped_refptr&lt;content::WebMediaPlayerMSCompositor&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="1029.9" y="885" width="0.3" height="15.0" fill="rgb(237,128,24)" rx="2" ry="2" />
<text  x="1032.95" y="895.5" ></text>
</g>
<g >
<title>_thread_stack_pcs (1 samples, 0.02%)</title><rect x="1024.8" y="853" width="0.2" height="15.0" fill="rgb(239,194,20)" rx="2" ry="2" />
<text  x="1027.75" y="863.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="692.3" y="805" width="0.2" height="15.0" fill="rgb(218,54,5)" rx="2" ry="2" />
<text  x="695.27" y="815.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.02%)</title><rect x="1157.3" y="757" width="0.3" height="15.0" fill="rgb(248,34,3)" rx="2" ry="2" />
<text  x="1160.35" y="767.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="240.6" y="677" width="0.2" height="15.0" fill="rgb(231,26,35)" rx="2" ry="2" />
<text  x="243.56" y="687.5" ></text>
</g>
<g >
<title>vp8_tree_probs_from_distribution (1 samples, 0.02%)</title><rect x="941.6" y="725" width="0.3" height="15.0" fill="rgb(249,53,52)" rx="2" ry="2" />
<text  x="944.63" y="735.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16x16_ssse3 (1 samples, 0.02%)</title><rect x="760.5" y="661" width="0.3" height="15.0" fill="rgb(238,140,16)" rx="2" ry="2" />
<text  x="763.55" y="671.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunSharedWorker() (181 samples, 3.79%)</title><rect x="1020.5" y="997" width="44.8" height="15.0" fill="rgb(215,115,38)" rx="2" ry="2" />
<text  x="1023.55" y="1007.5" >base..</text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::DidProcessTask(base::internal::RegisteredTaskSource) (7 samples, 0.15%)</title><rect x="692.8" y="965" width="1.7" height="15.0" fill="rgb(237,169,32)" rx="2" ry="2" />
<text  x="695.77" y="975.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="212.9" y="805" width="0.2" height="15.0" fill="rgb(240,203,18)" rx="2" ry="2" />
<text  x="215.85" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="39.9" y="613" width="0.3" height="15.0" fill="rgb(250,165,9)" rx="2" ry="2" />
<text  x="42.93" y="623.5" ></text>
</g>
<g >
<title>blink::Element::setAttribute(blink::QualifiedName const&amp;, WTF::AtomicString const&amp;) (1 samples, 0.02%)</title><rect x="20.9" y="517" width="0.2" height="15.0" fill="rgb(239,110,32)" rx="2" ry="2" />
<text  x="23.88" y="527.5" ></text>
</g>
<g >
<title>__psynch_mutexdrop (1 samples, 0.02%)</title><rect x="130.7" y="613" width="0.3" height="15.0" fill="rgb(227,59,28)" rx="2" ry="2" />
<text  x="133.72" y="623.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.02%)</title><rect x="132.7" y="757" width="0.2" height="15.0" fill="rgb(226,229,12)" rx="2" ry="2" />
<text  x="135.70" y="767.5" ></text>
</g>
<g >
<title>void std::__Cr::allocator_traits&lt;std::__Cr::allocator&lt;unsigned char&gt; &gt;::__construct_range_forward&lt;base::CheckedRandomAccessIterator&lt;unsigned char const&gt;, unsigned char*&gt;(std::__Cr::allocator&lt;unsigned char&gt;&amp;, base::CheckedRandomAccessIterator&lt;unsigned char const&gt;, base::CheckedRandomAccessIterator&lt;unsigned char const&gt;, unsigned char*&amp;) (1 samples, 0.02%)</title><rect x="204.7" y="773" width="0.2" height="15.0" fill="rgb(238,183,16)" rx="2" ry="2" />
<text  x="207.69" y="783.5" ></text>
</g>
<g >
<title>mach_absolute_time (2 samples, 0.04%)</title><rect x="1176.1" y="933" width="0.5" height="15.0" fill="rgb(207,178,51)" rx="2" ry="2" />
<text  x="1179.15" y="943.5" ></text>
</g>
<g >
<title>vp8_build_component_cost_table (1 samples, 0.02%)</title><rect x="478.5" y="709" width="0.3" height="15.0" fill="rgb(220,86,26)" rx="2" ry="2" />
<text  x="481.54" y="719.5" ></text>
</g>
<g >
<title>cc::ProxyMain::SendCommitRequestToImplThreadIfNeeded(cc::ProxyMain::CommitPipelineStage) (2 samples, 0.04%)</title><rect x="19.2" y="469" width="0.4" height="15.0" fill="rgb(252,62,28)" rx="2" ry="2" />
<text  x="22.15" y="479.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="860.0" y="917" width="0.2" height="15.0" fill="rgb(246,187,42)" rx="2" ry="2" />
<text  x="863.00" y="927.5" ></text>
</g>
<g >
<title>blink::JSEventHandler::InvokeInternal(blink::EventTarget&amp;, blink::Event&amp;, v8::Local&lt;v8::Value&gt;) (1 samples, 0.02%)</title><rect x="19.9" y="565" width="0.2" height="15.0" fill="rgb(216,145,7)" rx="2" ry="2" />
<text  x="22.90" y="575.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1148.2" y="757" width="0.2" height="15.0" fill="rgb(244,33,11)" rx="2" ry="2" />
<text  x="1151.19" y="767.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamDecoder::FrameToRender(webrtc::VideoFrame&amp;, absl::optional&lt;unsigned char&gt;, int, webrtc::VideoContentType) (3 samples, 0.06%)</title><rect x="533.0" y="741" width="0.7" height="15.0" fill="rgb(252,97,45)" rx="2" ry="2" />
<text  x="535.96" y="751.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 0.04%)</title><rect x="26.6" y="421" width="0.5" height="15.0" fill="rgb(230,29,37)" rx="2" ry="2" />
<text  x="29.57" y="431.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;viz::mojom::RenderPassDataView, std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; const&gt;::Serialize(std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; const&amp;, mojo::internal::Buffer*, viz::mojom::internal::RenderPass_Data::BufferWriter*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1068.5" y="677" width="0.3" height="15.0" fill="rgb(227,165,45)" rx="2" ry="2" />
<text  x="1071.54" y="687.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::AssertNoLockHeldOnCurrentThread() (1 samples, 0.02%)</title><rect x="861.0" y="933" width="0.2" height="15.0" fill="rgb(236,130,8)" rx="2" ry="2" />
<text  x="863.99" y="943.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*) (2 samples, 0.04%)</title><rect x="860.5" y="949" width="0.5" height="15.0" fill="rgb(247,86,35)" rx="2" ry="2" />
<text  x="863.49" y="959.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::OnFrame(webrtc::VideoFrame const&amp;) (4 samples, 0.08%)</title><rect x="297.9" y="773" width="1.0" height="15.0" fill="rgb(228,6,31)" rx="2" ry="2" />
<text  x="300.95" y="783.5" ></text>
</g>
<g >
<title>logging::GetVlogLevelHelper(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="1043.8" y="645" width="0.2" height="15.0" fill="rgb(246,166,21)" rx="2" ry="2" />
<text  x="1046.80" y="655.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::GetBoolean(media::VideoFrameMetadata::Key, bool*) const (1 samples, 0.02%)</title><rect x="1039.1" y="549" width="0.2" height="15.0" fill="rgb(241,162,0)" rx="2" ry="2" />
<text  x="1042.10" y="559.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="338.3" y="853" width="0.2" height="15.0" fill="rgb(217,102,4)" rx="2" ry="2" />
<text  x="341.27" y="863.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="697.5" y="949" width="0.2" height="15.0" fill="rgb(238,175,15)" rx="2" ry="2" />
<text  x="700.47" y="959.5" ></text>
</g>
<g >
<title>blink::VideoTrackAdapter::VideoFrameResolutionAdapter::DoDeliverFrame(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks const&amp;) (5 samples, 0.10%)</title><rect x="175.7" y="789" width="1.3" height="15.0" fill="rgb(205,49,2)" rx="2" ry="2" />
<text  x="178.74" y="799.5" ></text>
</g>
<g >
<title>vp8_yv12_copy_frame_c (5 samples, 0.10%)</title><rect x="812.5" y="741" width="1.2" height="15.0" fill="rgb(251,79,48)" rx="2" ry="2" />
<text  x="815.50" y="751.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1153.1" y="725" width="0.3" height="15.0" fill="rgb(229,40,30)" rx="2" ry="2" />
<text  x="1156.14" y="735.5" ></text>
</g>
<g >
<title>base::  0x644a06 (19 samples, 0.40%)</title><rect x="54.3" y="1077" width="4.7" height="15.0" fill="rgb(238,77,50)" rx="2" ry="2" />
<text  x="57.28" y="1087.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="574.3" y="853" width="0.5" height="15.0" fill="rgb(230,225,8)" rx="2" ry="2" />
<text  x="577.27" y="863.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (3 samples, 0.06%)</title><rect x="139.4" y="309" width="0.7" height="15.0" fill="rgb(223,187,51)" rx="2" ry="2" />
<text  x="142.38" y="319.5" ></text>
</g>
<g >
<title>webrtc::AudioDecoderOpusImpl::DecodeInternal(unsigned char const*, unsigned long, int, short*, webrtc::AudioDecoder::SpeechType*) (40 samples, 0.84%)</title><rect x="1115.3" y="725" width="9.9" height="15.0" fill="rgb(242,172,34)" rx="2" ry="2" />
<text  x="1118.29" y="735.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (5 samples, 0.10%)</title><rect x="375.1" y="821" width="1.3" height="15.0" fill="rgb(246,71,7)" rx="2" ry="2" />
<text  x="378.13" y="831.5" ></text>
</g>
<g >
<title>srtp_protect_rtcp_mki (1 samples, 0.02%)</title><rect x="234.6" y="757" width="0.3" height="15.0" fill="rgb(251,172,31)" rx="2" ry="2" />
<text  x="237.62" y="767.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (7 samples, 0.15%)</title><rect x="315.5" y="533" width="1.7" height="15.0" fill="rgb(246,50,16)" rx="2" ry="2" />
<text  x="318.51" y="543.5" ></text>
</g>
<g >
<title>media::mojom::VideoCaptureObserverStubDispatch::Accept(media::mojom::VideoCaptureObserver*, mojo::Message*) (19 samples, 0.40%)</title><rect x="136.4" y="581" width="4.7" height="15.0" fill="rgb(229,37,26)" rx="2" ry="2" />
<text  x="139.41" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::WillQueueTask(base::sequence_manager::Task*, char const*) (1 samples, 0.02%)</title><rect x="317.0" y="453" width="0.2" height="15.0" fill="rgb(217,191,2)" rx="2" ry="2" />
<text  x="320.00" y="463.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) (51 samples, 1.07%)</title><rect x="73.8" y="885" width="12.6" height="15.0" fill="rgb(251,127,43)" rx="2" ry="2" />
<text  x="76.82" y="895.5" ></text>
</g>
<g >
<title>v8::internal::HeapObject::IsConsString() const (1 samples, 0.02%)</title><rect x="17.9" y="261" width="0.3" height="15.0" fill="rgb(219,165,21)" rx="2" ry="2" />
<text  x="20.92" y="271.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (9 samples, 0.19%)</title><rect x="179.9" y="869" width="2.3" height="15.0" fill="rgb(208,135,10)" rx="2" ry="2" />
<text  x="182.95" y="879.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::ForwardEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (3 samples, 0.06%)</title><rect x="235.9" y="501" width="0.7" height="15.0" fill="rgb(216,128,28)" rx="2" ry="2" />
<text  x="238.86" y="511.5" ></text>
</g>
<g >
<title>webrtc::RtpTransportControllerSend::OnReceivedPacket(webrtc::ReceivedPacket const&amp;) (8 samples, 0.17%)</title><rect x="271.5" y="725" width="2.0" height="15.0" fill="rgb(234,94,25)" rx="2" ry="2" />
<text  x="274.48" y="735.5" ></text>
</g>
<g >
<title>__psynch_cvsignal (1 samples, 0.02%)</title><rect x="203.2" y="709" width="0.3" height="15.0" fill="rgb(234,184,41)" rx="2" ry="2" />
<text  x="206.20" y="719.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="228.2" y="517" width="0.2" height="15.0" fill="rgb(240,223,34)" rx="2" ry="2" />
<text  x="231.19" y="527.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)(media::VideoFrameMetadata const*, base::OnceCallback&lt;void (double)&gt;), media::VideoFrameMetadata*, base::OnceCallback&lt;void (double)&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="962.7" y="693" width="0.2" height="15.0" fill="rgb(242,68,48)" rx="2" ry="2" />
<text  x="965.66" y="703.5" ></text>
</g>
<g >
<title>vpx_codec_decode (147 samples, 3.08%)</title><rect x="494.9" y="773" width="36.3" height="15.0" fill="rgb(238,163,46)" rx="2" ry="2" />
<text  x="497.86" y="783.5" >vpx..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (4 samples, 0.08%)</title><rect x="1052.7" y="469" width="1.0" height="15.0" fill="rgb(219,181,24)" rx="2" ry="2" />
<text  x="1055.70" y="479.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (11 samples, 0.23%)</title><rect x="256.9" y="661" width="2.7" height="15.0" fill="rgb(218,130,6)" rx="2" ry="2" />
<text  x="259.88" y="671.5" ></text>
</g>
<g >
<title>webrtc::vcm::VideoReceiver::Decode(webrtc::VCMEncodedFrame const&amp;) (123 samples, 2.58%)</title><rect x="963.2" y="821" width="30.4" height="15.0" fill="rgb(222,97,29)" rx="2" ry="2" />
<text  x="966.15" y="831.5" >we..</text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.02%)</title><rect x="1158.8" y="837" width="0.3" height="15.0" fill="rgb(217,11,53)" rx="2" ry="2" />
<text  x="1161.83" y="847.5" ></text>
</g>
<g >
<title>non-virtual thunk to cricket::BaseChannel::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (4 samples, 0.08%)</title><rect x="226.0" y="549" width="1.0" height="15.0" fill="rgb(231,192,20)" rx="2" ry="2" />
<text  x="228.96" y="559.5" ></text>
</g>
<g >
<title>base::internal::SequenceLocalStorageMap::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="312.3" y="645" width="0.2" height="15.0" fill="rgb(231,92,28)" rx="2" ry="2" />
<text  x="315.30" y="655.5" ></text>
</g>
<g >
<title>network::mojom::P2PSocketClientStubDispatch::Accept(network::mojom::P2PSocketClient*, mojo::Message*) (61 samples, 1.28%)</title><rect x="304.1" y="677" width="15.1" height="15.0" fill="rgb(218,105,52)" rx="2" ry="2" />
<text  x="307.13" y="687.5" ></text>
</g>
<g >
<title>scoped_refptr&lt;base::internal::BindStateBase&gt; base::AdoptRef&lt;base::internal::BindStateBase&gt;(base::internal::BindStateBase*) (2 samples, 0.04%)</title><rect x="1005.5" y="821" width="0.4" height="15.0" fill="rgb(228,23,0)" rx="2" ry="2" />
<text  x="1008.45" y="831.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::RtpTransportControllerSend::OnSentPacket(rtc::SentPacket const&amp;)::$_5&gt;::Run() (3 samples, 0.06%)</title><rect x="580.2" y="853" width="0.8" height="15.0" fill="rgb(213,44,18)" rx="2" ry="2" />
<text  x="583.21" y="863.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="682.9" y="613" width="0.2" height="15.0" fill="rgb(247,200,27)" rx="2" ry="2" />
<text  x="685.87" y="623.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (4 samples, 0.08%)</title><rect x="195.3" y="869" width="1.0" height="15.0" fill="rgb(250,59,40)" rx="2" ry="2" />
<text  x="198.29" y="879.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::AppendData(unsigned int, unsigned int const*, unsigned int) (3 samples, 0.06%)</title><rect x="253.7" y="565" width="0.7" height="15.0" fill="rgb(249,94,27)" rx="2" ry="2" />
<text  x="256.67" y="575.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork() (1 samples, 0.02%)</title><rect x="213.3" y="901" width="0.3" height="15.0" fill="rgb(212,179,23)" rx="2" ry="2" />
<text  x="216.35" y="911.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::OnSystemIdle() (1 samples, 0.02%)</title><rect x="213.3" y="885" width="0.3" height="15.0" fill="rgb(210,12,54)" rx="2" ry="2" />
<text  x="216.35" y="895.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetStatus(mojo::core::ports::PortRef const&amp;, mojo::core::ports::PortStatus*) (1 samples, 0.02%)</title><rect x="169.6" y="661" width="0.2" height="15.0" fill="rgb(251,16,5)" rx="2" ry="2" />
<text  x="172.56" y="671.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelSend::OnRecoverableUplinkPacketLossRate(float) (1 samples, 0.02%)</title><rect x="275.4" y="661" width="0.3" height="15.0" fill="rgb(252,158,54)" rx="2" ry="2" />
<text  x="278.44" y="671.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::PrepareAndSendPacket(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, bool, bool, webrtc::PacedPacketInfo const&amp;) (61 samples, 1.28%)</title><rect x="1146.7" y="917" width="15.1" height="15.0" fill="rgb(239,115,10)" rx="2" ry="2" />
<text  x="1149.71" y="927.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="58.5" y="837" width="0.5" height="15.0" fill="rgb(247,30,7)" rx="2" ry="2" />
<text  x="61.49" y="847.5" ></text>
</g>
<g >
<title>base::internal::WeakReferenceOwner::GetRef() const (1 samples, 0.02%)</title><rect x="1038.9" y="565" width="0.2" height="15.0" fill="rgb(221,174,16)" rx="2" ry="2" />
<text  x="1041.85" y="575.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::SendMessageLocked(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (4 samples, 0.08%)</title><rect x="1046.8" y="421" width="1.0" height="15.0" fill="rgb(243,60,17)" rx="2" ry="2" />
<text  x="1049.77" y="431.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (4 samples, 0.08%)</title><rect x="973.3" y="693" width="1.0" height="15.0" fill="rgb(225,41,53)" rx="2" ry="2" />
<text  x="976.30" y="703.5" ></text>
</g>
<g >
<title>mach_msg (23 samples, 0.48%)</title><rect x="701.4" y="917" width="5.7" height="15.0" fill="rgb(224,185,8)" rx="2" ry="2" />
<text  x="704.43" y="927.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="993.6" y="741" width="0.2" height="15.0" fill="rgb(207,152,45)" rx="2" ry="2" />
<text  x="996.58" y="751.5" ></text>
</g>
<g >
<title>media::MultiChannelResampler::Resample(int, media::AudioBus*) (20 samples, 0.42%)</title><rect x="1097.5" y="933" width="4.9" height="15.0" fill="rgb(222,65,36)" rx="2" ry="2" />
<text  x="1100.48" y="943.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderVideo::SendVideoPacketAsRedMaybeWithUlpfec(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType, bool) (1 samples, 0.02%)</title><rect x="652.2" y="709" width="0.2" height="15.0" fill="rgb(229,53,17)" rx="2" ry="2" />
<text  x="655.20" y="719.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1051.7" y="629" width="0.3" height="15.0" fill="rgb(208,32,6)" rx="2" ry="2" />
<text  x="1054.71" y="639.5" ></text>
</g>
<g >
<title>rtc::IsThreadRefEqual(_opaque_pthread_t* const&amp;, _opaque_pthread_t* const&amp;) (1 samples, 0.02%)</title><rect x="961.4" y="677" width="0.3" height="15.0" fill="rgb(234,43,31)" rx="2" ry="2" />
<text  x="964.42" y="687.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (3 samples, 0.06%)</title><rect x="27.8" y="421" width="0.8" height="15.0" fill="rgb(219,35,44)" rx="2" ry="2" />
<text  x="30.81" y="431.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (3 samples, 0.06%)</title><rect x="1040.8" y="629" width="0.8" height="15.0" fill="rgb(213,46,11)" rx="2" ry="2" />
<text  x="1043.83" y="639.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::WalkInternal(blink::LayoutObject const&amp;, blink::PrePaintTreeWalk::PrePaintTreeWalkContext&amp;) (1 samples, 0.02%)</title><rect x="28.1" y="357" width="0.2" height="15.0" fill="rgb(243,164,4)" rx="2" ry="2" />
<text  x="31.06" y="367.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*, mojo::core::ports::MessageFilter*) (8 samples, 0.17%)</title><rect x="1056.7" y="741" width="1.9" height="15.0" fill="rgb(229,201,39)" rx="2" ry="2" />
<text  x="1059.66" y="751.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (2 samples, 0.04%)</title><rect x="402.1" y="677" width="0.5" height="15.0" fill="rgb(244,20,53)" rx="2" ry="2" />
<text  x="405.10" y="687.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetPort(mojo::core::ports::PortName const&amp;, mojo::core::ports::PortRef*) (1 samples, 0.02%)</title><rect x="108.0" y="789" width="0.2" height="15.0" fill="rgb(212,176,31)" rx="2" ry="2" />
<text  x="110.96" y="799.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="245.3" y="485" width="0.2" height="15.0" fill="rgb(236,56,52)" rx="2" ry="2" />
<text  x="248.26" y="495.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="205.9" y="789" width="0.3" height="15.0" fill="rgb(246,170,30)" rx="2" ry="2" />
<text  x="208.92" y="799.5" ></text>
</g>
<g >
<title>std::__Cr::__tree_iterator&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::__tree_node&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, void*&gt;*, long&gt; std::__Cr::__tree&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::less&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::allocator&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; &gt;::find&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;(std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="309.8" y="485" width="0.3" height="15.0" fill="rgb(223,10,52)" rx="2" ry="2" />
<text  x="312.82" y="495.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (5 samples, 0.10%)</title><rect x="725.9" y="709" width="1.3" height="15.0" fill="rgb(245,201,48)" rx="2" ry="2" />
<text  x="728.92" y="719.5" ></text>
</g>
<g >
<title>mojo::core::Core::CreateMessage(MojoCreateMessageOptions const*, unsigned long*) (1 samples, 0.02%)</title><rect x="1041.6" y="597" width="0.2" height="15.0" fill="rgb(227,7,19)" rx="2" ry="2" />
<text  x="1044.57" y="607.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="1013.1" y="885" width="0.3" height="15.0" fill="rgb(242,167,45)" rx="2" ry="2" />
<text  x="1016.12" y="895.5" ></text>
</g>
<g >
<title>cc::TilingSetRasterQueueAll::TilingSetRasterQueueAll(cc::PictureLayerTilingSet*, bool, bool) (1 samples, 0.02%)</title><rect x="1070.8" y="645" width="0.2" height="15.0" fill="rgb(211,85,18)" rx="2" ry="2" />
<text  x="1073.76" y="655.5" ></text>
</g>
<g >
<title>cc::TaskGraphWorkQueue::DependencyMismatch(cc::TaskGraph const*) (1 samples, 0.02%)</title><rect x="68.4" y="869" width="0.2" height="15.0" fill="rgb(212,101,50)" rx="2" ry="2" />
<text  x="71.38" y="879.5" ></text>
</g>
<g >
<title>celt_synthesis (5 samples, 0.10%)</title><rect x="1116.8" y="629" width="1.2" height="15.0" fill="rgb(252,68,4)" rx="2" ry="2" />
<text  x="1119.78" y="639.5" ></text>
</g>
<g >
<title>cricket::Connection::ToString() const (1 samples, 0.02%)</title><rect x="292.5" y="677" width="0.3" height="15.0" fill="rgb(227,136,6)" rx="2" ry="2" />
<text  x="295.51" y="687.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="358.3" y="805" width="0.3" height="15.0" fill="rgb(230,15,33)" rx="2" ry="2" />
<text  x="361.31" y="815.5" ></text>
</g>
<g >
<title>base::trace_event::BlameContext::Enter() (1 samples, 0.02%)</title><rect x="43.9" y="629" width="0.2" height="15.0" fill="rgb(208,5,21)" rx="2" ry="2" />
<text  x="46.89" y="639.5" ></text>
</g>
<g >
<title>vp8_mv_ref_probs (3 samples, 0.06%)</title><rect x="410.3" y="661" width="0.7" height="15.0" fill="rgb(236,61,18)" rx="2" ry="2" />
<text  x="413.26" y="671.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::DrawLayers(cc::LayerTreeHostImpl::FrameData*) (3 samples, 0.06%)</title><rect x="1068.0" y="773" width="0.8" height="15.0" fill="rgb(213,195,39)" rx="2" ry="2" />
<text  x="1071.04" y="783.5" ></text>
</g>
<g >
<title>vp8_mv_pred (2 samples, 0.04%)</title><rect x="926.3" y="677" width="0.5" height="15.0" fill="rgb(224,66,14)" rx="2" ry="2" />
<text  x="929.29" y="687.5" ></text>
</g>
<g >
<title>base::MessagePumpKqueue::Run(base::MessagePump::Delegate*) (68 samples, 1.43%)</title><rect x="70.1" y="917" width="16.8" height="15.0" fill="rgb(211,27,17)" rx="2" ry="2" />
<text  x="73.11" y="927.5" ></text>
</g>
<g >
<title>blink::LayoutReplaced::Paint(blink::PaintInfo const&amp;) const (1 samples, 0.02%)</title><rect x="26.6" y="229" width="0.2" height="15.0" fill="rgb(217,123,32)" rx="2" ry="2" />
<text  x="29.57" y="239.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="266.3" y="501" width="0.2" height="15.0" fill="rgb(211,85,27)" rx="2" ry="2" />
<text  x="269.29" y="511.5" ></text>
</g>
<g >
<title>cc::Scheduler::BeginImplFrameWithDeadline(viz::BeginFrameArgs const&amp;) (4 samples, 0.08%)</title><rect x="1071.8" y="613" width="0.9" height="15.0" fill="rgb(236,199,22)" rx="2" ry="2" />
<text  x="1074.75" y="623.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="660.4" y="677" width="0.2" height="15.0" fill="rgb(215,25,27)" rx="2" ry="2" />
<text  x="663.36" y="687.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="191.1" y="869" width="0.2" height="15.0" fill="rgb(241,54,46)" rx="2" ry="2" />
<text  x="194.08" y="879.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="173.3" y="517" width="0.5" height="15.0" fill="rgb(218,203,20)" rx="2" ry="2" />
<text  x="176.27" y="527.5" ></text>
</g>
<g >
<title>vp8_loopfilter_frame (10 samples, 0.21%)</title><rect x="941.9" y="741" width="2.5" height="15.0" fill="rgb(249,26,48)" rx="2" ry="2" />
<text  x="944.88" y="751.5" ></text>
</g>
<g >
<title>base::internal::UncheckedScopedBlockingCall::UncheckedScopedBlockingCall(base::BlockingType) (1 samples, 0.02%)</title><rect x="1079.2" y="949" width="0.2" height="15.0" fill="rgb(206,8,20)" rx="2" ry="2" />
<text  x="1082.17" y="959.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1034.6" y="437" width="0.3" height="15.0" fill="rgb(219,170,50)" rx="2" ry="2" />
<text  x="1037.65" y="447.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="176.5" y="629" width="0.2" height="15.0" fill="rgb(231,7,41)" rx="2" ry="2" />
<text  x="179.49" y="639.5" ></text>
</g>
<g >
<title>ec_enc_icdf (1 samples, 0.02%)</title><rect x="543.1" y="693" width="0.3" height="15.0" fill="rgb(238,47,42)" rx="2" ry="2" />
<text  x="546.10" y="703.5" ></text>
</g>
<g >
<title>blink::DOMWindowPerformance* blink::Supplementable&lt;blink::LocalDOMWindow&gt;::RequireSupplement&lt;blink::DOMWindowPerformance&gt;() const (1 samples, 0.02%)</title><rect x="22.4" y="597" width="0.2" height="15.0" fill="rgb(232,218,30)" rx="2" ry="2" />
<text  x="25.37" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeImmediateIncomingQueueTasks() (4 samples, 0.08%)</title><rect x="184.9" y="805" width="1.0" height="15.0" fill="rgb(254,51,39)" rx="2" ry="2" />
<text  x="187.90" y="815.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="267.8" y="437" width="0.2" height="15.0" fill="rgb(237,145,28)" rx="2" ry="2" />
<text  x="270.77" y="447.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (2 samples, 0.04%)</title><rect x="636.1" y="693" width="0.5" height="15.0" fill="rgb(219,79,23)" rx="2" ry="2" />
<text  x="639.12" y="703.5" ></text>
</g>
<g >
<title>_kernelrpc_mach_port_extract_member_trap (4 samples, 0.08%)</title><rect x="49.1" y="821" width="1.0" height="15.0" fill="rgb(252,152,4)" rx="2" ry="2" />
<text  x="52.09" y="831.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (1 samples, 0.02%)</title><rect x="651.5" y="629" width="0.2" height="15.0" fill="rgb(221,121,14)" rx="2" ry="2" />
<text  x="654.45" y="639.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1108.6" y="901" width="0.3" height="15.0" fill="rgb(225,194,34)" rx="2" ry="2" />
<text  x="1111.61" y="911.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="178.2" y="805" width="0.3" height="15.0" fill="rgb(252,73,45)" rx="2" ry="2" />
<text  x="181.22" y="815.5" ></text>
</g>
<g >
<title>v8::internal::Isolate::RegisterTryCatchHandler(v8::TryCatch*) (1 samples, 0.02%)</title><rect x="37.7" y="565" width="0.3" height="15.0" fill="rgb(217,138,13)" rx="2" ry="2" />
<text  x="40.71" y="575.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1162.8" y="805" width="0.2" height="15.0" fill="rgb(225,93,9)" rx="2" ry="2" />
<text  x="1165.79" y="815.5" ></text>
</g>
<g >
<title>content::MediaStreamVideoWebRtcSink::WebRtcVideoSourceAdapter::OnVideoFrameOnWorkerThread(scoped_refptr&lt;media::VideoFrame&gt;) (4 samples, 0.08%)</title><rect x="297.9" y="853" width="1.0" height="15.0" fill="rgb(246,87,49)" rx="2" ry="2" />
<text  x="300.95" y="863.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::WriteChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (2 samples, 0.04%)</title><rect x="173.3" y="597" width="0.5" height="15.0" fill="rgb(253,197,0)" rx="2" ry="2" />
<text  x="176.27" y="607.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="1125.2" y="725" width="0.2" height="15.0" fill="rgb(254,150,8)" rx="2" ry="2" />
<text  x="1128.19" y="735.5" ></text>
</g>
<g >
<title>scoped_refptr&lt;WTF::StringImpl&gt;::Release(WTF::StringImpl*) (1 samples, 0.02%)</title><rect x="21.6" y="517" width="0.3" height="15.0" fill="rgb(245,98,36)" rx="2" ry="2" />
<text  x="24.63" y="527.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (14 samples, 0.29%)</title><rect x="225.0" y="757" width="3.4" height="15.0" fill="rgb(240,117,14)" rx="2" ry="2" />
<text  x="227.97" y="767.5" ></text>
</g>
<g >
<title>webrtc::Vp8TemporalLayers::NextFrameConfig(unsigned long, unsigned int) (1 samples, 0.02%)</title><rect x="652.4" y="789" width="0.3" height="15.0" fill="rgb(241,29,39)" rx="2" ry="2" />
<text  x="655.44" y="799.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="482.0" y="709" width="0.5" height="15.0" fill="rgb(239,155,50)" rx="2" ry="2" />
<text  x="485.00" y="719.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="457.5" y="709" width="0.3" height="15.0" fill="rgb(236,159,46)" rx="2" ry="2" />
<text  x="460.51" y="719.5" ></text>
</g>
<g >
<title>thread_start (2 samples, 0.04%)</title><rect x="213.8" y="1061" width="0.5" height="15.0" fill="rgb(236,202,1)" rx="2" ry="2" />
<text  x="216.84" y="1071.5" ></text>
</g>
<g >
<title>vp8_loop_filter_partial_frame (4 samples, 0.08%)</title><rect x="635.6" y="709" width="1.0" height="15.0" fill="rgb(238,18,14)" rx="2" ry="2" />
<text  x="638.62" y="719.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="267.0" y="325" width="0.5" height="15.0" fill="rgb(223,90,40)" rx="2" ry="2" />
<text  x="270.03" y="335.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="355.6" y="805" width="0.2" height="15.0" fill="rgb(253,225,3)" rx="2" ry="2" />
<text  x="358.59" y="815.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="255.6" y="805" width="0.3" height="15.0" fill="rgb(240,106,43)" rx="2" ry="2" />
<text  x="258.65" y="815.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::FreeDefiniteSizeImpl(base::allocator::AllocatorDispatch const*, void*, unsigned long, void*) (1 samples, 0.02%)</title><rect x="573.8" y="885" width="0.2" height="15.0" fill="rgb(241,143,12)" rx="2" ry="2" />
<text  x="576.78" y="895.5" ></text>
</g>
<g >
<title>I420Copy (6 samples, 0.13%)</title><rect x="531.2" y="757" width="1.5" height="15.0" fill="rgb(232,207,49)" rx="2" ry="2" />
<text  x="534.23" y="767.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (2 samples, 0.04%)</title><rect x="1182.3" y="805" width="0.5" height="15.0" fill="rgb(234,45,30)" rx="2" ry="2" />
<text  x="1185.33" y="815.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="292.5" y="549" width="0.3" height="15.0" fill="rgb(210,225,36)" rx="2" ry="2" />
<text  x="295.51" y="559.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_full_2x_sse2 (2 samples, 0.04%)</title><rect x="837.7" y="693" width="0.5" height="15.0" fill="rgb(213,19,5)" rx="2" ry="2" />
<text  x="840.73" y="703.5" ></text>
</g>
<g >
<title>webrtc::RemoteEstimatorProxy::BuildFeedbackPacket(unsigned char, unsigned int, long long, std::__Cr::__map_const_iterator&lt;std::__Cr::__tree_const_iterator&lt;std::__Cr::__value_type&lt;long long, long long&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;long long, long long&gt;, void*&gt;*, long&gt; &gt;, std::__Cr::__map_const_iterator&lt;std::__Cr::__tree_const_iterator&lt;std::__Cr::__value_type&lt;long long, long long&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;long long, long long&gt;, void*&gt;*, long&gt; &gt;, webrtc::rtcp::TransportFeedback*) (1 samples, 0.02%)</title><rect x="1181.3" y="933" width="0.3" height="15.0" fill="rgb(222,225,43)" rx="2" ry="2" />
<text  x="1184.34" y="943.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;blink::WebRtcVideoFrameAdapter&gt;::Release() const (2 samples, 0.04%)</title><rect x="487.7" y="837" width="0.5" height="15.0" fill="rgb(238,156,51)" rx="2" ry="2" />
<text  x="490.69" y="847.5" ></text>
</g>
<g >
<title>cricket::DtlsTransport::OnReadPacket(rtc::PacketTransportInternal*, char const*, unsigned long, long long const&amp;, int) (24 samples, 0.50%)</title><rect x="304.9" y="581" width="5.9" height="15.0" fill="rgb(243,136,3)" rx="2" ry="2" />
<text  x="307.88" y="591.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_y_block_sse2 (13 samples, 0.27%)</title><rect x="886.2" y="693" width="3.2" height="15.0" fill="rgb(232,191,2)" rx="2" ry="2" />
<text  x="889.22" y="703.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.02%)</title><rect x="34.0" y="629" width="0.2" height="15.0" fill="rgb(225,187,13)" rx="2" ry="2" />
<text  x="37.00" y="639.5" ></text>
</g>
<g >
<title>cc::TreeSynchronizer::PushLayerProperties(cc::LayerTreeImpl*, cc::LayerTreeImpl*) (1 samples, 0.02%)</title><rect x="1069.8" y="741" width="0.2" height="15.0" fill="rgb(221,97,19)" rx="2" ry="2" />
<text  x="1072.77" y="751.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1155.9" y="837" width="0.2" height="15.0" fill="rgb(220,164,30)" rx="2" ry="2" />
<text  x="1158.86" y="847.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::TakeTask(base::internal::TaskSource::RunIntent) (2 samples, 0.04%)</title><rect x="368.5" y="949" width="0.4" height="15.0" fill="rgb(251,195,16)" rx="2" ry="2" />
<text  x="371.45" y="959.5" ></text>
</g>
<g >
<title>cricket::UDPPort::OnSentPacket(rtc::AsyncPacketSocket*, rtc::SentPacket const&amp;) (3 samples, 0.06%)</title><rect x="227.7" y="677" width="0.7" height="15.0" fill="rgb(252,46,47)" rx="2" ry="2" />
<text  x="230.69" y="687.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (1 samples, 0.02%)</title><rect x="462.7" y="693" width="0.3" height="15.0" fill="rgb(237,52,20)" rx="2" ry="2" />
<text  x="465.70" y="703.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (9 samples, 0.19%)</title><rect x="751.9" y="661" width="2.2" height="15.0" fill="rgb(214,79,5)" rx="2" ry="2" />
<text  x="754.89" y="671.5" ></text>
</g>
<g >
<title>webrtc::PacedSender::Process() (2 samples, 0.04%)</title><rect x="1140.0" y="965" width="0.5" height="15.0" fill="rgb(218,92,50)" rx="2" ry="2" />
<text  x="1143.03" y="975.5" ></text>
</g>
<g >
<title>WTF::HashTable&lt;blink::DisplayItemClient const*, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::PartitionAllocator&gt;::RehashTo(WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;*, unsigned int, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;*) (1 samples, 0.02%)</title><rect x="26.6" y="53" width="0.2" height="15.0" fill="rgb(234,69,10)" rx="2" ry="2" />
<text  x="29.57" y="63.5" ></text>
</g>
<g >
<title>base::Thread::Run(base::RunLoop*) (444 samples, 9.31%)</title><rect x="87.2" y="981" width="109.8" height="15.0" fill="rgb(229,74,7)" rx="2" ry="2" />
<text  x="90.18" y="991.5" >base::Thread:..</text>
</g>
<g >
<title>_pthread_body (19 samples, 0.40%)</title><rect x="54.3" y="1029" width="4.7" height="15.0" fill="rgb(249,186,27)" rx="2" ry="2" />
<text  x="57.28" y="1039.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="815.5" y="565" width="0.2" height="15.0" fill="rgb(240,70,18)" rx="2" ry="2" />
<text  x="818.47" y="575.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_zero_loop (1 samples, 0.02%)</title><rect x="598.0" y="661" width="0.3" height="15.0" fill="rgb(232,122,40)" rx="2" ry="2" />
<text  x="601.02" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() const (1 samples, 0.02%)</title><rect x="212.1" y="805" width="0.3" height="15.0" fill="rgb(242,7,19)" rx="2" ry="2" />
<text  x="215.11" y="815.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_8::__invoke(_malloc_zone_t*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="251.7" y="469" width="0.2" height="15.0" fill="rgb(218,3,52)" rx="2" ry="2" />
<text  x="254.69" y="479.5" ></text>
</g>
<g >
<title>void sigslot::_opaque_connection::emitter&lt;cricket::P2PTransportChannel, cricket::Connection*, char const*, unsigned long, long long&gt;(sigslot::_opaque_connection const*, cricket::Connection*, char const*, unsigned long, long long) (1 samples, 0.02%)</title><rect x="311.3" y="597" width="0.3" height="15.0" fill="rgb(235,87,6)" rx="2" ry="2" />
<text  x="314.31" y="607.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="322.4" y="677" width="0.3" height="15.0" fill="rgb(216,209,46)" rx="2" ry="2" />
<text  x="325.44" y="687.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (6 samples, 0.13%)</title><rect x="734.6" y="661" width="1.5" height="15.0" fill="rgb(245,26,40)" rx="2" ry="2" />
<text  x="737.57" y="671.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="284.6" y="501" width="0.2" height="15.0" fill="rgb(247,9,7)" rx="2" ry="2" />
<text  x="287.59" y="511.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (22 samples, 0.46%)</title><rect x="496.1" y="709" width="5.4" height="15.0" fill="rgb(236,118,40)" rx="2" ry="2" />
<text  x="499.10" y="719.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (5 samples, 0.10%)</title><rect x="229.4" y="821" width="1.3" height="15.0" fill="rgb(240,19,31)" rx="2" ry="2" />
<text  x="232.43" y="831.5" ></text>
</g>
<g >
<title>webrtc::OpusFrame::~OpusFrame() (2 samples, 0.04%)</title><rect x="1125.2" y="741" width="0.5" height="15.0" fill="rgb(235,102,21)" rx="2" ry="2" />
<text  x="1128.19" y="751.5" ></text>
</g>
<g >
<title>thread_start (95 samples, 1.99%)</title><rect x="1140.0" y="1061" width="23.5" height="15.0" fill="rgb(222,92,8)" rx="2" ry="2" />
<text  x="1143.03" y="1071.5" >t..</text>
</g>
<g >
<title>vp8_get_frame (22 samples, 0.46%)</title><rect x="652.9" y="773" width="5.5" height="15.0" fill="rgb(214,199,9)" rx="2" ry="2" />
<text  x="655.94" y="783.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="1026.7" y="885" width="0.5" height="15.0" fill="rgb(206,204,31)" rx="2" ry="2" />
<text  x="1029.73" y="895.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="229.7" y="805" width="0.2" height="15.0" fill="rgb(243,179,13)" rx="2" ry="2" />
<text  x="232.67" y="815.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (19 samples, 0.40%)</title><rect x="286.3" y="741" width="4.7" height="15.0" fill="rgb(248,176,46)" rx="2" ry="2" />
<text  x="289.32" y="751.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="31.3" y="613" width="0.2" height="15.0" fill="rgb(227,57,36)" rx="2" ry="2" />
<text  x="34.27" y="623.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::DiscardReadyState(base::RepeatingCallback&lt;void (unsigned int)&gt; const&amp;, unsigned int, mojo::HandleSignalsState const&amp;) (7 samples, 0.15%)</title><rect x="1071.5" y="853" width="1.7" height="15.0" fill="rgb(211,46,14)" rx="2" ry="2" />
<text  x="1074.51" y="863.5" ></text>
</g>
<g >
<title>scheduling_metrics::TaskDurationMetricReporter&lt;scheduling_metrics::ThreadType&gt;::RecordTask(scheduling_metrics::ThreadType, base::TimeDelta) (2 samples, 0.04%)</title><rect x="36.0" y="581" width="0.5" height="15.0" fill="rgb(235,168,17)" rx="2" ry="2" />
<text  x="38.97" y="591.5" ></text>
</g>
<g >
<title>evaluate_inter_mode (9 samples, 0.19%)</title><rect x="745.0" y="677" width="2.2" height="15.0" fill="rgb(207,132,41)" rx="2" ry="2" />
<text  x="747.96" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::CreateTaskRunner(unsigned char) const (1 samples, 0.02%)</title><rect x="18.4" y="517" width="0.3" height="15.0" fill="rgb(246,18,51)" rx="2" ry="2" />
<text  x="21.41" y="527.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*) (3 samples, 0.06%)</title><rect x="287.6" y="645" width="0.7" height="15.0" fill="rgb(214,58,23)" rx="2" ry="2" />
<text  x="290.56" y="655.5" ></text>
</g>
<g >
<title>base::Thread::Run(base::RunLoop*) (2 samples, 0.04%)</title><rect x="213.8" y="981" width="0.5" height="15.0" fill="rgb(217,209,6)" rx="2" ry="2" />
<text  x="216.84" y="991.5" ></text>
</g>
<g >
<title>blink::LayoutVideo::UpdatePlayer() (2 samples, 0.04%)</title><rect x="19.2" y="613" width="0.4" height="15.0" fill="rgb(250,27,5)" rx="2" ry="2" />
<text  x="22.15" y="623.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (media::VideoResourceUpdater::*)(scoped_refptr&lt;media::VideoFrame&gt;, gpu::SyncToken const&amp;, bool), base::WeakPtr&lt;media::VideoResourceUpdater&gt;, scoped_refptr&lt;media::VideoFrame&gt; &gt;, void (gpu::SyncToken const&amp;, bool)&gt;::RunOnce(base::internal::BindStateBase*, gpu::SyncToken const&amp;, bool) (6 samples, 0.13%)</title><rect x="1052.2" y="597" width="1.5" height="15.0" fill="rgb(222,52,22)" rx="2" ry="2" />
<text  x="1055.21" y="607.5" ></text>
</g>
<g >
<title>webrtc::Timestamp::operator-(webrtc::Timestamp) const (1 samples, 0.02%)</title><rect x="722.0" y="821" width="0.2" height="15.0" fill="rgb(234,58,17)" rx="2" ry="2" />
<text  x="724.96" y="831.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (6 samples, 0.13%)</title><rect x="276.2" y="677" width="1.5" height="15.0" fill="rgb(227,23,10)" rx="2" ry="2" />
<text  x="279.18" y="687.5" ></text>
</g>
<g >
<title>base::internal::DelayedTaskManager::ProcessRipeTasks() (28 samples, 0.59%)</title><rect x="75.3" y="853" width="6.9" height="15.0" fill="rgb(220,142,23)" rx="2" ry="2" />
<text  x="78.31" y="863.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="292.3" y="757" width="0.2" height="15.0" fill="rgb(225,10,53)" rx="2" ry="2" />
<text  x="295.26" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::MoveReadyDelayedTasksToWorkQueue(base::sequence_manager::LazyNow*) (6 samples, 0.13%)</title><rect x="83.7" y="789" width="1.5" height="15.0" fill="rgb(215,126,53)" rx="2" ry="2" />
<text  x="86.72" y="799.5" ></text>
</g>
<g >
<title>vp8_loop_filter_frame (12 samples, 0.25%)</title><rect x="792.2" y="725" width="3.0" height="15.0" fill="rgb(242,89,50)" rx="2" ry="2" />
<text  x="795.21" y="735.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (11 samples, 0.23%)</title><rect x="1134.3" y="741" width="2.8" height="15.0" fill="rgb(209,204,12)" rx="2" ry="2" />
<text  x="1137.34" y="751.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (1 samples, 0.02%)</title><rect x="815.5" y="597" width="0.2" height="15.0" fill="rgb(231,178,51)" rx="2" ry="2" />
<text  x="818.47" y="607.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="1069.0" y="837" width="0.3" height="15.0" fill="rgb(218,98,44)" rx="2" ry="2" />
<text  x="1072.03" y="847.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::RunTaskInCategoryWithLockAcquired(cc::TaskCategory) (15 samples, 0.31%)</title><rect x="59.0" y="981" width="3.7" height="15.0" fill="rgb(221,174,48)" rx="2" ry="2" />
<text  x="61.98" y="991.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="346.4" y="757" width="0.3" height="15.0" fill="rgb(248,69,0)" rx="2" ry="2" />
<text  x="349.44" y="767.5" ></text>
</g>
<g >
<title>webrtc::media_optimization::VCMLossProtectionLogic::UpdatePacketsPerFrame(float, long long) (1 samples, 0.02%)</title><rect x="815.7" y="709" width="0.3" height="15.0" fill="rgb(227,84,9)" rx="2" ry="2" />
<text  x="818.71" y="719.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::FindOrCreateExtensionInfo(int) (1 samples, 0.02%)</title><rect x="265.0" y="613" width="0.3" height="15.0" fill="rgb(244,75,46)" rx="2" ry="2" />
<text  x="268.05" y="623.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (6 samples, 0.13%)</title><rect x="823.6" y="677" width="1.5" height="15.0" fill="rgb(252,51,9)" rx="2" ry="2" />
<text  x="826.63" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnQueuesFrontTaskChanged(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.02%)</title><rect x="86.2" y="805" width="0.2" height="15.0" fill="rgb(239,220,4)" rx="2" ry="2" />
<text  x="89.19" y="815.5" ></text>
</g>
<g >
<title>_thread_stack_pcs (1 samples, 0.02%)</title><rect x="578.0" y="853" width="0.2" height="15.0" fill="rgb(222,11,32)" rx="2" ry="2" />
<text  x="580.98" y="863.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (2 samples, 0.04%)</title><rect x="267.0" y="389" width="0.5" height="15.0" fill="rgb(254,28,38)" rx="2" ry="2" />
<text  x="270.03" y="399.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.04%)</title><rect x="876.6" y="933" width="0.5" height="15.0" fill="rgb(236,8,50)" rx="2" ry="2" />
<text  x="879.57" y="943.5" ></text>
</g>
<g >
<title>_pthread_start (15 samples, 0.31%)</title><rect x="59.0" y="1045" width="3.7" height="15.0" fill="rgb(230,154,14)" rx="2" ry="2" />
<text  x="61.98" y="1055.5" ></text>
</g>
<g >
<title>blink::VideoTrackAdapter::VideoFrameResolutionAdapter::DeliverFrame(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks const&amp;, bool) (8 samples, 0.17%)</title><rect x="139.1" y="517" width="2.0" height="15.0" fill="rgb(216,148,14)" rx="2" ry="2" />
<text  x="142.13" y="527.5" ></text>
</g>
<g >
<title>base::internal::OperationsController::TryBeginOperation() (1 samples, 0.02%)</title><rect x="1052.7" y="453" width="0.3" height="15.0" fill="rgb(218,224,36)" rx="2" ry="2" />
<text  x="1055.70" y="463.5" ></text>
</g>
<g >
<title>mach_msg (8 samples, 0.17%)</title><rect x="364.0" y="933" width="2.0" height="15.0" fill="rgb(251,116,23)" rx="2" ry="2" />
<text  x="367.00" y="943.5" ></text>
</g>
<g >
<title>base::mac::ScopedNSAutoreleasePool::ScopedNSAutoreleasePool() (1 samples, 0.02%)</title><rect x="1065.1" y="965" width="0.2" height="15.0" fill="rgb(209,109,22)" rx="2" ry="2" />
<text  x="1068.07" y="975.5" ></text>
</g>
<g >
<title>VP8_UVSSE (1 samples, 0.02%)</title><rect x="904.0" y="661" width="0.3" height="15.0" fill="rgb(222,217,27)" rx="2" ry="2" />
<text  x="907.03" y="671.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="44.9" y="645" width="0.2" height="15.0" fill="rgb(240,21,46)" rx="2" ry="2" />
<text  x="47.88" y="655.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;viz::mojom::SharedQuadStateDataView, mojo::OptSharedQuadState&gt;::Serialize(mojo::OptSharedQuadState&amp;, mojo::internal::Buffer*, viz::mojom::internal::SharedQuadState_Data::BufferWriter*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1068.5" y="613" width="0.3" height="15.0" fill="rgb(242,88,31)" rx="2" ry="2" />
<text  x="1071.54" y="623.5" ></text>
</g>
<g >
<title>cc::LayerTreeImpl::SetPropertyTrees(cc::PropertyTrees*) (2 samples, 0.04%)</title><rect x="1070.3" y="805" width="0.5" height="15.0" fill="rgb(225,29,3)" rx="2" ry="2" />
<text  x="1073.27" y="815.5" ></text>
</g>
<g >
<title>webrtc::AudioMixerImpl::CalculateOutputFrequency() (5 samples, 0.10%)</title><rect x="1110.1" y="885" width="1.2" height="15.0" fill="rgb(234,167,5)" rx="2" ry="2" />
<text  x="1113.10" y="895.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="378.1" y="869" width="0.5" height="15.0" fill="rgb(208,39,7)" rx="2" ry="2" />
<text  x="381.10" y="879.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetWork(base::internal::WorkerThread*) (17 samples, 0.36%)</title><rect x="555.2" y="965" width="4.2" height="15.0" fill="rgb(251,70,30)" rx="2" ry="2" />
<text  x="558.22" y="975.5" ></text>
</g>
<g >
<title>blink::paint_property_tree_printer::UpdateDebugNames(blink::LayoutObject const&amp;, blink::ObjectPaintProperties&amp;) (1 samples, 0.02%)</title><rect x="28.8" y="437" width="0.2" height="15.0" fill="rgb(242,83,29)" rx="2" ry="2" />
<text  x="31.80" y="447.5" ></text>
</g>
<g >
<title>base::Value::SetKey(std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;&amp;&amp;, base::Value&amp;&amp;) (1 samples, 0.02%)</title><rect x="208.2" y="821" width="0.2" height="15.0" fill="rgb(234,114,25)" rx="2" ry="2" />
<text  x="211.15" y="831.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="360.0" y="869" width="0.3" height="15.0" fill="rgb(211,105,9)" rx="2" ry="2" />
<text  x="363.04" y="879.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="33.3" y="581" width="0.2" height="15.0" fill="rgb(207,202,0)" rx="2" ry="2" />
<text  x="36.25" y="591.5" ></text>
</g>
<g >
<title>webrtc::RTCPSender::SendFeedbackPacket(webrtc::rtcp::TransportFeedback const&amp;) (5 samples, 0.10%)</title><rect x="1181.6" y="917" width="1.2" height="15.0" fill="rgb(229,76,8)" rx="2" ry="2" />
<text  x="1184.59" y="927.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (5 samples, 0.10%)</title><rect x="76.5" y="805" width="1.3" height="15.0" fill="rgb(251,158,24)" rx="2" ry="2" />
<text  x="79.55" y="815.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="208.2" y="709" width="0.2" height="15.0" fill="rgb(222,212,45)" rx="2" ry="2" />
<text  x="211.15" y="719.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="718.5" y="885" width="0.2" height="15.0" fill="rgb(236,198,51)" rx="2" ry="2" />
<text  x="721.49" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (10 samples, 0.21%)</title><rect x="179.7" y="885" width="2.5" height="15.0" fill="rgb(237,190,30)" rx="2" ry="2" />
<text  x="182.70" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeImmediateIncomingQueueTasks() (1 samples, 0.02%)</title><rect x="39.4" y="629" width="0.3" height="15.0" fill="rgb(224,39,5)" rx="2" ry="2" />
<text  x="42.44" y="639.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (2 samples, 0.04%)</title><rect x="837.2" y="693" width="0.5" height="15.0" fill="rgb(226,113,32)" rx="2" ry="2" />
<text  x="840.24" y="703.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::OnCopiesDone(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*) (1 samples, 0.02%)</title><rect x="64.7" y="869" width="0.2" height="15.0" fill="rgb(237,159,48)" rx="2" ry="2" />
<text  x="67.67" y="879.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16x16_ssse3 (1 samples, 0.02%)</title><rect x="423.1" y="661" width="0.3" height="15.0" fill="rgb(233,154,36)" rx="2" ry="2" />
<text  x="426.12" y="671.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Run  0x6593ee (21 samples, 0.44%)</title><rect x="1163.5" y="1077" width="5.2" height="15.0" fill="rgb(205,71,49)" rx="2" ry="2" />
<text  x="1166.53" y="1087.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (3 samples, 0.06%)</title><rect x="139.4" y="373" width="0.7" height="15.0" fill="rgb(210,223,20)" rx="2" ry="2" />
<text  x="142.38" y="383.5" ></text>
</g>
<g >
<title>vp8_write_mvprobs (1 samples, 0.02%)</title><rect x="646.5" y="725" width="0.3" height="15.0" fill="rgb(221,47,30)" rx="2" ry="2" />
<text  x="649.51" y="735.5" ></text>
</g>
<g >
<title>mach_msg (3 samples, 0.06%)</title><rect x="1136.3" y="661" width="0.8" height="15.0" fill="rgb(238,155,46)" rx="2" ry="2" />
<text  x="1139.32" y="671.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="816.0" y="581" width="0.2" height="15.0" fill="rgb(232,115,43)" rx="2" ry="2" />
<text  x="818.96" y="591.5" ></text>
</g>
<g >
<title>webrtc::DelayBasedBwe::MaybeUpdateEstimate(absl::optional&lt;webrtc::DataRate&gt;, absl::optional&lt;webrtc::DataRate&gt;, absl::optional&lt;webrtc::NetworkStateEstimate&gt;, bool, bool, webrtc::Timestamp) (1 samples, 0.02%)</title><rect x="581.0" y="805" width="0.2" height="15.0" fill="rgb(214,21,9)" rx="2" ry="2" />
<text  x="583.95" y="815.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::~Iter() (1 samples, 0.02%)</title><rect x="343.7" y="821" width="0.3" height="15.0" fill="rgb(244,176,42)" rx="2" ry="2" />
<text  x="346.71" y="831.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::internal::VideoReceiveStream::StartNextDecode()::DecodeTask&gt;::Run() (122 samples, 2.56%)</title><rect x="652.9" y="853" width="30.2" height="15.0" fill="rgb(234,60,18)" rx="2" ry="2" />
<text  x="655.94" y="863.5" >we..</text>
</g>
<g >
<title>-[NSAutoreleasePool drain] (1 samples, 0.02%)</title><rect x="1065.6" y="933" width="0.2" height="15.0" fill="rgb(235,18,30)" rx="2" ry="2" />
<text  x="1068.57" y="943.5" ></text>
</g>
<g >
<title>small_malloc_from_free_list (2 samples, 0.04%)</title><rect x="375.9" y="789" width="0.5" height="15.0" fill="rgb(218,76,14)" rx="2" ry="2" />
<text  x="378.87" y="799.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1145.5" y="949" width="0.2" height="15.0" fill="rgb(213,199,20)" rx="2" ry="2" />
<text  x="1148.47" y="959.5" ></text>
</g>
<g >
<title>webrtc::DecoderDatabase::CheckPayloadTypes(std::__Cr::list&lt;webrtc::Packet, std::__Cr::allocator&lt;webrtc::Packet&gt; &gt; const&amp;) const (1 samples, 0.02%)</title><rect x="278.9" y="629" width="0.2" height="15.0" fill="rgb(214,193,15)" rx="2" ry="2" />
<text  x="281.90" y="639.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMSCompositor::PutCurrentFrame() (1 samples, 0.02%)</title><rect x="1043.8" y="661" width="0.2" height="15.0" fill="rgb(238,99,28)" rx="2" ry="2" />
<text  x="1046.80" y="671.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="297.0" y="757" width="0.5" height="15.0" fill="rgb(240,2,0)" rx="2" ry="2" />
<text  x="299.96" y="767.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 0.04%)</title><rect x="26.6" y="389" width="0.5" height="15.0" fill="rgb(250,130,4)" rx="2" ry="2" />
<text  x="29.57" y="399.5" ></text>
</g>
<g >
<title>base::Thread::Run(base::RunLoop*) (68 samples, 1.43%)</title><rect x="197.0" y="981" width="16.8" height="15.0" fill="rgb(240,178,43)" rx="2" ry="2" />
<text  x="200.02" y="991.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="253.7" y="517" width="0.2" height="15.0" fill="rgb(223,16,22)" rx="2" ry="2" />
<text  x="256.67" y="527.5" ></text>
</g>
<g >
<title>_thread_stack_pcs (1 samples, 0.02%)</title><rect x="714.8" y="853" width="0.2" height="15.0" fill="rgb(247,141,3)" rx="2" ry="2" />
<text  x="717.78" y="863.5" ></text>
</g>
<g >
<title>cricket::DtlsTransport::OnReadPacket(rtc::PacketTransportInternal*, char const*, unsigned long, long long const&amp;, int) (9 samples, 0.19%)</title><rect x="225.2" y="629" width="2.2" height="15.0" fill="rgb(254,2,28)" rx="2" ry="2" />
<text  x="228.22" y="639.5" ></text>
</g>
<g >
<title>base::internal::Sequence::TakeTask() (1 samples, 0.02%)</title><rect x="1022.8" y="933" width="0.2" height="15.0" fill="rgb(229,134,10)" rx="2" ry="2" />
<text  x="1025.77" y="943.5" ></text>
</g>
<g >
<title>webrtc::StreamStatisticianImpl::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (1 samples, 0.02%)</title><rect x="278.4" y="693" width="0.3" height="15.0" fill="rgb(224,109,3)" rx="2" ry="2" />
<text  x="281.41" y="703.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::WillQueueTaskSource(scoped_refptr&lt;base::internal::TaskSource&gt;) (2 samples, 0.04%)</title><rect x="78.0" y="805" width="0.5" height="15.0" fill="rgb(236,228,15)" rx="2" ry="2" />
<text  x="81.03" y="815.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_9::__invoke(_malloc_zone_t*, void*, unsigned long) (1 samples, 0.02%)</title><rect x="68.1" y="885" width="0.3" height="15.0" fill="rgb(253,143,26)" rx="2" ry="2" />
<text  x="71.13" y="895.5" ></text>
</g>
<g >
<title>base::Value::~Value() (1 samples, 0.02%)</title><rect x="487.7" y="741" width="0.2" height="15.0" fill="rgb(234,21,25)" rx="2" ry="2" />
<text  x="490.69" y="751.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::MaybeCreateHardwareFrame(scoped_refptr&lt;media::VideoFrame&gt;, base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;) (14 samples, 0.29%)</title><rect x="200.7" y="853" width="3.5" height="15.0" fill="rgb(247,141,30)" rx="2" ry="2" />
<text  x="203.73" y="863.5" ></text>
</g>
<g >
<title>MojoCreateMessage (1 samples, 0.02%)</title><rect x="1041.6" y="613" width="0.2" height="15.0" fill="rgb(239,8,35)" rx="2" ry="2" />
<text  x="1044.57" y="623.5" ></text>
</g>
<g >
<title>mojo::core::Core::WriteMessage(unsigned int, unsigned long, MojoWriteMessageOptions const*) (23 samples, 0.48%)</title><rect x="244.8" y="581" width="5.7" height="15.0" fill="rgb(234,190,53)" rx="2" ry="2" />
<text  x="247.76" y="591.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1159.3" y="773" width="0.3" height="15.0" fill="rgb(227,207,18)" rx="2" ry="2" />
<text  x="1162.32" y="783.5" ></text>
</g>
<g >
<title>(anonymous namespace)::MachAbsoluteTimeToTicks(unsigned long long) (1 samples, 0.02%)</title><rect x="356.1" y="773" width="0.2" height="15.0" fill="rgb(219,203,38)" rx="2" ry="2" />
<text  x="359.08" y="783.5" ></text>
</g>
<g >
<title>opus_fft_impl (4 samples, 0.08%)</title><rect x="1117.0" y="597" width="1.0" height="15.0" fill="rgb(223,74,42)" rx="2" ry="2" />
<text  x="1120.02" y="607.5" ></text>
</g>
<g >
<title>rtc::SocketAddress::operator&lt;(rtc::SocketAddress const&amp;) const (1 samples, 0.02%)</title><rect x="311.6" y="581" width="0.2" height="15.0" fill="rgb(238,19,41)" rx="2" ry="2" />
<text  x="314.56" y="591.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_wake (1 samples, 0.02%)</title><rect x="367.0" y="901" width="0.2" height="15.0" fill="rgb(235,210,12)" rx="2" ry="2" />
<text  x="369.97" y="911.5" ></text>
</g>
<g >
<title>mojo::core::ports::(anonymous namespace)::UpdateTLS(mojo::core::ports::PortLocker*, mojo::core::ports::PortLocker*) (1 samples, 0.02%)</title><rect x="323.9" y="693" width="0.3" height="15.0" fill="rgb(240,138,29)" rx="2" ry="2" />
<text  x="326.92" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (1 samples, 0.02%)</title><rect x="1074.0" y="853" width="0.2" height="15.0" fill="rgb(245,18,10)" rx="2" ry="2" />
<text  x="1076.98" y="863.5" ></text>
</g>
<g >
<title>srtp_unprotect_mki (2 samples, 0.04%)</title><rect x="225.5" y="565" width="0.5" height="15.0" fill="rgb(231,124,33)" rx="2" ry="2" />
<text  x="228.47" y="575.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::InterfaceEndpoint::SendMessage(mojo::Message*) (1 samples, 0.02%)</title><rect x="1067.3" y="709" width="0.2" height="15.0" fill="rgb(210,123,52)" rx="2" ry="2" />
<text  x="1070.30" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkDeduplicator::DidCheckForMoreWork(base::sequence_manager::internal::WorkDeduplicator::NextTask) (1 samples, 0.02%)</title><rect x="359.1" y="901" width="0.2" height="15.0" fill="rgb(250,85,53)" rx="2" ry="2" />
<text  x="362.05" y="911.5" ></text>
</g>
<g >
<title>non-virtual thunk to webrtc::SendStatisticsProxy::Notify(unsigned int, unsigned int, unsigned int) (1 samples, 0.02%)</title><rect x="1178.1" y="933" width="0.3" height="15.0" fill="rgb(227,146,13)" rx="2" ry="2" />
<text  x="1181.13" y="943.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::FinalizeEventMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="1047.8" y="469" width="0.2" height="15.0" fill="rgb(208,86,51)" rx="2" ry="2" />
<text  x="1050.76" y="479.5" ></text>
</g>
<g >
<title>webrtc::ReceiveStatisticsProxy::OnCompleteFrame(bool, unsigned long, webrtc::VideoContentType) (1 samples, 0.02%)</title><rect x="267.5" y="517" width="0.3" height="15.0" fill="rgb(244,211,18)" rx="2" ry="2" />
<text  x="270.52" y="527.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="486.7" y="677" width="0.2" height="15.0" fill="rgb(244,44,54)" rx="2" ry="2" />
<text  x="489.70" y="687.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (1 samples, 0.02%)</title><rect x="815.5" y="581" width="0.2" height="15.0" fill="rgb(226,34,42)" rx="2" ry="2" />
<text  x="818.47" y="591.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="390.7" y="645" width="0.3" height="15.0" fill="rgb(242,220,24)" rx="2" ry="2" />
<text  x="393.72" y="655.5" ></text>
</g>
<g >
<title>vp8_copy_and_extend_frame (7 samples, 0.15%)</title><rect x="484.5" y="725" width="1.7" height="15.0" fill="rgb(232,175,18)" rx="2" ry="2" />
<text  x="487.47" y="735.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::Iter(base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt; const*) (2 samples, 0.04%)</title><rect x="30.5" y="677" width="0.5" height="15.0" fill="rgb(251,96,8)" rx="2" ry="2" />
<text  x="33.53" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="83.0" y="741" width="0.2" height="15.0" fill="rgb(216,57,22)" rx="2" ry="2" />
<text  x="85.98" y="751.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="879.0" y="869" width="0.3" height="15.0" fill="rgb(221,67,41)" rx="2" ry="2" />
<text  x="882.04" y="879.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::~UserMessageImpl() (1 samples, 0.02%)</title><rect x="1072.7" y="677" width="0.3" height="15.0" fill="rgb(208,147,9)" rx="2" ry="2" />
<text  x="1075.74" y="687.5" ></text>
</g>
<g >
<title>mach_msg_trap (4 samples, 0.08%)</title><rect x="567.6" y="917" width="1.0" height="15.0" fill="rgb(213,228,36)" rx="2" ry="2" />
<text  x="570.59" y="927.5" ></text>
</g>
<g >
<title>silk_NLSF_decode (1 samples, 0.02%)</title><rect x="850.6" y="645" width="0.2" height="15.0" fill="rgb(211,205,21)" rx="2" ry="2" />
<text  x="853.60" y="655.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="1108.4" y="901" width="0.2" height="15.0" fill="rgb(207,200,38)" rx="2" ry="2" />
<text  x="1111.36" y="911.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderVideo::SendVideoPacketAsRedMaybeWithUlpfec(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType, bool) (2 samples, 0.04%)</title><rect x="816.2" y="709" width="0.5" height="15.0" fill="rgb(222,131,23)" rx="2" ry="2" />
<text  x="819.21" y="719.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunAndPopNextTask(base::internal::DecoratorWithTaskSource&lt;base::internal::TaskSource::RunIntent, base::internal::RegisteredTaskSource&gt;) (499 samples, 10.46%)</title><rect x="569.3" y="965" width="123.5" height="15.0" fill="rgb(214,216,15)" rx="2" ry="2" />
<text  x="572.32" y="975.5" >base::internal:..</text>
</g>
<g >
<title>base::GetProgramCounter() (1 samples, 0.02%)</title><rect x="186.6" y="773" width="0.3" height="15.0" fill="rgb(217,216,51)" rx="2" ry="2" />
<text  x="189.63" y="783.5" ></text>
</g>
<g >
<title>base::internal::WorkerThreadStack::Pop() (1 samples, 0.02%)</title><rect x="258.4" y="581" width="0.2" height="15.0" fill="rgb(211,213,14)" rx="2" ry="2" />
<text  x="261.37" y="591.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_other_loop (2 samples, 0.04%)</title><rect x="405.6" y="661" width="0.5" height="15.0" fill="rgb(254,147,44)" rx="2" ry="2" />
<text  x="408.56" y="671.5" ></text>
</g>
<g >
<title>vp8_loop_filter_partial_frame (4 samples, 0.08%)</title><rect x="795.2" y="709" width="1.0" height="15.0" fill="rgb(252,58,18)" rx="2" ry="2" />
<text  x="798.18" y="719.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::DiscardReadyState(base::RepeatingCallback&lt;void (unsigned int)&gt; const&amp;, unsigned int, mojo::HandleSignalsState const&amp;) (108 samples, 2.26%)</title><rect x="300.2" y="837" width="26.7" height="15.0" fill="rgb(234,91,54)" rx="2" ry="2" />
<text  x="303.18" y="847.5" >m..</text>
</g>
<g >
<title>viz::mojom::blink::CompositorFrameSinkProxy::SubmitCompositorFrame(viz::LocalSurfaceId const&amp;, viz::CompositorFrame, mojo::StructPtr&lt;viz::mojom::blink::HitTestRegionList&gt;, unsigned long long) (14 samples, 0.29%)</title><rect x="1040.3" y="645" width="3.5" height="15.0" fill="rgb(238,25,29)" rx="2" ry="2" />
<text  x="1043.34" y="655.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.04%)</title><rect x="700.2" y="917" width="0.5" height="15.0" fill="rgb(236,90,0)" rx="2" ry="2" />
<text  x="703.19" y="927.5" ></text>
</g>
<g >
<title>viz::ClientResourceProvider::PrepareSendToParentInternal(std::__Cr::vector&lt;unsigned int, std::__Cr::allocator&lt;unsigned int&gt; &gt; const&amp;, std::__Cr::vector&lt;viz::TransferableResource, std::__Cr::allocator&lt;viz::TransferableResource&gt; &gt;*, base::OnceCallback&lt;void (std::__Cr::vector&lt;signed char*, std::__Cr::allocator&lt;signed char*&gt; &gt;*)&gt;) (18 samples, 0.38%)</title><rect x="1033.9" y="613" width="4.5" height="15.0" fill="rgb(247,5,40)" rx="2" ry="2" />
<text  x="1036.90" y="623.5" ></text>
</g>
<g >
<title>webrtc::NetEqImpl::GetAudioInternal(webrtc::AudioFrame*, bool*, absl::optional&lt;webrtc::Operations&gt;) (64 samples, 1.34%)</title><rect x="1113.8" y="805" width="15.8" height="15.0" fill="rgb(213,142,26)" rx="2" ry="2" />
<text  x="1116.81" y="815.5" ></text>
</g>
<g >
<title>base::debug::StackTrace::StackTrace() (1 samples, 0.02%)</title><rect x="578.0" y="901" width="0.2" height="15.0" fill="rgb(228,187,41)" rx="2" ry="2" />
<text  x="580.98" y="911.5" ></text>
</g>
<g >
<title>void media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (double)&gt; &gt;::Run&lt;double&gt;(double) (1 samples, 0.02%)</title><rect x="487.9" y="661" width="0.3" height="15.0" fill="rgb(219,156,50)" rx="2" ry="2" />
<text  x="490.94" y="671.5" ></text>
</g>
<g >
<title>webrtc::PacedSender::UpdateOutstandingData(long long) (1 samples, 0.02%)</title><rect x="274.2" y="693" width="0.2" height="15.0" fill="rgb(210,80,44)" rx="2" ry="2" />
<text  x="277.20" y="703.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::SignalHasReadyToRunTasksWithLockAcquired() (1 samples, 0.02%)</title><rect x="68.6" y="869" width="0.3" height="15.0" fill="rgb(251,224,24)" rx="2" ry="2" />
<text  x="71.63" y="879.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="137.4" y="501" width="0.2" height="15.0" fill="rgb(243,89,36)" rx="2" ry="2" />
<text  x="140.40" y="511.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="62.4" y="837" width="0.3" height="15.0" fill="rgb(231,162,46)" rx="2" ry="2" />
<text  x="65.44" y="847.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (4 samples, 0.08%)</title><rect x="500.1" y="677" width="0.9" height="15.0" fill="rgb(233,155,14)" rx="2" ry="2" />
<text  x="503.06" y="687.5" ></text>
</g>
<g >
<title>mach_msg_trap (23 samples, 0.48%)</title><rect x="559.9" y="901" width="5.7" height="15.0" fill="rgb(239,47,47)" rx="2" ry="2" />
<text  x="562.92" y="911.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3 (1 samples, 0.02%)</title><rect x="758.6" y="645" width="0.2" height="15.0" fill="rgb(249,174,51)" rx="2" ry="2" />
<text  x="761.57" y="655.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (2 samples, 0.04%)</title><rect x="496.8" y="693" width="0.5" height="15.0" fill="rgb(223,162,3)" rx="2" ry="2" />
<text  x="499.84" y="703.5" ></text>
</g>
<g >
<title>blink::PersistentBase&lt;blink::StyleFilterData, (blink::WeaknessPersistentConfiguration)0, (blink::CrossThreadnessPersistentConfiguration)0&gt;::CheckPointer() const (1 samples, 0.02%)</title><rect x="25.3" y="341" width="0.3" height="15.0" fill="rgb(215,139,13)" rx="2" ry="2" />
<text  x="28.34" y="351.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="190.1" y="709" width="0.2" height="15.0" fill="rgb(226,219,0)" rx="2" ry="2" />
<text  x="193.09" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::GetOldestQueueAndEnqueueOrderInSet(unsigned long, base::sequence_manager::internal::EnqueueOrder*) const (3 samples, 0.06%)</title><rect x="352.6" y="821" width="0.8" height="15.0" fill="rgb(215,132,7)" rx="2" ry="2" />
<text  x="355.62" y="831.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="168.1" y="677" width="0.2" height="15.0" fill="rgb(210,219,26)" rx="2" ry="2" />
<text  x="171.08" y="687.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="227.9" y="597" width="0.3" height="15.0" fill="rgb(250,207,23)" rx="2" ry="2" />
<text  x="230.94" y="607.5" ></text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (1 samples, 0.02%)</title><rect x="19.9" y="437" width="0.2" height="15.0" fill="rgb(220,171,46)" rx="2" ry="2" />
<text  x="22.90" y="447.5" ></text>
</g>
<g >
<title>_pthread_start (181 samples, 3.79%)</title><rect x="1020.5" y="1045" width="44.8" height="15.0" fill="rgb(210,179,36)" rx="2" ry="2" />
<text  x="1023.55" y="1055.5" >_pth..</text>
</g>
<g >
<title>vp8_encode_inter16x16 (30 samples, 0.63%)</title><rect x="732.1" y="693" width="7.4" height="15.0" fill="rgb(236,77,22)" rx="2" ry="2" />
<text  x="735.10" y="703.5" ></text>
</g>
<g >
<title>vp8_lookahead_push (4 samples, 0.08%)</title><rect x="960.2" y="741" width="1.0" height="15.0" fill="rgb(215,195,32)" rx="2" ry="2" />
<text  x="963.18" y="751.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::AudioCodingModuleImpl::ModifyEncoder(rtc::FunctionView&lt;void (std::__Cr::unique_ptr&lt;webrtc::AudioEncoder, std::__Cr::default_delete&lt;webrtc::AudioEncoder&gt; &gt;*)&gt;) (1 samples, 0.02%)</title><rect x="275.4" y="629" width="0.3" height="15.0" fill="rgb(219,151,18)" rx="2" ry="2" />
<text  x="278.44" y="639.5" ></text>
</g>
<g >
<title>base::internal::circular_deque_const_iterator&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl::VideoFrameCopyRequest&gt;::operator*() const (1 samples, 0.02%)</title><rect x="203.9" y="789" width="0.3" height="15.0" fill="rgb(244,46,7)" rx="2" ry="2" />
<text  x="206.95" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnTaskPushedToEmptyQueue(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.02%)</title><rect x="39.4" y="613" width="0.3" height="15.0" fill="rgb(215,32,16)" rx="2" ry="2" />
<text  x="42.44" y="623.5" ></text>
</g>
<g >
<title>silk_burg_modified_FLP (1 samples, 0.02%)</title><rect x="1000.5" y="677" width="0.3" height="15.0" fill="rgb(206,228,10)" rx="2" ry="2" />
<text  x="1003.51" y="687.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="86.7" y="853" width="0.2" height="15.0" fill="rgb(247,190,19)" rx="2" ry="2" />
<text  x="89.69" y="863.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="1053.0" y="405" width="0.4" height="15.0" fill="rgb(241,102,53)" rx="2" ry="2" />
<text  x="1055.95" y="415.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::EncodeVideoFrame(webrtc::VideoFrame const&amp;, long long) (382 samples, 8.01%)</title><rect x="722.5" y="821" width="94.5" height="15.0" fill="rgb(216,49,18)" rx="2" ry="2" />
<text  x="725.45" y="831.5" >webrtc::Vid..</text>
</g>
<g >
<title>silk_warped_autocorrelation_FLP (10 samples, 0.21%)</title><rect x="1001.2" y="693" width="2.5" height="15.0" fill="rgb(205,50,25)" rx="2" ry="2" />
<text  x="1004.25" y="703.5" ></text>
</g>
<g >
<title>vp8_fast_quantize_b_ssse3 (15 samples, 0.31%)</title><rect x="392.0" y="661" width="3.7" height="15.0" fill="rgb(235,131,13)" rx="2" ry="2" />
<text  x="394.95" y="671.5" ></text>
</g>
<g >
<title>webrtc::AlrDetector::OnBytesSent(unsigned long, long long) (1 samples, 0.02%)</title><rect x="381.1" y="821" width="0.2" height="15.0" fill="rgb(221,105,45)" rx="2" ry="2" />
<text  x="384.07" y="831.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="962.7" y="613" width="0.2" height="15.0" fill="rgb(243,82,40)" rx="2" ry="2" />
<text  x="965.66" y="623.5" ></text>
</g>
<g >
<title>DYLD-STUB$$mojo::StructTraits&lt;mojo_base::mojom::TimeTicksDataView, base::TimeTicks&gt;::Read(mojo_base::mojom::TimeTicksDataView, base::TimeTicks*) (1 samples, 0.02%)</title><rect x="1032.7" y="677" width="0.2" height="15.0" fill="rgb(244,181,18)" rx="2" ry="2" />
<text  x="1035.67" y="687.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (7 samples, 0.15%)</title><rect x="374.6" y="853" width="1.8" height="15.0" fill="rgb(214,78,7)" rx="2" ry="2" />
<text  x="377.64" y="863.5" ></text>
</g>
<g >
<title>mach_msg_trap (19 samples, 0.40%)</title><rect x="1014.4" y="901" width="4.7" height="15.0" fill="rgb(224,5,23)" rx="2" ry="2" />
<text  x="1017.36" y="911.5" ></text>
</g>
<g >
<title>cc::PictureLayerTilingSet::UpdateTilingsToCurrentRasterSourceForActivation(scoped_refptr&lt;cc::RasterSource&gt;, cc::PictureLayerTilingSet const*, cc::Region const&amp;, float, float) (1 samples, 0.02%)</title><rect x="1069.8" y="693" width="0.2" height="15.0" fill="rgb(231,69,6)" rx="2" ry="2" />
<text  x="1072.77" y="703.5" ></text>
</g>
<g >
<title>IOConnectCallMethod (1 samples, 0.02%)</title><rect x="61.2" y="821" width="0.3" height="15.0" fill="rgb(210,105,0)" rx="2" ry="2" />
<text  x="64.21" y="831.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="697.2" y="933" width="0.3" height="15.0" fill="rgb(247,158,24)" rx="2" ry="2" />
<text  x="700.22" y="943.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (1 samples, 0.02%)</title><rect x="910.0" y="645" width="0.2" height="15.0" fill="rgb(226,34,38)" rx="2" ry="2" />
<text  x="912.97" y="655.5" ></text>
</g>
<g >
<title>vp8dx_bool_decoder_fill (2 samples, 0.04%)</title><rect x="835.8" y="677" width="0.4" height="15.0" fill="rgb(205,198,44)" rx="2" ry="2" />
<text  x="838.75" y="687.5" ></text>
</g>
<g >
<title>vp8_loop_filter_vertical_edge_uv_sse2 (2 samples, 0.04%)</title><rect x="679.7" y="693" width="0.5" height="15.0" fill="rgb(222,173,46)" rx="2" ry="2" />
<text  x="682.66" y="703.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (11 samples, 0.23%)</title><rect x="1156.4" y="853" width="2.7" height="15.0" fill="rgb(242,166,52)" rx="2" ry="2" />
<text  x="1159.36" y="863.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::CallFlushCallbackForTesting() (1 samples, 0.02%)</title><rect x="569.3" y="917" width="0.3" height="15.0" fill="rgb(242,111,16)" rx="2" ry="2" />
<text  x="572.32" y="927.5" ></text>
</g>
<g >
<title>__psynch_mutexdrop (1 samples, 0.02%)</title><rect x="857.8" y="885" width="0.2" height="15.0" fill="rgb(207,108,29)" rx="2" ry="2" />
<text  x="860.77" y="895.5" ></text>
</g>
<g >
<title>vp8_encode_motion_vector (1 samples, 0.02%)</title><rect x="638.1" y="725" width="0.2" height="15.0" fill="rgb(228,160,48)" rx="2" ry="2" />
<text  x="641.10" y="735.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.04%)</title><rect x="1133.6" y="725" width="0.5" height="15.0" fill="rgb(242,4,37)" rx="2" ry="2" />
<text  x="1136.60" y="735.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::GetHandleSignalsStateNoLock() const (1 samples, 0.02%)</title><rect x="169.6" y="677" width="0.2" height="15.0" fill="rgb(243,83,4)" rx="2" ry="2" />
<text  x="172.56" y="687.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelSend::CallEncoder(rtc::FunctionView&lt;void (webrtc::AudioEncoder*)&gt;) (1 samples, 0.02%)</title><rect x="275.4" y="645" width="0.3" height="15.0" fill="rgb(213,36,22)" rx="2" ry="2" />
<text  x="278.44" y="655.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::GetNumQueuedCanRunBestEffortTaskSources() const (1 samples, 0.02%)</title><rect x="1135.3" y="693" width="0.3" height="15.0" fill="rgb(254,208,13)" rx="2" ry="2" />
<text  x="1138.33" y="703.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="352.1" y="805" width="0.5" height="15.0" fill="rgb(253,12,51)" rx="2" ry="2" />
<text  x="355.13" y="815.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="174.3" y="789" width="0.2" height="15.0" fill="rgb(248,118,49)" rx="2" ry="2" />
<text  x="177.26" y="799.5" ></text>
</g>
<g >
<title>blink::RangeInputType::SanitizeValue(WTF::String const&amp;) const (1 samples, 0.02%)</title><rect x="21.4" y="501" width="0.2" height="15.0" fill="rgb(223,21,32)" rx="2" ry="2" />
<text  x="24.38" y="511.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (3 samples, 0.06%)</title><rect x="183.7" y="821" width="0.7" height="15.0" fill="rgb(236,149,35)" rx="2" ry="2" />
<text  x="186.66" y="831.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="719.0" y="869" width="0.5" height="15.0" fill="rgb(205,100,39)" rx="2" ry="2" />
<text  x="721.99" y="879.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.02%)</title><rect x="41.4" y="645" width="0.3" height="15.0" fill="rgb(250,168,5)" rx="2" ry="2" />
<text  x="44.42" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="196.5" y="853" width="0.3" height="15.0" fill="rgb(224,116,35)" rx="2" ry="2" />
<text  x="199.52" y="863.5" ></text>
</g>
<g >
<title>mach_msg_trap (9 samples, 0.19%)</title><rect x="1142.8" y="901" width="2.2" height="15.0" fill="rgb(209,38,42)" rx="2" ry="2" />
<text  x="1145.75" y="911.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::ForwardEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (1 samples, 0.02%)</title><rect x="165.8" y="629" width="0.3" height="15.0" fill="rgb(243,173,28)" rx="2" ry="2" />
<text  x="168.85" y="639.5" ></text>
</g>
<g >
<title>base::Pickle::ClaimUninitializedBytesInternal(unsigned long) (3 samples, 0.06%)</title><rect x="243.3" y="581" width="0.7" height="15.0" fill="rgb(239,55,40)" rx="2" ry="2" />
<text  x="246.28" y="591.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_0::__invoke(_malloc_zone_t*, void const*) (1 samples, 0.02%)</title><rect x="1052.5" y="485" width="0.2" height="15.0" fill="rgb(225,100,15)" rx="2" ry="2" />
<text  x="1055.46" y="495.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) (36 samples, 0.75%)</title><rect x="1065.3" y="965" width="8.9" height="15.0" fill="rgb(231,100,13)" rx="2" ry="2" />
<text  x="1068.32" y="975.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="332.6" y="821" width="0.2" height="15.0" fill="rgb(238,40,0)" rx="2" ry="2" />
<text  x="335.58" y="831.5" ></text>
</g>
<g >
<title>webrtc::RtpDemuxer::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (4 samples, 0.08%)</title><rect x="226.0" y="565" width="1.0" height="15.0" fill="rgb(252,116,24)" rx="2" ry="2" />
<text  x="228.96" y="575.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (3 samples, 0.06%)</title><rect x="93.9" y="853" width="0.7" height="15.0" fill="rgb(242,150,19)" rx="2" ry="2" />
<text  x="96.86" y="863.5" ></text>
</g>
<g >
<title>webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;) (7 samples, 0.15%)</title><rect x="276.2" y="741" width="1.7" height="15.0" fill="rgb(249,102,33)" rx="2" ry="2" />
<text  x="279.18" y="751.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::AssertNoLockHeldOnCurrentThread() (1 samples, 0.02%)</title><rect x="1134.6" y="709" width="0.2" height="15.0" fill="rgb(207,199,36)" rx="2" ry="2" />
<text  x="1137.59" y="719.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.06%)</title><rect x="377.9" y="885" width="0.7" height="15.0" fill="rgb(228,114,11)" rx="2" ry="2" />
<text  x="380.85" y="895.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1083.1" y="853" width="0.3" height="15.0" fill="rgb(235,140,39)" rx="2" ry="2" />
<text  x="1086.13" y="863.5" ></text>
</g>
<g >
<title>_pthread_start (64 samples, 1.34%)</title><rect x="1087.1" y="1045" width="15.8" height="15.0" fill="rgb(243,179,47)" rx="2" ry="2" />
<text  x="1090.09" y="1055.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="190.1" y="741" width="0.2" height="15.0" fill="rgb(228,172,53)" rx="2" ry="2" />
<text  x="193.09" y="751.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::MoveHoleUpAndFillWithElement(unsigned long, base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&amp;&amp;) (1 samples, 0.02%)</title><rect x="341.7" y="773" width="0.3" height="15.0" fill="rgb(224,152,35)" rx="2" ry="2" />
<text  x="344.74" y="783.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::RunStyleAndLayoutLifecyclePhases(blink::DocumentLifecycle::LifecycleState) (1 samples, 0.02%)</title><rect x="29.0" y="533" width="0.3" height="15.0" fill="rgb(241,120,50)" rx="2" ry="2" />
<text  x="32.05" y="543.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (cc::ProxyMain::*)(std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt;), base::WeakPtr&lt;cc::ProxyMain&gt;, base::internal::PassedWrapper&lt;std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt; &gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (24 samples, 0.50%)</title><rect x="23.4" y="693" width="5.9" height="15.0" fill="rgb(222,133,41)" rx="2" ry="2" />
<text  x="26.36" y="703.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::~RefCountedObject() (1 samples, 0.02%)</title><rect x="1161.8" y="885" width="0.2" height="15.0" fill="rgb(209,133,49)" rx="2" ry="2" />
<text  x="1164.80" y="895.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="93.1" y="805" width="0.3" height="15.0" fill="rgb(213,199,29)" rx="2" ry="2" />
<text  x="96.12" y="815.5" ></text>
</g>
<g >
<title>objc_removeAssociatedObjects (1 samples, 0.02%)</title><rect x="363.0" y="949" width="0.3" height="15.0" fill="rgb(243,140,25)" rx="2" ry="2" />
<text  x="366.01" y="959.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="138.4" y="421" width="0.2" height="15.0" fill="rgb(229,158,23)" rx="2" ry="2" />
<text  x="141.39" y="431.5" ></text>
</g>
<g >
<title>silk_noise_shape_analysis_FLP (14 samples, 0.29%)</title><rect x="545.8" y="709" width="3.5" height="15.0" fill="rgb(247,66,19)" rx="2" ry="2" />
<text  x="548.82" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTaskImpl() (34 samples, 0.71%)</title><rect x="182.7" y="853" width="8.4" height="15.0" fill="rgb(208,103,45)" rx="2" ry="2" />
<text  x="185.67" y="863.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (1 samples, 0.02%)</title><rect x="486.7" y="629" width="0.2" height="15.0" fill="rgb(253,96,46)" rx="2" ry="2" />
<text  x="489.70" y="639.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMSCompositor::RenderUsingAlgorithm(base::TimeTicks, base::TimeTicks) (7 samples, 0.15%)</title><rect x="1044.0" y="645" width="1.8" height="15.0" fill="rgb(230,134,13)" rx="2" ry="2" />
<text  x="1047.05" y="655.5" ></text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::PostTaskInternal(rtc::Location const&amp;, int, rtc::MessageHandler*, unsigned int, rtc::MessageData*) (10 samples, 0.21%)</title><rect x="315.3" y="549" width="2.4" height="15.0" fill="rgb(229,18,42)" rx="2" ry="2" />
<text  x="318.27" y="559.5" ></text>
</g>
<g >
<title>blink::WebViewImpl::EndCommitCompositorFrame() (1 samples, 0.02%)</title><rect x="23.9" y="597" width="0.2" height="15.0" fill="rgb(237,183,13)" rx="2" ry="2" />
<text  x="26.85" y="607.5" ></text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::RunTask(int) (269 samples, 5.64%)</title><rect x="230.9" y="853" width="66.6" height="15.0" fill="rgb(250,144,18)" rx="2" ry="2" />
<text  x="233.91" y="863.5" >jingle_..</text>
</g>
<g >
<title>base::WaitableEvent::TimedWait(base::TimeDelta const&amp;) (13 samples, 0.27%)</title><rect x="1142.0" y="949" width="3.2" height="15.0" fill="rgb(205,2,3)" rx="2" ry="2" />
<text  x="1145.01" y="959.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="86.7" y="837" width="0.2" height="15.0" fill="rgb(221,12,11)" rx="2" ry="2" />
<text  x="89.69" y="847.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="62.2" y="885" width="0.2" height="15.0" fill="rgb(230,215,13)" rx="2" ry="2" />
<text  x="65.20" y="895.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="317.7" y="549" width="0.3" height="15.0" fill="rgb(226,225,36)" rx="2" ry="2" />
<text  x="320.74" y="559.5" ></text>
</g>
<g >
<title>silk_NLSF_del_dec_quant (4 samples, 0.08%)</title><rect x="544.8" y="645" width="1.0" height="15.0" fill="rgb(215,188,50)" rx="2" ry="2" />
<text  x="547.83" y="655.5" ></text>
</g>
<g >
<title>base::mac::ScopedNSAutoreleasePool::~ScopedNSAutoreleasePool() (1 samples, 0.02%)</title><rect x="164.6" y="917" width="0.3" height="15.0" fill="rgb(205,155,18)" rx="2" ry="2" />
<text  x="167.61" y="927.5" ></text>
</g>
<g >
<title>rtc::PlatformThread::StartThread(void*) (95 samples, 1.99%)</title><rect x="1140.0" y="1013" width="23.5" height="15.0" fill="rgb(246,114,48)" rx="2" ry="2" />
<text  x="1143.03" y="1023.5" >r..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TraceQueueSize() const (1 samples, 0.02%)</title><rect x="46.1" y="645" width="0.3" height="15.0" fill="rgb(248,81,11)" rx="2" ry="2" />
<text  x="49.12" y="655.5" ></text>
</g>
<g >
<title>content::LayerTreeView::DidUpdateLayers() (1 samples, 0.02%)</title><rect x="24.8" y="629" width="0.3" height="15.0" fill="rgb(228,10,10)" rx="2" ry="2" />
<text  x="27.84" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (4 samples, 0.08%)</title><rect x="76.8" y="789" width="1.0" height="15.0" fill="rgb(233,40,47)" rx="2" ry="2" />
<text  x="79.79" y="799.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (8 samples, 0.17%)</title><rect x="169.6" y="789" width="1.9" height="15.0" fill="rgb(250,3,21)" rx="2" ry="2" />
<text  x="172.56" y="799.5" ></text>
</g>
<g >
<title>base::IDMap&lt;base::MessagePumpKqueue::MachPortWatchController*, int&gt;::Lookup(int) const (16 samples, 0.34%)</title><rect x="90.9" y="885" width="4.0" height="15.0" fill="rgb(217,178,4)" rx="2" ry="2" />
<text  x="93.89" y="895.5" ></text>
</g>
<g >
<title>blink::scheduler::IdleHelper::EndIdlePeriod() (1 samples, 0.02%)</title><rect x="38.2" y="661" width="0.2" height="15.0" fill="rgb(244,92,45)" rx="2" ry="2" />
<text  x="41.20" y="671.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;), base::internal::UnretainedWrapper&lt;(anonymous namespace)::WebrtcTaskQueue&gt;, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (502 samples, 10.52%)</title><rect x="882.3" y="885" width="124.1" height="15.0" fill="rgb(226,151,42)" rx="2" ry="2" />
<text  x="885.26" y="895.5" >base::internal:..</text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (8 samples, 0.17%)</title><rect x="498.1" y="677" width="2.0" height="15.0" fill="rgb(226,55,35)" rx="2" ry="2" />
<text  x="501.08" y="687.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoStreamReceiver::ReceivePacket(webrtc::RtpPacketReceived const&amp;) (15 samples, 0.31%)</title><rect x="265.5" y="645" width="3.8" height="15.0" fill="rgb(225,45,52)" rx="2" ry="2" />
<text  x="268.54" y="655.5" ></text>
</g>
<g >
<title>webrtc::RateStatistics::EraseOld(long long) (1 samples, 0.02%)</title><rect x="486.9" y="677" width="0.3" height="15.0" fill="rgb(233,185,8)" rx="2" ry="2" />
<text  x="489.95" y="687.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.02%)</title><rect x="859.5" y="901" width="0.2" height="15.0" fill="rgb(251,157,13)" rx="2" ry="2" />
<text  x="862.50" y="911.5" ></text>
</g>
<g >
<title>vp8_encode_value (1 samples, 0.02%)</title><rect x="883.2" y="725" width="0.3" height="15.0" fill="rgb(219,125,27)" rx="2" ry="2" />
<text  x="886.25" y="735.5" ></text>
</g>
<g >
<title>opus_pcm_soft_clip (1 samples, 0.02%)</title><rect x="1124.7" y="661" width="0.2" height="15.0" fill="rgb(225,130,15)" rx="2" ry="2" />
<text  x="1127.69" y="671.5" ></text>
</g>
<g >
<title>blink::MediaControlTimelineElement::SetPosition(double) (5 samples, 0.10%)</title><rect x="20.6" y="533" width="1.3" height="15.0" fill="rgb(216,6,17)" rx="2" ry="2" />
<text  x="23.64" y="543.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (2 samples, 0.04%)</title><rect x="267.0" y="373" width="0.5" height="15.0" fill="rgb(253,127,52)" rx="2" ry="2" />
<text  x="270.03" y="383.5" ></text>
</g>
<g >
<title>blink::NormalPageArena::PromptlyFreeObject(blink::HeapObjectHeader*) (1 samples, 0.02%)</title><rect x="19.6" y="629" width="0.3" height="15.0" fill="rgb(207,33,5)" rx="2" ry="2" />
<text  x="22.65" y="639.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;viz::mojom::CompositorFrameDataView, viz::CompositorFrame&gt;::Serialize(viz::CompositorFrame&amp;, mojo::internal::Buffer*, viz::mojom::internal::CompositorFrame_Data::BufferWriter*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1068.5" y="725" width="0.3" height="15.0" fill="rgb(234,159,53)" rx="2" ry="2" />
<text  x="1071.54" y="735.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="260.3" y="661" width="0.3" height="15.0" fill="rgb(233,28,51)" rx="2" ry="2" />
<text  x="263.35" y="671.5" ></text>
</g>
<g >
<title>mojo::core::Channel::Message::Message(unsigned long, unsigned long, unsigned long, mojo::core::Channel::Message::MessageType) (1 samples, 0.02%)</title><rect x="251.7" y="533" width="0.2" height="15.0" fill="rgb(219,100,51)" rx="2" ry="2" />
<text  x="254.69" y="543.5" ></text>
</g>
<g >
<title>base::LazyInstance&lt;base::ThreadLocalPointer&lt;base::internal::BlockingObserver&gt;, base::internal::LeakyLazyInstanceTraits&lt;base::ThreadLocalPointer&lt;base::internal::BlockingObserver&gt; &gt; &gt;::Pointer() (1 samples, 0.02%)</title><rect x="1164.8" y="869" width="0.2" height="15.0" fill="rgb(208,36,39)" rx="2" ry="2" />
<text  x="1167.77" y="879.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (cc::ProxyMain::*)(), base::WeakPtr&lt;cc::ProxyMain&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="23.1" y="693" width="0.3" height="15.0" fill="rgb(224,186,25)" rx="2" ry="2" />
<text  x="26.11" y="703.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="258.4" y="549" width="0.2" height="15.0" fill="rgb(246,40,30)" rx="2" ry="2" />
<text  x="261.37" y="559.5" ></text>
</g>
<g >
<title>non-virtual thunk to webrtc::internal::AudioSendStream::OnPacketAdded(unsigned int, unsigned short) (1 samples, 0.02%)</title><rect x="1147.9" y="853" width="0.3" height="15.0" fill="rgb(214,13,28)" rx="2" ry="2" />
<text  x="1150.95" y="863.5" ></text>
</g>
<g >
<title>webrtc::rtcp::RtcpPacket::Build(unsigned long, rtc::FunctionView&lt;void (rtc::ArrayView&lt;unsigned char const, -4711l&gt;)&gt;) const (5 samples, 0.10%)</title><rect x="1181.6" y="901" width="1.2" height="15.0" fill="rgb(213,50,12)" rx="2" ry="2" />
<text  x="1184.59" y="911.5" ></text>
</g>
<g >
<title>silk_decode_signs (1 samples, 0.02%)</title><rect x="1123.0" y="597" width="0.2" height="15.0" fill="rgb(245,48,35)" rx="2" ry="2" />
<text  x="1125.96" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (17 samples, 0.36%)</title><rect x="127.5" y="693" width="4.2" height="15.0" fill="rgb(234,111,36)" rx="2" ry="2" />
<text  x="130.51" y="703.5" ></text>
</g>
<g >
<title>blink::EventPath::EventPath(blink::Node&amp;, blink::Event*) (1 samples, 0.02%)</title><rect x="22.6" y="597" width="0.3" height="15.0" fill="rgb(223,129,33)" rx="2" ry="2" />
<text  x="25.62" y="607.5" ></text>
</g>
<g >
<title>encode_mb_row (233 samples, 4.88%)</title><rect x="883.5" y="725" width="57.6" height="15.0" fill="rgb(225,63,0)" rx="2" ry="2" />
<text  x="886.50" y="735.5" >encode..</text>
</g>
<g >
<title>webrtc::ForwardErrorCorrection::DecodeFec(webrtc::ForwardErrorCorrection::ReceivedPacket const&amp;, std::__Cr::list&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt; &gt; &gt;*) (8 samples, 0.17%)</title><rect x="262.8" y="661" width="2.0" height="15.0" fill="rgb(231,149,44)" rx="2" ry="2" />
<text  x="265.82" y="671.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunSkipOnShutdown(base::internal::Task*) (554 samples, 11.61%)</title><rect x="719.5" y="917" width="137.0" height="15.0" fill="rgb(243,42,47)" rx="2" ry="2" />
<text  x="722.48" y="927.5" >base::internal::T..</text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessageInternal(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (1 samples, 0.02%)</title><rect x="1068.3" y="597" width="0.2" height="15.0" fill="rgb(234,70,3)" rx="2" ry="2" />
<text  x="1071.29" y="607.5" ></text>
</g>
<g >
<title>base::AlignedAlloc(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="251.7" y="517" width="0.2" height="15.0" fill="rgb(226,3,26)" rx="2" ry="2" />
<text  x="254.69" y="527.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="860.2" y="933" width="0.3" height="15.0" fill="rgb(228,10,7)" rx="2" ry="2" />
<text  x="863.24" y="943.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (2 samples, 0.04%)</title><rect x="681.1" y="693" width="0.5" height="15.0" fill="rgb(218,87,45)" rx="2" ry="2" />
<text  x="684.14" y="703.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.02%)</title><rect x="327.9" y="741" width="0.2" height="15.0" fill="rgb(253,227,8)" rx="2" ry="2" />
<text  x="330.88" y="751.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="317.7" y="533" width="0.3" height="15.0" fill="rgb(212,194,12)" rx="2" ry="2" />
<text  x="320.74" y="543.5" ></text>
</g>
<g >
<title>srtp_hmac_compute (2 samples, 0.04%)</title><rect x="225.5" y="549" width="0.5" height="15.0" fill="rgb(209,221,8)" rx="2" ry="2" />
<text  x="228.47" y="559.5" ></text>
</g>
<g >
<title>net::IPAddress::~IPAddress() (1 samples, 0.02%)</title><rect x="311.8" y="629" width="0.3" height="15.0" fill="rgb(210,215,25)" rx="2" ry="2" />
<text  x="314.80" y="639.5" ></text>
</g>
<g >
<title>_pthread_start (19 samples, 0.40%)</title><rect x="54.3" y="1045" width="4.7" height="15.0" fill="rgb(230,215,26)" rx="2" ry="2" />
<text  x="57.28" y="1055.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (4 samples, 0.08%)</title><rect x="371.2" y="805" width="1.0" height="15.0" fill="rgb(214,170,33)" rx="2" ry="2" />
<text  x="374.17" y="815.5" ></text>
</g>
<g >
<title>vp8_build_intra_predictors_mby_s (4 samples, 0.08%)</title><rect x="599.0" y="677" width="1.0" height="15.0" fill="rgb(250,156,13)" rx="2" ry="2" />
<text  x="602.01" y="687.5" ></text>
</g>
<g >
<title>blink::GraphicsLayerUpdater::UpdateRecursive(blink::PaintLayer&amp;, blink::GraphicsLayerUpdater::UpdateType, blink::GraphicsLayerUpdater::UpdateContext&amp;, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (4 samples, 0.08%)</title><rect x="25.6" y="437" width="1.0" height="15.0" fill="rgb(224,90,7)" rx="2" ry="2" />
<text  x="28.58" y="447.5" ></text>
</g>
<g >
<title>blink::Element::AttributeChanged(blink::Element::AttributeModificationParams const&amp;) (1 samples, 0.02%)</title><rect x="20.9" y="469" width="0.2" height="15.0" fill="rgb(224,158,31)" rx="2" ry="2" />
<text  x="23.88" y="479.5" ></text>
</g>
<g >
<title>transient_analysis (2 samples, 0.04%)</title><rect x="536.2" y="725" width="0.5" height="15.0" fill="rgb(243,44,31)" rx="2" ry="2" />
<text  x="539.18" y="735.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::VideoStreamEncoder::OnFrame(webrtc::VideoFrame const&amp;)::$_9&gt;::Run() (321 samples, 6.73%)</title><rect x="883.0" y="853" width="79.4" height="15.0" fill="rgb(252,92,23)" rx="2" ry="2" />
<text  x="886.00" y="863.5" >webrtc::w..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="77.3" y="757" width="0.2" height="15.0" fill="rgb(250,156,53)" rx="2" ry="2" />
<text  x="80.29" y="767.5" ></text>
</g>
<g >
<title>-[NSRunLoop(NSRunLoop) runMode:beforeDate:] (171 samples, 3.58%)</title><rect x="10.0" y="885" width="42.3" height="15.0" fill="rgb(214,19,45)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >-[N..</text>
</g>
<g >
<title>mojo::MessageHandle::Close() (2 samples, 0.04%)</title><rect x="320.0" y="725" width="0.5" height="15.0" fill="rgb(220,50,41)" rx="2" ry="2" />
<text  x="322.97" y="735.5" ></text>
</g>
<g >
<title>vp8dx_receive_compressed_data (96 samples, 2.01%)</title><rect x="658.4" y="741" width="23.7" height="15.0" fill="rgb(252,107,11)" rx="2" ry="2" />
<text  x="661.38" y="751.5" >v..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (20 samples, 0.42%)</title><rect x="126.8" y="725" width="4.9" height="15.0" fill="rgb(229,75,20)" rx="2" ry="2" />
<text  x="129.76" y="735.5" ></text>
</g>
<g >
<title>cc::PictureLayerTiling::SetRasterSourceAndResize(scoped_refptr&lt;cc::RasterSource&gt;) (1 samples, 0.02%)</title><rect x="1069.8" y="645" width="0.2" height="15.0" fill="rgb(217,96,38)" rx="2" ry="2" />
<text  x="1072.77" y="655.5" ></text>
</g>
<g >
<title>base::internal::DelayedTaskManager::ScheduleProcessRipeTasksOnServiceThread(base::TimeTicks) (7 samples, 0.15%)</title><rect x="76.1" y="837" width="1.7" height="15.0" fill="rgb(228,39,18)" rx="2" ry="2" />
<text  x="79.05" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::ScheduleDelayedWorkTask(base::sequence_manager::Task) (1 samples, 0.02%)</title><rect x="82.2" y="837" width="0.3" height="15.0" fill="rgb(223,70,17)" rx="2" ry="2" />
<text  x="85.23" y="847.5" ></text>
</g>
<g >
<title>mojo::internal::ArraySerializer&lt;mojo::ArrayDataView&lt;signed char&gt;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const, mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; &gt;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const, false&gt;, void&gt;::SerializeElements(mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; &gt;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const, false&gt;*, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;signed char&gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="252.9" y="629" width="0.3" height="15.0" fill="rgb(235,72,28)" rx="2" ry="2" />
<text  x="255.93" y="639.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::Release() const (1 samples, 0.02%)</title><rect x="126.5" y="725" width="0.3" height="15.0" fill="rgb(236,64,53)" rx="2" ry="2" />
<text  x="129.52" y="735.5" ></text>
</g>
<g >
<title>blink::GraphicsLayerUpdater::Update(blink::PaintLayer&amp;, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (4 samples, 0.08%)</title><rect x="25.6" y="469" width="1.0" height="15.0" fill="rgb(208,138,49)" rx="2" ry="2" />
<text  x="28.58" y="479.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="111.7" y="709" width="0.2" height="15.0" fill="rgb(232,106,35)" rx="2" ry="2" />
<text  x="114.67" y="719.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="815.5" y="677" width="0.2" height="15.0" fill="rgb(232,134,1)" rx="2" ry="2" />
<text  x="818.47" y="687.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (6 samples, 0.13%)</title><rect x="166.3" y="677" width="1.5" height="15.0" fill="rgb(239,14,46)" rx="2" ry="2" />
<text  x="169.34" y="687.5" ></text>
</g>
<g >
<title>pthread_cond_signal (1 samples, 0.02%)</title><rect x="68.6" y="837" width="0.3" height="15.0" fill="rgb(246,183,7)" rx="2" ry="2" />
<text  x="71.63" y="847.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (15 samples, 0.31%)</title><rect x="82.7" y="869" width="3.7" height="15.0" fill="rgb(252,96,20)" rx="2" ry="2" />
<text  x="85.73" y="879.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Decoder::Decode(webrtc::EncodedImage const&amp;, bool, long long) (99 samples, 2.08%)</title><rect x="817.0" y="789" width="24.4" height="15.0" fill="rgb(248,170,30)" rx="2" ry="2" />
<text  x="819.95" y="799.5" >w..</text>
</g>
<g >
<title>base::internal::TaskSource::RunIntent::~RunIntent() (1 samples, 0.02%)</title><rect x="557.5" y="949" width="0.2" height="15.0" fill="rgb(220,31,53)" rx="2" ry="2" />
<text  x="560.45" y="959.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Leave() const (1 samples, 0.02%)</title><rect x="291.0" y="757" width="0.3" height="15.0" fill="rgb(241,19,51)" rx="2" ry="2" />
<text  x="294.02" y="767.5" ></text>
</g>
<g >
<title>mach_msg (9 samples, 0.19%)</title><rect x="288.3" y="597" width="2.2" height="15.0" fill="rgb(224,79,32)" rx="2" ry="2" />
<text  x="291.30" y="607.5" ></text>
</g>
<g >
<title>cc::ScrollTree::PushScrollUpdatesFromPendingTree(cc::PropertyTrees*, cc::LayerTreeImpl*) (1 samples, 0.02%)</title><rect x="1069.3" y="725" width="0.2" height="15.0" fill="rgb(209,161,8)" rx="2" ry="2" />
<text  x="1072.28" y="735.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="46.6" y="709" width="0.3" height="15.0" fill="rgb(252,219,14)" rx="2" ry="2" />
<text  x="49.61" y="719.5" ></text>
</g>
<g >
<title>vp8_get_frame (21 samples, 0.44%)</title><rect x="963.2" y="773" width="5.1" height="15.0" fill="rgb(218,58,16)" rx="2" ry="2" />
<text  x="966.15" y="783.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::GetTimeTicks(media::VideoFrameMetadata::Key, base::TimeTicks*) const (1 samples, 0.02%)</title><rect x="175.0" y="789" width="0.2" height="15.0" fill="rgb(211,19,15)" rx="2" ry="2" />
<text  x="178.00" y="799.5" ></text>
</g>
<g >
<title>webrtc::RtpTransportControllerSend::OnSentPacket(rtc::SentPacket const&amp;) (22 samples, 0.46%)</title><rect x="286.1" y="789" width="5.4" height="15.0" fill="rgb(236,225,28)" rx="2" ry="2" />
<text  x="289.08" y="799.5" ></text>
</g>
<g >
<title>base::internal::PriorityQueue::Size() const (1 samples, 0.02%)</title><rect x="1010.4" y="917" width="0.2" height="15.0" fill="rgb(253,196,38)" rx="2" ry="2" />
<text  x="1013.40" y="927.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="18.4" y="421" width="0.3" height="15.0" fill="rgb(241,104,5)" rx="2" ry="2" />
<text  x="21.41" y="431.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="107.5" y="693" width="0.2" height="15.0" fill="rgb(217,98,31)" rx="2" ry="2" />
<text  x="110.47" y="703.5" ></text>
</g>
<g >
<title>rtc::CritScope::CritScope(rtc::CriticalSection const*) (1 samples, 0.02%)</title><rect x="1177.1" y="933" width="0.3" height="15.0" fill="rgb(206,20,45)" rx="2" ry="2" />
<text  x="1180.14" y="943.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::DidRunTask() (1 samples, 0.02%)</title><rect x="82.5" y="869" width="0.2" height="15.0" fill="rgb(227,2,20)" rx="2" ry="2" />
<text  x="85.48" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (19 samples, 0.40%)</title><rect x="127.0" y="709" width="4.7" height="15.0" fill="rgb(237,205,32)" rx="2" ry="2" />
<text  x="130.01" y="719.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1148.7" y="805" width="0.2" height="15.0" fill="rgb(210,63,52)" rx="2" ry="2" />
<text  x="1151.69" y="815.5" ></text>
</g>
<g >
<title>cc::InvalidationRegion::Swap(cc::Region*) (1 samples, 0.02%)</title><rect x="24.6" y="565" width="0.2" height="15.0" fill="rgb(240,127,36)" rx="2" ry="2" />
<text  x="27.60" y="575.5" ></text>
</g>
<g >
<title>blink::StepRange::ClampValue(blink::Decimal const&amp;) const (1 samples, 0.02%)</title><rect x="21.4" y="485" width="0.2" height="15.0" fill="rgb(225,100,9)" rx="2" ry="2" />
<text  x="24.38" y="495.5" ></text>
</g>
<g >
<title>GetCoeffs (36 samples, 0.75%)</title><rect x="827.3" y="693" width="8.9" height="15.0" fill="rgb(207,117,44)" rx="2" ry="2" />
<text  x="830.34" y="703.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="1006.7" y="933" width="0.2" height="15.0" fill="rgb(211,150,27)" rx="2" ry="2" />
<text  x="1009.69" y="943.5" ></text>
</g>
<g >
<title>std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, void*&gt;*, long&gt; std::__Cr::__tree&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::__map_value_compare&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::less&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__emplace_hint_unique_key_args&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; const, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::__Cr::__tree_const_iterator&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, void*&gt;*, long&gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; const&amp;, std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; const, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;&amp;&amp;) (2 samples, 0.04%)</title><rect x="1129.9" y="805" width="0.5" height="15.0" fill="rgb(227,52,25)" rx="2" ry="2" />
<text  x="1132.89" y="815.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="32.8" y="565" width="0.2" height="15.0" fill="rgb(212,36,31)" rx="2" ry="2" />
<text  x="35.76" y="575.5" ></text>
</g>
<g >
<title>silk_NLSF_del_dec_quant (2 samples, 0.04%)</title><rect x="689.3" y="645" width="0.5" height="15.0" fill="rgb(217,172,8)" rx="2" ry="2" />
<text  x="692.30" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="1034.6" y="453" width="0.3" height="15.0" fill="rgb(229,19,46)" rx="2" ry="2" />
<text  x="1037.65" y="463.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="253.4" y="613" width="0.3" height="15.0" fill="rgb(232,52,7)" rx="2" ry="2" />
<text  x="256.42" y="623.5" ></text>
</g>
<g >
<title>webrtc::vcm::VideoReceiver::Decode(webrtc::VCMEncodedFrame const&amp;) (99 samples, 2.08%)</title><rect x="817.0" y="821" width="24.4" height="15.0" fill="rgb(217,18,51)" rx="2" ry="2" />
<text  x="819.95" y="831.5" >w..</text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="1058.1" y="709" width="0.3" height="15.0" fill="rgb(241,209,2)" rx="2" ry="2" />
<text  x="1061.15" y="719.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="41.4" y="613" width="0.3" height="15.0" fill="rgb(205,88,25)" rx="2" ry="2" />
<text  x="44.42" y="623.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="558.4" y="917" width="0.3" height="15.0" fill="rgb(248,48,23)" rx="2" ry="2" />
<text  x="561.44" y="927.5" ></text>
</g>
<g >
<title>_CFAutoreleasePoolPop (2 samples, 0.04%)</title><rect x="873.4" y="949" width="0.4" height="15.0" fill="rgb(209,1,1)" rx="2" ry="2" />
<text  x="876.35" y="959.5" ></text>
</g>
<g >
<title>vp8_short_inv_walsh4x4_1_c (2 samples, 0.04%)</title><rect x="448.4" y="693" width="0.5" height="15.0" fill="rgb(212,154,38)" rx="2" ry="2" />
<text  x="451.36" y="703.5" ></text>
</g>
<g >
<title>content::VideoCaptureImpl::OnAllClientsFinishedConsumingFrame(int, scoped_refptr&lt;content::VideoCaptureImpl::BufferContext&gt;, double) (8 samples, 0.17%)</title><rect x="172.0" y="821" width="2.0" height="15.0" fill="rgb(205,224,17)" rx="2" ry="2" />
<text  x="175.03" y="831.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::UnregisterTaskSource(scoped_refptr&lt;base::internal::TaskSource&gt;) (2 samples, 0.04%)</title><rect x="367.2" y="933" width="0.5" height="15.0" fill="rgb(244,61,29)" rx="2" ry="2" />
<text  x="370.22" y="943.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::ClosureTask::RunOnWorkerThread() (16 samples, 0.34%)</title><rect x="66.2" y="965" width="3.9" height="15.0" fill="rgb(241,28,29)" rx="2" ry="2" />
<text  x="69.16" y="975.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="301.7" y="741" width="0.2" height="15.0" fill="rgb(238,38,18)" rx="2" ry="2" />
<text  x="304.66" y="751.5" ></text>
</g>
<g >
<title>base::FileDescriptorWatcher::FileDescriptorWatcher(scoped_refptr&lt;base::SingleThreadTaskRunner&gt;) (1 samples, 0.02%)</title><rect x="1023.0" y="933" width="0.3" height="15.0" fill="rgb(226,34,32)" rx="2" ry="2" />
<text  x="1026.02" y="943.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::WriteMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (7 samples, 0.15%)</title><rect x="1046.8" y="565" width="1.7" height="15.0" fill="rgb(219,15,7)" rx="2" ry="2" />
<text  x="1049.77" y="575.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Set(void*) (1 samples, 0.02%)</title><rect x="1028.0" y="901" width="0.2" height="15.0" fill="rgb(253,126,47)" rx="2" ry="2" />
<text  x="1030.97" y="911.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::NotifyDidProcessTask(base::PendingTask const&amp;) (1 samples, 0.02%)</title><rect x="33.5" y="677" width="0.2" height="15.0" fill="rgb(221,207,3)" rx="2" ry="2" />
<text  x="36.50" y="687.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="1020.3" y="917" width="0.2" height="15.0" fill="rgb(253,194,49)" rx="2" ry="2" />
<text  x="1023.30" y="927.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeImmediateIncomingQueueTasks() (2 samples, 0.04%)</title><rect x="210.6" y="805" width="0.5" height="15.0" fill="rgb(239,129,44)" rx="2" ry="2" />
<text  x="213.62" y="815.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="753.6" y="645" width="0.3" height="15.0" fill="rgb(243,152,13)" rx="2" ry="2" />
<text  x="756.62" y="655.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (4 samples, 0.08%)</title><rect x="716.8" y="853" width="1.0" height="15.0" fill="rgb(235,1,2)" rx="2" ry="2" />
<text  x="719.76" y="863.5" ></text>
</g>
<g >
<title>webrtc::AudioFrame::mutable_data() (1 samples, 0.02%)</title><rect x="1138.8" y="837" width="0.2" height="15.0" fill="rgb(252,54,49)" rx="2" ry="2" />
<text  x="1141.79" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="1035.4" y="485" width="0.2" height="15.0" fill="rgb(215,100,48)" rx="2" ry="2" />
<text  x="1038.39" y="495.5" ></text>
</g>
<g >
<title>base::internal::BindState&lt;base::internal::IgnoreResultHelper&lt;bool (mojo::Connector::*)()&gt;, base::WeakPtr&lt;mojo::Connector&gt; &gt;* base::internal::BindState&lt;base::internal::IgnoreResultHelper&lt;bool (mojo::Connector::*)()&gt;, base::WeakPtr&lt;mojo::Connector&gt; &gt;::Create&lt;base::internal::IgnoreResultHelper&lt;bool (mojo::Connector::*)()&gt;, base::WeakPtr&lt;mojo::Connector&gt;&amp;&gt;(void (*)(), base::internal::IgnoreResultHelper&lt;bool (mojo::Connector::*)()&gt;&amp;&amp;, base::WeakPtr&lt;mojo::Connector&gt;&amp;&amp;&amp;) (2 samples, 0.04%)</title><rect x="300.7" y="789" width="0.5" height="15.0" fill="rgb(241,116,12)" rx="2" ry="2" />
<text  x="303.67" y="799.5" ></text>
</g>
<g >
<title>mojo::core::ports::(anonymous namespace)::UpdateTLS(mojo::core::ports::PortLocker*, mojo::core::ports::PortLocker*) (2 samples, 0.04%)</title><rect x="115.9" y="773" width="0.5" height="15.0" fill="rgb(247,140,0)" rx="2" ry="2" />
<text  x="118.88" y="783.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::VideoStreamEncoder::OnFrame(webrtc::VideoFrame const&amp;)::$_9&gt;::~ClosureTask() (2 samples, 0.04%)</title><rect x="962.4" y="853" width="0.5" height="15.0" fill="rgb(217,60,17)" rx="2" ry="2" />
<text  x="965.41" y="863.5" ></text>
</g>
<g >
<title>opus_custom_encoder_ctl (1 samples, 0.02%)</title><rect x="844.2" y="741" width="0.2" height="15.0" fill="rgb(216,89,27)" rx="2" ry="2" />
<text  x="847.16" y="751.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="23.6" y="613" width="0.3" height="15.0" fill="rgb(253,53,16)" rx="2" ry="2" />
<text  x="26.61" y="623.5" ></text>
</g>
<g >
<title>webrtc::ModuleRtpRtcpImpl::OnSendingRtpFrame(unsigned int, long long, int, bool) (1 samples, 0.02%)</title><rect x="690.5" y="805" width="0.3" height="15.0" fill="rgb(248,81,49)" rx="2" ry="2" />
<text  x="693.54" y="815.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="354.1" y="757" width="0.3" height="15.0" fill="rgb(251,34,11)" rx="2" ry="2" />
<text  x="357.10" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkDeduplicator::OnWorkStarted() (5 samples, 0.10%)</title><rect x="359.3" y="901" width="1.2" height="15.0" fill="rgb(211,34,24)" rx="2" ry="2" />
<text  x="362.30" y="911.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (2 samples, 0.04%)</title><rect x="758.1" y="645" width="0.5" height="15.0" fill="rgb(235,173,15)" rx="2" ry="2" />
<text  x="761.08" y="655.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="336.0" y="853" width="0.3" height="15.0" fill="rgb(233,112,43)" rx="2" ry="2" />
<text  x="339.05" y="863.5" ></text>
</g>
<g >
<title>WebRtcSpl_MaxAbsValueW16C (1 samples, 0.02%)</title><rect x="1137.6" y="837" width="0.2" height="15.0" fill="rgb(219,215,29)" rx="2" ry="2" />
<text  x="1140.56" y="847.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="38.2" y="565" width="0.2" height="15.0" fill="rgb(226,61,20)" rx="2" ry="2" />
<text  x="41.20" y="575.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="710.1" y="933" width="0.2" height="15.0" fill="rgb(213,137,36)" rx="2" ry="2" />
<text  x="713.08" y="943.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::Release() const (1 samples, 0.02%)</title><rect x="273.7" y="773" width="0.3" height="15.0" fill="rgb(253,139,5)" rx="2" ry="2" />
<text  x="276.71" y="783.5" ></text>
</g>
<g >
<title>silk_NLSF_encode (2 samples, 0.04%)</title><rect x="689.3" y="661" width="0.5" height="15.0" fill="rgb(247,24,1)" rx="2" ry="2" />
<text  x="692.30" y="671.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="571.8" y="917" width="0.2" height="15.0" fill="rgb(220,186,54)" rx="2" ry="2" />
<text  x="574.80" y="927.5" ></text>
</g>
<g >
<title>base::Lock::~Lock() (1 samples, 0.02%)</title><rect x="176.7" y="645" width="0.3" height="15.0" fill="rgb(214,87,2)" rx="2" ry="2" />
<text  x="179.73" y="655.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (1 samples, 0.02%)</title><rect x="486.7" y="613" width="0.2" height="15.0" fill="rgb(250,20,7)" rx="2" ry="2" />
<text  x="489.70" y="623.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="528.5" y="693" width="0.3" height="15.0" fill="rgb(213,42,37)" rx="2" ry="2" />
<text  x="531.51" y="703.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (3 samples, 0.06%)</title><rect x="298.2" y="741" width="0.7" height="15.0" fill="rgb(236,34,46)" rx="2" ry="2" />
<text  x="301.20" y="751.5" ></text>
</g>
<g >
<title>WebRtcOpus_PacketHasFec (1 samples, 0.02%)</title><rect x="278.7" y="613" width="0.2" height="15.0" fill="rgb(224,102,32)" rx="2" ry="2" />
<text  x="281.65" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::ReloadEmptyImmediateWorkQueue() (4 samples, 0.08%)</title><rect x="210.1" y="821" width="1.0" height="15.0" fill="rgb(235,210,53)" rx="2" ry="2" />
<text  x="213.13" y="831.5" ></text>
</g>
<g >
<title>base::GetProgramCounter() (1 samples, 0.02%)</title><rect x="94.4" y="837" width="0.2" height="15.0" fill="rgb(241,188,20)" rx="2" ry="2" />
<text  x="97.36" y="847.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="145.1" y="725" width="0.2" height="15.0" fill="rgb(249,204,7)" rx="2" ry="2" />
<text  x="148.07" y="735.5" ></text>
</g>
<g >
<title>mach_msg (19 samples, 0.40%)</title><rect x="1014.4" y="917" width="4.7" height="15.0" fill="rgb(220,223,37)" rx="2" ry="2" />
<text  x="1017.36" y="927.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::SetTimeTicks(media::VideoFrameMetadata::Key, base::TimeTicks const&amp;) (1 samples, 0.02%)</title><rect x="682.9" y="661" width="0.2" height="15.0" fill="rgb(251,41,35)" rx="2" ry="2" />
<text  x="685.87" y="671.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1023.0" y="917" width="0.3" height="15.0" fill="rgb(211,163,9)" rx="2" ry="2" />
<text  x="1026.02" y="927.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (744 samples, 15.60%)</title><rect x="369.4" y="933" width="184.1" height="15.0" fill="rgb(237,80,26)" rx="2" ry="2" />
<text  x="372.44" y="943.5" >base::internal::TaskTra..</text>
</g>
<g >
<title>thread_start (47 samples, 0.99%)</title><rect x="1178.4" y="1061" width="11.6" height="15.0" fill="rgb(230,94,35)" rx="2" ry="2" />
<text  x="1181.37" y="1071.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="692.5" y="821" width="0.3" height="15.0" fill="rgb(247,135,46)" rx="2" ry="2" />
<text  x="695.52" y="831.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="267.8" y="453" width="0.2" height="15.0" fill="rgb(240,120,1)" rx="2" ry="2" />
<text  x="270.77" y="463.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (3 samples, 0.06%)</title><rect x="602.7" y="661" width="0.8" height="15.0" fill="rgb(222,210,28)" rx="2" ry="2" />
<text  x="605.72" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="652.7" y="581" width="0.2" height="15.0" fill="rgb(248,207,53)" rx="2" ry="2" />
<text  x="655.69" y="591.5" ></text>
</g>
<g >
<title>webrtc::TransportFeedbackPacketLossTracker::OnPacketAdded(unsigned short, long long) (1 samples, 0.02%)</title><rect x="1147.9" y="837" width="0.3" height="15.0" fill="rgb(232,209,6)" rx="2" ry="2" />
<text  x="1150.95" y="847.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::Parse(rtc::CopyOnWriteBuffer) (1 samples, 0.02%)</title><rect x="260.3" y="741" width="0.3" height="15.0" fill="rgb(207,100,52)" rx="2" ry="2" />
<text  x="263.35" y="751.5" ></text>
</g>
<g >
<title>webrtc::RTCPReceiver::IncomingPacket(unsigned char const*, unsigned long) (8 samples, 0.17%)</title><rect x="274.0" y="741" width="1.9" height="15.0" fill="rgb(232,200,9)" rx="2" ry="2" />
<text  x="276.95" y="751.5" ></text>
</g>
<g >
<title>base::internal::SequenceLocalStorageMap::ValueDestructorPair::~ValueDestructorPair() (1 samples, 0.02%)</title><rect x="1032.2" y="661" width="0.2" height="15.0" fill="rgb(212,197,43)" rx="2" ry="2" />
<text  x="1035.17" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::RealTimeDomain::DelayTillNextTask(base::sequence_manager::LazyNow*) (4 samples, 0.08%)</title><rect x="328.6" y="853" width="1.0" height="15.0" fill="rgb(242,115,38)" rx="2" ry="2" />
<text  x="331.62" y="863.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::DiscardReadyState(base::RepeatingCallback&lt;void (unsigned int)&gt; const&amp;, unsigned int, mojo::HandleSignalsState const&amp;) (119 samples, 2.49%)</title><rect x="1030.4" y="853" width="29.5" height="15.0" fill="rgb(238,4,5)" rx="2" ry="2" />
<text  x="1033.44" y="863.5" >mo..</text>
</g>
<g >
<title>MojoCreateMessage (1 samples, 0.02%)</title><rect x="171.5" y="773" width="0.3" height="15.0" fill="rgb(231,7,7)" rx="2" ry="2" />
<text  x="174.54" y="783.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (6 samples, 0.13%)</title><rect x="348.9" y="805" width="1.5" height="15.0" fill="rgb(229,176,33)" rx="2" ry="2" />
<text  x="351.91" y="815.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="1020.3" y="933" width="0.2" height="15.0" fill="rgb(254,11,19)" rx="2" ry="2" />
<text  x="1023.30" y="943.5" ></text>
</g>
<g >
<title>IPC::internal::MessagePipeReader::Receive(IPC::MessageView) (4 samples, 0.08%)</title><rect x="134.2" y="581" width="1.0" height="15.0" fill="rgb(244,44,5)" rx="2" ry="2" />
<text  x="137.18" y="591.5" ></text>
</g>
<g >
<title>non-virtual thunk to blink::Document::GetTaskRunner(blink::TaskType) (1 samples, 0.02%)</title><rect x="18.4" y="597" width="0.3" height="15.0" fill="rgb(242,76,23)" rx="2" ry="2" />
<text  x="21.41" y="607.5" ></text>
</g>
<g >
<title>cc::Scheduler::OnBeginFrameDerivedImpl(viz::BeginFrameArgs const&amp;) (4 samples, 0.08%)</title><rect x="1071.8" y="629" width="0.9" height="15.0" fill="rgb(248,171,6)" rx="2" ry="2" />
<text  x="1074.75" y="639.5" ></text>
</g>
<g >
<title>viz::SingleReleaseCallback::Run(gpu::SyncToken const&amp;, bool) (6 samples, 0.13%)</title><rect x="1052.2" y="613" width="1.5" height="15.0" fill="rgb(220,218,24)" rx="2" ry="2" />
<text  x="1055.21" y="623.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="15.9" y="677" width="0.3" height="15.0" fill="rgb(209,193,1)" rx="2" ry="2" />
<text  x="18.94" y="687.5" ></text>
</g>
<g >
<title>blink::TimerBase::RunInternal() (17 samples, 0.36%)</title><rect x="16.2" y="661" width="4.2" height="15.0" fill="rgb(246,197,39)" rx="2" ry="2" />
<text  x="19.18" y="671.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="226.7" y="421" width="0.3" height="15.0" fill="rgb(227,97,24)" rx="2" ry="2" />
<text  x="229.70" y="431.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::AudioCodingModuleImpl::Add10MsData(webrtc::AudioFrame const&amp;) (44 samples, 0.92%)</title><rect x="993.8" y="837" width="10.9" height="15.0" fill="rgb(249,17,37)" rx="2" ry="2" />
<text  x="996.83" y="847.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::WillBeginImplFrame(viz::BeginFrameArgs const&amp;) (1 samples, 0.02%)</title><rect x="1072.2" y="565" width="0.3" height="15.0" fill="rgb(242,82,21)" rx="2" ry="2" />
<text  x="1075.25" y="575.5" ></text>
</g>
<g >
<title>free_tiny (2 samples, 0.04%)</title><rect x="855.8" y="885" width="0.5" height="15.0" fill="rgb(223,99,12)" rx="2" ry="2" />
<text  x="858.79" y="895.5" ></text>
</g>
<g >
<title>base::SyncSocket::Receive(void*, unsigned long) (11 samples, 0.23%)</title><rect x="1104.9" y="981" width="2.7" height="15.0" fill="rgb(225,217,6)" rx="2" ry="2" />
<text  x="1107.90" y="991.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="961.7" y="645" width="0.2" height="15.0" fill="rgb(219,6,30)" rx="2" ry="2" />
<text  x="964.67" y="655.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="209.9" y="821" width="0.2" height="15.0" fill="rgb(212,46,14)" rx="2" ry="2" />
<text  x="212.88" y="831.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (2 samples, 0.04%)</title><rect x="331.6" y="853" width="0.5" height="15.0" fill="rgb(238,150,8)" rx="2" ry="2" />
<text  x="334.59" y="863.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="301.7" y="757" width="0.2" height="15.0" fill="rgb(253,121,11)" rx="2" ry="2" />
<text  x="304.66" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="293.0" y="709" width="0.2" height="15.0" fill="rgb(213,66,21)" rx="2" ry="2" />
<text  x="296.00" y="719.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="859.5" y="917" width="0.2" height="15.0" fill="rgb(217,43,4)" rx="2" ry="2" />
<text  x="862.50" y="927.5" ></text>
</g>
<g >
<title>webrtc::DelayManager::Update(unsigned short, unsigned int, int) (2 samples, 0.04%)</title><rect x="279.1" y="629" width="0.5" height="15.0" fill="rgb(232,184,28)" rx="2" ry="2" />
<text  x="282.15" y="639.5" ></text>
</g>
<g >
<title>blink::EventQueue::DispatchEvent(blink::Event*) (10 samples, 0.21%)</title><rect x="20.4" y="677" width="2.5" height="15.0" fill="rgb(231,140,31)" rx="2" ry="2" />
<text  x="23.39" y="687.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="312.1" y="613" width="0.2" height="15.0" fill="rgb(224,13,45)" rx="2" ry="2" />
<text  x="315.05" y="623.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_5::__invoke(_malloc_zone_t*, void*, unsigned long) (1 samples, 0.02%)</title><rect x="961.2" y="693" width="0.2" height="15.0" fill="rgb(224,104,32)" rx="2" ry="2" />
<text  x="964.17" y="703.5" ></text>
</g>
<g >
<title>_pthread_start (36 samples, 0.75%)</title><rect x="1065.3" y="1045" width="8.9" height="15.0" fill="rgb(242,192,49)" rx="2" ry="2" />
<text  x="1068.32" y="1055.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="569.8" y="933" width="0.3" height="15.0" fill="rgb(246,53,1)" rx="2" ry="2" />
<text  x="572.82" y="943.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1160.8" y="725" width="0.3" height="15.0" fill="rgb(253,119,19)" rx="2" ry="2" />
<text  x="1163.81" y="735.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (4 samples, 0.08%)</title><rect x="891.4" y="661" width="1.0" height="15.0" fill="rgb(228,145,23)" rx="2" ry="2" />
<text  x="894.41" y="671.5" ></text>
</g>
<g >
<title>aes_ctr_cipher (2 samples, 0.04%)</title><rect x="237.8" y="693" width="0.5" height="15.0" fill="rgb(254,82,30)" rx="2" ry="2" />
<text  x="240.84" y="703.5" ></text>
</g>
<g >
<title>vpx_sad16x16_sse2.loop (1 samples, 0.02%)</title><rect x="908.0" y="661" width="0.2" height="15.0" fill="rgb(215,65,14)" rx="2" ry="2" />
<text  x="910.99" y="671.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::PortStatusChanged(mojo::core::ports::PortRef const&amp;) (28 samples, 0.59%)</title><rect x="108.2" y="789" width="6.9" height="15.0" fill="rgb(210,47,53)" rx="2" ry="2" />
<text  x="111.21" y="799.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1160.8" y="773" width="0.3" height="15.0" fill="rgb(228,204,32)" rx="2" ry="2" />
<text  x="1163.81" y="783.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (3 samples, 0.06%)</title><rect x="553.7" y="933" width="0.8" height="15.0" fill="rgb(251,121,9)" rx="2" ry="2" />
<text  x="556.74" y="943.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::ActivateSyncTree() (3 samples, 0.06%)</title><rect x="1069.3" y="757" width="0.7" height="15.0" fill="rgb(218,19,23)" rx="2" ry="2" />
<text  x="1072.28" y="767.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="104.5" y="773" width="0.2" height="15.0" fill="rgb(253,99,24)" rx="2" ry="2" />
<text  x="107.50" y="783.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="109.0" y="725" width="0.2" height="15.0" fill="rgb(233,150,16)" rx="2" ry="2" />
<text  x="111.95" y="735.5" ></text>
</g>
<g >
<title>_pthread_start (68 samples, 1.43%)</title><rect x="197.0" y="1045" width="16.8" height="15.0" fill="rgb(231,148,36)" rx="2" ry="2" />
<text  x="200.02" y="1055.5" ></text>
</g>
<g >
<title>non-virtual thunk to blink::PeerConnectionRemoteAudioSource::OnData(void const*, int, int, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="1131.6" y="837" width="0.3" height="15.0" fill="rgb(243,223,10)" rx="2" ry="2" />
<text  x="1134.62" y="847.5" ></text>
</g>
<g >
<title>webrtc::acm2::AcmReceiver::GetAudio(int, webrtc::AudioFrame*, bool*) (66 samples, 1.38%)</title><rect x="1113.3" y="837" width="16.3" height="15.0" fill="rgb(213,182,25)" rx="2" ry="2" />
<text  x="1116.31" y="847.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16x16_ssse3 (1 samples, 0.02%)</title><rect x="607.4" y="661" width="0.3" height="15.0" fill="rgb(246,133,31)" rx="2" ry="2" />
<text  x="610.42" y="671.5" ></text>
</g>
<g >
<title>rtc::AdaptedVideoTrackSource::OnFrame(webrtc::VideoFrame const&amp;) (4 samples, 0.08%)</title><rect x="297.9" y="805" width="1.0" height="15.0" fill="rgb(221,36,40)" rx="2" ry="2" />
<text  x="300.95" y="815.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="651.7" y="661" width="0.2" height="15.0" fill="rgb(254,41,42)" rx="2" ry="2" />
<text  x="654.70" y="671.5" ></text>
</g>
<g >
<title>vp8_loop_filter_frame (6 samples, 0.13%)</title><rect x="941.9" y="725" width="1.5" height="15.0" fill="rgb(229,156,1)" rx="2" ry="2" />
<text  x="944.88" y="735.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="876.8" y="901" width="0.3" height="15.0" fill="rgb(230,222,31)" rx="2" ry="2" />
<text  x="879.82" y="911.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="577.7" y="853" width="0.3" height="15.0" fill="rgb(254,26,27)" rx="2" ry="2" />
<text  x="580.74" y="863.5" ></text>
</g>
<g >
<title>vp8_loop_filter_horizontal_edge_uv_sse2 (3 samples, 0.06%)</title><rect x="633.4" y="709" width="0.7" height="15.0" fill="rgb(222,154,5)" rx="2" ry="2" />
<text  x="636.40" y="719.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskImpl&lt;webrtc::video_coding::FrameBuffer::StartWaitForNextFrameOnQueue()::$_1&gt;::RunClosure() (1 samples, 0.02%)</title><rect x="1006.2" y="837" width="0.2" height="15.0" fill="rgb(245,97,34)" rx="2" ry="2" />
<text  x="1009.20" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::UpdateCrossThreadQueueStateLocked() (1 samples, 0.02%)</title><rect x="83.0" y="757" width="0.2" height="15.0" fill="rgb(251,167,6)" rx="2" ry="2" />
<text  x="85.98" y="767.5" ></text>
</g>
<g >
<title>webrtc::internal::Call::DeliverPacket(webrtc::MediaType, rtc::CopyOnWriteBuffer, long long) (28 samples, 0.59%)</title><rect x="276.2" y="773" width="6.9" height="15.0" fill="rgb(252,78,1)" rx="2" ry="2" />
<text  x="279.18" y="783.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunSkipOnShutdown(base::internal::Task*) (127 samples, 2.66%)</title><rect x="1028.5" y="917" width="31.4" height="15.0" fill="rgb(208,75,49)" rx="2" ry="2" />
<text  x="1031.46" y="927.5" >ba..</text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::DidProcessTask(base::internal::RegisteredTaskSource) (4 samples, 0.08%)</title><rect x="1006.4" y="965" width="1.0" height="15.0" fill="rgb(248,129,43)" rx="2" ry="2" />
<text  x="1009.44" y="975.5" ></text>
</g>
<g >
<title>mach_msg_trap (3 samples, 0.06%)</title><rect x="1065.8" y="885" width="0.8" height="15.0" fill="rgb(238,199,2)" rx="2" ry="2" />
<text  x="1068.82" y="895.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="19.9" y="213" width="0.2" height="15.0" fill="rgb(248,99,21)" rx="2" ry="2" />
<text  x="22.90" y="223.5" ></text>
</g>
<g >
<title>-[NSAutoreleasePool drain] (1 samples, 0.02%)</title><rect x="567.3" y="965" width="0.3" height="15.0" fill="rgb(233,102,54)" rx="2" ry="2" />
<text  x="570.35" y="975.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::MachMessageSendLocked(mach_msg_header_t*) (5 samples, 0.10%)</title><rect x="169.8" y="533" width="1.2" height="15.0" fill="rgb(205,59,12)" rx="2" ry="2" />
<text  x="172.81" y="543.5" ></text>
</g>
<g >
<title>webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;) (4 samples, 0.08%)</title><rect x="283.4" y="757" width="0.9" height="15.0" fill="rgb(235,128,27)" rx="2" ry="2" />
<text  x="286.35" y="767.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (blink::TimerBase::*)(), base::WeakPtr&lt;blink::TimerBase&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (17 samples, 0.36%)</title><rect x="16.2" y="677" width="4.2" height="15.0" fill="rgb(230,204,41)" rx="2" ry="2" />
<text  x="19.18" y="687.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)(int, int, int, media::VideoFrame const*, unsigned char*, int, unsigned char*, int, base::OnceCallback&lt;void ()&gt;), int, int, int, base::internal::UnretainedWrapper&lt;media::VideoFrame&gt;, unsigned char*, int, unsigned char*, int, base::RepeatingCallback&lt;void ()&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (6 samples, 0.13%)</title><rect x="66.4" y="949" width="1.5" height="15.0" fill="rgb(236,0,47)" rx="2" ry="2" />
<text  x="69.40" y="959.5" ></text>
</g>
<g >
<title>cc::ProxyImpl::ScheduledActionActivateSyncTree() (3 samples, 0.06%)</title><rect x="1069.3" y="773" width="0.7" height="15.0" fill="rgb(220,9,20)" rx="2" ry="2" />
<text  x="1072.28" y="783.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1032.9" y="645" width="0.3" height="15.0" fill="rgb(234,103,50)" rx="2" ry="2" />
<text  x="1035.91" y="655.5" ></text>
</g>
<g >
<title>set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="144.8" y="725" width="0.3" height="15.0" fill="rgb(230,143,4)" rx="2" ry="2" />
<text  x="147.82" y="735.5" ></text>
</g>
<g >
<title>base::internal::ScopedBlockingCallWithBaseSyncPrimitives::~ScopedBlockingCallWithBaseSyncPrimitives() (1 samples, 0.02%)</title><rect x="1183.3" y="917" width="0.3" height="15.0" fill="rgb(237,165,5)" rx="2" ry="2" />
<text  x="1186.32" y="927.5" ></text>
</g>
<g >
<title>blink::EventPath::Initialize() (1 samples, 0.02%)</title><rect x="22.6" y="581" width="0.3" height="15.0" fill="rgb(225,87,39)" rx="2" ry="2" />
<text  x="25.62" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::ReloadEmptyImmediateWorkQueue() (5 samples, 0.10%)</title><rect x="340.7" y="821" width="1.3" height="15.0" fill="rgb(236,34,20)" rx="2" ry="2" />
<text  x="343.75" y="831.5" ></text>
</g>
<g >
<title>blink::MediaStreamVideoTrack::FrameDeliverer::DeliverFrameOnIO(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks) (4 samples, 0.08%)</title><rect x="176.0" y="757" width="1.0" height="15.0" fill="rgb(237,134,13)" rx="2" ry="2" />
<text  x="178.99" y="767.5" ></text>
</g>
<g >
<title>cc::LayerTreeImpl::UpdateDrawProperties(bool) (1 samples, 0.02%)</title><rect x="1071.3" y="789" width="0.2" height="15.0" fill="rgb(236,190,0)" rx="2" ry="2" />
<text  x="1074.26" y="799.5" ></text>
</g>
<g >
<title>webrtc::Histogram::NumBuckets() const (1 samples, 0.02%)</title><rect x="279.4" y="613" width="0.2" height="15.0" fill="rgb(237,67,17)" rx="2" ry="2" />
<text  x="282.40" y="623.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWait(base::TimeDelta const&amp;) (27 samples, 0.57%)</title><rect x="216.1" y="917" width="6.6" height="15.0" fill="rgb(216,23,9)" rx="2" ry="2" />
<text  x="219.07" y="927.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="1068.3" y="629" width="0.2" height="15.0" fill="rgb(239,84,31)" rx="2" ry="2" />
<text  x="1071.29" y="639.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::OnCopiesDone(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*) (1 samples, 0.02%)</title><rect x="61.2" y="869" width="0.3" height="15.0" fill="rgb(237,63,47)" rx="2" ry="2" />
<text  x="64.21" y="879.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 0.04%)</title><rect x="26.6" y="453" width="0.5" height="15.0" fill="rgb(236,68,2)" rx="2" ry="2" />
<text  x="29.57" y="463.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="331.8" y="805" width="0.3" height="15.0" fill="rgb(214,2,21)" rx="2" ry="2" />
<text  x="334.84" y="815.5" ></text>
</g>
<g >
<title>v8::Number::New(v8::Isolate*, double) (1 samples, 0.02%)</title><rect x="17.4" y="373" width="0.3" height="15.0" fill="rgb(242,95,20)" rx="2" ry="2" />
<text  x="20.42" y="383.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="714.3" y="773" width="0.2" height="15.0" fill="rgb(240,133,5)" rx="2" ry="2" />
<text  x="717.29" y="783.5" ></text>
</g>
<g >
<title>webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;) (2 samples, 0.04%)</title><rect x="1182.3" y="869" width="0.5" height="15.0" fill="rgb(210,20,9)" rx="2" ry="2" />
<text  x="1185.33" y="879.5" ></text>
</g>
<g >
<title>vp8dx_get_raw_frame (21 samples, 0.44%)</title><rect x="963.2" y="757" width="5.1" height="15.0" fill="rgb(206,56,13)" rx="2" ry="2" />
<text  x="966.15" y="767.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::~Iter() (2 samples, 0.04%)</title><rect x="41.9" y="645" width="0.5" height="15.0" fill="rgb(207,36,15)" rx="2" ry="2" />
<text  x="44.91" y="655.5" ></text>
</g>
<g >
<title>WTF::ThreadSpecific&lt;blink::ThreadState*&gt;::operator blink::ThreadState**() (1 samples, 0.02%)</title><rect x="25.3" y="325" width="0.3" height="15.0" fill="rgb(219,11,43)" rx="2" ry="2" />
<text  x="28.34" y="335.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="225.7" y="501" width="0.3" height="15.0" fill="rgb(248,60,35)" rx="2" ry="2" />
<text  x="228.71" y="511.5" ></text>
</g>
<g >
<title>webrtc::RtpDemuxer::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (35 samples, 0.73%)</title><rect x="261.1" y="725" width="8.6" height="15.0" fill="rgb(212,27,2)" rx="2" ry="2" />
<text  x="264.09" y="735.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Run(void*) (21 samples, 0.44%)</title><rect x="1163.5" y="997" width="5.2" height="15.0" fill="rgb(209,229,35)" rx="2" ry="2" />
<text  x="1166.53" y="1007.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="317.5" y="517" width="0.2" height="15.0" fill="rgb(241,182,23)" rx="2" ry="2" />
<text  x="320.49" y="527.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="305.9" y="517" width="0.2" height="15.0" fill="rgb(232,138,4)" rx="2" ry="2" />
<text  x="308.87" y="527.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::internal::VideoReceiveStream::StartNextDecode()::DecodeTask&gt;::Run() (100 samples, 2.10%)</title><rect x="817.0" y="853" width="24.7" height="15.0" fill="rgb(251,162,34)" rx="2" ry="2" />
<text  x="819.95" y="863.5" >w..</text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="42.4" y="629" width="0.3" height="15.0" fill="rgb(234,161,40)" rx="2" ry="2" />
<text  x="45.41" y="639.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (7 samples, 0.15%)</title><rect x="79.0" y="741" width="1.8" height="15.0" fill="rgb(211,216,48)" rx="2" ry="2" />
<text  x="82.02" y="751.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="816.0" y="597" width="0.2" height="15.0" fill="rgb(235,8,26)" rx="2" ry="2" />
<text  x="818.96" y="607.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="193.6" y="869" width="0.2" height="15.0" fill="rgb(226,71,20)" rx="2" ry="2" />
<text  x="196.56" y="879.5" ></text>
</g>
<g >
<title>mojo::core::Core::DestroyMessage(unsigned long) (4 samples, 0.08%)</title><rect x="1054.4" y="709" width="1.0" height="15.0" fill="rgb(244,148,12)" rx="2" ry="2" />
<text  x="1057.44" y="719.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="206.2" y="709" width="0.2" height="15.0" fill="rgb(220,109,17)" rx="2" ry="2" />
<text  x="209.17" y="719.5" ></text>
</g>
<g >
<title>vp8_get_compressed_data (413 samples, 8.66%)</title><rect x="382.3" y="757" width="102.2" height="15.0" fill="rgb(225,69,21)" rx="2" ry="2" />
<text  x="385.31" y="767.5" >vp8_get_comp..</text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="854.8" y="757" width="0.2" height="15.0" fill="rgb(242,198,49)" rx="2" ry="2" />
<text  x="857.80" y="767.5" ></text>
</g>
<g >
<title>cc::PrioritizedTile::PrioritizedTile() (1 samples, 0.02%)</title><rect x="1067.5" y="645" width="0.3" height="15.0" fill="rgb(229,5,14)" rx="2" ry="2" />
<text  x="1070.55" y="655.5" ></text>
</g>
<g >
<title>base::SequenceToken::IsValid() const (1 samples, 0.02%)</title><rect x="208.6" y="837" width="0.3" height="15.0" fill="rgb(220,154,19)" rx="2" ry="2" />
<text  x="211.65" y="847.5" ></text>
</g>
<g >
<title>gpu::GpuChannelHost::Send(IPC::Message*) (12 samples, 0.25%)</title><rect x="1034.9" y="533" width="3.0" height="15.0" fill="rgb(252,78,35)" rx="2" ry="2" />
<text  x="1037.89" y="543.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="717.8" y="869" width="0.4" height="15.0" fill="rgb(226,121,51)" rx="2" ry="2" />
<text  x="720.75" y="879.5" ></text>
</g>
<g >
<title>base::DictionaryValue::GetBooleanWithoutPathExpansion(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, bool*) const (1 samples, 0.02%)</title><rect x="1039.1" y="533" width="0.2" height="15.0" fill="rgb(253,212,40)" rx="2" ry="2" />
<text  x="1042.10" y="543.5" ></text>
</g>
<g >
<title>cricket::BaseChannel::OnPacketReceived(bool, rtc::CopyOnWriteBuffer const&amp;, long long) (4 samples, 0.08%)</title><rect x="226.0" y="533" width="1.0" height="15.0" fill="rgb(215,195,53)" rx="2" ry="2" />
<text  x="228.96" y="543.5" ></text>
</g>
<g >
<title>write_mb_features (2 samples, 0.04%)</title><rect x="479.3" y="725" width="0.5" height="15.0" fill="rgb(206,166,34)" rx="2" ry="2" />
<text  x="482.28" y="735.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::FreeDefiniteSizeImpl(base::allocator::AllocatorDispatch const*, void*, unsigned long, void*) (2 samples, 0.04%)</title><rect x="374.1" y="885" width="0.5" height="15.0" fill="rgb(225,188,9)" rx="2" ry="2" />
<text  x="377.14" y="895.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::StartCopy() (8 samples, 0.17%)</title><rect x="202.0" y="821" width="1.9" height="15.0" fill="rgb(235,145,24)" rx="2" ry="2" />
<text  x="204.97" y="831.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::Paint(blink::GraphicsContext::DisabledMode) (2 samples, 0.04%)</title><rect x="26.6" y="373" width="0.5" height="15.0" fill="rgb(210,216,14)" rx="2" ry="2" />
<text  x="29.57" y="383.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="1121.2" y="613" width="0.3" height="15.0" fill="rgb(210,28,37)" rx="2" ry="2" />
<text  x="1124.23" y="623.5" ></text>
</g>
<g >
<title>vp8_loop_filter_vertical_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="634.6" y="709" width="0.3" height="15.0" fill="rgb(210,34,26)" rx="2" ry="2" />
<text  x="637.63" y="719.5" ></text>
</g>
<g >
<title>blink::LayoutView::OverflowClipRect(blink::PhysicalOffset const&amp;, blink::OverlayScrollbarClipBehavior) const (1 samples, 0.02%)</title><rect x="28.6" y="421" width="0.2" height="15.0" fill="rgb(222,142,28)" rx="2" ry="2" />
<text  x="31.55" y="431.5" ></text>
</g>
<g >
<title>std::__Cr::basic_ostream&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;&amp; std::__Cr::__put_character_sequence&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;(std::__Cr::basic_ostream&lt;char, std::__Cr::char_traits&lt;char&gt; &gt;&amp;, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="54.0" y="917" width="0.3" height="15.0" fill="rgb(222,98,7)" rx="2" ry="2" />
<text  x="57.03" y="927.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::Iter(base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt; const*) (4 samples, 0.08%)</title><rect x="32.3" y="677" width="1.0" height="15.0" fill="rgb(205,21,34)" rx="2" ry="2" />
<text  x="35.26" y="687.5" ></text>
</g>
<g >
<title>rtc::Event::Wait(int) (14 samples, 0.29%)</title><rect x="1141.8" y="965" width="3.4" height="15.0" fill="rgb(206,47,33)" rx="2" ry="2" />
<text  x="1144.76" y="975.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Process() (21 samples, 0.44%)</title><rect x="1163.5" y="981" width="5.2" height="15.0" fill="rgb(229,174,42)" rx="2" ry="2" />
<text  x="1166.53" y="991.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (2 samples, 0.04%)</title><rect x="92.9" y="821" width="0.5" height="15.0" fill="rgb(219,43,11)" rx="2" ry="2" />
<text  x="95.87" y="831.5" ></text>
</g>
<g >
<title>MojoAppendMessageData (3 samples, 0.06%)</title><rect x="253.7" y="613" width="0.7" height="15.0" fill="rgb(246,66,18)" rx="2" ry="2" />
<text  x="256.67" y="623.5" ></text>
</g>
<g >
<title>webrtc::PercentileFilter&lt;long long&gt;::Insert(long long const&amp;) (1 samples, 0.02%)</title><rect x="532.7" y="709" width="0.3" height="15.0" fill="rgb(223,41,32)" rx="2" ry="2" />
<text  x="535.71" y="719.5" ></text>
</g>
<g >
<title>webrtc::SendTimeHistory::AddNewPacket(webrtc::PacketFeedback) (1 samples, 0.02%)</title><rect x="1148.2" y="853" width="0.2" height="15.0" fill="rgb(242,229,44)" rx="2" ry="2" />
<text  x="1151.19" y="863.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.02%)</title><rect x="39.9" y="565" width="0.3" height="15.0" fill="rgb(223,116,21)" rx="2" ry="2" />
<text  x="42.93" y="575.5" ></text>
</g>
<g >
<title>blink::LocalFrameUkmAggregator::RecordSample(unsigned long, base::TimeTicks, base::TimeTicks) (1 samples, 0.02%)</title><rect x="23.9" y="581" width="0.2" height="15.0" fill="rgb(244,152,32)" rx="2" ry="2" />
<text  x="26.85" y="591.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (2 samples, 0.04%)</title><rect x="1023.5" y="917" width="0.5" height="15.0" fill="rgb(241,38,45)" rx="2" ry="2" />
<text  x="1026.51" y="927.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (5 samples, 0.10%)</title><rect x="27.8" y="485" width="1.2" height="15.0" fill="rgb(206,0,19)" rx="2" ry="2" />
<text  x="30.81" y="495.5" ></text>
</g>
<g >
<title>webrtc::SendTimeHistory::GetFeedback(webrtc::PacketFeedback*, bool) (1 samples, 0.02%)</title><rect x="274.9" y="661" width="0.3" height="15.0" fill="rgb(232,158,45)" rx="2" ry="2" />
<text  x="277.94" y="671.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="31.3" y="597" width="0.2" height="15.0" fill="rgb(219,106,43)" rx="2" ry="2" />
<text  x="34.27" y="607.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (73 samples, 1.53%)</title><rect x="302.4" y="773" width="18.1" height="15.0" fill="rgb(241,48,31)" rx="2" ry="2" />
<text  x="305.40" y="783.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="695.5" y="933" width="0.2" height="15.0" fill="rgb(205,160,0)" rx="2" ry="2" />
<text  x="698.49" y="943.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_uv_sse2 (6 samples, 0.13%)</title><rect x="461.2" y="709" width="1.5" height="15.0" fill="rgb(222,172,23)" rx="2" ry="2" />
<text  x="464.22" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="652.7" y="613" width="0.2" height="15.0" fill="rgb(233,195,18)" rx="2" ry="2" />
<text  x="655.69" y="623.5" ></text>
</g>
<g >
<title>mojo::core::HandleTable::GetDispatcher(unsigned int) const (1 samples, 0.02%)</title><rect x="244.8" y="565" width="0.2" height="15.0" fill="rgb(226,3,0)" rx="2" ry="2" />
<text  x="247.76" y="575.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::MaybeAdjustTaskDelay(base::sequence_manager::internal::PostedTask*, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="127.3" y="693" width="0.2" height="15.0" fill="rgb(207,167,52)" rx="2" ry="2" />
<text  x="130.26" y="703.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="879.0" y="773" width="0.3" height="15.0" fill="rgb(242,202,26)" rx="2" ry="2" />
<text  x="882.04" y="783.5" ></text>
</g>
<g >
<title>v8_inspector::V8Console::Log(v8::debug::ConsoleCallArguments const&amp;, v8::debug::ConsoleContext const&amp;) (1 samples, 0.02%)</title><rect x="19.9" y="357" width="0.2" height="15.0" fill="rgb(215,144,32)" rx="2" ry="2" />
<text  x="22.90" y="367.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (2 samples, 0.04%)</title><rect x="578.2" y="901" width="0.5" height="15.0" fill="rgb(211,111,26)" rx="2" ry="2" />
<text  x="581.23" y="911.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkDeduplicator::OnWorkStarted() (1 samples, 0.02%)</title><rect x="214.1" y="901" width="0.2" height="15.0" fill="rgb(241,216,14)" rx="2" ry="2" />
<text  x="217.09" y="911.5" ></text>
</g>
<g >
<title>blink::FrameConsole::ReportMessageToClient(blink::mojom::ConsoleMessageSource, blink::mojom::ConsoleMessageLevel, WTF::String const&amp;, blink::SourceLocation*) (1 samples, 0.02%)</title><rect x="17.7" y="309" width="0.2" height="15.0" fill="rgb(236,66,37)" rx="2" ry="2" />
<text  x="20.67" y="319.5" ></text>
</g>
<g >
<title>copy_and_extend_plane (7 samples, 0.15%)</title><rect x="484.5" y="709" width="1.7" height="15.0" fill="rgb(219,25,18)" rx="2" ry="2" />
<text  x="487.47" y="719.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1004.2" y="693" width="0.3" height="15.0" fill="rgb(206,148,29)" rx="2" ry="2" />
<text  x="1007.22" y="703.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunWorker() (1 samples, 0.02%)</title><rect x="1020.3" y="981" width="0.2" height="15.0" fill="rgb(227,87,53)" rx="2" ry="2" />
<text  x="1023.30" y="991.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="791.2" y="709" width="0.3" height="15.0" fill="rgb(243,129,38)" rx="2" ry="2" />
<text  x="794.22" y="719.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="632.7" y="677" width="0.2" height="15.0" fill="rgb(231,128,7)" rx="2" ry="2" />
<text  x="635.65" y="687.5" ></text>
</g>
<g >
<title>SHA1_Final (2 samples, 0.04%)</title><rect x="225.5" y="517" width="0.5" height="15.0" fill="rgb(232,47,13)" rx="2" ry="2" />
<text  x="228.47" y="527.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="1035.6" y="469" width="0.5" height="15.0" fill="rgb(236,168,36)" rx="2" ry="2" />
<text  x="1038.64" y="479.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::StartNextDecode() (1 samples, 0.02%)</title><rect x="533.9" y="837" width="0.3" height="15.0" fill="rgb(245,184,26)" rx="2" ry="2" />
<text  x="536.95" y="847.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (10 samples, 0.21%)</title><rect x="1156.4" y="837" width="2.4" height="15.0" fill="rgb(249,111,45)" rx="2" ry="2" />
<text  x="1159.36" y="847.5" ></text>
</g>
<g >
<title>base::Pickle::Resize(unsigned long) (1 samples, 0.02%)</title><rect x="1033.9" y="469" width="0.3" height="15.0" fill="rgb(217,131,30)" rx="2" ry="2" />
<text  x="1036.90" y="479.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (6 samples, 0.13%)</title><rect x="166.3" y="661" width="1.5" height="15.0" fill="rgb(234,80,49)" rx="2" ry="2" />
<text  x="169.34" y="671.5" ></text>
</g>
<g >
<title>silk_NSQ_del_dec_c (15 samples, 0.31%)</title><rect x="685.3" y="693" width="3.8" height="15.0" fill="rgb(254,190,5)" rx="2" ry="2" />
<text  x="688.35" y="703.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1110.8" y="853" width="0.3" height="15.0" fill="rgb(217,5,32)" rx="2" ry="2" />
<text  x="1113.84" y="863.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::SendMessageLocked(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (3 samples, 0.06%)</title><rect x="166.6" y="549" width="0.7" height="15.0" fill="rgb(209,49,12)" rx="2" ry="2" />
<text  x="169.59" y="559.5" ></text>
</g>
<g >
<title>gpu::SharedImageInterfaceProxy::UpdateSharedImage(gpu::SyncToken const&amp;, std::__Cr::unique_ptr&lt;gfx::GpuFence, std::__Cr::default_delete&lt;gfx::GpuFence&gt; &gt;, gpu::Mailbox const&amp;) (5 samples, 0.10%)</title><rect x="205.2" y="821" width="1.2" height="15.0" fill="rgb(240,107,19)" rx="2" ry="2" />
<text  x="208.18" y="831.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelReceive::UpdatePlayoutTimestamp(bool) (4 samples, 0.08%)</title><rect x="280.6" y="693" width="1.0" height="15.0" fill="rgb(232,197,52)" rx="2" ry="2" />
<text  x="283.63" y="703.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::ScheduleTasksWithLockAcquired(cc::NamespaceToken, cc::TaskGraph*) (3 samples, 0.06%)</title><rect x="202.7" y="773" width="0.8" height="15.0" fill="rgb(219,180,31)" rx="2" ry="2" />
<text  x="205.71" y="783.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (4 samples, 0.08%)</title><rect x="345.4" y="789" width="1.0" height="15.0" fill="rgb(249,138,24)" rx="2" ry="2" />
<text  x="348.45" y="799.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="317.7" y="517" width="0.3" height="15.0" fill="rgb(223,61,52)" rx="2" ry="2" />
<text  x="320.74" y="527.5" ></text>
</g>
<g >
<title>base::MessagePumpDefault::Run(base::MessagePump::Delegate*) (594 samples, 12.45%)</title><rect x="214.3" y="933" width="147.0" height="15.0" fill="rgb(238,120,1)" rx="2" ry="2" />
<text  x="217.34" y="943.5" >base::MessagePumpD..</text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="379.3" y="853" width="0.3" height="15.0" fill="rgb(229,178,50)" rx="2" ry="2" />
<text  x="382.34" y="863.5" ></text>
</g>
<g >
<title>content::RenderFrameImpl::DidAddMessageToConsole(blink::WebConsoleMessage const&amp;, blink::WebString const&amp;, unsigned int, blink::WebString const&amp;) (1 samples, 0.02%)</title><rect x="19.9" y="245" width="0.2" height="15.0" fill="rgb(241,183,9)" rx="2" ry="2" />
<text  x="22.90" y="255.5" ></text>
</g>
<g >
<title>network::mojom::P2PSocketClientStubDispatch::Accept(network::mojom::P2PSocketClient*, mojo::Message*) (14 samples, 0.29%)</title><rect x="225.0" y="725" width="3.4" height="15.0" fill="rgb(217,176,50)" rx="2" ry="2" />
<text  x="227.97" y="735.5" ></text>
</g>
<g >
<title>blink::ScheduledAction::Execute(blink::LocalFrame*) (6 samples, 0.13%)</title><rect x="16.9" y="613" width="1.5" height="15.0" fill="rgb(222,211,51)" rx="2" ry="2" />
<text  x="19.93" y="623.5" ></text>
</g>
<g >
<title>EVP_EncryptUpdate (2 samples, 0.04%)</title><rect x="237.8" y="709" width="0.5" height="15.0" fill="rgb(205,26,4)" rx="2" ry="2" />
<text  x="240.84" y="719.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (17 samples, 0.36%)</title><rect x="286.6" y="693" width="4.2" height="15.0" fill="rgb(231,149,3)" rx="2" ry="2" />
<text  x="289.57" y="703.5" ></text>
</g>
<g >
<title>mach_msg_trap (11 samples, 0.23%)</title><rect x="246.5" y="373" width="2.7" height="15.0" fill="rgb(253,86,52)" rx="2" ry="2" />
<text  x="249.49" y="383.5" ></text>
</g>
<g >
<title>vpx_sad16x16_sse2 (1 samples, 0.02%)</title><rect x="774.6" y="677" width="0.3" height="15.0" fill="rgb(222,144,26)" rx="2" ry="2" />
<text  x="777.65" y="687.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (3 samples, 0.06%)</title><rect x="573.5" y="901" width="0.8" height="15.0" fill="rgb(219,98,25)" rx="2" ry="2" />
<text  x="576.53" y="911.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (4 samples, 0.08%)</title><rect x="793.2" y="709" width="1.0" height="15.0" fill="rgb(213,0,41)" rx="2" ry="2" />
<text  x="796.20" y="719.5" ></text>
</g>
<g >
<title>WTF::HashTableAddResult&lt;WTF::HashTable&lt;blink::DisplayItemClient const*, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::PartitionAllocator&gt;, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt; WTF::HashTable&lt;blink::DisplayItemClient const*, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::PartitionAllocator&gt;::insert&lt;WTF::HashMapTranslator&lt;WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::PartitionAllocator&gt;, blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;(blink::DisplayItemClient const*&amp;&amp;, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="26.6" y="101" width="0.2" height="15.0" fill="rgb(212,123,32)" rx="2" ry="2" />
<text  x="29.57" y="111.5" ></text>
</g>
<g >
<title>tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="293.7" y="773" width="0.3" height="15.0" fill="rgb(240,156,2)" rx="2" ry="2" />
<text  x="296.74" y="783.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="140.6" y="309" width="0.3" height="15.0" fill="rgb(233,107,10)" rx="2" ry="2" />
<text  x="143.62" y="319.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::Validate() (1 samples, 0.02%)</title><rect x="187.6" y="837" width="0.3" height="15.0" fill="rgb(220,18,26)" rx="2" ry="2" />
<text  x="190.62" y="847.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWait(base::TimeDelta const&amp;) (15 samples, 0.31%)</title><rect x="1164.3" y="949" width="3.7" height="15.0" fill="rgb(221,136,35)" rx="2" ry="2" />
<text  x="1167.27" y="959.5" ></text>
</g>
<g >
<title>base::DefaultTickClock::NowTicks() const (1 samples, 0.02%)</title><rect x="1024.0" y="917" width="0.3" height="15.0" fill="rgb(235,187,30)" rx="2" ry="2" />
<text  x="1027.01" y="927.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::RunTaskInCategoryWithLockAcquired(cc::TaskCategory) (12 samples, 0.25%)</title><rect x="62.7" y="981" width="3.0" height="15.0" fill="rgb(231,34,41)" rx="2" ry="2" />
<text  x="65.69" y="991.5" ></text>
</g>
<g >
<title>viz::mojom::internal::CompositorFrameSinkClient_OnBeginFrame_Params_Data::Validate(void const*, mojo::internal::ValidationContext*) (2 samples, 0.04%)</title><rect x="1053.7" y="693" width="0.5" height="15.0" fill="rgb(242,34,15)" rx="2" ry="2" />
<text  x="1056.69" y="703.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_full_2x_sse2 (3 samples, 0.06%)</title><rect x="525.8" y="693" width="0.7" height="15.0" fill="rgb(212,43,24)" rx="2" ry="2" />
<text  x="528.79" y="703.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (12 samples, 0.25%)</title><rect x="62.7" y="1013" width="3.0" height="15.0" fill="rgb(224,107,25)" rx="2" ry="2" />
<text  x="65.69" y="1023.5" ></text>
</g>
<g >
<title>I420ToNV12 (8 samples, 0.17%)</title><rect x="55.3" y="917" width="1.9" height="15.0" fill="rgb(214,193,38)" rx="2" ry="2" />
<text  x="58.27" y="927.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::RunsTasksInCurrentSequence() const (1 samples, 0.02%)</title><rect x="370.4" y="901" width="0.3" height="15.0" fill="rgb(225,28,54)" rx="2" ry="2" />
<text  x="373.43" y="911.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="38.4" y="677" width="0.3" height="15.0" fill="rgb(224,194,30)" rx="2" ry="2" />
<text  x="41.45" y="687.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Leave() const (1 samples, 0.02%)</title><rect x="1170.2" y="965" width="0.3" height="15.0" fill="rgb(244,86,48)" rx="2" ry="2" />
<text  x="1173.21" y="975.5" ></text>
</g>
<g >
<title>_pthread_body (2 samples, 0.04%)</title><rect x="213.8" y="1029" width="0.5" height="15.0" fill="rgb(216,58,37)" rx="2" ry="2" />
<text  x="216.84" y="1039.5" ></text>
</g>
<g >
<title>vp8dx_receive_compressed_data (96 samples, 2.01%)</title><rect x="968.3" y="741" width="23.8" height="15.0" fill="rgb(226,112,25)" rx="2" ry="2" />
<text  x="971.35" y="751.5" >v..</text>
</g>
<g >
<title>_CFRelease (1 samples, 0.02%)</title><rect x="12.7" y="821" width="0.3" height="15.0" fill="rgb(236,97,42)" rx="2" ry="2" />
<text  x="15.72" y="831.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="165.8" y="661" width="0.3" height="15.0" fill="rgb(216,227,3)" rx="2" ry="2" />
<text  x="168.85" y="671.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (2 samples, 0.04%)</title><rect x="839.7" y="693" width="0.5" height="15.0" fill="rgb(223,57,41)" rx="2" ry="2" />
<text  x="842.71" y="703.5" ></text>
</g>
<g >
<title>webrtc::PacketBuffer::GetNextPacket() (1 samples, 0.02%)</title><rect x="1127.4" y="757" width="0.3" height="15.0" fill="rgb(237,96,7)" rx="2" ry="2" />
<text  x="1130.41" y="767.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="255.2" y="645" width="0.2" height="15.0" fill="rgb(242,158,17)" rx="2" ry="2" />
<text  x="258.15" y="655.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketReceived::GetHeader(webrtc::RTPHeader*) const (1 samples, 0.02%)</title><rect x="271.2" y="725" width="0.3" height="15.0" fill="rgb(216,169,17)" rx="2" ry="2" />
<text  x="274.23" y="735.5" ></text>
</g>
<g >
<title>vp8_decode (75 samples, 1.57%)</title><rect x="822.1" y="757" width="18.6" height="15.0" fill="rgb(209,121,33)" rx="2" ry="2" />
<text  x="825.15" y="767.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (2 samples, 0.04%)</title><rect x="415.2" y="661" width="0.5" height="15.0" fill="rgb(205,33,30)" rx="2" ry="2" />
<text  x="418.21" y="671.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketToSend::RtpPacketToSend(webrtc::RtpPacketToSend const&amp;) (1 samples, 0.02%)</title><rect x="1163.0" y="901" width="0.3" height="15.0" fill="rgb(233,101,30)" rx="2" ry="2" />
<text  x="1166.04" y="911.5" ></text>
</g>
<g >
<title>gpu::GpuChannelHost::Listener::SendMessage(std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt;, IPC::PendingSyncMsg*) (14 samples, 0.29%)</title><rect x="168.3" y="853" width="3.5" height="15.0" fill="rgb(214,2,19)" rx="2" ry="2" />
<text  x="171.32" y="863.5" ></text>
</g>
<g >
<title>base::internal::Sequence::BeginTransaction() (1 samples, 0.02%)</title><rect x="77.8" y="805" width="0.2" height="15.0" fill="rgb(234,156,36)" rx="2" ry="2" />
<text  x="80.78" y="815.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="208.2" y="741" width="0.2" height="15.0" fill="rgb(226,169,22)" rx="2" ry="2" />
<text  x="211.15" y="751.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="649.5" y="709" width="0.5" height="15.0" fill="rgb(209,176,6)" rx="2" ry="2" />
<text  x="652.48" y="719.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::currentTime() const (2 samples, 0.04%)</title><rect x="18.7" y="629" width="0.5" height="15.0" fill="rgb(245,211,36)" rx="2" ry="2" />
<text  x="21.66" y="639.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="52.3" y="1013" width="0.2" height="15.0" fill="rgb(209,11,2)" rx="2" ry="2" />
<text  x="55.30" y="1023.5" ></text>
</g>
<g >
<title>mojo::core::Core::WriteMessage(unsigned int, unsigned long, MojoWriteMessageOptions const*) (1 samples, 0.02%)</title><rect x="1068.3" y="661" width="0.2" height="15.0" fill="rgb(239,37,11)" rx="2" ry="2" />
<text  x="1071.29" y="671.5" ></text>
</g>
<g >
<title>media::AudioPushFifo::Push(media::AudioBus const&amp;) (21 samples, 0.44%)</title><rect x="1081.6" y="933" width="5.2" height="15.0" fill="rgb(226,91,34)" rx="2" ry="2" />
<text  x="1084.65" y="943.5" ></text>
</g>
<g >
<title>_pthread_start (21 samples, 0.44%)</title><rect x="1163.5" y="1045" width="5.2" height="15.0" fill="rgb(251,34,50)" rx="2" ry="2" />
<text  x="1166.53" y="1055.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="67.6" y="773" width="0.3" height="15.0" fill="rgb(249,189,24)" rx="2" ry="2" />
<text  x="70.64" y="783.5" ></text>
</g>
<g >
<title>mach_msg_trap (2 samples, 0.04%)</title><rect x="282.6" y="517" width="0.5" height="15.0" fill="rgb(243,211,46)" rx="2" ry="2" />
<text  x="285.61" y="527.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="295.0" y="757" width="0.2" height="15.0" fill="rgb(230,91,3)" rx="2" ry="2" />
<text  x="297.98" y="767.5" ></text>
</g>
<g >
<title>media::VideoFrameLayout::Create(media::VideoPixelFormat, gfx::Size const&amp;) (1 samples, 0.02%)</title><rect x="207.4" y="821" width="0.3" height="15.0" fill="rgb(252,104,6)" rx="2" ry="2" />
<text  x="210.41" y="831.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (blink::VideoTrackAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), void&gt;::Invoke&lt;void (blink::VideoTrackAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), scoped_refptr&lt;blink::VideoTrackAdapter&gt; const&amp;, scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks&gt;(void (blink::VideoTrackAdapter::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), scoped_refptr&lt;blink::VideoTrackAdapter&gt; const&amp;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, base::TimeTicks&amp;&amp;) (7 samples, 0.15%)</title><rect x="175.5" y="837" width="1.7" height="15.0" fill="rgb(210,50,4)" rx="2" ry="2" />
<text  x="178.50" y="847.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="76.1" y="821" width="0.2" height="15.0" fill="rgb(230,119,30)" rx="2" ry="2" />
<text  x="79.05" y="831.5" ></text>
</g>
<g >
<title>blink::scheduler::MainThreadSchedulerImpl::OnTaskCompleted(base::WeakPtr&lt;blink::scheduler::MainThreadTaskQueue&gt;, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming*, base::sequence_manager::LazyNow*) (14 samples, 0.29%)</title><rect x="34.5" y="645" width="3.5" height="15.0" fill="rgb(213,153,43)" rx="2" ry="2" />
<text  x="37.49" y="655.5" ></text>
</g>
<g >
<title>blink::VideoTrackAdapter::VideoFrameResolutionAdapter::DoDeliverFrame(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks const&amp;) (7 samples, 0.15%)</title><rect x="139.4" y="501" width="1.7" height="15.0" fill="rgb(223,149,6)" rx="2" ry="2" />
<text  x="142.38" y="511.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTaskImpl() (13 samples, 0.27%)</title><rect x="209.9" y="853" width="3.2" height="15.0" fill="rgb(206,41,40)" rx="2" ry="2" />
<text  x="212.88" y="863.5" ></text>
</g>
<g >
<title>thread_start (569 samples, 11.93%)</title><rect x="566.6" y="1061" width="140.8" height="15.0" fill="rgb(248,213,8)" rx="2" ry="2" />
<text  x="569.60" y="1071.5" >thread_start</text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="334.6" y="837" width="0.2" height="15.0" fill="rgb(214,137,10)" rx="2" ry="2" />
<text  x="337.56" y="847.5" ></text>
</g>
<g >
<title>media::AudioBus::AudioBus(int, int) (2 samples, 0.04%)</title><rect x="1080.4" y="901" width="0.5" height="15.0" fill="rgb(246,143,17)" rx="2" ry="2" />
<text  x="1083.41" y="911.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (3 samples, 0.06%)</title><rect x="332.6" y="853" width="0.7" height="15.0" fill="rgb(210,91,7)" rx="2" ry="2" />
<text  x="335.58" y="863.5" ></text>
</g>
<g >
<title>cricket::UDPPort::SendTo(void const*, unsigned long, rtc::SocketAddress const&amp;, rtc::PacketOptions const&amp;, bool) (62 samples, 1.30%)</title><rect x="240.1" y="725" width="15.3" height="15.0" fill="rgb(229,85,53)" rx="2" ry="2" />
<text  x="243.06" y="735.5" ></text>
</g>
<g >
<title>mojo::Connector::ReadMessage(mojo::Message*) (1 samples, 0.02%)</title><rect x="1073.0" y="805" width="0.2" height="15.0" fill="rgb(218,2,12)" rx="2" ry="2" />
<text  x="1075.99" y="815.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (2 samples, 0.04%)</title><rect x="414.0" y="645" width="0.5" height="15.0" fill="rgb(231,141,30)" rx="2" ry="2" />
<text  x="416.97" y="655.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="349.2" y="773" width="0.2" height="15.0" fill="rgb(211,172,26)" rx="2" ry="2" />
<text  x="352.16" y="783.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (10 samples, 0.21%)</title><rect x="889.9" y="677" width="2.5" height="15.0" fill="rgb(206,127,17)" rx="2" ry="2" />
<text  x="892.93" y="687.5" ></text>
</g>
<g >
<title>mojo::Connector::ReadAllAvailableMessages() (40 samples, 0.84%)</title><rect x="133.2" y="709" width="9.9" height="15.0" fill="rgb(253,14,21)" rx="2" ry="2" />
<text  x="136.19" y="719.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="651.5" y="565" width="0.2" height="15.0" fill="rgb(242,68,22)" rx="2" ry="2" />
<text  x="654.45" y="575.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="495.9" y="709" width="0.2" height="15.0" fill="rgb(231,93,44)" rx="2" ry="2" />
<text  x="498.85" y="719.5" ></text>
</g>
<g >
<title>base::internal::ScopedBlockingCallWithBaseSyncPrimitives::ScopedBlockingCallWithBaseSyncPrimitives(base::Location const&amp;, base::BlockingType) (1 samples, 0.02%)</title><rect x="1171.2" y="901" width="0.2" height="15.0" fill="rgb(244,86,49)" rx="2" ry="2" />
<text  x="1174.20" y="911.5" ></text>
</g>
<g >
<title>quant_partition (1 samples, 0.02%)</title><rect x="535.9" y="693" width="0.3" height="15.0" fill="rgb(233,207,19)" rx="2" ry="2" />
<text  x="538.93" y="703.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (2 samples, 0.04%)</title><rect x="267.0" y="501" width="0.5" height="15.0" fill="rgb(221,15,43)" rx="2" ry="2" />
<text  x="270.03" y="511.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) (3 samples, 0.06%)</title><rect x="15.2" y="725" width="0.7" height="15.0" fill="rgb(210,50,32)" rx="2" ry="2" />
<text  x="18.19" y="735.5" ></text>
</g>
<g >
<title>blink::NormalPage::FindHeaderFromAddress(unsigned char*) (1 samples, 0.02%)</title><rect x="22.1" y="517" width="0.3" height="15.0" fill="rgb(227,166,19)" rx="2" ry="2" />
<text  x="25.12" y="527.5" ></text>
</g>
<g >
<title>vp8_fast_quantize_b_ssse3 (22 samples, 0.46%)</title><rect x="892.9" y="661" width="5.4" height="15.0" fill="rgb(210,3,50)" rx="2" ry="2" />
<text  x="895.90" y="671.5" ></text>
</g>
<g >
<title>Builtins_ArgumentsAdaptorTrampoline (3 samples, 0.06%)</title><rect x="16.9" y="453" width="0.8" height="15.0" fill="rgb(223,17,46)" rx="2" ry="2" />
<text  x="19.93" y="463.5" ></text>
</g>
<g >
<title>vp8_pack_tokens (48 samples, 1.01%)</title><rect x="465.9" y="725" width="11.9" height="15.0" fill="rgb(226,229,15)" rx="2" ry="2" />
<text  x="468.92" y="735.5" ></text>
</g>
<g >
<title>cc::LayerTreeImpl::PushPropertiesTo(cc::LayerTreeImpl*) (1 samples, 0.02%)</title><rect x="1069.3" y="741" width="0.2" height="15.0" fill="rgb(220,26,8)" rx="2" ry="2" />
<text  x="1072.28" y="751.5" ></text>
</g>
<g >
<title>vp8_decode (96 samples, 2.01%)</title><rect x="658.4" y="757" width="23.7" height="15.0" fill="rgb(230,35,24)" rx="2" ry="2" />
<text  x="661.38" y="767.5" >v..</text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="58.5" y="853" width="0.5" height="15.0" fill="rgb(212,38,53)" rx="2" ry="2" />
<text  x="61.49" y="863.5" ></text>
</g>
<g >
<title>thread_start (21 samples, 0.44%)</title><rect x="1163.5" y="1061" width="5.2" height="15.0" fill="rgb(234,22,2)" rx="2" ry="2" />
<text  x="1166.53" y="1071.5" ></text>
</g>
<g >
<title>__psynch_mutexdrop (1 samples, 0.02%)</title><rect x="1072.5" y="293" width="0.2" height="15.0" fill="rgb(215,206,23)" rx="2" ry="2" />
<text  x="1075.49" y="303.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMSCompositor::UpdateCurrentFrame(base::TimeTicks, base::TimeTicks) (9 samples, 0.19%)</title><rect x="1044.0" y="661" width="2.3" height="15.0" fill="rgb(227,115,0)" rx="2" ry="2" />
<text  x="1047.05" y="671.5" ></text>
</g>
<g >
<title>base::mac::internal::ReceiveRightTraits::Free(unsigned int) (4 samples, 0.08%)</title><rect x="1036.6" y="485" width="1.0" height="15.0" fill="rgb(233,25,25)" rx="2" ry="2" />
<text  x="1039.62" y="495.5" ></text>
</g>
<g >
<title>mojo::internal::UnmappedNativeStructSerializerImpl::SerializeMessageContents(IPC::Message*, mojo::internal::Buffer*, mojo::native::internal::NativeStruct_Data::BufferWriter*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="236.6" y="645" width="0.2" height="15.0" fill="rgb(222,212,25)" rx="2" ry="2" />
<text  x="239.60" y="655.5" ></text>
</g>
<g >
<title>mojo::core::WatcherDispatcher::NotifyHandleState(mojo::core::Dispatcher*, mojo::core::HandleSignalsState const&amp;) (4 samples, 0.08%)</title><rect x="321.7" y="709" width="1.0" height="15.0" fill="rgb(239,220,10)" rx="2" ry="2" />
<text  x="324.70" y="719.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="377.6" y="885" width="0.3" height="15.0" fill="rgb(211,157,17)" rx="2" ry="2" />
<text  x="380.61" y="895.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bh_y_sse2 (1 samples, 0.02%)</title><rect x="635.6" y="693" width="0.3" height="15.0" fill="rgb(220,188,40)" rx="2" ry="2" />
<text  x="638.62" y="703.5" ></text>
</g>
<g >
<title>base::SequencedTaskRunnerHandle::Get() (1 samples, 0.02%)</title><rect x="176.2" y="661" width="0.3" height="15.0" fill="rgb(243,9,0)" rx="2" ry="2" />
<text  x="179.24" y="671.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="331.1" y="837" width="0.2" height="15.0" fill="rgb(207,6,48)" rx="2" ry="2" />
<text  x="334.10" y="847.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="190.1" y="757" width="0.2" height="15.0" fill="rgb(226,147,28)" rx="2" ry="2" />
<text  x="193.09" y="767.5" ></text>
</g>
<g >
<title>blink::PaintController::ProcessNewItem(blink::DisplayItem&amp;) (1 samples, 0.02%)</title><rect x="26.6" y="133" width="0.2" height="15.0" fill="rgb(249,128,1)" rx="2" ry="2" />
<text  x="29.57" y="143.5" ></text>
</g>
<g >
<title>webrtc::voe::AudioLevel::ComputeLevel(webrtc::AudioFrame const&amp;, double) (1 samples, 0.02%)</title><rect x="1137.6" y="853" width="0.2" height="15.0" fill="rgb(207,35,42)" rx="2" ry="2" />
<text  x="1140.56" y="863.5" ></text>
</g>
<g >
<title>cc::PictureLayerImpl::UpdateRasterSource(scoped_refptr&lt;cc::RasterSource&gt;, cc::Region*, cc::PictureLayerTilingSet const*, base::flat_map&lt;scoped_refptr&lt;cc::PaintWorkletInput&gt;, sk_sp&lt;cc::PaintOpBuffer&gt;, std::__Cr::less&lt;void&gt; &gt; const*) (1 samples, 0.02%)</title><rect x="1069.8" y="709" width="0.2" height="15.0" fill="rgb(214,110,27)" rx="2" ry="2" />
<text  x="1072.77" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::CleanUpQueues() (2 samples, 0.04%)</title><rect x="331.6" y="869" width="0.5" height="15.0" fill="rgb(236,116,53)" rx="2" ry="2" />
<text  x="334.59" y="879.5" ></text>
</g>
<g >
<title>cc::ListContainerHelper::CharAllocator::AllocateNewList(unsigned long) (1 samples, 0.02%)</title><rect x="1039.3" y="581" width="0.3" height="15.0" fill="rgb(253,18,47)" rx="2" ry="2" />
<text  x="1042.35" y="591.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="1030.7" y="789" width="0.2" height="15.0" fill="rgb(254,197,25)" rx="2" ry="2" />
<text  x="1033.69" y="799.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="324.4" y="693" width="0.3" height="15.0" fill="rgb(228,163,49)" rx="2" ry="2" />
<text  x="327.42" y="703.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="312.8" y="581" width="0.5" height="15.0" fill="rgb(205,52,26)" rx="2" ry="2" />
<text  x="315.79" y="591.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (media::AudioShifter::*)(int, media::AudioBus*), base::internal::UnretainedWrapper&lt;media::AudioShifter&gt; &gt;, void (int, media::AudioBus*)&gt;::Run(base::internal::BindStateBase*, int, media::AudioBus*) (1 samples, 0.02%)</title><rect x="1099.7" y="885" width="0.3" height="15.0" fill="rgb(223,123,19)" rx="2" ry="2" />
<text  x="1102.71" y="895.5" ></text>
</g>
<g >
<title>vpx_post_proc_down_and_across_mb_row_sse2.acrossnextcol (12 samples, 0.25%)</title><rect x="963.2" y="709" width="2.9" height="15.0" fill="rgb(249,73,45)" rx="2" ry="2" />
<text  x="966.15" y="719.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (2 samples, 0.04%)</title><rect x="910.2" y="661" width="0.5" height="15.0" fill="rgb(243,129,14)" rx="2" ry="2" />
<text  x="913.21" y="671.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="93.4" y="837" width="0.2" height="15.0" fill="rgb(253,52,46)" rx="2" ry="2" />
<text  x="96.37" y="847.5" ></text>
</g>
<g >
<title>webrtc::internal::Call::OnSentPacket(rtc::SentPacket const&amp;) (4 samples, 0.08%)</title><rect x="291.5" y="789" width="1.0" height="15.0" fill="rgb(237,216,1)" rx="2" ry="2" />
<text  x="294.52" y="799.5" ></text>
</g>
<g >
<title>_pthread_start (444 samples, 9.31%)</title><rect x="87.2" y="1045" width="109.8" height="15.0" fill="rgb(247,129,49)" rx="2" ry="2" />
<text  x="90.18" y="1055.5" >_pthread_start</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="82.2" y="789" width="0.3" height="15.0" fill="rgb(251,222,51)" rx="2" ry="2" />
<text  x="85.23" y="799.5" ></text>
</g>
<g >
<title>viz::mojom::CompositorFrameSinkProxy::SubmitCompositorFrame(viz::LocalSurfaceId const&amp;, viz::CompositorFrame, base::Optional&lt;viz::HitTestRegionList&gt;, unsigned long long) (2 samples, 0.04%)</title><rect x="1068.3" y="741" width="0.5" height="15.0" fill="rgb(214,156,27)" rx="2" ry="2" />
<text  x="1071.29" y="751.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="168.1" y="597" width="0.2" height="15.0" fill="rgb(217,35,16)" rx="2" ry="2" />
<text  x="171.08" y="607.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="1148.2" y="789" width="0.2" height="15.0" fill="rgb(250,29,26)" rx="2" ry="2" />
<text  x="1151.19" y="799.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Leave() const (1 samples, 0.02%)</title><rect x="961.4" y="693" width="0.3" height="15.0" fill="rgb(208,202,12)" rx="2" ry="2" />
<text  x="964.42" y="703.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="179.0" y="837" width="0.2" height="15.0" fill="rgb(226,1,43)" rx="2" ry="2" />
<text  x="181.96" y="847.5" ></text>
</g>
<g >
<title>webrtc::video_coding::FrameBuffer::GetNextFrame() (2 samples, 0.04%)</title><rect x="855.0" y="821" width="0.5" height="15.0" fill="rgb(223,84,52)" rx="2" ry="2" />
<text  x="858.05" y="831.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="206.2" y="725" width="0.2" height="15.0" fill="rgb(244,5,6)" rx="2" ry="2" />
<text  x="209.17" y="735.5" ></text>
</g>
<g >
<title>webrtc::PeerConnection::OnSentPacket_w(rtc::SentPacket const&amp;) (1 samples, 0.02%)</title><rect x="285.8" y="789" width="0.3" height="15.0" fill="rgb(235,211,39)" rx="2" ry="2" />
<text  x="288.83" y="799.5" ></text>
</g>
<g >
<title>non-virtual thunk to cc::ProxyImpl::WillBeginImplFrame(viz::BeginFrameArgs const&amp;) (1 samples, 0.02%)</title><rect x="1072.2" y="581" width="0.3" height="15.0" fill="rgb(234,119,23)" rx="2" ry="2" />
<text  x="1075.25" y="591.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::CopyVideoFrameToGpuMemoryBuffers(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*) (9 samples, 0.19%)</title><rect x="67.9" y="933" width="2.2" height="15.0" fill="rgb(237,69,0)" rx="2" ry="2" />
<text  x="70.89" y="943.5" ></text>
</g>
<g >
<title>base::circular_deque&lt;base::internal::Task&gt;::pop_front() (1 samples, 0.02%)</title><rect x="712.3" y="917" width="0.3" height="15.0" fill="rgb(226,41,43)" rx="2" ry="2" />
<text  x="715.31" y="927.5" ></text>
</g>
<g >
<title>small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="1039.3" y="453" width="0.3" height="15.0" fill="rgb(251,219,36)" rx="2" ry="2" />
<text  x="1042.35" y="463.5" ></text>
</g>
<g >
<title>cc::TaskGraphWorkQueue::CollectCompletedTasks(cc::NamespaceToken, std::__Cr::vector&lt;scoped_refptr&lt;cc::Task&gt;, std::__Cr::allocator&lt;scoped_refptr&lt;cc::Task&gt; &gt; &gt;*) (2 samples, 0.04%)</title><rect x="202.0" y="773" width="0.5" height="15.0" fill="rgb(253,111,42)" rx="2" ry="2" />
<text  x="204.97" y="783.5" ></text>
</g>
<g >
<title>mojo::internal::Buffer::Allocate(unsigned long) (1 samples, 0.02%)</title><rect x="236.6" y="629" width="0.2" height="15.0" fill="rgb(251,200,31)" rx="2" ry="2" />
<text  x="239.60" y="639.5" ></text>
</g>
<g >
<title>mojo::internal::MessageDispatchContext::MessageDispatchContext(mojo::Message*) (1 samples, 0.02%)</title><rect x="135.7" y="581" width="0.2" height="15.0" fill="rgb(225,101,38)" rx="2" ry="2" />
<text  x="138.67" y="591.5" ></text>
</g>
<g >
<title>base::HistogramBase::CheckName(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;) const (1 samples, 0.02%)</title><rect x="1108.1" y="933" width="0.3" height="15.0" fill="rgb(244,225,51)" rx="2" ry="2" />
<text  x="1111.12" y="943.5" ></text>
</g>
<g >
<title>silk_A2NLSF (2 samples, 0.04%)</title><rect x="1000.0" y="661" width="0.5" height="15.0" fill="rgb(248,141,28)" rx="2" ry="2" />
<text  x="1003.01" y="671.5" ></text>
</g>
<g >
<title>free (2 samples, 0.04%)</title><rect x="231.7" y="837" width="0.4" height="15.0" fill="rgb(248,187,39)" rx="2" ry="2" />
<text  x="234.65" y="847.5" ></text>
</g>
<g >
<title>webrtc::RtpTransportControllerSend::OnReceivedPacket(webrtc::ReceivedPacket const&amp;) (4 samples, 0.08%)</title><rect x="282.1" y="725" width="1.0" height="15.0" fill="rgb(254,10,24)" rx="2" ry="2" />
<text  x="285.12" y="735.5" ></text>
</g>
<g >
<title>mach_msg_trap (3 samples, 0.06%)</title><rect x="57.5" y="773" width="0.7" height="15.0" fill="rgb(232,113,49)" rx="2" ry="2" />
<text  x="60.50" y="783.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (2 samples, 0.04%)</title><rect x="301.2" y="773" width="0.5" height="15.0" fill="rgb(232,99,7)" rx="2" ry="2" />
<text  x="304.17" y="783.5" ></text>
</g>
<g >
<title>vp8_initialize_rd_consts (1 samples, 0.02%)</title><rect x="941.1" y="725" width="0.3" height="15.0" fill="rgb(212,71,35)" rx="2" ry="2" />
<text  x="944.14" y="735.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::Accept(mojo::Message*) (16 samples, 0.34%)</title><rect x="224.7" y="805" width="4.0" height="15.0" fill="rgb(207,60,15)" rx="2" ry="2" />
<text  x="227.73" y="815.5" ></text>
</g>
<g >
<title>vpx_dc_predictor_16x16_sse2.loop (1 samples, 0.02%)</title><rect x="618.6" y="677" width="0.2" height="15.0" fill="rgb(233,206,52)" rx="2" ry="2" />
<text  x="621.55" y="687.5" ></text>
</g>
<g >
<title>objc_msgSend (4 samples, 0.08%)</title><rect x="872.1" y="981" width="1.0" height="15.0" fill="rgb(253,28,33)" rx="2" ry="2" />
<text  x="875.12" y="991.5" ></text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::PostTaskInternal(rtc::Location const&amp;, int, rtc::MessageHandler*, unsigned int, rtc::MessageData*) (1 samples, 0.02%)</title><rect x="306.1" y="517" width="0.3" height="15.0" fill="rgb(209,205,8)" rx="2" ry="2" />
<text  x="309.11" y="527.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="246.0" y="421" width="0.2" height="15.0" fill="rgb(252,32,12)" rx="2" ry="2" />
<text  x="249.00" y="431.5" ></text>
</g>
<g >
<title>aes_ctr_cipher (1 samples, 0.02%)</title><rect x="307.4" y="469" width="0.2" height="15.0" fill="rgb(213,161,40)" rx="2" ry="2" />
<text  x="310.35" y="479.5" ></text>
</g>
<g >
<title>compute_allocation (2 samples, 0.04%)</title><rect x="1118.0" y="629" width="0.5" height="15.0" fill="rgb(216,174,23)" rx="2" ry="2" />
<text  x="1121.01" y="639.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="862.2" y="917" width="0.3" height="15.0" fill="rgb(233,60,40)" rx="2" ry="2" />
<text  x="865.22" y="927.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="68.1" y="901" width="0.3" height="15.0" fill="rgb(242,104,33)" rx="2" ry="2" />
<text  x="71.13" y="911.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="355.8" y="805" width="0.3" height="15.0" fill="rgb(247,192,37)" rx="2" ry="2" />
<text  x="358.84" y="815.5" ></text>
</g>
<g >
<title>base::internal::PriorityQueue::Push(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="1134.8" y="709" width="0.5" height="15.0" fill="rgb(241,98,11)" rx="2" ry="2" />
<text  x="1137.83" y="719.5" ></text>
</g>
<g >
<title>WTF::ThreadCheckingCallbackWrapper&lt;base::OnceCallback&lt;void ()&gt;, void ()&gt;::Run() (27 samples, 0.57%)</title><rect x="16.2" y="693" width="6.7" height="15.0" fill="rgb(206,182,54)" rx="2" ry="2" />
<text  x="19.18" y="703.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::DecrementNumIncompleteTaskSources() (1 samples, 0.02%)</title><rect x="711.3" y="917" width="0.3" height="15.0" fill="rgb(248,90,52)" rx="2" ry="2" />
<text  x="714.32" y="927.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="1146.5" y="901" width="0.2" height="15.0" fill="rgb(242,114,46)" rx="2" ry="2" />
<text  x="1149.46" y="911.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="210.4" y="805" width="0.2" height="15.0" fill="rgb(209,59,19)" rx="2" ry="2" />
<text  x="213.38" y="815.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (2 samples, 0.04%)</title><rect x="91.9" y="853" width="0.5" height="15.0" fill="rgb(208,212,32)" rx="2" ry="2" />
<text  x="94.88" y="863.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::StartNextDecode() (1 samples, 0.02%)</title><rect x="993.6" y="837" width="0.2" height="15.0" fill="rgb(225,128,52)" rx="2" ry="2" />
<text  x="996.58" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="85.7" y="821" width="0.2" height="15.0" fill="rgb(248,63,28)" rx="2" ry="2" />
<text  x="88.70" y="831.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="1156.9" y="757" width="0.2" height="15.0" fill="rgb(220,149,12)" rx="2" ry="2" />
<text  x="1159.85" y="767.5" ></text>
</g>
<g >
<title>base::SequenceToken::IsValid() const (1 samples, 0.02%)</title><rect x="92.4" y="853" width="0.2" height="15.0" fill="rgb(233,50,13)" rx="2" ry="2" />
<text  x="95.38" y="863.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="271.7" y="581" width="0.3" height="15.0" fill="rgb(249,29,6)" rx="2" ry="2" />
<text  x="274.73" y="591.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (3 samples, 0.06%)</title><rect x="1136.3" y="709" width="0.8" height="15.0" fill="rgb(215,72,39)" rx="2" ry="2" />
<text  x="1139.32" y="719.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.06%)</title><rect x="880.8" y="885" width="0.7" height="15.0" fill="rgb(215,168,24)" rx="2" ry="2" />
<text  x="883.78" y="895.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (65 samples, 1.36%)</title><rect x="303.9" y="709" width="16.1" height="15.0" fill="rgb(236,58,8)" rx="2" ry="2" />
<text  x="306.89" y="719.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::RtpPacket() (2 samples, 0.04%)</title><rect x="260.6" y="725" width="0.5" height="15.0" fill="rgb(226,53,38)" rx="2" ry="2" />
<text  x="263.60" y="735.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::OnCopiesDone(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*) (2 samples, 0.04%)</title><rect x="67.4" y="869" width="0.5" height="15.0" fill="rgb(229,198,2)" rx="2" ry="2" />
<text  x="70.39" y="879.5" ></text>
</g>
<g >
<title>media::(anonymous namespace)::CopyRowsToNV12Buffer(int, int, int, media::VideoFrame const*, unsigned char*, int, unsigned char*, int, base::OnceCallback&lt;void ()&gt;) (12 samples, 0.25%)</title><rect x="55.3" y="933" width="2.9" height="15.0" fill="rgb(250,229,32)" rx="2" ry="2" />
<text  x="58.27" y="943.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (3 samples, 0.06%)</title><rect x="717.0" y="805" width="0.8" height="15.0" fill="rgb(215,55,23)" rx="2" ry="2" />
<text  x="720.01" y="815.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="757.6" y="645" width="0.2" height="15.0" fill="rgb(223,51,1)" rx="2" ry="2" />
<text  x="760.58" y="655.5" ></text>
</g>
<g >
<title>vp8cx_mb_init_quantizer (1 samples, 0.02%)</title><rect x="790.7" y="709" width="0.3" height="15.0" fill="rgb(231,8,38)" rx="2" ry="2" />
<text  x="793.73" y="719.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="141.1" y="533" width="0.3" height="15.0" fill="rgb(224,85,1)" rx="2" ry="2" />
<text  x="144.11" y="543.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="124.0" y="693" width="0.3" height="15.0" fill="rgb(249,3,50)" rx="2" ry="2" />
<text  x="127.04" y="703.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="693.0" y="933" width="0.3" height="15.0" fill="rgb(237,60,16)" rx="2" ry="2" />
<text  x="696.01" y="943.5" ></text>
</g>
<g >
<title>base::internal::Sequence::TakeTask() (3 samples, 0.06%)</title><rect x="570.1" y="933" width="0.7" height="15.0" fill="rgb(215,168,0)" rx="2" ry="2" />
<text  x="573.07" y="943.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::SetOfficialPlaybackPosition(double) const (1 samples, 0.02%)</title><rect x="20.4" y="533" width="0.2" height="15.0" fill="rgb(248,225,54)" rx="2" ry="2" />
<text  x="23.39" y="543.5" ></text>
</g>
<g >
<title>webrtc::SrtpTransport::SendRtpPacket(rtc::CopyOnWriteBuffer*, rtc::PacketOptions const&amp;, int) (75 samples, 1.57%)</title><rect x="236.8" y="789" width="18.6" height="15.0" fill="rgb(241,25,23)" rx="2" ry="2" />
<text  x="239.85" y="799.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (4 samples, 0.08%)</title><rect x="1071.8" y="725" width="0.9" height="15.0" fill="rgb(216,159,25)" rx="2" ry="2" />
<text  x="1074.75" y="735.5" ></text>
</g>
<g >
<title>blink::MediaStreamRemoteVideoSource::RemoteVideoSourceDelegate::OnFrame(webrtc::VideoFrame const&amp;) (1 samples, 0.02%)</title><rect x="682.9" y="677" width="0.2" height="15.0" fill="rgb(221,14,50)" rx="2" ry="2" />
<text  x="685.87" y="687.5" ></text>
</g>
<g >
<title>webrtc::AudioEncoderOpusImpl::EncodeImpl(unsigned int, rtc::ArrayView&lt;short const, -4711l&gt;, rtc::BufferT&lt;unsigned char, false&gt;*) (47 samples, 0.99%)</title><rect x="842.2" y="805" width="11.6" height="15.0" fill="rgb(221,228,54)" rx="2" ry="2" />
<text  x="845.18" y="815.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (2 samples, 0.04%)</title><rect x="710.3" y="949" width="0.5" height="15.0" fill="rgb(228,29,44)" rx="2" ry="2" />
<text  x="713.33" y="959.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (5 samples, 0.10%)</title><rect x="16.9" y="485" width="1.3" height="15.0" fill="rgb(244,84,42)" rx="2" ry="2" />
<text  x="19.93" y="495.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (10 samples, 0.21%)</title><rect x="1156.4" y="821" width="2.4" height="15.0" fill="rgb(212,215,49)" rx="2" ry="2" />
<text  x="1159.36" y="831.5" ></text>
</g>
<g >
<title>IPC::mojom::ChannelProxy::Receive(IPC::MessageView) (8 samples, 0.17%)</title><rect x="166.3" y="805" width="2.0" height="15.0" fill="rgb(252,148,33)" rx="2" ry="2" />
<text  x="169.34" y="815.5" ></text>
</g>
<g >
<title>__CFRepositionTimerInMode (4 samples, 0.08%)</title><rect x="14.2" y="709" width="1.0" height="15.0" fill="rgb(213,207,37)" rx="2" ry="2" />
<text  x="17.21" y="719.5" ></text>
</g>
<g >
<title>cricket::SrtpSession::ProtectRtp(void*, int, int, int*) (8 samples, 0.17%)</title><rect x="236.8" y="757" width="2.0" height="15.0" fill="rgb(247,146,37)" rx="2" ry="2" />
<text  x="239.85" y="767.5" ></text>
</g>
<g >
<title>webrtc::PacketBuffer::InsertPacketList(std::__Cr::list&lt;webrtc::Packet, std::__Cr::allocator&lt;webrtc::Packet&gt; &gt;*, webrtc::DecoderDatabase const&amp;, absl::optional&lt;unsigned char&gt;*, absl::optional&lt;unsigned char&gt;*, webrtc::StatisticsCalculator*) (1 samples, 0.02%)</title><rect x="280.1" y="629" width="0.3" height="15.0" fill="rgb(222,4,46)" rx="2" ry="2" />
<text  x="283.14" y="639.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="64.7" y="821" width="0.2" height="15.0" fill="rgb(233,66,29)" rx="2" ry="2" />
<text  x="67.67" y="831.5" ></text>
</g>
<g >
<title>silk_process_NLSFs (2 samples, 0.04%)</title><rect x="689.3" y="677" width="0.5" height="15.0" fill="rgb(221,3,44)" rx="2" ry="2" />
<text  x="692.30" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GetQueuePriority() const (1 samples, 0.02%)</title><rect x="212.6" y="837" width="0.3" height="15.0" fill="rgb(222,83,12)" rx="2" ry="2" />
<text  x="215.60" y="847.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::DetachFromSequence() (1 samples, 0.02%)</title><rect x="34.2" y="629" width="0.3" height="15.0" fill="rgb(242,97,40)" rx="2" ry="2" />
<text  x="37.24" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (6 samples, 0.13%)</title><rect x="191.1" y="901" width="1.5" height="15.0" fill="rgb(231,50,0)" rx="2" ry="2" />
<text  x="194.08" y="911.5" ></text>
</g>
<g >
<title>WebRtcOpus_Decode (39 samples, 0.82%)</title><rect x="1115.3" y="709" width="9.6" height="15.0" fill="rgb(239,175,13)" rx="2" ry="2" />
<text  x="1118.29" y="719.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="1182.3" y="757" width="0.5" height="15.0" fill="rgb(213,116,36)" rx="2" ry="2" />
<text  x="1185.33" y="767.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="111.7" y="645" width="0.2" height="15.0" fill="rgb(250,196,27)" rx="2" ry="2" />
<text  x="114.67" y="655.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::SendHelper(int, void const*, unsigned long) (3 samples, 0.06%)</title><rect x="1103.2" y="965" width="0.7" height="15.0" fill="rgb(205,115,30)" rx="2" ry="2" />
<text  x="1106.17" y="975.5" ></text>
</g>
<g >
<title>MojoDestroyMessage (1 samples, 0.02%)</title><rect x="141.1" y="613" width="0.3" height="15.0" fill="rgb(228,132,38)" rx="2" ry="2" />
<text  x="144.11" y="623.5" ></text>
</g>
<g >
<title>vp8_decode_frame (147 samples, 3.08%)</title><rect x="494.9" y="725" width="36.3" height="15.0" fill="rgb(234,82,34)" rx="2" ry="2" />
<text  x="497.86" y="735.5" >vp8..</text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="555.5" y="933" width="0.2" height="15.0" fill="rgb(249,30,8)" rx="2" ry="2" />
<text  x="558.47" y="943.5" ></text>
</g>
<g >
<title>webrtc::Packet::~Packet() (2 samples, 0.04%)</title><rect x="1125.2" y="757" width="0.5" height="15.0" fill="rgb(219,228,2)" rx="2" ry="2" />
<text  x="1128.19" y="767.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="32.0" y="645" width="0.3" height="15.0" fill="rgb(210,30,12)" rx="2" ry="2" />
<text  x="35.02" y="655.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleValidatedMessage(mojo::Message*) (14 samples, 0.29%)</title><rect x="225.0" y="741" width="3.4" height="15.0" fill="rgb(225,36,0)" rx="2" ry="2" />
<text  x="227.97" y="751.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (cc::TileManager::*)(), base::WeakPtr&lt;cc::TileManager&gt; &gt;, void ()&gt;::Run(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="1069.0" y="885" width="0.3" height="15.0" fill="rgb(224,37,0)" rx="2" ry="2" />
<text  x="1072.03" y="895.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::AudioCodingModuleImpl::Add10MsData(webrtc::AudioFrame const&amp;) (51 samples, 1.07%)</title><rect x="842.2" y="837" width="12.6" height="15.0" fill="rgb(252,222,37)" rx="2" ry="2" />
<text  x="845.18" y="847.5" ></text>
</g>
<g >
<title>vp8_short_walsh4x4_sse2 (2 samples, 0.04%)</title><rect x="898.3" y="677" width="0.5" height="15.0" fill="rgb(252,174,7)" rx="2" ry="2" />
<text  x="901.34" y="687.5" ></text>
</g>
<g >
<title>base::debug::CollectStackTrace(void**, unsigned long) (1 samples, 0.02%)</title><rect x="879.5" y="885" width="0.3" height="15.0" fill="rgb(246,10,24)" rx="2" ry="2" />
<text  x="882.54" y="895.5" ></text>
</g>
<g >
<title>check_dot_artifact_candidate (1 samples, 0.02%)</title><rect x="386.3" y="677" width="0.2" height="15.0" fill="rgb(233,14,23)" rx="2" ry="2" />
<text  x="389.26" y="687.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::GetSizeEstimateImpl(base::allocator::AllocatorDispatch const*, void*, void*) (1 samples, 0.02%)</title><rect x="206.9" y="805" width="0.3" height="15.0" fill="rgb(250,17,24)" rx="2" ry="2" />
<text  x="209.91" y="815.5" ></text>
</g>
<g >
<title>viz::mojom::internal::ReturnedResource_Data::Validate(void const*, mojo::internal::ValidationContext*) (1 samples, 0.02%)</title><rect x="1054.2" y="645" width="0.2" height="15.0" fill="rgb(238,110,32)" rx="2" ry="2" />
<text  x="1057.19" y="655.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1046.0" y="613" width="0.3" height="15.0" fill="rgb(212,91,32)" rx="2" ry="2" />
<text  x="1049.03" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::RequiresTaskTiming() const (1 samples, 0.02%)</title><rect x="85.9" y="821" width="0.3" height="15.0" fill="rgb(225,135,38)" rx="2" ry="2" />
<text  x="88.95" y="831.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs (3 samples, 0.06%)</title><rect x="771.2" y="661" width="0.7" height="15.0" fill="rgb(233,123,18)" rx="2" ry="2" />
<text  x="774.19" y="671.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="78.8" y="709" width="0.2" height="15.0" fill="rgb(227,215,35)" rx="2" ry="2" />
<text  x="81.77" y="719.5" ></text>
</g>
<g >
<title>-[NSAutoreleasePool drain] (1 samples, 0.02%)</title><rect x="707.4" y="965" width="0.2" height="15.0" fill="rgb(207,14,50)" rx="2" ry="2" />
<text  x="710.36" y="975.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (4 samples, 0.08%)</title><rect x="356.3" y="773" width="1.0" height="15.0" fill="rgb(221,4,44)" rx="2" ry="2" />
<text  x="359.33" y="783.5" ></text>
</g>
<g >
<title>base::WriteFileDescriptor(int, char const*, int) (6 samples, 0.13%)</title><rect x="1074.2" y="949" width="1.5" height="15.0" fill="rgb(246,125,48)" rx="2" ry="2" />
<text  x="1077.23" y="959.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="41.9" y="629" width="0.3" height="15.0" fill="rgb(223,177,12)" rx="2" ry="2" />
<text  x="44.91" y="639.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderAudio::SendAudio(webrtc::AudioFrameType, signed char, unsigned int, unsigned char const*, unsigned long) (3 samples, 0.06%)</title><rect x="1004.0" y="805" width="0.7" height="15.0" fill="rgb(221,6,14)" rx="2" ry="2" />
<text  x="1006.97" y="815.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="722.2" y="725" width="0.3" height="15.0" fill="rgb(248,201,19)" rx="2" ry="2" />
<text  x="725.21" y="735.5" ></text>
</g>
<g >
<title>blink::Node::IsFrameOwnerElement() const (1 samples, 0.02%)</title><rect x="26.3" y="373" width="0.3" height="15.0" fill="rgb(241,95,8)" rx="2" ry="2" />
<text  x="29.33" y="383.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="345.9" y="773" width="0.3" height="15.0" fill="rgb(234,193,35)" rx="2" ry="2" />
<text  x="348.94" y="783.5" ></text>
</g>
<g >
<title>blink::PeerConnectionRemoteAudioSource::OnData(void const*, int, int, unsigned long, unsigned long) (3 samples, 0.06%)</title><rect x="1130.9" y="837" width="0.7" height="15.0" fill="rgb(205,170,39)" rx="2" ry="2" />
<text  x="1133.88" y="847.5" ></text>
</g>
<g >
<title>webrtc::RTCPSender::SetLastRtpTime(unsigned int, long long, signed char) (1 samples, 0.02%)</title><rect x="690.5" y="789" width="0.3" height="15.0" fill="rgb(226,182,13)" rx="2" ry="2" />
<text  x="693.54" y="799.5" ></text>
</g>
<g >
<title>base::ScopedSetSequenceTokenForCurrentThread::ScopedSetSequenceTokenForCurrentThread(base::SequenceToken const&amp;) (1 samples, 0.02%)</title><rect x="712.6" y="917" width="0.2" height="15.0" fill="rgb(225,135,25)" rx="2" ry="2" />
<text  x="715.56" y="927.5" ></text>
</g>
<g >
<title>media::SincResampler::Convolve_SSE(float const*, float const*, float const*, double) (7 samples, 0.15%)</title><rect x="1100.7" y="901" width="1.7" height="15.0" fill="rgb(206,75,11)" rx="2" ry="2" />
<text  x="1103.70" y="911.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::EndUnusedPeriod() (1 samples, 0.02%)</title><rect x="258.4" y="565" width="0.2" height="15.0" fill="rgb(216,109,28)" rx="2" ry="2" />
<text  x="261.37" y="575.5" ></text>
</g>
<g >
<title>base::HistogramSamples::IncreaseSumAndCount(long long, int) (1 samples, 0.02%)</title><rect x="1011.6" y="885" width="0.3" height="15.0" fill="rgb(238,189,30)" rx="2" ry="2" />
<text  x="1014.64" y="895.5" ></text>
</g>
<g >
<title>cricket::BaseChannel::OnPacketReceived(bool, rtc::CopyOnWriteBuffer const&amp;, long long) (4 samples, 0.08%)</title><rect x="308.8" y="485" width="1.0" height="15.0" fill="rgb(250,14,49)" rx="2" ry="2" />
<text  x="311.83" y="495.5" ></text>
</g>
<g >
<title>base::internal::RegisteredTaskSource::~RegisteredTaskSource() (1 samples, 0.02%)</title><rect x="697.7" y="949" width="0.3" height="15.0" fill="rgb(252,22,4)" rx="2" ry="2" />
<text  x="700.71" y="959.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.02%)</title><rect x="276.7" y="549" width="0.2" height="15.0" fill="rgb(209,113,51)" rx="2" ry="2" />
<text  x="279.68" y="559.5" ></text>
</g>
<g >
<title>blink::ImagePainter::Paint(blink::PaintInfo const&amp;) (1 samples, 0.02%)</title><rect x="26.8" y="229" width="0.3" height="15.0" fill="rgb(208,223,29)" rx="2" ry="2" />
<text  x="29.82" y="239.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;, void&gt;::Invoke&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;, scoped_refptr&lt;media::VideoFrame&gt; &gt;(base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (6 samples, 0.13%)</title><rect x="174.0" y="869" width="1.5" height="15.0" fill="rgb(254,167,37)" rx="2" ry="2" />
<text  x="177.01" y="879.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::Run(std::__Cr::vector&lt;cc::TaskCategory, std::__Cr::allocator&lt;cc::TaskCategory&gt; &gt; const&amp;, base::ConditionVariable*) (15 samples, 0.31%)</title><rect x="59.0" y="997" width="3.7" height="15.0" fill="rgb(221,125,3)" rx="2" ry="2" />
<text  x="61.98" y="1007.5" ></text>
</g>
<g >
<title>evaluate_inter_mode (14 samples, 0.29%)</title><rect x="903.5" y="677" width="3.5" height="15.0" fill="rgb(208,145,15)" rx="2" ry="2" />
<text  x="906.53" y="687.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="368.0" y="917" width="0.5" height="15.0" fill="rgb(226,214,47)" rx="2" ry="2" />
<text  x="370.96" y="927.5" ></text>
</g>
<g >
<title>mach_msg_trap (4 samples, 0.08%)</title><rect x="170.1" y="501" width="0.9" height="15.0" fill="rgb(232,131,1)" rx="2" ry="2" />
<text  x="173.05" y="511.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="23.6" y="581" width="0.3" height="15.0" fill="rgb(208,69,45)" rx="2" ry="2" />
<text  x="26.61" y="591.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (content::VideoCaptureImpl::*)(int, scoped_refptr&lt;content::VideoCaptureImpl::BufferContext&gt;, double), void&gt;::Invoke&lt;void (content::VideoCaptureImpl::*)(int, scoped_refptr&lt;content::VideoCaptureImpl::BufferContext&gt;, double), base::WeakPtr&lt;content::VideoCaptureImpl&gt;, int, scoped_refptr&lt;content::VideoCaptureImpl::BufferContext&gt;, double&gt;(void (content::VideoCaptureImpl::*)(int, scoped_refptr&lt;content::VideoCaptureImpl::BufferContext&gt;, double), base::WeakPtr&lt;content::VideoCaptureImpl&gt;&amp;&amp;, int&amp;&amp;, scoped_refptr&lt;content::VideoCaptureImpl::BufferContext&gt;&amp;&amp;, double&amp;&amp;) (8 samples, 0.17%)</title><rect x="172.0" y="837" width="2.0" height="15.0" fill="rgb(207,53,20)" rx="2" ry="2" />
<text  x="175.03" y="847.5" ></text>
</g>
<g >
<title>silk_process_NLSFs_FLP (2 samples, 0.04%)</title><rect x="1000.8" y="693" width="0.4" height="15.0" fill="rgb(239,78,18)" rx="2" ry="2" />
<text  x="1003.75" y="703.5" ></text>
</g>
<g >
<title>set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="1160.8" y="709" width="0.3" height="15.0" fill="rgb(229,154,5)" rx="2" ry="2" />
<text  x="1163.81" y="719.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.06%)</title><rect x="1153.6" y="837" width="0.8" height="15.0" fill="rgb(211,127,38)" rx="2" ry="2" />
<text  x="1156.64" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::TimeDomain::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (1 samples, 0.02%)</title><rect x="186.4" y="821" width="0.2" height="15.0" fill="rgb(250,44,23)" rx="2" ry="2" />
<text  x="189.38" y="831.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (1 samples, 0.02%)</title><rect x="17.4" y="405" width="0.3" height="15.0" fill="rgb(248,165,16)" rx="2" ry="2" />
<text  x="20.42" y="415.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (7 samples, 0.15%)</title><rect x="166.3" y="789" width="1.8" height="15.0" fill="rgb(227,139,25)" rx="2" ry="2" />
<text  x="169.34" y="799.5" ></text>
</g>
<g >
<title>base::internal::WorkerThreadStack::Pop() (2 samples, 0.04%)</title><rect x="78.5" y="757" width="0.5" height="15.0" fill="rgb(239,222,44)" rx="2" ry="2" />
<text  x="81.52" y="767.5" ></text>
</g>
<g >
<title>webrtc::ReceiveStatisticsProxy::OnRenderedFrame(webrtc::VideoFrame const&amp;) (1 samples, 0.02%)</title><rect x="533.5" y="709" width="0.2" height="15.0" fill="rgb(249,47,2)" rx="2" ry="2" />
<text  x="536.45" y="719.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="693.5" y="917" width="0.3" height="15.0" fill="rgb(253,16,14)" rx="2" ry="2" />
<text  x="696.51" y="927.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="111.7" y="629" width="0.2" height="15.0" fill="rgb(235,62,47)" rx="2" ry="2" />
<text  x="114.67" y="639.5" ></text>
</g>
<g >
<title>mojo::Connector::ReadAllAvailableMessages() (118 samples, 2.47%)</title><rect x="1030.7" y="821" width="29.2" height="15.0" fill="rgb(220,2,43)" rx="2" ry="2" />
<text  x="1033.69" y="831.5" >mo..</text>
</g>
<g >
<title>webrtc::internal::Call::DeliverRtcp(webrtc::MediaType, unsigned char const*, unsigned long) (7 samples, 0.15%)</title><rect x="283.4" y="773" width="1.7" height="15.0" fill="rgb(253,115,53)" rx="2" ry="2" />
<text  x="286.35" y="783.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="226.5" y="469" width="0.2" height="15.0" fill="rgb(220,6,38)" rx="2" ry="2" />
<text  x="229.46" y="479.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.02%)</title><rect x="693.8" y="901" width="0.2" height="15.0" fill="rgb(231,55,25)" rx="2" ry="2" />
<text  x="696.76" y="911.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_nonzero (1 samples, 0.02%)</title><rect x="424.4" y="661" width="0.2" height="15.0" fill="rgb(218,159,22)" rx="2" ry="2" />
<text  x="427.36" y="671.5" ></text>
</g>
<g >
<title>mojo::core::Core::AppendMessageData(unsigned long, unsigned int, unsigned int const*, unsigned int, MojoAppendMessageDataOptions const*, void**, unsigned int*) (3 samples, 0.06%)</title><rect x="253.7" y="581" width="0.7" height="15.0" fill="rgb(206,146,15)" rx="2" ry="2" />
<text  x="256.67" y="591.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="167.8" y="725" width="0.3" height="15.0" fill="rgb(218,29,44)" rx="2" ry="2" />
<text  x="170.83" y="735.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessageInternal(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (6 samples, 0.13%)</title><rect x="166.3" y="645" width="1.5" height="15.0" fill="rgb(240,210,44)" rx="2" ry="2" />
<text  x="169.34" y="655.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;blink::WebRtcVideoFrameAdapter&gt;::~RefCountedObject() (1 samples, 0.02%)</title><rect x="652.7" y="821" width="0.2" height="15.0" fill="rgb(244,196,40)" rx="2" ry="2" />
<text  x="655.69" y="831.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.06%)</title><rect x="880.8" y="901" width="0.7" height="15.0" fill="rgb(240,104,37)" rx="2" ry="2" />
<text  x="883.78" y="911.5" ></text>
</g>
<g >
<title>webrtc::VCMTiming::StopDecodeTimer(int, long long) (1 samples, 0.02%)</title><rect x="532.7" y="741" width="0.3" height="15.0" fill="rgb(235,123,2)" rx="2" ry="2" />
<text  x="535.71" y="751.5" ></text>
</g>
<g >
<title>-[NSAutoreleasePool drain] (2 samples, 0.04%)</title><rect x="873.4" y="965" width="0.4" height="15.0" fill="rgb(228,226,11)" rx="2" ry="2" />
<text  x="876.35" y="975.5" ></text>
</g>
<g >
<title>webrtc::internal::Call::DeliverRtp(webrtc::MediaType, rtc::CopyOnWriteBuffer, long long) (69 samples, 1.45%)</title><rect x="256.4" y="757" width="17.1" height="15.0" fill="rgb(211,161,5)" rx="2" ry="2" />
<text  x="259.39" y="767.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="181.2" y="837" width="0.2" height="15.0" fill="rgb(241,132,21)" rx="2" ry="2" />
<text  x="184.19" y="847.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunWorker() (825 samples, 17.30%)</title><rect x="362.0" y="981" width="204.1" height="15.0" fill="rgb(241,102,43)" rx="2" ry="2" />
<text  x="365.02" y="991.5" >base::internal::WorkerThre..</text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="77.5" y="757" width="0.3" height="15.0" fill="rgb(230,34,37)" rx="2" ry="2" />
<text  x="80.53" y="767.5" ></text>
</g>
<g >
<title>vp8_setup_intra_recon_top_line (1 samples, 0.02%)</title><rect x="990.9" y="709" width="0.2" height="15.0" fill="rgb(208,61,9)" rx="2" ry="2" />
<text  x="993.86" y="719.5" ></text>
</g>
<g >
<title>rtc::FireAndForgetAsyncClosure&lt;rtc::MethodFunctor&lt;cricket::BaseChannel, void (cricket::BaseChannel::*)(bool, rtc::CopyOnWriteBuffer const&amp;, long long), void, bool, rtc::CopyOnWriteBuffer const&amp;, long long&gt; &gt;::~FireAndForgetAsyncClosure() (5 samples, 0.10%)</title><rect x="294.0" y="805" width="1.2" height="15.0" fill="rgb(226,135,40)" rx="2" ry="2" />
<text  x="296.99" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::DelayTillNextTask(base::sequence_manager::LazyNow*) const (8 samples, 0.17%)</title><rect x="177.2" y="885" width="2.0" height="15.0" fill="rgb(229,137,47)" rx="2" ry="2" />
<text  x="180.23" y="895.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::UpdateRenderingContext() (1 samples, 0.02%)</title><rect x="25.8" y="389" width="0.3" height="15.0" fill="rgb(225,19,14)" rx="2" ry="2" />
<text  x="28.83" y="399.5" ></text>
</g>
<g >
<title>vp8_loop_filter_frame (9 samples, 0.19%)</title><rect x="633.1" y="725" width="2.3" height="15.0" fill="rgb(237,186,10)" rx="2" ry="2" />
<text  x="636.15" y="735.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="714.5" y="853" width="0.3" height="15.0" fill="rgb(241,41,32)" rx="2" ry="2" />
<text  x="717.54" y="863.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (12 samples, 0.25%)</title><rect x="256.6" y="693" width="3.0" height="15.0" fill="rgb(246,69,40)" rx="2" ry="2" />
<text  x="259.64" y="703.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (4 samples, 0.08%)</title><rect x="372.2" y="869" width="1.0" height="15.0" fill="rgb(245,116,2)" rx="2" ry="2" />
<text  x="375.16" y="879.5" ></text>
</g>
<g >
<title>base::debug::CollectStackTrace(void**, unsigned long) (2 samples, 0.04%)</title><rect x="575.5" y="885" width="0.5" height="15.0" fill="rgb(207,204,2)" rx="2" ry="2" />
<text  x="578.51" y="895.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::ClosureTask::RunOnWorkerThread() (15 samples, 0.31%)</title><rect x="59.0" y="965" width="3.7" height="15.0" fill="rgb(237,22,46)" rx="2" ry="2" />
<text  x="61.98" y="975.5" ></text>
</g>
<g >
<title>vp8_decode_mb_tokens (39 samples, 0.82%)</title><rect x="974.3" y="709" width="9.6" height="15.0" fill="rgb(247,49,27)" rx="2" ry="2" />
<text  x="977.29" y="719.5" ></text>
</g>
<g >
<title>base::debug::CollectStackTrace(void**, unsigned long) (1 samples, 0.02%)</title><rect x="376.6" y="885" width="0.3" height="15.0" fill="rgb(243,137,21)" rx="2" ry="2" />
<text  x="379.62" y="895.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="651.7" y="693" width="0.2" height="15.0" fill="rgb(238,23,33)" rx="2" ry="2" />
<text  x="654.70" y="703.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_half_loop (1 samples, 0.02%)</title><rect x="597.5" y="661" width="0.3" height="15.0" fill="rgb(251,160,8)" rx="2" ry="2" />
<text  x="600.53" y="671.5" ></text>
</g>
<g >
<title>aes_ctr_cipher (1 samples, 0.02%)</title><rect x="306.6" y="469" width="0.3" height="15.0" fill="rgb(231,5,13)" rx="2" ry="2" />
<text  x="309.61" y="479.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (3 samples, 0.06%)</title><rect x="1053.0" y="437" width="0.7" height="15.0" fill="rgb(246,113,18)" rx="2" ry="2" />
<text  x="1055.95" y="447.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*) (2 samples, 0.04%)</title><rect x="258.1" y="597" width="0.5" height="15.0" fill="rgb(251,207,14)" rx="2" ry="2" />
<text  x="261.12" y="607.5" ></text>
</g>
<g >
<title>MergeUVRow_AVX2 (2 samples, 0.04%)</title><rect x="60.7" y="885" width="0.5" height="15.0" fill="rgb(205,197,6)" rx="2" ry="2" />
<text  x="63.71" y="895.5" ></text>
</g>
<g >
<title>I420Copy (4 samples, 0.08%)</title><rect x="992.1" y="757" width="1.0" height="15.0" fill="rgb(205,128,27)" rx="2" ry="2" />
<text  x="995.10" y="767.5" ></text>
</g>
<g >
<title>webrtc::StreamStatisticianImpl::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (1 samples, 0.02%)</title><rect x="269.5" y="693" width="0.2" height="15.0" fill="rgb(225,199,9)" rx="2" ry="2" />
<text  x="272.50" y="703.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::GetHandleSignalsStateNoLock() const (1 samples, 0.02%)</title><rect x="108.7" y="741" width="0.3" height="15.0" fill="rgb(251,146,31)" rx="2" ry="2" />
<text  x="111.70" y="751.5" ></text>
</g>
<g >
<title>non-virtual thunk to webrtc::PacketRouter::SendTransportFeedback(webrtc::rtcp::TransportFeedback*) (5 samples, 0.10%)</title><rect x="1181.6" y="933" width="1.2" height="15.0" fill="rgb(232,36,21)" rx="2" ry="2" />
<text  x="1184.59" y="943.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (14 samples, 0.29%)</title><rect x="287.1" y="677" width="3.4" height="15.0" fill="rgb(222,198,2)" rx="2" ry="2" />
<text  x="290.06" y="687.5" ></text>
</g>
<g >
<title>std::__Cr::vector&lt;mojo::core::RequestContext::WatchNotifyFinalizer, base::StackAllocator&lt;mojo::core::RequestContext::WatchNotifyFinalizer, 8ul&gt; &gt;::reserve(unsigned long) (2 samples, 0.04%)</title><rect x="324.9" y="725" width="0.5" height="15.0" fill="rgb(223,70,52)" rx="2" ry="2" />
<text  x="327.91" y="735.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1051.2" y="645" width="0.3" height="15.0" fill="rgb(205,140,19)" rx="2" ry="2" />
<text  x="1054.22" y="655.5" ></text>
</g>
<g >
<title>IPC::internal::MessagePipeReader::Send(std::__Cr::unique_ptr&lt;IPC::Message, std::__Cr::default_delete&lt;IPC::Message&gt; &gt;) (13 samples, 0.27%)</title><rect x="168.6" y="821" width="3.2" height="15.0" fill="rgb(250,77,4)" rx="2" ry="2" />
<text  x="171.57" y="831.5" ></text>
</g>
<g >
<title>blink::VideoFrameResourceProvider::AppendQuads(viz::RenderPass*, scoped_refptr&lt;media::VideoFrame&gt;, media::VideoRotation, bool) (4 samples, 0.08%)</title><rect x="1038.4" y="629" width="0.9" height="15.0" fill="rgb(231,171,39)" rx="2" ry="2" />
<text  x="1041.36" y="639.5" ></text>
</g>
<g >
<title>io_connect_method (2 samples, 0.04%)</title><rect x="58.5" y="869" width="0.5" height="15.0" fill="rgb(242,4,51)" rx="2" ry="2" />
<text  x="61.49" y="879.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::IsShutdownComplete() const (3 samples, 0.06%)</title><rect x="366.2" y="965" width="0.8" height="15.0" fill="rgb(240,185,6)" rx="2" ry="2" />
<text  x="369.23" y="975.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="32.5" y="629" width="0.3" height="15.0" fill="rgb(226,174,40)" rx="2" ry="2" />
<text  x="35.51" y="639.5" ></text>
</g>
<g >
<title>base::WorkIdProvider::IncrementWorkId() (1 samples, 0.02%)</title><rect x="29.5" y="709" width="0.3" height="15.0" fill="rgb(248,38,50)" rx="2" ry="2" />
<text  x="32.54" y="719.5" ></text>
</g>
<g >
<title>base::internal::(anonymous namespace)::WorkerThreadDelegate::PostTaskNow(scoped_refptr&lt;base::internal::Sequence&gt;, base::internal::Task) (2 samples, 0.04%)</title><rect x="174.5" y="741" width="0.5" height="15.0" fill="rgb(217,40,35)" rx="2" ry="2" />
<text  x="177.51" y="751.5" ></text>
</g>
<g >
<title>silk_warped_autocorrelation_FLP (13 samples, 0.27%)</title><rect x="546.1" y="693" width="3.2" height="15.0" fill="rgb(224,211,25)" rx="2" ry="2" />
<text  x="549.07" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PushOntoDelayedIncomingQueueFromMainThread(base::sequence_manager::Task, base::TimeTicks, bool) (1 samples, 0.02%)</title><rect x="82.2" y="821" width="0.3" height="15.0" fill="rgb(253,67,49)" rx="2" ry="2" />
<text  x="85.23" y="831.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="171.0" y="613" width="0.3" height="15.0" fill="rgb(231,200,22)" rx="2" ry="2" />
<text  x="174.04" y="623.5" ></text>
</g>
<g >
<title>mojo::Connector::DispatchMessage(mojo::Message) (31 samples, 0.65%)</title><rect x="133.7" y="693" width="7.7" height="15.0" fill="rgb(211,113,44)" rx="2" ry="2" />
<text  x="136.69" y="703.5" ></text>
</g>
<g >
<title>vp8_cost_mv_ref (3 samples, 0.06%)</title><rect x="908.2" y="677" width="0.8" height="15.0" fill="rgb(237,74,7)" rx="2" ry="2" />
<text  x="911.23" y="687.5" ></text>
</g>
<g >
<title>vp8_encode_frame (269 samples, 5.64%)</title><rect x="724.9" y="741" width="66.6" height="15.0" fill="rgb(206,128,40)" rx="2" ry="2" />
<text  x="727.93" y="751.5" >vp8_enc..</text>
</g>
<g >
<title>mojo::core::Channel::Message::~Message() (2 samples, 0.04%)</title><rect x="1054.9" y="645" width="0.5" height="15.0" fill="rgb(225,92,54)" rx="2" ry="2" />
<text  x="1057.93" y="655.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="292.5" y="645" width="0.3" height="15.0" fill="rgb(216,97,12)" rx="2" ry="2" />
<text  x="295.51" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::UpdateCrossThreadQueueStateLocked() (2 samples, 0.04%)</title><rect x="341.2" y="773" width="0.5" height="15.0" fill="rgb(249,63,21)" rx="2" ry="2" />
<text  x="344.24" y="783.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoSomeWork() (1 samples, 0.02%)</title><rect x="214.1" y="917" width="0.2" height="15.0" fill="rgb(225,3,40)" rx="2" ry="2" />
<text  x="217.09" y="927.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance8xh_ssse3.x_other_y_other_loop (1 samples, 0.02%)</title><rect x="403.8" y="645" width="0.3" height="15.0" fill="rgb(226,98,13)" rx="2" ry="2" />
<text  x="406.83" y="655.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (19 samples, 0.40%)</title><rect x="286.3" y="773" width="4.7" height="15.0" fill="rgb(232,40,9)" rx="2" ry="2" />
<text  x="289.32" y="783.5" ></text>
</g>
<g >
<title>default_zone_malloc (1 samples, 0.02%)</title><rect x="682.9" y="565" width="0.2" height="15.0" fill="rgb(218,64,47)" rx="2" ry="2" />
<text  x="685.87" y="575.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="310.6" y="405" width="0.2" height="15.0" fill="rgb(206,21,15)" rx="2" ry="2" />
<text  x="313.57" y="415.5" ></text>
</g>
<g >
<title>media::AudioOutputDeviceThreadCallback::Process(unsigned int) (131 samples, 2.75%)</title><rect x="1107.6" y="981" width="32.4" height="15.0" fill="rgb(249,146,2)" rx="2" ry="2" />
<text  x="1110.62" y="991.5" >me..</text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="232.1" y="821" width="0.3" height="15.0" fill="rgb(249,226,3)" rx="2" ry="2" />
<text  x="235.15" y="831.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoStreamReceiver::OnAssembledFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::RtpFrameObject, std::__Cr::default_delete&lt;webrtc::video_coding::RtpFrameObject&gt; &gt;) (6 samples, 0.13%)</title><rect x="266.5" y="597" width="1.5" height="15.0" fill="rgb(219,142,31)" rx="2" ry="2" />
<text  x="269.53" y="607.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::CullOldPackets(long long) (1 samples, 0.02%)</title><rect x="691.5" y="757" width="0.3" height="15.0" fill="rgb(214,205,25)" rx="2" ry="2" />
<text  x="694.53" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::RecordCrashKeys(base::PendingTask const&amp;) (2 samples, 0.04%)</title><rect x="43.4" y="645" width="0.5" height="15.0" fill="rgb(209,4,51)" rx="2" ry="2" />
<text  x="46.40" y="655.5" ></text>
</g>
<g >
<title>blink::Element::SetNeedsCompositingUpdate() (2 samples, 0.04%)</title><rect x="19.2" y="597" width="0.4" height="15.0" fill="rgb(237,133,45)" rx="2" ry="2" />
<text  x="22.15" y="607.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::IsTrue(media::VideoFrameMetadata::Key) const (1 samples, 0.02%)</title><rect x="1038.6" y="597" width="0.3" height="15.0" fill="rgb(224,44,50)" rx="2" ry="2" />
<text  x="1041.60" y="607.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Enter() const (1 samples, 0.02%)</title><rect x="1113.1" y="853" width="0.2" height="15.0" fill="rgb(228,19,44)" rx="2" ry="2" />
<text  x="1116.06" y="863.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1160.8" y="757" width="0.3" height="15.0" fill="rgb(209,8,34)" rx="2" ry="2" />
<text  x="1163.81" y="767.5" ></text>
</g>
<g >
<title>base::WaitableEvent::~WaitableEvent() (5 samples, 0.10%)</title><rect x="1036.6" y="517" width="1.3" height="15.0" fill="rgb(232,183,31)" rx="2" ry="2" />
<text  x="1039.62" y="527.5" ></text>
</g>
<g >
<title>content::ContentMain(content::ContentMainParams const&amp;) (171 samples, 3.58%)</title><rect x="10.0" y="1013" width="42.3" height="15.0" fill="rgb(241,57,30)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >con..</text>
</g>
<g >
<title>webrtc::NetEqImpl::InsertPacketInternal(webrtc::RTPHeader const&amp;, rtc::ArrayView&lt;unsigned char const, -4711l&gt;, unsigned int) (7 samples, 0.15%)</title><rect x="278.7" y="645" width="1.7" height="15.0" fill="rgb(227,168,37)" rx="2" ry="2" />
<text  x="281.65" y="655.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolClock::Now() (1 samples, 0.02%)</title><rect x="286.8" y="661" width="0.3" height="15.0" fill="rgb(224,46,8)" rx="2" ry="2" />
<text  x="289.82" y="671.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="577.7" y="869" width="0.3" height="15.0" fill="rgb(233,69,34)" rx="2" ry="2" />
<text  x="580.74" y="879.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="1162.5" y="869" width="0.5" height="15.0" fill="rgb(217,158,54)" rx="2" ry="2" />
<text  x="1165.54" y="879.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="379.8" y="837" width="0.3" height="15.0" fill="rgb(238,53,38)" rx="2" ry="2" />
<text  x="382.83" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="962.7" y="629" width="0.2" height="15.0" fill="rgb(238,183,15)" rx="2" ry="2" />
<text  x="965.66" y="639.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::Write(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (13 samples, 0.27%)</title><rect x="246.2" y="437" width="3.3" height="15.0" fill="rgb(221,133,1)" rx="2" ry="2" />
<text  x="249.25" y="447.5" ></text>
</g>
<g >
<title>silk_inner_product_FLP (1 samples, 0.02%)</title><rect x="850.3" y="677" width="0.3" height="15.0" fill="rgb(232,153,26)" rx="2" ry="2" />
<text  x="853.35" y="687.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="120.6" y="789" width="0.2" height="15.0" fill="rgb(215,72,19)" rx="2" ry="2" />
<text  x="123.58" y="799.5" ></text>
</g>
<g >
<title>base::internal::UncheckedScopedBlockingCall::~UncheckedScopedBlockingCall() (1 samples, 0.02%)</title><rect x="1095.7" y="949" width="0.3" height="15.0" fill="rgb(219,187,0)" rx="2" ry="2" />
<text  x="1098.75" y="959.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::UpdateDelayedWakeUpImpl(base::sequence_manager::LazyNow*, base::Optional&lt;base::sequence_manager::internal::DelayedWakeUp&gt;) (1 samples, 0.02%)</title><rect x="82.2" y="805" width="0.3" height="15.0" fill="rgb(231,122,27)" rx="2" ry="2" />
<text  x="85.23" y="815.5" ></text>
</g>
<g >
<title>void std::__Cr::__tree_remove&lt;std::__Cr::__tree_node_base&lt;void*&gt;*&gt;(std::__Cr::__tree_node_base&lt;void*&gt;*, std::__Cr::__tree_node_base&lt;void*&gt;*) (1 samples, 0.02%)</title><rect x="1056.4" y="709" width="0.3" height="15.0" fill="rgb(221,21,22)" rx="2" ry="2" />
<text  x="1059.42" y="719.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (1 samples, 0.02%)</title><rect x="815.5" y="741" width="0.2" height="15.0" fill="rgb(233,162,3)" rx="2" ry="2" />
<text  x="818.47" y="751.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="32.0" y="629" width="0.3" height="15.0" fill="rgb(246,138,36)" rx="2" ry="2" />
<text  x="35.02" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="1034.6" y="485" width="0.3" height="15.0" fill="rgb(207,143,14)" rx="2" ry="2" />
<text  x="1037.65" y="495.5" ></text>
</g>
<g >
<title>_pthread_start (827 samples, 17.34%)</title><rect x="362.0" y="1045" width="204.6" height="15.0" fill="rgb(243,223,45)" rx="2" ry="2" />
<text  x="365.02" y="1055.5" >_pthread_start</text>
</g>
<g >
<title>blink::PaintInvalidator::InvalidatePaint(blink::LayoutObject const&amp;, blink::PaintPropertyTreeBuilderContext const*, blink::PaintInvalidatorContext&amp;) (1 samples, 0.02%)</title><rect x="28.3" y="373" width="0.3" height="15.0" fill="rgb(213,56,44)" rx="2" ry="2" />
<text  x="31.31" y="383.5" ></text>
</g>
<g >
<title>vp8_denoiser_denoise_mb (18 samples, 0.38%)</title><rect x="601.7" y="677" width="4.5" height="15.0" fill="rgb(247,134,27)" rx="2" ry="2" />
<text  x="604.73" y="687.5" ></text>
</g>
<g >
<title>MojoWriteMessage (23 samples, 0.48%)</title><rect x="244.8" y="597" width="5.7" height="15.0" fill="rgb(218,104,9)" rx="2" ry="2" />
<text  x="247.76" y="607.5" ></text>
</g>
<g >
<title>write_component_probs (1 samples, 0.02%)</title><rect x="646.5" y="709" width="0.3" height="15.0" fill="rgb(243,26,37)" rx="2" ry="2" />
<text  x="649.51" y="719.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__wrap_iter&lt;std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt; const*&gt;, std::__Cr::__wrap_iter&lt;std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt; const*&gt; &gt; base::internal::flat_tree&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;, base::internal::GetKeyFromValuePairFirst&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;, std::__Cr::less&lt;void&gt; &gt;::equal_range&lt;base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; &gt;(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;) const (1 samples, 0.02%)</title><rect x="1046.0" y="597" width="0.3" height="15.0" fill="rgb(207,162,50)" rx="2" ry="2" />
<text  x="1049.03" y="607.5" ></text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::operator=(rtc::CopyOnWriteBuffer&amp;&amp;) (2 samples, 0.04%)</title><rect x="310.1" y="501" width="0.5" height="15.0" fill="rgb(220,16,9)" rx="2" ry="2" />
<text  x="313.07" y="511.5" ></text>
</g>
<g >
<title>cos (1 samples, 0.02%)</title><rect x="1121.0" y="533" width="0.2" height="15.0" fill="rgb(207,155,53)" rx="2" ry="2" />
<text  x="1123.98" y="543.5" ></text>
</g>
<g >
<title>viz::RenderPass::~RenderPass() (3 samples, 0.06%)</title><rect x="1039.6" y="629" width="0.7" height="15.0" fill="rgb(205,190,9)" rx="2" ry="2" />
<text  x="1042.59" y="639.5" ></text>
</g>
<g >
<title>void std::__Cr::__sort&lt;bool (*&amp;)(webrtc::(anonymous namespace)::SourceFrame const&amp;, webrtc::(anonymous namespace)::SourceFrame const&amp;), webrtc::(anonymous namespace)::SourceFrame*&gt;(webrtc::(anonymous namespace)::SourceFrame*, webrtc::(anonymous namespace)::SourceFrame*, bool (*&amp;)(webrtc::(anonymous namespace)::SourceFrame const&amp;, webrtc::(anonymous namespace)::SourceFrame const&amp;)) (2 samples, 0.04%)</title><rect x="1112.1" y="869" width="0.5" height="15.0" fill="rgb(206,28,54)" rx="2" ry="2" />
<text  x="1115.08" y="879.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="251.7" y="485" width="0.2" height="15.0" fill="rgb(219,43,4)" rx="2" ry="2" />
<text  x="254.69" y="495.5" ></text>
</g>
<g >
<title>read (14 samples, 0.29%)</title><rect x="1092.3" y="949" width="3.4" height="15.0" fill="rgb(235,96,5)" rx="2" ry="2" />
<text  x="1095.29" y="959.5" ></text>
</g>
<g >
<title>void std::__Cr::__tree_remove&lt;std::__Cr::__tree_node_base&lt;void*&gt;*&gt;(std::__Cr::__tree_node_base&lt;void*&gt;*, std::__Cr::__tree_node_base&lt;void*&gt;*) (1 samples, 0.02%)</title><rect x="284.8" y="597" width="0.3" height="15.0" fill="rgb(219,148,22)" rx="2" ry="2" />
<text  x="287.84" y="607.5" ></text>
</g>
<g >
<title>base::ScopedSetSequenceTokenForCurrentThread::ScopedSetSequenceTokenForCurrentThread(base::SequenceToken const&amp;) (1 samples, 0.02%)</title><rect x="369.9" y="917" width="0.3" height="15.0" fill="rgb(219,210,50)" rx="2" ry="2" />
<text  x="372.94" y="927.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="316.0" y="453" width="0.3" height="15.0" fill="rgb(233,54,20)" rx="2" ry="2" />
<text  x="319.01" y="463.5" ></text>
</g>
<g >
<title>blink::LayoutVideo::UpdateFromElement() (2 samples, 0.04%)</title><rect x="19.2" y="629" width="0.4" height="15.0" fill="rgb(207,162,52)" rx="2" ry="2" />
<text  x="22.15" y="639.5" ></text>
</g>
<g >
<title>mojo::core::ports::UserMessageEvent::~UserMessageEvent() (1 samples, 0.02%)</title><rect x="320.2" y="677" width="0.3" height="15.0" fill="rgb(229,144,8)" rx="2" ry="2" />
<text  x="323.21" y="687.5" ></text>
</g>
<g >
<title>read_mvcomponent (1 samples, 0.02%)</title><rect x="984.7" y="693" width="0.2" height="15.0" fill="rgb(244,145,28)" rx="2" ry="2" />
<text  x="987.68" y="703.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (4 samples, 0.08%)</title><rect x="283.4" y="709" width="0.9" height="15.0" fill="rgb(239,0,46)" rx="2" ry="2" />
<text  x="286.35" y="719.5" ></text>
</g>
<g >
<title>mach_msg_trap (5 samples, 0.10%)</title><rect x="1028.7" y="741" width="1.2" height="15.0" fill="rgb(243,78,42)" rx="2" ry="2" />
<text  x="1031.71" y="751.5" ></text>
</g>
<g >
<title>cc::TilingSetRasterQueueAll::TilingIterator::TilingIterator() (1 samples, 0.02%)</title><rect x="1067.5" y="661" width="0.3" height="15.0" fill="rgb(225,180,29)" rx="2" ry="2" />
<text  x="1070.55" y="671.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle&lt;v8::internal::Object&gt;*) (5 samples, 0.10%)</title><rect x="16.9" y="533" width="1.3" height="15.0" fill="rgb(229,100,5)" rx="2" ry="2" />
<text  x="19.93" y="543.5" ></text>
</g>
<g >
<title>base::internal::WeakLinkNode&lt;base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt; &gt;::SetList(base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;*) (1 samples, 0.02%)</title><rect x="33.0" y="661" width="0.3" height="15.0" fill="rgb(245,2,29)" rx="2" ry="2" />
<text  x="36.01" y="671.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::GetEncodedPartitions(webrtc::VideoFrame const&amp;, bool) (6 samples, 0.13%)</title><rect x="815.5" y="789" width="1.5" height="15.0" fill="rgb(230,23,26)" rx="2" ry="2" />
<text  x="818.47" y="799.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="791.2" y="693" width="0.3" height="15.0" fill="rgb(207,20,24)" rx="2" ry="2" />
<text  x="794.22" y="703.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (6 samples, 0.13%)</title><rect x="235.1" y="645" width="1.5" height="15.0" fill="rgb(211,206,18)" rx="2" ry="2" />
<text  x="238.12" y="655.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::BeginUnusedPeriod() (2 samples, 0.04%)</title><rect x="1012.1" y="901" width="0.5" height="15.0" fill="rgb(247,183,20)" rx="2" ry="2" />
<text  x="1015.13" y="911.5" ></text>
</g>
<g >
<title>content::WebRtcAudioDeviceImpl::PlayoutDelay(unsigned short*) const (1 samples, 0.02%)</title><rect x="280.9" y="677" width="0.2" height="15.0" fill="rgb(226,16,22)" rx="2" ry="2" />
<text  x="283.88" y="687.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="132.0" y="693" width="0.2" height="15.0" fill="rgb(210,42,7)" rx="2" ry="2" />
<text  x="134.96" y="703.5" ></text>
</g>
<g >
<title>small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="574.5" y="789" width="0.3" height="15.0" fill="rgb(216,59,54)" rx="2" ry="2" />
<text  x="577.52" y="799.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="310.3" y="469" width="0.3" height="15.0" fill="rgb(241,194,38)" rx="2" ry="2" />
<text  x="313.32" y="479.5" ></text>
</g>
<g >
<title>DYLD-STUB$$pthread_self (1 samples, 0.02%)</title><rect x="41.7" y="597" width="0.2" height="15.0" fill="rgb(216,228,30)" rx="2" ry="2" />
<text  x="44.66" y="607.5" ></text>
</g>
<g >
<title>webrtc::NetEqImpl::DecodeLoop(std::__Cr::list&lt;webrtc::Packet, std::__Cr::allocator&lt;webrtc::Packet&gt; &gt;*, webrtc::Operations const&amp;, webrtc::AudioDecoder*, int*, webrtc::AudioDecoder::SpeechType*) (42 samples, 0.88%)</title><rect x="1115.3" y="773" width="10.4" height="15.0" fill="rgb(231,107,22)" rx="2" ry="2" />
<text  x="1118.29" y="783.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::GetLastUsedTime() const (4 samples, 0.08%)</title><rect x="1012.6" y="933" width="1.0" height="15.0" fill="rgb(243,42,9)" rx="2" ry="2" />
<text  x="1015.63" y="943.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="281.1" y="597" width="0.3" height="15.0" fill="rgb(223,113,17)" rx="2" ry="2" />
<text  x="284.13" y="607.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="551.5" y="773" width="0.3" height="15.0" fill="rgb(209,154,38)" rx="2" ry="2" />
<text  x="554.51" y="783.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3.vp8_filter_block1d8_v6_ssse3_loop (1 samples, 0.02%)</title><rect x="501.3" y="677" width="0.2" height="15.0" fill="rgb(236,47,33)" rx="2" ry="2" />
<text  x="504.30" y="687.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (4 samples, 0.08%)</title><rect x="660.1" y="693" width="1.0" height="15.0" fill="rgb(250,194,6)" rx="2" ry="2" />
<text  x="663.11" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (4 samples, 0.08%)</title><rect x="257.6" y="613" width="1.0" height="15.0" fill="rgb(214,129,50)" rx="2" ry="2" />
<text  x="260.63" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::SmallPriorityQueue::erase(base::sequence_manager::TaskQueue::QueuePriority) (1 samples, 0.02%)</title><rect x="86.2" y="773" width="0.2" height="15.0" fill="rgb(212,165,10)" rx="2" ry="2" />
<text  x="89.19" y="783.5" ></text>
</g>
<g >
<title>base::internal::DelayedTaskManager::AddDelayedTask(base::internal::Task, base::OnceCallback&lt;void (base::internal::Task)&gt;, scoped_refptr&lt;base::TaskRunner&gt;) (1 samples, 0.02%)</title><rect x="854.8" y="789" width="0.2" height="15.0" fill="rgb(206,39,25)" rx="2" ry="2" />
<text  x="857.80" y="799.5" ></text>
</g>
<g >
<title>ec_dec_icdf (1 samples, 0.02%)</title><rect x="1123.0" y="581" width="0.2" height="15.0" fill="rgb(223,140,37)" rx="2" ry="2" />
<text  x="1125.96" y="591.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="856.0" y="869" width="0.3" height="15.0" fill="rgb(252,149,27)" rx="2" ry="2" />
<text  x="859.04" y="879.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (1 samples, 0.02%)</title><rect x="67.4" y="773" width="0.2" height="15.0" fill="rgb(254,51,29)" rx="2" ry="2" />
<text  x="70.39" y="783.5" ></text>
</g>
<g >
<title>CopyRow_ERMS (6 samples, 0.13%)</title><rect x="531.2" y="725" width="1.5" height="15.0" fill="rgb(236,89,18)" rx="2" ry="2" />
<text  x="534.23" y="735.5" ></text>
</g>
<g >
<title>vp8_hex_search (5 samples, 0.10%)</title><rect x="925.1" y="677" width="1.2" height="15.0" fill="rgb(206,217,7)" rx="2" ry="2" />
<text  x="928.06" y="687.5" ></text>
</g>
<g >
<title>cc::TaskGraphWorkQueue::ScheduleTasks(cc::NamespaceToken, cc::TaskGraph*) (1 samples, 0.02%)</title><rect x="202.7" y="757" width="0.3" height="15.0" fill="rgb(214,20,30)" rx="2" ry="2" />
<text  x="205.71" y="767.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (cc::UniqueNotifier::*)(), base::WeakPtr&lt;cc::UniqueNotifier&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (4 samples, 0.08%)</title><rect x="1069.3" y="885" width="1.0" height="15.0" fill="rgb(215,203,48)" rx="2" ry="2" />
<text  x="1072.28" y="895.5" ></text>
</g>
<g >
<title>base::ConditionVariable::Signal() (2 samples, 0.04%)</title><rect x="203.0" y="741" width="0.5" height="15.0" fill="rgb(225,191,17)" rx="2" ry="2" />
<text  x="205.96" y="751.5" ></text>
</g>
<g >
<title>std::__Cr::__tree_node_base&lt;void*&gt;*&amp; std::__Cr::__tree&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::__map_value_compare&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::less&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__find_equal&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;(std::__Cr::__tree_const_iterator&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, void*&gt;*, long&gt;, std::__Cr::__tree_end_node&lt;std::__Cr::__tree_node_base&lt;void*&gt;*&gt;*&amp;, std::__Cr::__tree_node_base&lt;void*&gt;*&amp;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="1130.1" y="789" width="0.3" height="15.0" fill="rgb(220,4,2)" rx="2" ry="2" />
<text  x="1133.13" y="799.5" ></text>
</g>
<g >
<title>cc::RecordingSource::DetermineIfSolidColor() (1 samples, 0.02%)</title><rect x="24.3" y="565" width="0.3" height="15.0" fill="rgb(217,17,25)" rx="2" ry="2" />
<text  x="27.35" y="575.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (2 samples, 0.04%)</title><rect x="174.0" y="837" width="0.5" height="15.0" fill="rgb(252,72,15)" rx="2" ry="2" />
<text  x="177.01" y="847.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::SendToNetwork(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType) (1 samples, 0.02%)</title><rect x="691.5" y="789" width="0.3" height="15.0" fill="rgb(229,94,6)" rx="2" ry="2" />
<text  x="694.53" y="799.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMS::FrameDeliverer::EnqueueFrame(scoped_refptr&lt;media::VideoFrame&gt;) (4 samples, 0.08%)</title><rect x="174.5" y="837" width="1.0" height="15.0" fill="rgb(217,45,22)" rx="2" ry="2" />
<text  x="177.51" y="847.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="693.8" y="917" width="0.2" height="15.0" fill="rgb(209,73,28)" rx="2" ry="2" />
<text  x="696.76" y="927.5" ></text>
</g>
<g >
<title>blink::HTMLFormControlElement::AttributeChanged(blink::Element::AttributeModificationParams const&amp;) (1 samples, 0.02%)</title><rect x="20.9" y="501" width="0.2" height="15.0" fill="rgb(234,74,45)" rx="2" ry="2" />
<text  x="23.88" y="511.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="718.2" y="885" width="0.3" height="15.0" fill="rgb(233,147,48)" rx="2" ry="2" />
<text  x="721.25" y="895.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1146.0" y="917" width="0.2" height="15.0" fill="rgb(207,17,0)" rx="2" ry="2" />
<text  x="1148.97" y="927.5" ></text>
</g>
<g >
<title>mojo::Connector::Accept(mojo::Message*) (8 samples, 0.17%)</title><rect x="1046.5" y="613" width="2.0" height="15.0" fill="rgb(215,17,29)" rx="2" ry="2" />
<text  x="1049.52" y="623.5" ></text>
</g>
<g >
<title>__psynch_mutexdrop (1 samples, 0.02%)</title><rect x="1022.5" y="885" width="0.3" height="15.0" fill="rgb(205,148,44)" rx="2" ry="2" />
<text  x="1025.52" y="895.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;viz::ClientResourceProvider::ReceiveReturnsFromParent(std::__Cr::vector&lt;viz::ReturnedResource, std::__Cr::allocator&lt;viz::ReturnedResource&gt; &gt;)::$_3, base::internal::PassedWrapper&lt;std::__Cr::unique_ptr&lt;viz::SingleReleaseCallback, std::__Cr::default_delete&lt;viz::SingleReleaseCallback&gt; &gt; &gt;, gpu::SyncToken, bool&gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (6 samples, 0.13%)</title><rect x="1052.2" y="629" width="1.5" height="15.0" fill="rgb(210,220,18)" rx="2" ry="2" />
<text  x="1055.21" y="639.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (8 samples, 0.17%)</title><rect x="271.5" y="661" width="2.0" height="15.0" fill="rgb(254,118,40)" rx="2" ry="2" />
<text  x="274.48" y="671.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 0.04%)</title><rect x="26.6" y="405" width="0.5" height="15.0" fill="rgb(214,209,48)" rx="2" ry="2" />
<text  x="29.57" y="415.5" ></text>
</g>
<g >
<title>vp8_quantize_mb (8 samples, 0.17%)</title><rect x="590.1" y="677" width="2.0" height="15.0" fill="rgb(227,24,17)" rx="2" ry="2" />
<text  x="593.10" y="687.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="1013.4" y="917" width="0.2" height="15.0" fill="rgb(219,48,21)" rx="2" ry="2" />
<text  x="1016.37" y="927.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="29.8" y="677" width="0.2" height="15.0" fill="rgb(254,175,47)" rx="2" ry="2" />
<text  x="32.79" y="687.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (1 samples, 0.02%)</title><rect x="583.9" y="677" width="0.3" height="15.0" fill="rgb(222,59,9)" rx="2" ry="2" />
<text  x="586.92" y="687.5" ></text>
</g>
<g >
<title>void base::internal::Invoker&lt;base::internal::BindState&lt;void (mojo::SimpleWatcher::*)(int, unsigned int, mojo::HandleSignalsState const&amp;), base::WeakPtr&lt;mojo::SimpleWatcher&gt;, int, unsigned int, mojo::HandleSignalsState&gt;, void ()&gt;::RunImpl&lt;void (mojo::SimpleWatcher::*)(int, unsigned int, mojo::HandleSignalsState const&amp;), std::__Cr::tuple&lt;base::WeakPtr&lt;mojo::SimpleWatcher&gt;, int, unsigned int, mojo::HandleSignalsState&gt;, 0ul, 1ul, 2ul, 3ul&gt;(void (mojo::SimpleWatcher::*&amp;&amp;)(int, unsigned int, mojo::HandleSignalsState const&amp;), std::__Cr::tuple&lt;base::WeakPtr&lt;mojo::SimpleWatcher&gt;, int, unsigned int, mojo::HandleSignalsState&gt;&amp;&amp;, std::__Cr::integer_sequence&lt;unsigned long, 0ul, 1ul, 2ul, 3ul&gt;) (7 samples, 0.15%)</title><rect x="1071.5" y="885" width="1.7" height="15.0" fill="rgb(214,224,49)" rx="2" ry="2" />
<text  x="1074.51" y="895.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1148.2" y="805" width="0.2" height="15.0" fill="rgb(208,154,29)" rx="2" ry="2" />
<text  x="1151.19" y="815.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="1020.3" y="949" width="0.2" height="15.0" fill="rgb(253,155,53)" rx="2" ry="2" />
<text  x="1023.30" y="959.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="225.2" y="485" width="0.3" height="15.0" fill="rgb(207,190,41)" rx="2" ry="2" />
<text  x="228.22" y="495.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="486.7" y="661" width="0.2" height="15.0" fill="rgb(230,5,7)" rx="2" ry="2" />
<text  x="489.70" y="671.5" ></text>
</g>
<g >
<title>viz::RenderPass::Create() (1 samples, 0.02%)</title><rect x="1039.3" y="629" width="0.3" height="15.0" fill="rgb(219,27,23)" rx="2" ry="2" />
<text  x="1042.35" y="639.5" ></text>
</g>
<g >
<title>vp8_tree_probs_from_distribution (3 samples, 0.06%)</title><rect x="791.5" y="725" width="0.7" height="15.0" fill="rgb(219,75,35)" rx="2" ry="2" />
<text  x="794.47" y="735.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1080.9" y="869" width="0.3" height="15.0" fill="rgb(226,167,47)" rx="2" ry="2" />
<text  x="1083.91" y="879.5" ></text>
</g>
<g >
<title>webrtc::RemixFrame(unsigned long, webrtc::AudioFrame*) (5 samples, 0.10%)</title><rect x="1137.8" y="869" width="1.2" height="15.0" fill="rgb(206,124,9)" rx="2" ry="2" />
<text  x="1140.80" y="879.5" ></text>
</g>
<g >
<title>IOConnectCallMethod (1 samples, 0.02%)</title><rect x="62.4" y="885" width="0.3" height="15.0" fill="rgb(249,192,6)" rx="2" ry="2" />
<text  x="65.44" y="895.5" ></text>
</g>
<g >
<title>void std::__Cr::vector&lt;base::internal::DelayedTaskManager::DelayedTask, std::__Cr::allocator&lt;base::internal::DelayedTaskManager::DelayedTask&gt; &gt;::__push_back_slow_path&lt;base::internal::DelayedTaskManager::DelayedTask&gt;(base::internal::DelayedTaskManager::DelayedTask&amp;&amp;) (2 samples, 0.04%)</title><rect x="81.7" y="837" width="0.5" height="15.0" fill="rgb(237,195,53)" rx="2" ry="2" />
<text  x="84.74" y="847.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs (3 samples, 0.06%)</title><rect x="924.3" y="661" width="0.8" height="15.0" fill="rgb(245,176,12)" rx="2" ry="2" />
<text  x="927.31" y="671.5" ></text>
</g>
<g >
<title>vp8_yv12_extend_frame_borders_c (3 samples, 0.06%)</title><rect x="649.5" y="741" width="0.7" height="15.0" fill="rgb(254,61,54)" rx="2" ry="2" />
<text  x="652.48" y="751.5" ></text>
</g>
<g >
<title>blink::ComputedStyle::HasGroupingProperty() const (1 samples, 0.02%)</title><rect x="25.8" y="357" width="0.3" height="15.0" fill="rgb(230,4,33)" rx="2" ry="2" />
<text  x="28.83" y="367.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (7 samples, 0.15%)</title><rect x="374.6" y="901" width="1.8" height="15.0" fill="rgb(219,224,17)" rx="2" ry="2" />
<text  x="377.64" y="911.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (6 samples, 0.13%)</title><rect x="373.2" y="901" width="1.4" height="15.0" fill="rgb(250,109,50)" rx="2" ry="2" />
<text  x="376.15" y="911.5" ></text>
</g>
<g >
<title>mach_msg (4 samples, 0.08%)</title><rect x="69.1" y="853" width="1.0" height="15.0" fill="rgb(229,40,22)" rx="2" ry="2" />
<text  x="72.12" y="863.5" ></text>
</g>
<g >
<title>vp8_yv12_extend_frame_borders_c (5 samples, 0.10%)</title><rect x="482.7" y="741" width="1.3" height="15.0" fill="rgb(247,99,48)" rx="2" ry="2" />
<text  x="485.74" y="751.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="195.0" y="853" width="0.3" height="15.0" fill="rgb(248,52,18)" rx="2" ry="2" />
<text  x="198.04" y="863.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="1068.3" y="613" width="0.2" height="15.0" fill="rgb(212,81,3)" rx="2" ry="2" />
<text  x="1071.29" y="623.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (2 samples, 0.04%)</title><rect x="369.4" y="917" width="0.5" height="15.0" fill="rgb(248,172,44)" rx="2" ry="2" />
<text  x="372.44" y="927.5" ></text>
</g>
<g >
<title>base::debug::StackTrace::StackTrace() (1 samples, 0.02%)</title><rect x="376.6" y="901" width="0.3" height="15.0" fill="rgb(232,64,6)" rx="2" ry="2" />
<text  x="379.62" y="911.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="212.1" y="773" width="0.3" height="15.0" fill="rgb(222,49,50)" rx="2" ry="2" />
<text  x="215.11" y="783.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="45.6" y="613" width="0.3" height="15.0" fill="rgb(253,105,37)" rx="2" ry="2" />
<text  x="48.62" y="623.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (8 samples, 0.17%)</title><rect x="271.5" y="677" width="2.0" height="15.0" fill="rgb(251,156,45)" rx="2" ry="2" />
<text  x="274.48" y="687.5" ></text>
</g>
<g >
<title>base::internal::ScopedBlockingCallWithBaseSyncPrimitives::ScopedBlockingCallWithBaseSyncPrimitives(base::BlockingType) (1 samples, 0.02%)</title><rect x="1171.2" y="917" width="0.2" height="15.0" fill="rgb(206,184,54)" rx="2" ry="2" />
<text  x="1174.20" y="927.5" ></text>
</g>
<g >
<title>mojo::core::ports::MessageQueue::HasNextMessage() const (1 samples, 0.02%)</title><rect x="321.5" y="693" width="0.2" height="15.0" fill="rgb(251,25,11)" rx="2" ry="2" />
<text  x="324.45" y="703.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="210.6" y="757" width="0.3" height="15.0" fill="rgb(223,228,38)" rx="2" ry="2" />
<text  x="213.62" y="767.5" ></text>
</g>
<g >
<title>_pthread_body (15 samples, 0.31%)</title><rect x="59.0" y="1029" width="3.7" height="15.0" fill="rgb(209,64,43)" rx="2" ry="2" />
<text  x="61.98" y="1039.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMS::FrameDeliverer::OnVideoFrame(scoped_refptr&lt;media::VideoFrame&gt;) (3 samples, 0.06%)</title><rect x="139.4" y="405" width="0.7" height="15.0" fill="rgb(240,200,10)" rx="2" ry="2" />
<text  x="142.38" y="415.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetStatus(mojo::core::ports::PortRef const&amp;, mojo::core::ports::PortStatus*) (1 samples, 0.02%)</title><rect x="321.5" y="709" width="0.2" height="15.0" fill="rgb(225,9,54)" rx="2" ry="2" />
<text  x="324.45" y="719.5" ></text>
</g>
<g >
<title>sha1_block_data_order_avx (1 samples, 0.02%)</title><rect x="308.3" y="469" width="0.3" height="15.0" fill="rgb(246,106,37)" rx="2" ry="2" />
<text  x="311.34" y="479.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (1 samples, 0.02%)</title><rect x="651.5" y="581" width="0.2" height="15.0" fill="rgb(207,166,46)" rx="2" ry="2" />
<text  x="654.45" y="591.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="377.6" y="805" width="0.3" height="15.0" fill="rgb(237,73,3)" rx="2" ry="2" />
<text  x="380.61" y="815.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (11 samples, 0.23%)</title><rect x="256.9" y="677" width="2.7" height="15.0" fill="rgb(254,57,35)" rx="2" ry="2" />
<text  x="259.88" y="687.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="286.1" y="757" width="0.2" height="15.0" fill="rgb(229,130,10)" rx="2" ry="2" />
<text  x="289.08" y="767.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="265.3" y="597" width="0.2" height="15.0" fill="rgb(244,184,26)" rx="2" ry="2" />
<text  x="268.30" y="607.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (7 samples, 0.15%)</title><rect x="271.7" y="613" width="1.8" height="15.0" fill="rgb(227,161,7)" rx="2" ry="2" />
<text  x="274.73" y="623.5" ></text>
</g>
<g >
<title>gfx::RRectF::GetType() const (1 samples, 0.02%)</title><rect x="1042.3" y="549" width="0.3" height="15.0" fill="rgb(236,153,17)" rx="2" ry="2" />
<text  x="1045.31" y="559.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (5 samples, 0.10%)</title><rect x="344.2" y="821" width="1.2" height="15.0" fill="rgb(229,58,44)" rx="2" ry="2" />
<text  x="347.21" y="831.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="333.3" y="821" width="0.5" height="15.0" fill="rgb(236,7,29)" rx="2" ry="2" />
<text  x="336.32" y="831.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="310.6" y="373" width="0.2" height="15.0" fill="rgb(248,95,22)" rx="2" ry="2" />
<text  x="313.57" y="383.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (3 samples, 0.06%)</title><rect x="367.7" y="933" width="0.8" height="15.0" fill="rgb(230,65,15)" rx="2" ry="2" />
<text  x="370.71" y="943.5" ></text>
</g>
<g >
<title>_platform_memcmp (1 samples, 0.02%)</title><rect x="177.0" y="725" width="0.2" height="15.0" fill="rgb(214,12,35)" rx="2" ry="2" />
<text  x="179.98" y="735.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="30.8" y="565" width="0.2" height="15.0" fill="rgb(241,81,25)" rx="2" ry="2" />
<text  x="33.78" y="575.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="853.8" y="773" width="0.3" height="15.0" fill="rgb(229,110,51)" rx="2" ry="2" />
<text  x="856.81" y="783.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::currentTime() const (1 samples, 0.02%)</title><rect x="20.4" y="549" width="0.2" height="15.0" fill="rgb(231,163,25)" rx="2" ry="2" />
<text  x="23.39" y="559.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="751.4" y="661" width="0.5" height="15.0" fill="rgb(227,189,40)" rx="2" ry="2" />
<text  x="754.40" y="671.5" ></text>
</g>
<g >
<title>base::MessagePumpKqueue::ScheduleWork() (1 samples, 0.02%)</title><rect x="19.9" y="85" width="0.2" height="15.0" fill="rgb(206,6,16)" rx="2" ry="2" />
<text  x="22.90" y="95.5" ></text>
</g>
<g >
<title>base::LazyInstance&lt;base::ThreadLocalPointer&lt;base::FileDescriptorWatcher&gt;, base::internal::LeakyLazyInstanceTraits&lt;base::ThreadLocalPointer&lt;base::FileDescriptorWatcher&gt; &gt; &gt;::Pointer() (1 samples, 0.02%)</title><rect x="571.6" y="917" width="0.2" height="15.0" fill="rgb(231,88,1)" rx="2" ry="2" />
<text  x="574.55" y="927.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="1007.9" y="917" width="0.3" height="15.0" fill="rgb(206,124,53)" rx="2" ry="2" />
<text  x="1010.93" y="927.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="1008.9" y="917" width="0.3" height="15.0" fill="rgb(252,8,51)" rx="2" ry="2" />
<text  x="1011.92" y="927.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="722.7" y="757" width="0.2" height="15.0" fill="rgb(205,155,27)" rx="2" ry="2" />
<text  x="725.70" y="767.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (8 samples, 0.17%)</title><rect x="257.6" y="629" width="2.0" height="15.0" fill="rgb(240,158,32)" rx="2" ry="2" />
<text  x="260.63" y="639.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="132.9" y="693" width="0.3" height="15.0" fill="rgb(231,71,9)" rx="2" ry="2" />
<text  x="135.95" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (4 samples, 0.08%)</title><rect x="276.7" y="629" width="1.0" height="15.0" fill="rgb(243,130,5)" rx="2" ry="2" />
<text  x="279.68" y="639.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (27 samples, 0.57%)</title><rect x="216.1" y="901" width="6.6" height="15.0" fill="rgb(214,205,12)" rx="2" ry="2" />
<text  x="219.07" y="911.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Decoder::ReturnFrame(vpx_image const*, unsigned int, int) (4 samples, 0.08%)</title><rect x="682.1" y="773" width="1.0" height="15.0" fill="rgb(240,166,1)" rx="2" ry="2" />
<text  x="685.13" y="783.5" ></text>
</g>
<g >
<title>media::VideoFrameLayout::CreateWithStrides(media::VideoPixelFormat, gfx::Size const&amp;, std::__Cr::vector&lt;int, std::__Cr::allocator&lt;int&gt; &gt;) (1 samples, 0.02%)</title><rect x="533.2" y="645" width="0.3" height="15.0" fill="rgb(206,103,49)" rx="2" ry="2" />
<text  x="536.21" y="655.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::~RefCountedObject() (1 samples, 0.02%)</title><rect x="274.4" y="613" width="0.3" height="15.0" fill="rgb(211,133,20)" rx="2" ry="2" />
<text  x="277.45" y="623.5" ></text>
</g>
<g >
<title>DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="812.5" y="725" width="0.2" height="15.0" fill="rgb(235,61,33)" rx="2" ry="2" />
<text  x="815.50" y="735.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="168.1" y="661" width="0.2" height="15.0" fill="rgb(252,134,50)" rx="2" ry="2" />
<text  x="171.08" y="671.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_h6_ssse3.filter_block1d16_h6_rowloop_ssse3 (3 samples, 0.06%)</title><rect x="733.6" y="645" width="0.7" height="15.0" fill="rgb(230,131,48)" rx="2" ry="2" />
<text  x="736.58" y="655.5" ></text>
</g>
<g >
<title>vp8_mv_ref_probs (1 samples, 0.02%)</title><rect x="908.7" y="661" width="0.3" height="15.0" fill="rgb(226,69,26)" rx="2" ry="2" />
<text  x="911.73" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (2 samples, 0.04%)</title><rect x="206.4" y="773" width="0.5" height="15.0" fill="rgb(213,193,6)" rx="2" ry="2" />
<text  x="209.42" y="783.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="1181.8" y="821" width="0.3" height="15.0" fill="rgb(234,15,36)" rx="2" ry="2" />
<text  x="1184.84" y="831.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::WriteMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (2 samples, 0.04%)</title><rect x="1041.1" y="549" width="0.5" height="15.0" fill="rgb(230,41,49)" rx="2" ry="2" />
<text  x="1044.08" y="559.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::RtpPacket() (1 samples, 0.02%)</title><rect x="264.8" y="645" width="0.2" height="15.0" fill="rgb(218,149,35)" rx="2" ry="2" />
<text  x="267.80" y="655.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="209.4" y="837" width="0.2" height="15.0" fill="rgb(248,129,12)" rx="2" ry="2" />
<text  x="212.39" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (5 samples, 0.10%)</title><rect x="1028.7" y="789" width="1.2" height="15.0" fill="rgb(237,148,22)" rx="2" ry="2" />
<text  x="1031.71" y="799.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="327.6" y="853" width="0.3" height="15.0" fill="rgb(225,106,54)" rx="2" ry="2" />
<text  x="330.64" y="863.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="551.8" y="789" width="0.2" height="15.0" fill="rgb(214,163,45)" rx="2" ry="2" />
<text  x="554.76" y="799.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="1026.7" y="837" width="0.5" height="15.0" fill="rgb(232,170,33)" rx="2" ry="2" />
<text  x="1029.73" y="847.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="993.6" y="677" width="0.2" height="15.0" fill="rgb(222,25,53)" rx="2" ry="2" />
<text  x="996.58" y="687.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (595 samples, 12.47%)</title><rect x="873.1" y="1013" width="147.2" height="15.0" fill="rgb(229,2,1)" rx="2" ry="2" />
<text  x="876.11" y="1023.5" >base::(anonymous n..</text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="714.5" y="885" width="0.3" height="15.0" fill="rgb(215,96,41)" rx="2" ry="2" />
<text  x="717.54" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (6 samples, 0.13%)</title><rect x="315.8" y="517" width="1.4" height="15.0" fill="rgb(206,1,9)" rx="2" ry="2" />
<text  x="318.76" y="527.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="961.2" y="645" width="0.2" height="15.0" fill="rgb(251,100,27)" rx="2" ry="2" />
<text  x="964.17" y="655.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="367.5" y="901" width="0.2" height="15.0" fill="rgb(242,15,50)" rx="2" ry="2" />
<text  x="370.46" y="911.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateExtension(webrtc::RTPExtensionType, unsigned long) (1 samples, 0.02%)</title><rect x="816.0" y="693" width="0.2" height="15.0" fill="rgb(237,121,6)" rx="2" ry="2" />
<text  x="818.96" y="703.5" ></text>
</g>
<g >
<title>objc_msgSend (2 samples, 0.04%)</title><rect x="1019.8" y="981" width="0.5" height="15.0" fill="rgb(254,81,51)" rx="2" ry="2" />
<text  x="1022.80" y="991.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="32.8" y="581" width="0.2" height="15.0" fill="rgb(250,113,46)" rx="2" ry="2" />
<text  x="35.76" y="591.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="42.4" y="597" width="0.3" height="15.0" fill="rgb(244,55,41)" rx="2" ry="2" />
<text  x="45.41" y="607.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_wake (1 samples, 0.02%)</title><rect x="860.0" y="901" width="0.2" height="15.0" fill="rgb(207,33,21)" rx="2" ry="2" />
<text  x="863.00" y="911.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (4 samples, 0.08%)</title><rect x="1052.7" y="501" width="1.0" height="15.0" fill="rgb(208,51,31)" rx="2" ry="2" />
<text  x="1055.70" y="511.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::ForwardEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (2 samples, 0.04%)</title><rect x="1041.1" y="485" width="0.5" height="15.0" fill="rgb(213,151,0)" rx="2" ry="2" />
<text  x="1044.08" y="495.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="304.6" y="629" width="0.3" height="15.0" fill="rgb(211,149,43)" rx="2" ry="2" />
<text  x="307.63" y="639.5" ></text>
</g>
<g >
<title>base::internal::RegisteredTaskSource::~RegisteredTaskSource() (2 samples, 0.04%)</title><rect x="569.3" y="949" width="0.5" height="15.0" fill="rgb(213,47,39)" rx="2" ry="2" />
<text  x="572.32" y="959.5" ></text>
</g>
<g >
<title>CFRunLoopTimerSetNextFireDate (5 samples, 0.10%)</title><rect x="14.0" y="725" width="1.2" height="15.0" fill="rgb(236,78,50)" rx="2" ry="2" />
<text  x="16.96" y="735.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (1 samples, 0.02%)</title><rect x="1132.6" y="789" width="0.3" height="15.0" fill="rgb(249,57,49)" rx="2" ry="2" />
<text  x="1135.61" y="799.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="1159.3" y="725" width="0.3" height="15.0" fill="rgb(219,89,2)" rx="2" ry="2" />
<text  x="1162.32" y="735.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="190.8" y="741" width="0.3" height="15.0" fill="rgb(207,31,30)" rx="2" ry="2" />
<text  x="193.83" y="751.5" ></text>
</g>
<g >
<title>mojo::StructTraits&lt;network::mojom::IPEndPointDataView, net::IPEndPoint&gt;::Read(network::mojom::IPEndPointDataView, net::IPEndPoint*) (1 samples, 0.02%)</title><rect x="311.8" y="661" width="0.3" height="15.0" fill="rgb(245,19,5)" rx="2" ry="2" />
<text  x="314.80" y="671.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="230.2" y="773" width="0.2" height="15.0" fill="rgb(219,168,45)" rx="2" ry="2" />
<text  x="233.17" y="783.5" ></text>
</g>
<g >
<title>celt_encode_with_ec (2 samples, 0.04%)</title><rect x="994.6" y="741" width="0.5" height="15.0" fill="rgb(226,210,51)" rx="2" ry="2" />
<text  x="997.57" y="751.5" ></text>
</g>
<g >
<title>mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;SkMatrix44&gt;, SkMatrix44 const, false&gt;::GetNext() (1 samples, 0.02%)</title><rect x="1068.5" y="549" width="0.3" height="15.0" fill="rgb(235,51,22)" rx="2" ry="2" />
<text  x="1071.54" y="559.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::PrepareToForwardUserMessage(mojo::core::ports::PortRef const&amp;, mojo::core::ports::Port::State, bool, mojo::core::ports::UserMessageEvent*, mojo::core::ports::NodeName*) (1 samples, 0.02%)</title><rect x="171.0" y="629" width="0.3" height="15.0" fill="rgb(220,168,18)" rx="2" ry="2" />
<text  x="174.04" y="639.5" ></text>
</g>
<g >
<title>silk_gains_quant (1 samples, 0.02%)</title><rect x="853.6" y="693" width="0.2" height="15.0" fill="rgb(248,2,14)" rx="2" ry="2" />
<text  x="856.56" y="703.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::IsShutdownComplete() const (4 samples, 0.08%)</title><rect x="709.8" y="965" width="1.0" height="15.0" fill="rgb(229,103,5)" rx="2" ry="2" />
<text  x="712.84" y="975.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::Encode(webrtc::VideoFrame const&amp;, std::__Cr::vector&lt;webrtc::VideoFrameType, std::__Cr::allocator&lt;webrtc::VideoFrameType&gt; &gt; const*) (320 samples, 6.71%)</title><rect x="883.0" y="805" width="79.2" height="15.0" fill="rgb(226,112,43)" rx="2" ry="2" />
<text  x="886.00" y="815.5" >webrtc::L..</text>
</g>
<g >
<title>cricket::BaseChannel::SendPacket(bool, rtc::CopyOnWriteBuffer*, rtc::PacketOptions const&amp;) (5 samples, 0.10%)</title><rect x="1154.6" y="869" width="1.3" height="15.0" fill="rgb(244,32,32)" rx="2" ry="2" />
<text  x="1157.62" y="879.5" ></text>
</g>
<g >
<title>content::P2PSocketClientImpl::SendWithPacketId(net::IPEndPoint const&amp;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&amp;, rtc::PacketOptions const&amp;, unsigned long long) (7 samples, 0.15%)</title><rect x="235.1" y="677" width="1.7" height="15.0" fill="rgb(224,78,29)" rx="2" ry="2" />
<text  x="238.12" y="687.5" ></text>
</g>
<g >
<title>vp8e_encode (281 samples, 5.89%)</title><rect x="581.7" y="773" width="69.5" height="15.0" fill="rgb(211,36,18)" rx="2" ry="2" />
<text  x="584.69" y="783.5" >vp8e_en..</text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_half_loop (5 samples, 0.10%)</title><rect x="429.8" y="661" width="1.2" height="15.0" fill="rgb(251,44,26)" rx="2" ry="2" />
<text  x="432.80" y="671.5" ></text>
</g>
<g >
<title>I420Copy (2 samples, 0.04%)</title><rect x="840.7" y="757" width="0.5" height="15.0" fill="rgb(221,187,11)" rx="2" ry="2" />
<text  x="843.70" y="767.5" ></text>
</g>
<g >
<title>mojo::Connector::OnHandleReadyInternal(unsigned int) (107 samples, 2.24%)</title><rect x="300.4" y="821" width="26.5" height="15.0" fill="rgb(223,16,35)" rx="2" ry="2" />
<text  x="303.42" y="831.5" >m..</text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="284.6" y="597" width="0.2" height="15.0" fill="rgb(206,9,13)" rx="2" ry="2" />
<text  x="287.59" y="607.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="263.8" y="597" width="0.3" height="15.0" fill="rgb(206,151,47)" rx="2" ry="2" />
<text  x="266.81" y="607.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="707.6" y="965" width="0.3" height="15.0" fill="rgb(217,26,45)" rx="2" ry="2" />
<text  x="710.61" y="975.5" ></text>
</g>
<g >
<title>DYLD-STUB$$base::time_internal::SaturatedAdd(long long, base::TimeDelta) (1 samples, 0.02%)</title><rect x="1049.0" y="661" width="0.2" height="15.0" fill="rgb(253,32,28)" rx="2" ry="2" />
<text  x="1051.99" y="671.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::Write(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (2 samples, 0.04%)</title><rect x="173.3" y="581" width="0.5" height="15.0" fill="rgb(239,221,5)" rx="2" ry="2" />
<text  x="176.27" y="591.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::MoveHoleDownAndFillWithLeafElement(unsigned long, base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&amp;&amp;) (3 samples, 0.06%)</title><rect x="357.6" y="805" width="0.7" height="15.0" fill="rgb(225,43,17)" rx="2" ry="2" />
<text  x="360.57" y="815.5" ></text>
</g>
<g >
<title>base::Histogram::ranges(unsigned int) const (1 samples, 0.02%)</title><rect x="1112.6" y="837" width="0.2" height="15.0" fill="rgb(246,111,44)" rx="2" ry="2" />
<text  x="1115.57" y="847.5" ></text>
</g>
<g >
<title>webrtc::OverusePredictor::Enabled() const (1 samples, 0.02%)</title><rect x="580.7" y="821" width="0.3" height="15.0" fill="rgb(235,45,34)" rx="2" ry="2" />
<text  x="583.70" y="831.5" ></text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="1026.0" y="885" width="0.2" height="15.0" fill="rgb(209,55,11)" rx="2" ry="2" />
<text  x="1028.99" y="895.5" ></text>
</g>
<g >
<title>bool base::internal::QueryCancellationTraits&lt;base::internal::BindState&lt;base::internal::IgnoreResultHelper&lt;bool (mojo::Connector::*)()&gt;, base::WeakPtr&lt;mojo::Connector&gt; &gt; &gt;(base::internal::BindStateBase const*, base::internal::BindStateBase::CancellationQueryMode) (1 samples, 0.02%)</title><rect x="353.9" y="805" width="0.2" height="15.0" fill="rgb(236,186,5)" rx="2" ry="2" />
<text  x="356.86" y="815.5" ></text>
</g>
<g >
<title>blink::PaintInvalidatorContext::ParentContextAccessor::ParentContext() const (1 samples, 0.02%)</title><rect x="27.8" y="341" width="0.3" height="15.0" fill="rgb(254,43,1)" rx="2" ry="2" />
<text  x="30.81" y="351.5" ></text>
</g>
<g >
<title>std::__Cr::vector&lt;gpu::SyncToken, std::__Cr::allocator&lt;gpu::SyncToken&gt; &gt;::push_back(gpu::SyncToken const&amp;) (1 samples, 0.02%)</title><rect x="206.2" y="805" width="0.2" height="15.0" fill="rgb(233,17,6)" rx="2" ry="2" />
<text  x="209.17" y="815.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (2 samples, 0.04%)</title><rect x="115.9" y="757" width="0.5" height="15.0" fill="rgb(206,73,42)" rx="2" ry="2" />
<text  x="118.88" y="767.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateRawExtension(int, unsigned long) (1 samples, 0.02%)</title><rect x="1161.3" y="885" width="0.3" height="15.0" fill="rgb(205,74,54)" rx="2" ry="2" />
<text  x="1164.30" y="895.5" ></text>
</g>
<g >
<title>vpx_post_proc_down_and_across_mb_row_sse2.nextcol (9 samples, 0.19%)</title><rect x="656.2" y="709" width="2.2" height="15.0" fill="rgb(209,159,30)" rx="2" ry="2" />
<text  x="659.16" y="719.5" ></text>
</g>
<g >
<title>webrtc::RtpStreamReceiverController::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (35 samples, 0.73%)</title><rect x="261.1" y="741" width="8.6" height="15.0" fill="rgb(239,29,0)" rx="2" ry="2" />
<text  x="264.09" y="751.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (4 samples, 0.08%)</title><rect x="415.7" y="661" width="1.0" height="15.0" fill="rgb(241,163,37)" rx="2" ry="2" />
<text  x="418.70" y="671.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_nonhalf_y_nonzero (1 samples, 0.02%)</title><rect x="611.1" y="661" width="0.3" height="15.0" fill="rgb(222,10,51)" rx="2" ry="2" />
<text  x="614.13" y="671.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamDecoder::FrameToRender(webrtc::VideoFrame&amp;, absl::optional&lt;unsigned char&gt;, int, webrtc::VideoContentType) (1 samples, 0.02%)</title><rect x="841.2" y="741" width="0.2" height="15.0" fill="rgb(230,93,47)" rx="2" ry="2" />
<text  x="844.19" y="751.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__wrap_iter&lt;std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;*&gt;, bool&gt; base::internal::flat_tree&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;, base::internal::GetKeyFromValuePairFirst&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;, std::__Cr::less&lt;void&gt; &gt;::emplace_key_args&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt; &gt;(std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; const&amp;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;&amp;&amp;, std::__Cr::unique_ptr&lt;base::Value, std::__Cr::default_delete&lt;base::Value&gt; &gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="208.2" y="805" width="0.2" height="15.0" fill="rgb(220,157,2)" rx="2" ry="2" />
<text  x="211.15" y="815.5" ></text>
</g>
<g >
<title>HMAC_Update (3 samples, 0.06%)</title><rect x="307.8" y="485" width="0.8" height="15.0" fill="rgb(212,207,19)" rx="2" ry="2" />
<text  x="310.84" y="495.5" ></text>
</g>
<g >
<title>vp8_encode_inter16x16 (39 samples, 0.82%)</title><rect x="889.4" y="693" width="9.7" height="15.0" fill="rgb(222,115,48)" rx="2" ry="2" />
<text  x="892.43" y="703.5" ></text>
</g>
<g >
<title>webrtc::RemoteEstimatorProxy::IncomingPacket(long long, unsigned long, webrtc::RTPHeader const&amp;) (6 samples, 0.13%)</title><rect x="269.7" y="725" width="1.5" height="15.0" fill="rgb(226,56,26)" rx="2" ry="2" />
<text  x="272.75" y="735.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) (31 samples, 0.65%)</title><rect x="863.5" y="965" width="7.6" height="15.0" fill="rgb(225,161,33)" rx="2" ry="2" />
<text  x="866.46" y="975.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::RunsTasksInCurrentSequence() const (2 samples, 0.04%)</title><rect x="132.2" y="757" width="0.5" height="15.0" fill="rgb(234,195,44)" rx="2" ry="2" />
<text  x="135.21" y="767.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="138.1" y="485" width="0.5" height="15.0" fill="rgb(228,6,41)" rx="2" ry="2" />
<text  x="141.14" y="495.5" ></text>
</g>
<g >
<title>mach_msg (4 samples, 0.08%)</title><rect x="567.6" y="933" width="1.0" height="15.0" fill="rgb(239,41,4)" rx="2" ry="2" />
<text  x="570.59" y="943.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetSingletonAllowed(bool) (14 samples, 0.29%)</title><rect x="714.8" y="917" width="3.4" height="15.0" fill="rgb(216,54,54)" rx="2" ry="2" />
<text  x="717.78" y="927.5" ></text>
</g>
<g >
<title>vp8_receive_raw_frame (4 samples, 0.08%)</title><rect x="960.2" y="757" width="1.0" height="15.0" fill="rgb(254,115,19)" rx="2" ry="2" />
<text  x="963.18" y="767.5" ></text>
</g>
<g >
<title>default_zone_malloc (1 samples, 0.02%)</title><rect x="107.2" y="709" width="0.3" height="15.0" fill="rgb(241,169,30)" rx="2" ry="2" />
<text  x="110.22" y="719.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="83.5" y="757" width="0.2" height="15.0" fill="rgb(228,40,12)" rx="2" ry="2" />
<text  x="86.47" y="767.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1073.0" y="773" width="0.2" height="15.0" fill="rgb(218,188,15)" rx="2" ry="2" />
<text  x="1075.99" y="783.5" ></text>
</g>
<g >
<title>thread_start (69 samples, 1.45%)</title><rect x="70.1" y="1061" width="17.1" height="15.0" fill="rgb(244,71,36)" rx="2" ry="2" />
<text  x="73.11" y="1071.5" ></text>
</g>
<g >
<title>cc::Scheduler::ScheduleBeginImplFrameDeadline() (1 samples, 0.02%)</title><rect x="1072.0" y="565" width="0.2" height="15.0" fill="rgb(217,122,11)" rx="2" ry="2" />
<text  x="1075.00" y="575.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="577.5" y="885" width="0.2" height="15.0" fill="rgb(216,153,53)" rx="2" ry="2" />
<text  x="580.49" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::MaybeReportIpcTaskQueuedFromAnyThreadLocked(base::sequence_manager::Task*, char const*) (1 samples, 0.02%)</title><rect x="226.2" y="421" width="0.3" height="15.0" fill="rgb(215,158,1)" rx="2" ry="2" />
<text  x="229.21" y="431.5" ></text>
</g>
<g >
<title>webrtc::TimestampScaler::ToExternal(unsigned int) const (1 samples, 0.02%)</title><rect x="1129.4" y="789" width="0.2" height="15.0" fill="rgb(208,74,43)" rx="2" ry="2" />
<text  x="1132.39" y="799.5" ></text>
</g>
<g >
<title>posix_memalign (2 samples, 0.04%)</title><rect x="1080.4" y="869" width="0.5" height="15.0" fill="rgb(207,175,46)" rx="2" ry="2" />
<text  x="1083.41" y="879.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="717.8" y="901" width="0.4" height="15.0" fill="rgb(216,211,50)" rx="2" ry="2" />
<text  x="720.75" y="911.5" ></text>
</g>
<g >
<title>mojo::Connector::DispatchMessage(mojo::Message) (6 samples, 0.13%)</title><rect x="1071.5" y="805" width="1.5" height="15.0" fill="rgb(217,133,24)" rx="2" ry="2" />
<text  x="1074.51" y="815.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1159.3" y="789" width="0.3" height="15.0" fill="rgb(239,74,24)" rx="2" ry="2" />
<text  x="1162.32" y="799.5" ></text>
</g>
<g >
<title>webrtc::RateStatistics::EraseOld(long long) (1 samples, 0.02%)</title><rect x="816.7" y="693" width="0.3" height="15.0" fill="rgb(231,100,35)" rx="2" ry="2" />
<text  x="819.70" y="703.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3.vp8_filter_block1d8_v4_ssse3_loop (2 samples, 0.04%)</title><rect x="735.6" y="645" width="0.5" height="15.0" fill="rgb(205,16,0)" rx="2" ry="2" />
<text  x="738.56" y="655.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="275.9" y="773" width="0.3" height="15.0" fill="rgb(244,10,32)" rx="2" ry="2" />
<text  x="278.93" y="783.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;base::internal::IgnoreResultHelper&lt;bool (mojo::Connector::*)()&gt;, base::WeakPtr&lt;mojo::Connector&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (16 samples, 0.34%)</title><rect x="224.7" y="869" width="4.0" height="15.0" fill="rgb(235,3,13)" rx="2" ry="2" />
<text  x="227.73" y="879.5" ></text>
</g>
<g >
<title>base::TimeTicks::Now() (1 samples, 0.02%)</title><rect x="1028.2" y="917" width="0.3" height="15.0" fill="rgb(214,13,4)" rx="2" ry="2" />
<text  x="1031.21" y="927.5" ></text>
</g>
<g >
<title>__psynch_cvsignal (1 samples, 0.02%)</title><rect x="68.6" y="821" width="0.3" height="15.0" fill="rgb(229,30,42)" rx="2" ry="2" />
<text  x="71.63" y="831.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="32.0" y="661" width="0.3" height="15.0" fill="rgb(221,84,40)" rx="2" ry="2" />
<text  x="35.02" y="671.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="369.9" y="901" width="0.3" height="15.0" fill="rgb(235,198,10)" rx="2" ry="2" />
<text  x="372.94" y="911.5" ></text>
</g>
<g >
<title>cc::TileManager::PrepareTiles(cc::GlobalStateThatImpactsTilePriority const&amp;) (2 samples, 0.04%)</title><rect x="1067.5" y="789" width="0.5" height="15.0" fill="rgb(224,81,29)" rx="2" ry="2" />
<text  x="1070.55" y="799.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::GetLastUsedTime() const (2 samples, 0.04%)</title><rect x="700.2" y="933" width="0.5" height="15.0" fill="rgb(207,28,20)" rx="2" ry="2" />
<text  x="703.19" y="943.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Set(void*) (1 samples, 0.02%)</title><rect x="114.9" y="725" width="0.2" height="15.0" fill="rgb(249,16,24)" rx="2" ry="2" />
<text  x="117.89" y="735.5" ></text>
</g>
<g >
<title>scheduling_metrics::TaskDurationMetricReporter&lt;blink::scheduler::MainThreadTaskQueue::QueueType&gt;::RecordTask(blink::scheduler::MainThreadTaskQueue::QueueType, base::TimeDelta) (1 samples, 0.02%)</title><rect x="36.5" y="613" width="0.2" height="15.0" fill="rgb(210,18,33)" rx="2" ry="2" />
<text  x="39.47" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (4 samples, 0.08%)</title><rect x="140.1" y="389" width="1.0" height="15.0" fill="rgb(217,76,42)" rx="2" ry="2" />
<text  x="143.12" y="399.5" ></text>
</g>
<g >
<title>non-virtual thunk to gpu::CommandBufferProxyImpl::EnsureWorkVisible() (16 samples, 0.34%)</title><rect x="1033.9" y="565" width="4.0" height="15.0" fill="rgb(217,43,47)" rx="2" ry="2" />
<text  x="1036.90" y="575.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMSCompositor::EnqueueFrame(scoped_refptr&lt;media::VideoFrame&gt;) (4 samples, 0.08%)</title><rect x="174.5" y="805" width="1.0" height="15.0" fill="rgb(246,26,8)" rx="2" ry="2" />
<text  x="177.51" y="815.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="263.8" y="613" width="0.3" height="15.0" fill="rgb(238,140,43)" rx="2" ry="2" />
<text  x="266.81" y="623.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Set(void*) (1 samples, 0.02%)</title><rect x="1079.2" y="933" width="0.2" height="15.0" fill="rgb(235,211,46)" rx="2" ry="2" />
<text  x="1082.17" y="943.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::OnUserMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (41 samples, 0.86%)</title><rect x="108.2" y="805" width="10.2" height="15.0" fill="rgb(239,143,13)" rx="2" ry="2" />
<text  x="111.21" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::RemoveAllCanceledTasksFromFront() (1 samples, 0.02%)</title><rect x="45.6" y="661" width="0.3" height="15.0" fill="rgb(248,18,10)" rx="2" ry="2" />
<text  x="48.62" y="671.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="355.1" y="789" width="0.2" height="15.0" fill="rgb(246,85,15)" rx="2" ry="2" />
<text  x="358.09" y="799.5" ></text>
</g>
<g >
<title>media::AudioDeviceThread::ThreadMain  0x6593f7 (64 samples, 1.34%)</title><rect x="1087.1" y="1077" width="15.8" height="15.0" fill="rgb(243,111,29)" rx="2" ry="2" />
<text  x="1090.09" y="1087.5" ></text>
</g>
<g >
<title>base::internal::AssertBaseSyncPrimitivesAllowed() (1 samples, 0.02%)</title><rect x="1171.2" y="885" width="0.2" height="15.0" fill="rgb(218,127,16)" rx="2" ry="2" />
<text  x="1174.20" y="895.5" ></text>
</g>
<g >
<title>base::MessagePumpKqueue::ProcessEvents(int) (224 samples, 4.70%)</title><rect x="89.9" y="901" width="55.4" height="15.0" fill="rgb(230,108,38)" rx="2" ry="2" />
<text  x="92.90" y="911.5" >base:..</text>
</g>
<g >
<title>base::sequence_manager::TimeDomain::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (1 samples, 0.02%)</title><rect x="211.4" y="821" width="0.2" height="15.0" fill="rgb(221,80,20)" rx="2" ry="2" />
<text  x="214.37" y="831.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="135.7" y="549" width="0.2" height="15.0" fill="rgb(254,225,42)" rx="2" ry="2" />
<text  x="138.67" y="559.5" ></text>
</g>
<g >
<title>base::ScopedDeferTaskPosting::~ScopedDeferTaskPosting() (1 samples, 0.02%)</title><rect x="315.8" y="485" width="0.2" height="15.0" fill="rgb(231,141,49)" rx="2" ry="2" />
<text  x="318.76" y="495.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (1 samples, 0.02%)</title><rect x="558.2" y="917" width="0.2" height="15.0" fill="rgb(219,25,28)" rx="2" ry="2" />
<text  x="561.19" y="927.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (2 samples, 0.04%)</title><rect x="272.0" y="533" width="0.5" height="15.0" fill="rgb(207,214,49)" rx="2" ry="2" />
<text  x="274.97" y="543.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (1 samples, 0.02%)</title><rect x="815.5" y="613" width="0.2" height="15.0" fill="rgb(245,207,45)" rx="2" ry="2" />
<text  x="818.47" y="623.5" ></text>
</g>
<g >
<title>MojoWriteMessage (1 samples, 0.02%)</title><rect x="1072.5" y="501" width="0.2" height="15.0" fill="rgb(250,210,27)" rx="2" ry="2" />
<text  x="1075.49" y="511.5" ></text>
</g>
<g >
<title>blink::HTMLElement::AttributeChanged(blink::Element::AttributeModificationParams const&amp;) (1 samples, 0.02%)</title><rect x="20.9" y="485" width="0.2" height="15.0" fill="rgb(236,49,47)" rx="2" ry="2" />
<text  x="23.88" y="495.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::push_back(base::sequence_manager::Task) (1 samples, 0.02%)</title><rect x="140.9" y="341" width="0.2" height="15.0" fill="rgb(210,35,15)" rx="2" ry="2" />
<text  x="143.86" y="351.5" ></text>
</g>
<g >
<title>vp8_short_fdct8x4_sse2 (22 samples, 0.46%)</title><rect x="622.5" y="693" width="5.5" height="15.0" fill="rgb(246,112,17)" rx="2" ry="2" />
<text  x="625.51" y="703.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="712.6" y="933" width="0.2" height="15.0" fill="rgb(246,201,53)" rx="2" ry="2" />
<text  x="715.56" y="943.5" ></text>
</g>
<g >
<title>HMAC_Final (2 samples, 0.04%)</title><rect x="225.5" y="533" width="0.5" height="15.0" fill="rgb(232,151,19)" rx="2" ry="2" />
<text  x="228.47" y="543.5" ></text>
</g>
<g >
<title>cc::Scheduler::OnBeginImplFrameDeadline() (8 samples, 0.17%)</title><rect x="1067.1" y="853" width="1.9" height="15.0" fill="rgb(219,160,28)" rx="2" ry="2" />
<text  x="1070.05" y="863.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="292.5" y="581" width="0.3" height="15.0" fill="rgb(213,95,32)" rx="2" ry="2" />
<text  x="295.51" y="591.5" ></text>
</g>
<g >
<title>webrtc::GoogCcNetworkController::OnSentPacket(webrtc::SentPacket) (2 samples, 0.04%)</title><rect x="381.1" y="837" width="0.5" height="15.0" fill="rgb(222,106,38)" rx="2" ry="2" />
<text  x="384.07" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::RequiresTaskTiming() const (6 samples, 0.13%)</title><rect x="350.4" y="837" width="1.5" height="15.0" fill="rgb(233,15,22)" rx="2" ry="2" />
<text  x="353.39" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::DidRunTask() (15 samples, 0.31%)</title><rect x="331.3" y="885" width="3.8" height="15.0" fill="rgb(224,104,27)" rx="2" ry="2" />
<text  x="334.35" y="895.5" ></text>
</g>
<g >
<title>small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="1153.6" y="741" width="0.3" height="15.0" fill="rgb(205,182,5)" rx="2" ry="2" />
<text  x="1156.64" y="751.5" ></text>
</g>
<g >
<title>opus_encode_native (40 samples, 0.84%)</title><rect x="994.1" y="757" width="9.9" height="15.0" fill="rgb(221,107,29)" rx="2" ry="2" />
<text  x="997.08" y="767.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_half_loop (3 samples, 0.06%)</title><rect x="917.1" y="661" width="0.8" height="15.0" fill="rgb(238,13,43)" rx="2" ry="2" />
<text  x="920.14" y="671.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (2 samples, 0.04%)</title><rect x="889.9" y="661" width="0.5" height="15.0" fill="rgb(225,203,46)" rx="2" ry="2" />
<text  x="892.93" y="671.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::SendToNetwork(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType) (1 samples, 0.02%)</title><rect x="652.2" y="693" width="0.2" height="15.0" fill="rgb(244,192,13)" rx="2" ry="2" />
<text  x="655.20" y="703.5" ></text>
</g>
<g >
<title>rtc::ToHex(int) (1 samples, 0.02%)</title><rect x="53.8" y="917" width="0.2" height="15.0" fill="rgb(210,202,0)" rx="2" ry="2" />
<text  x="56.79" y="927.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="230.4" y="805" width="0.3" height="15.0" fill="rgb(217,188,32)" rx="2" ry="2" />
<text  x="233.42" y="815.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Enter() const (1 samples, 0.02%)</title><rect x="1086.6" y="885" width="0.2" height="15.0" fill="rgb(254,142,27)" rx="2" ry="2" />
<text  x="1089.60" y="895.5" ></text>
</g>
<g >
<title>blink::(anonymous namespace)::CanOmitOverflowClip(blink::LayoutObject const&amp;) (1 samples, 0.02%)</title><rect x="28.6" y="437" width="0.2" height="15.0" fill="rgb(214,80,12)" rx="2" ry="2" />
<text  x="31.55" y="447.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;long long, webrtc::PacketFeedback&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;long long, webrtc::PacketFeedback&gt;, void*&gt;*, long&gt;, bool&gt; std::__Cr::__tree&lt;std::__Cr::__value_type&lt;long long, webrtc::PacketFeedback&gt;, std::__Cr::__map_value_compare&lt;long long, std::__Cr::__value_type&lt;long long, webrtc::PacketFeedback&gt;, std::__Cr::less&lt;long long&gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;long long, webrtc::PacketFeedback&gt; &gt; &gt;::__emplace_unique_key_args&lt;long long, std::__Cr::pair&lt;long long, webrtc::PacketFeedback&gt; &gt;(long long const&amp;, std::__Cr::pair&lt;long long, webrtc::PacketFeedback&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="1148.2" y="837" width="0.2" height="15.0" fill="rgb(253,155,38)" rx="2" ry="2" />
<text  x="1151.19" y="847.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="260.8" y="597" width="0.3" height="15.0" fill="rgb(244,129,24)" rx="2" ry="2" />
<text  x="263.84" y="607.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="194.8" y="869" width="0.5" height="15.0" fill="rgb(211,31,49)" rx="2" ry="2" />
<text  x="197.79" y="879.5" ></text>
</g>
<g >
<title>content::ContentMainRunnerImpl::Run(bool) (171 samples, 3.58%)</title><rect x="10.0" y="981" width="42.3" height="15.0" fill="rgb(220,48,3)" rx="2" ry="2" />
<text  x="13.00" y="991.5" >con..</text>
</g>
<g >
<title>base::internal::(anonymous namespace)::WorkerThreadDelegate::EnqueueTaskSource(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="1020.8" y="949" width="0.5" height="15.0" fill="rgb(250,120,23)" rx="2" ry="2" />
<text  x="1023.79" y="959.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::WriteMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (6 samples, 0.13%)</title><rect x="166.3" y="693" width="1.5" height="15.0" fill="rgb(209,132,26)" rx="2" ry="2" />
<text  x="169.34" y="703.5" ></text>
</g>
<g >
<title>base::internal::TaskTrackerPosix::RunOrSkipTask(base::internal::Task, base::internal::TaskSource*, base::TaskTraits const&amp;, bool) (493 samples, 10.34%)</title><rect x="570.8" y="949" width="122.0" height="15.0" fill="rgb(224,112,10)" rx="2" ry="2" />
<text  x="573.81" y="959.5" >base::internal:..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::RequiresTaskTiming() const (5 samples, 0.10%)</title><rect x="346.4" y="821" width="1.3" height="15.0" fill="rgb(247,76,4)" rx="2" ry="2" />
<text  x="349.44" y="831.5" ></text>
</g>
<g >
<title>blink::EventTarget::FireEventListeners(blink::Event&amp;, blink::EventTargetData*, blink::HeapVector&lt;blink::RegisteredEventListener, 1u&gt;&amp;) (8 samples, 0.17%)</title><rect x="20.4" y="581" width="2.0" height="15.0" fill="rgb(205,39,9)" rx="2" ry="2" />
<text  x="23.39" y="591.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (1 samples, 0.02%)</title><rect x="1006.2" y="789" width="0.2" height="15.0" fill="rgb(232,44,31)" rx="2" ry="2" />
<text  x="1009.20" y="799.5" ></text>
</g>
<g >
<title>webrtc::internal::Call::NotifyBweOfReceivedPacket(webrtc::RtpPacketReceived const&amp;, webrtc::MediaType) (15 samples, 0.31%)</title><rect x="269.7" y="741" width="3.8" height="15.0" fill="rgb(240,178,54)" rx="2" ry="2" />
<text  x="272.75" y="751.5" ></text>
</g>
<g >
<title>cricket::WebRtcVideoChannel::WebRtcVideoReceiveStream::OnFrame(webrtc::VideoFrame const&amp;) (2 samples, 0.04%)</title><rect x="993.1" y="709" width="0.5" height="15.0" fill="rgb(217,16,12)" rx="2" ry="2" />
<text  x="996.09" y="719.5" ></text>
</g>
<g >
<title>webrtc::internal::Call::NotifyBweOfReceivedPacket(webrtc::RtpPacketReceived const&amp;, webrtc::MediaType) (6 samples, 0.13%)</title><rect x="281.6" y="741" width="1.5" height="15.0" fill="rgb(237,205,7)" rx="2" ry="2" />
<text  x="284.62" y="751.5" ></text>
</g>
<g >
<title>content::CategorizedWorkerPool::Run(std::__Cr::vector&lt;cc::TaskCategory, std::__Cr::allocator&lt;cc::TaskCategory&gt; &gt; const&amp;, base::ConditionVariable*) (12 samples, 0.25%)</title><rect x="62.7" y="997" width="3.0" height="15.0" fill="rgb(235,4,19)" rx="2" ry="2" />
<text  x="65.69" y="1007.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="558.4" y="901" width="0.3" height="15.0" fill="rgb(249,149,21)" rx="2" ry="2" />
<text  x="561.44" y="911.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetStatus(mojo::core::ports::PortRef const&amp;, mojo::core::ports::PortStatus*) (1 samples, 0.02%)</title><rect x="245.3" y="533" width="0.2" height="15.0" fill="rgb(234,166,30)" rx="2" ry="2" />
<text  x="248.26" y="543.5" ></text>
</g>
<g >
<title>_CFAutoreleasePoolPop (1 samples, 0.02%)</title><rect x="213.8" y="901" width="0.3" height="15.0" fill="rgb(232,31,49)" rx="2" ry="2" />
<text  x="216.84" y="911.5" ></text>
</g>
<g >
<title>non-virtual thunk to cc::ProxyImpl::DidNotProduceFrame(viz::BeginFrameAck const&amp;) (1 samples, 0.02%)</title><rect x="1072.0" y="549" width="0.2" height="15.0" fill="rgb(244,198,0)" rx="2" ry="2" />
<text  x="1075.00" y="559.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="32.8" y="549" width="0.2" height="15.0" fill="rgb(251,135,7)" rx="2" ry="2" />
<text  x="35.76" y="559.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (2 samples, 0.04%)</title><rect x="180.9" y="853" width="0.5" height="15.0" fill="rgb(244,1,31)" rx="2" ry="2" />
<text  x="183.94" y="863.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;mojo::ArrayDataView&lt;signed char&gt;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&gt;::Serialize(std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&amp;, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;signed char&gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (3 samples, 0.06%)</title><rect x="252.7" y="645" width="0.7" height="15.0" fill="rgb(218,201,2)" rx="2" ry="2" />
<text  x="255.68" y="655.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::WriteMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (5 samples, 0.10%)</title><rect x="172.5" y="709" width="1.3" height="15.0" fill="rgb(226,137,41)" rx="2" ry="2" />
<text  x="175.53" y="719.5" ></text>
</g>
<g >
<title>vp8_lookahead_push (5 samples, 0.10%)</title><rect x="814.0" y="741" width="1.2" height="15.0" fill="rgb(212,9,52)" rx="2" ry="2" />
<text  x="816.98" y="751.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="381.8" y="789" width="0.3" height="15.0" fill="rgb(217,136,0)" rx="2" ry="2" />
<text  x="384.81" y="799.5" ></text>
</g>
<g >
<title>evaluate_inter_mode (8 samples, 0.17%)</title><rect x="597.0" y="677" width="2.0" height="15.0" fill="rgb(234,64,39)" rx="2" ry="2" />
<text  x="600.03" y="687.5" ></text>
</g>
<g >
<title>mojo::core::Core::DestroyMessage(unsigned long) (1 samples, 0.02%)</title><rect x="141.1" y="597" width="0.3" height="15.0" fill="rgb(225,30,45)" rx="2" ry="2" />
<text  x="144.11" y="607.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (2 samples, 0.04%)</title><rect x="267.0" y="517" width="0.5" height="15.0" fill="rgb(231,226,50)" rx="2" ry="2" />
<text  x="270.03" y="527.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (1 samples, 0.02%)</title><rect x="909.7" y="645" width="0.3" height="15.0" fill="rgb(222,140,4)" rx="2" ry="2" />
<text  x="912.72" y="655.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="717.8" y="821" width="0.4" height="15.0" fill="rgb(245,62,17)" rx="2" ry="2" />
<text  x="720.75" y="831.5" ></text>
</g>
<g >
<title>vpx_subtract_block_sse2.loop_16 (4 samples, 0.08%)</title><rect x="455.3" y="693" width="1.0" height="15.0" fill="rgb(247,183,48)" rx="2" ry="2" />
<text  x="458.28" y="703.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::MallocImpl(base::allocator::AllocatorDispatch const*, unsigned long, void*) (1 samples, 0.02%)</title><rect x="716.8" y="805" width="0.2" height="15.0" fill="rgb(226,190,14)" rx="2" ry="2" />
<text  x="719.76" y="815.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (4 samples, 0.08%)</title><rect x="283.4" y="661" width="0.9" height="15.0" fill="rgb(249,8,7)" rx="2" ry="2" />
<text  x="286.35" y="671.5" ></text>
</g>
<g >
<title>base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread::ScopedSetSequenceLocalStorageMapForCurrentThread(base::internal::SequenceLocalStorageMap*) (1 samples, 0.02%)</title><rect x="881.5" y="917" width="0.3" height="15.0" fill="rgb(236,179,50)" rx="2" ry="2" />
<text  x="884.52" y="927.5" ></text>
</g>
<g >
<title>webrtc::video_coding::RtpFrameObject::~RtpFrameObject() (1 samples, 0.02%)</title><rect x="841.4" y="837" width="0.3" height="15.0" fill="rgb(228,185,36)" rx="2" ry="2" />
<text  x="844.44" y="847.5" ></text>
</g>
<g >
<title>blink::GCTaskObserver::DidProcessTask(base::PendingTask const&amp;) (1 samples, 0.02%)</title><rect x="38.0" y="677" width="0.2" height="15.0" fill="rgb(237,33,46)" rx="2" ry="2" />
<text  x="40.95" y="687.5" ></text>
</g>
<g >
<title>mojo::internal::ArraySerializationHelper&lt;mojo::internal::Pointer&lt;viz::mojom::internal::ReturnedResource_Data&gt;, false, false&gt;::ValidateCaller&lt;viz::mojom::internal::ReturnedResource_Data, false&gt;::Run(mojo::internal::Pointer&lt;viz::mojom::internal::ReturnedResource_Data&gt; const&amp;, mojo::internal::ValidationContext*, mojo::internal::ContainerValidateParams const*) (1 samples, 0.02%)</title><rect x="1054.2" y="661" width="0.2" height="15.0" fill="rgb(236,156,37)" rx="2" ry="2" />
<text  x="1057.19" y="671.5" ></text>
</g>
<g >
<title>silk_NSQ_del_dec_c (23 samples, 0.48%)</title><rect x="844.7" y="693" width="5.6" height="15.0" fill="rgb(213,206,49)" rx="2" ry="2" />
<text  x="847.66" y="703.5" ></text>
</g>
<g >
<title>mach_msg_send (1 samples, 0.02%)</title><rect x="652.7" y="549" width="0.2" height="15.0" fill="rgb(244,223,54)" rx="2" ry="2" />
<text  x="655.69" y="559.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::CopyVideoFrameToGpuMemoryBuffers(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*) (3 samples, 0.06%)</title><rect x="64.9" y="933" width="0.8" height="15.0" fill="rgb(212,21,6)" rx="2" ry="2" />
<text  x="67.92" y="943.5" ></text>
</g>
<g >
<title>cc::SolidColorAnalyzer::DetermineIfSolidColor(cc::PaintOpBuffer const*, gfx::Rect const&amp;, int, std::__Cr::vector&lt;unsigned long, std::__Cr::allocator&lt;unsigned long&gt; &gt; const*) (1 samples, 0.02%)</title><rect x="24.3" y="533" width="0.3" height="15.0" fill="rgb(253,19,9)" rx="2" ry="2" />
<text  x="27.35" y="543.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="1163.0" y="869" width="0.3" height="15.0" fill="rgb(244,211,14)" rx="2" ry="2" />
<text  x="1166.04" y="879.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (19 samples, 0.40%)</title><rect x="286.3" y="725" width="4.7" height="15.0" fill="rgb(229,135,13)" rx="2" ry="2" />
<text  x="289.32" y="735.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="343.0" y="805" width="0.5" height="15.0" fill="rgb(206,70,10)" rx="2" ry="2" />
<text  x="345.97" y="815.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (2 samples, 0.04%)</title><rect x="1140.0" y="981" width="0.5" height="15.0" fill="rgb(208,192,14)" rx="2" ry="2" />
<text  x="1143.03" y="991.5" ></text>
</g>
<g >
<title>silk_decode_frame (8 samples, 0.17%)</title><rect x="1121.2" y="629" width="2.0" height="15.0" fill="rgb(236,31,26)" rx="2" ry="2" />
<text  x="1124.23" y="639.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="551.3" y="805" width="0.2" height="15.0" fill="rgb(227,113,43)" rx="2" ry="2" />
<text  x="554.27" y="815.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="349.7" y="757" width="0.2" height="15.0" fill="rgb(247,56,48)" rx="2" ry="2" />
<text  x="352.65" y="767.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="360.3" y="869" width="0.2" height="15.0" fill="rgb(205,74,34)" rx="2" ry="2" />
<text  x="363.29" y="879.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="961.7" y="677" width="0.2" height="15.0" fill="rgb(218,159,49)" rx="2" ry="2" />
<text  x="964.67" y="687.5" ></text>
</g>
<g >
<title>malloc (7 samples, 0.15%)</title><rect x="374.6" y="885" width="1.8" height="15.0" fill="rgb(247,225,47)" rx="2" ry="2" />
<text  x="377.64" y="895.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="578.2" y="885" width="0.3" height="15.0" fill="rgb(230,228,34)" rx="2" ry="2" />
<text  x="581.23" y="895.5" ></text>
</g>
<g >
<title>base::Thread::ThreadMain  0x644ddc (597 samples, 12.52%)</title><rect x="214.3" y="1077" width="147.7" height="15.0" fill="rgb(237,91,54)" rx="2" ry="2" />
<text  x="217.34" y="1087.5" >base::Thread::Thre..</text>
</g>
<g >
<title>cricket::ProxyConnection::Send(void const*, unsigned long, rtc::PacketOptions const&amp;) (7 samples, 0.15%)</title><rect x="235.1" y="741" width="1.7" height="15.0" fill="rgb(247,210,17)" rx="2" ry="2" />
<text  x="238.12" y="751.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;mojo_base::mojom::UnguessableTokenDataView, base::UnguessableToken const&gt;::Serialize(base::UnguessableToken const&amp;, mojo::internal::Buffer*, mojo_base::mojom::internal::UnguessableToken_Data::BufferWriter*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1043.3" y="613" width="0.3" height="15.0" fill="rgb(228,128,21)" rx="2" ry="2" />
<text  x="1046.30" y="623.5" ></text>
</g>
<g >
<title>vpx_variance8x8_sse2 (1 samples, 0.02%)</title><rect x="404.1" y="645" width="0.2" height="15.0" fill="rgb(237,153,43)" rx="2" ry="2" />
<text  x="407.08" y="655.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="327.1" y="853" width="0.3" height="15.0" fill="rgb(212,129,14)" rx="2" ry="2" />
<text  x="330.14" y="863.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::CanGetWorkLockRequired(base::internal::WorkerThread*) (12 samples, 0.25%)</title><rect x="1010.6" y="949" width="3.0" height="15.0" fill="rgb(235,204,20)" rx="2" ry="2" />
<text  x="1013.65" y="959.5" ></text>
</g>
<g >
<title>vp8_encode_bool (3 samples, 0.06%)</title><rect x="944.6" y="725" width="0.7" height="15.0" fill="rgb(245,196,48)" rx="2" ry="2" />
<text  x="947.60" y="735.5" ></text>
</g>
<g >
<title>szone_free (1 samples, 0.02%)</title><rect x="243.8" y="485" width="0.2" height="15.0" fill="rgb(219,86,30)" rx="2" ry="2" />
<text  x="246.77" y="495.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::RunTask((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (461 samples, 9.66%)</title><rect x="578.7" y="869" width="114.1" height="15.0" fill="rgb(215,42,10)" rx="2" ry="2" />
<text  x="581.73" y="879.5" >(anonymous nam..</text>
</g>
<g >
<title>webrtc::DtmfQueue::PendingDtmf() const (1 samples, 0.02%)</title><rect x="690.8" y="789" width="0.2" height="15.0" fill="rgb(238,26,21)" rx="2" ry="2" />
<text  x="693.79" y="799.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="140.1" y="325" width="0.3" height="15.0" fill="rgb(218,119,12)" rx="2" ry="2" />
<text  x="143.12" y="335.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (1 samples, 0.02%)</title><rect x="962.7" y="725" width="0.2" height="15.0" fill="rgb(236,64,35)" rx="2" ry="2" />
<text  x="965.66" y="735.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::ForwardEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (5 samples, 0.10%)</title><rect x="166.3" y="629" width="1.3" height="15.0" fill="rgb(225,199,43)" rx="2" ry="2" />
<text  x="169.34" y="639.5" ></text>
</g>
<g >
<title>cc::mojo_embedder::AsyncLayerTreeFrameSink::DidNotProduceFrame(viz::BeginFrameAck const&amp;) (1 samples, 0.02%)</title><rect x="1072.5" y="581" width="0.2" height="15.0" fill="rgb(248,10,4)" rx="2" ry="2" />
<text  x="1075.49" y="591.5" ></text>
</g>
<g >
<title>webrtc::Packet::Packet(webrtc::Packet&amp;&amp;) (1 samples, 0.02%)</title><rect x="279.9" y="629" width="0.2" height="15.0" fill="rgb(214,64,31)" rx="2" ry="2" />
<text  x="282.89" y="639.5" ></text>
</g>
<g >
<title>cricket::IsValidRtpPacketSize(cricket::RtpPacketType, unsigned long) (1 samples, 0.02%)</title><rect x="255.4" y="805" width="0.2" height="15.0" fill="rgb(213,172,16)" rx="2" ry="2" />
<text  x="258.40" y="815.5" ></text>
</g>
<g >
<title>blink::EventDispatcher::Dispatch() (9 samples, 0.19%)</title><rect x="20.4" y="645" width="2.2" height="15.0" fill="rgb(227,80,34)" rx="2" ry="2" />
<text  x="23.39" y="655.5" ></text>
</g>
<g >
<title>_platform_memset$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="650.0" y="709" width="0.2" height="15.0" fill="rgb(229,22,16)" rx="2" ry="2" />
<text  x="652.97" y="719.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="32.8" y="645" width="0.2" height="15.0" fill="rgb(210,59,10)" rx="2" ry="2" />
<text  x="35.76" y="655.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="253.9" y="533" width="0.3" height="15.0" fill="rgb(210,65,24)" rx="2" ry="2" />
<text  x="256.92" y="543.5" ></text>
</g>
<g >
<title>(anonymous namespace)::AutoreleasePoolPage::fastcheck(bool) (1 samples, 0.02%)</title><rect x="197.3" y="869" width="0.2" height="15.0" fill="rgb(244,158,30)" rx="2" ry="2" />
<text  x="200.27" y="879.5" ></text>
</g>
<g >
<title>silk_NSQ_wrapper_FLP (23 samples, 0.48%)</title><rect x="844.7" y="709" width="5.6" height="15.0" fill="rgb(234,70,49)" rx="2" ry="2" />
<text  x="847.66" y="719.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="108.5" y="741" width="0.2" height="15.0" fill="rgb(216,147,39)" rx="2" ry="2" />
<text  x="111.46" y="751.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="300.4" y="773" width="0.3" height="15.0" fill="rgb(244,46,46)" rx="2" ry="2" />
<text  x="303.42" y="783.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::AtomicFlagSet::RunActiveCallbacks() const (1 samples, 0.02%)</title><rect x="1073.7" y="853" width="0.3" height="15.0" fill="rgb(245,208,37)" rx="2" ry="2" />
<text  x="1076.73" y="863.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="212.6" y="805" width="0.3" height="15.0" fill="rgb(211,69,26)" rx="2" ry="2" />
<text  x="215.60" y="815.5" ></text>
</g>
<g >
<title>base::AlignedAlloc(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="1080.4" y="885" width="0.5" height="15.0" fill="rgb(254,209,31)" rx="2" ry="2" />
<text  x="1083.41" y="895.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.02%)</title><rect x="815.5" y="645" width="0.2" height="15.0" fill="rgb(239,132,50)" rx="2" ry="2" />
<text  x="818.47" y="655.5" ></text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::CopyOnWriteBuffer(unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="225.2" y="597" width="0.3" height="15.0" fill="rgb(241,102,0)" rx="2" ry="2" />
<text  x="228.22" y="607.5" ></text>
</g>
<g >
<title>cricket::ConnectionRequest::OnSent() (1 samples, 0.02%)</title><rect x="292.5" y="709" width="0.3" height="15.0" fill="rgb(236,156,51)" rx="2" ry="2" />
<text  x="295.51" y="719.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="31.8" y="661" width="0.2" height="15.0" fill="rgb(219,80,51)" rx="2" ry="2" />
<text  x="34.77" y="671.5" ></text>
</g>
<g >
<title>cc::Scheduler::CancelPendingBeginFrameTask() (2 samples, 0.04%)</title><rect x="1067.1" y="789" width="0.4" height="15.0" fill="rgb(246,98,36)" rx="2" ry="2" />
<text  x="1070.05" y="799.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (4 samples, 0.08%)</title><rect x="333.8" y="853" width="1.0" height="15.0" fill="rgb(205,130,31)" rx="2" ry="2" />
<text  x="336.82" y="863.5" ></text>
</g>
<g >
<title>webrtc::RtcEventLogImpl::LogToMemory(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;) (3 samples, 0.06%)</title><rect x="721.0" y="821" width="0.7" height="15.0" fill="rgb(231,16,42)" rx="2" ry="2" />
<text  x="723.97" y="831.5" ></text>
</g>
<g >
<title>webrtc::RTCPSender::TimeToSendRTCPReport(bool) const (1 samples, 0.02%)</title><rect x="961.4" y="709" width="0.3" height="15.0" fill="rgb(229,19,39)" rx="2" ry="2" />
<text  x="964.42" y="719.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoSender::OnPacketFeedbackVector(std::__Cr::vector&lt;webrtc::PacketFeedback, std::__Cr::allocator&lt;webrtc::PacketFeedback&gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="284.8" y="661" width="0.3" height="15.0" fill="rgb(248,157,10)" rx="2" ry="2" />
<text  x="287.84" y="671.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskBase::Run() (3 samples, 0.06%)</title><rect x="551.3" y="853" width="0.7" height="15.0" fill="rgb(253,227,9)" rx="2" ry="2" />
<text  x="554.27" y="863.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="168.1" y="581" width="0.2" height="15.0" fill="rgb(253,23,12)" rx="2" ry="2" />
<text  x="171.08" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::AtomicFlagSet::RunActiveCallbacks() const (4 samples, 0.08%)</title><rect x="210.1" y="837" width="1.0" height="15.0" fill="rgb(208,37,13)" rx="2" ry="2" />
<text  x="213.13" y="847.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderAudio::SendAudio(webrtc::AudioFrameType, signed char, unsigned int, unsigned char const*, unsigned long) (3 samples, 0.06%)</title><rect x="550.0" y="805" width="0.8" height="15.0" fill="rgb(239,152,50)" rx="2" ry="2" />
<text  x="553.03" y="815.5" ></text>
</g>
<g >
<title>base::SequenceToken::IsValid() const (1 samples, 0.02%)</title><rect x="298.9" y="821" width="0.3" height="15.0" fill="rgb(214,227,25)" rx="2" ry="2" />
<text  x="301.94" y="831.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_other_loop (6 samples, 0.13%)</title><rect x="917.9" y="661" width="1.5" height="15.0" fill="rgb(230,153,19)" rx="2" ry="2" />
<text  x="920.88" y="671.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="715.0" y="853" width="0.3" height="15.0" fill="rgb(251,151,10)" rx="2" ry="2" />
<text  x="718.03" y="863.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1134.6" y="725" width="0.2" height="15.0" fill="rgb(208,65,38)" rx="2" ry="2" />
<text  x="1137.59" y="735.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="348.7" y="805" width="0.2" height="15.0" fill="rgb(245,165,6)" rx="2" ry="2" />
<text  x="351.66" y="815.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="192.8" y="869" width="0.3" height="15.0" fill="rgb(243,161,50)" rx="2" ry="2" />
<text  x="195.81" y="879.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_half_loop (4 samples, 0.08%)</title><rect x="920.4" y="661" width="0.9" height="15.0" fill="rgb(210,126,21)" rx="2" ry="2" />
<text  x="923.36" y="671.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="577.5" y="853" width="0.2" height="15.0" fill="rgb(248,107,36)" rx="2" ry="2" />
<text  x="580.49" y="863.5" ></text>
</g>
<g >
<title>thread_start (827 samples, 17.34%)</title><rect x="362.0" y="1061" width="204.6" height="15.0" fill="rgb(224,221,48)" rx="2" ry="2" />
<text  x="365.02" y="1071.5" >thread_start</text>
</g>
<g >
<title>mojo::core::NodeController::ForwardEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (5 samples, 0.10%)</title><rect x="169.8" y="629" width="1.2" height="15.0" fill="rgb(233,210,39)" rx="2" ry="2" />
<text  x="172.81" y="639.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="1080.9" y="773" width="0.3" height="15.0" fill="rgb(252,70,30)" rx="2" ry="2" />
<text  x="1083.91" y="783.5" ></text>
</g>
<g >
<title>webrtc::AudioEncoderOpusImpl::EncodeImpl(unsigned int, rtc::ArrayView&lt;short const, -4711l&gt;, rtc::BufferT&lt;unsigned char, false&gt;*) (62 samples, 1.30%)</title><rect x="534.7" y="805" width="15.3" height="15.0" fill="rgb(205,165,53)" rx="2" ry="2" />
<text  x="537.69" y="815.5" ></text>
</g>
<g >
<title>silk_inner_product_FLP (3 samples, 0.06%)</title><rect x="544.1" y="661" width="0.7" height="15.0" fill="rgb(205,206,16)" rx="2" ry="2" />
<text  x="547.09" y="671.5" ></text>
</g>
<g >
<title>mojo::MessageHandle::Close() (1 samples, 0.02%)</title><rect x="1072.7" y="741" width="0.3" height="15.0" fill="rgb(237,3,18)" rx="2" ry="2" />
<text  x="1075.74" y="751.5" ></text>
</g>
<g >
<title>silk_resampler (6 samples, 0.13%)</title><rect x="1123.2" y="629" width="1.5" height="15.0" fill="rgb(241,113,24)" rx="2" ry="2" />
<text  x="1126.21" y="639.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (3 samples, 0.06%)</title><rect x="272.7" y="597" width="0.8" height="15.0" fill="rgb(206,12,30)" rx="2" ry="2" />
<text  x="275.72" y="607.5" ></text>
</g>
<g >
<title>cc::mojo_embedder::AsyncLayerTreeFrameSink::OnBeginFrame(viz::BeginFrameArgs const&amp;, base::flat_map&lt;unsigned int, viz::FrameTimingDetails, std::__Cr::less&lt;void&gt; &gt; const&amp;) (4 samples, 0.08%)</title><rect x="1071.8" y="677" width="0.9" height="15.0" fill="rgb(250,91,11)" rx="2" ry="2" />
<text  x="1074.75" y="687.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="107.2" y="741" width="0.5" height="15.0" fill="rgb(235,47,14)" rx="2" ry="2" />
<text  x="110.22" y="751.5" ></text>
</g>
<g >
<title>mojo::internal::MessageDispatchContext::current() (1 samples, 0.02%)</title><rect x="312.5" y="645" width="0.3" height="15.0" fill="rgb(215,227,44)" rx="2" ry="2" />
<text  x="315.55" y="655.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::SendPacketToNetwork(webrtc::RtpPacketToSend const&amp;, webrtc::PacketOptions const&amp;, webrtc::PacedPacketInfo const&amp;) (45 samples, 0.94%)</title><rect x="1148.4" y="901" width="11.2" height="15.0" fill="rgb(236,8,45)" rx="2" ry="2" />
<text  x="1151.44" y="911.5" ></text>
</g>
<g >
<title>webrtc::DecisionLogic::FilterBufferLevel(unsigned long) (1 samples, 0.02%)</title><rect x="1126.7" y="757" width="0.2" height="15.0" fill="rgb(244,150,54)" rx="2" ry="2" />
<text  x="1129.67" y="767.5" ></text>
</g>
<g >
<title>pthread_mutex_destroy (1 samples, 0.02%)</title><rect x="1074.0" y="709" width="0.2" height="15.0" fill="rgb(254,63,47)" rx="2" ry="2" />
<text  x="1076.98" y="719.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper*, mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) (20 samples, 0.42%)</title><rect x="136.4" y="645" width="5.0" height="15.0" fill="rgb(242,137,29)" rx="2" ry="2" />
<text  x="139.41" y="655.5" ></text>
</g>
<g >
<title>vp8_reset_mb_tokens_context (1 samples, 0.02%)</title><rect x="529.7" y="709" width="0.3" height="15.0" fill="rgb(226,145,32)" rx="2" ry="2" />
<text  x="532.74" y="719.5" ></text>
</g>
<g >
<title>free (2 samples, 0.04%)</title><rect x="117.6" y="773" width="0.5" height="15.0" fill="rgb(212,220,52)" rx="2" ry="2" />
<text  x="120.61" y="783.5" ></text>
</g>
<g >
<title>vpx_sad16x16_sse2 (1 samples, 0.02%)</title><rect x="618.8" y="677" width="0.2" height="15.0" fill="rgb(210,142,30)" rx="2" ry="2" />
<text  x="621.80" y="687.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="457.5" y="693" width="0.3" height="15.0" fill="rgb(244,220,46)" rx="2" ry="2" />
<text  x="460.51" y="703.5" ></text>
</g>
<g >
<title>mojo::core::ports::MessageQueue::GetNextMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*, mojo::core::ports::MessageFilter*) (1 samples, 0.02%)</title><rect x="323.2" y="709" width="0.2" height="15.0" fill="rgb(210,73,5)" rx="2" ry="2" />
<text  x="326.18" y="719.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="993.6" y="725" width="0.2" height="15.0" fill="rgb(215,178,53)" rx="2" ry="2" />
<text  x="996.58" y="735.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (2 samples, 0.04%)</title><rect x="372.7" y="805" width="0.5" height="15.0" fill="rgb(229,179,15)" rx="2" ry="2" />
<text  x="375.66" y="815.5" ></text>
</g>
<g >
<title>base::internal::Task&amp; base::circular_deque&lt;base::internal::Task&gt;::emplace_back&lt;base::internal::Task&gt;(base::internal::Task&amp;&amp;) (1 samples, 0.02%)</title><rect x="1157.1" y="757" width="0.2" height="15.0" fill="rgb(211,149,8)" rx="2" ry="2" />
<text  x="1160.10" y="767.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="215.8" y="901" width="0.3" height="15.0" fill="rgb(245,7,20)" rx="2" ry="2" />
<text  x="218.82" y="911.5" ></text>
</g>
<g >
<title>gpu::gles2::GLES2Implementation::GetGraphicsResetStatusKHR() (1 samples, 0.02%)</title><rect x="201.2" y="789" width="0.3" height="15.0" fill="rgb(234,65,40)" rx="2" ry="2" />
<text  x="204.22" y="799.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_half_loop (2 samples, 0.04%)</title><rect x="423.6" y="661" width="0.5" height="15.0" fill="rgb(248,109,36)" rx="2" ry="2" />
<text  x="426.62" y="671.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="1067.3" y="725" width="0.2" height="15.0" fill="rgb(209,4,43)" rx="2" ry="2" />
<text  x="1070.30" y="735.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_zero_y_half_loop (1 samples, 0.02%)</title><rect x="904.8" y="661" width="0.2" height="15.0" fill="rgb(253,57,20)" rx="2" ry="2" />
<text  x="907.77" y="671.5" ></text>
</g>
<g >
<title>webrtc::VCMEncodedFrame::VCMEncodedFrame() (1 samples, 0.02%)</title><rect x="268.3" y="565" width="0.2" height="15.0" fill="rgb(213,212,8)" rx="2" ry="2" />
<text  x="271.26" y="575.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.06%)</title><rect x="1153.6" y="853" width="0.8" height="15.0" fill="rgb(238,3,22)" rx="2" ry="2" />
<text  x="1156.64" y="863.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (blink::MediaStreamVideoRendererSink::FrameDeliverer::*)(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks), WTF::CrossThreadUnretainedWrapper&lt;blink::MediaStreamVideoRendererSink::FrameDeliverer&gt; &gt;, void (scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks)&gt;::Run(base::internal::BindStateBase*, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, base::TimeTicks&amp;&amp;) (3 samples, 0.06%)</title><rect x="139.4" y="453" width="0.7" height="15.0" fill="rgb(220,99,8)" rx="2" ry="2" />
<text  x="142.38" y="463.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="312.1" y="533" width="0.2" height="15.0" fill="rgb(243,150,37)" rx="2" ry="2" />
<text  x="315.05" y="543.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelSend::ReceivedRTCPPacket(unsigned char const*, unsigned long) (3 samples, 0.06%)</title><rect x="284.3" y="757" width="0.8" height="15.0" fill="rgb(254,95,8)" rx="2" ry="2" />
<text  x="287.34" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="19.9" y="133" width="0.2" height="15.0" fill="rgb(222,49,3)" rx="2" ry="2" />
<text  x="22.90" y="143.5" ></text>
</g>
<g >
<title>mach_msg (5 samples, 0.10%)</title><rect x="169.8" y="517" width="1.2" height="15.0" fill="rgb(250,73,46)" rx="2" ry="2" />
<text  x="172.81" y="527.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (4 samples, 0.08%)</title><rect x="110.7" y="693" width="1.0" height="15.0" fill="rgb(213,200,48)" rx="2" ry="2" />
<text  x="113.68" y="703.5" ></text>
</g>
<g >
<title>silk_energy_FLP (1 samples, 0.02%)</title><rect x="1000.5" y="661" width="0.3" height="15.0" fill="rgb(217,28,9)" rx="2" ry="2" />
<text  x="1003.51" y="671.5" ></text>
</g>
<g >
<title>_pthread_body (18 samples, 0.38%)</title><rect x="65.7" y="1029" width="4.4" height="15.0" fill="rgb(236,152,15)" rx="2" ry="2" />
<text  x="68.66" y="1039.5" ></text>
</g>
<g >
<title>io_connect_method (2 samples, 0.04%)</title><rect x="65.2" y="869" width="0.5" height="15.0" fill="rgb(214,212,34)" rx="2" ry="2" />
<text  x="68.17" y="879.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::BeginTransaction() (1 samples, 0.02%)</title><rect x="569.8" y="949" width="0.3" height="15.0" fill="rgb(228,121,51)" rx="2" ry="2" />
<text  x="572.82" y="959.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker() (827 samples, 17.34%)</title><rect x="362.0" y="997" width="204.6" height="15.0" fill="rgb(235,183,44)" rx="2" ry="2" />
<text  x="365.02" y="1007.5" >base::internal::WorkerThre..</text>
</g>
<g >
<title>base::RunLoop::RunWithTimeout(base::TimeDelta) (68 samples, 1.43%)</title><rect x="197.0" y="965" width="16.8" height="15.0" fill="rgb(253,102,13)" rx="2" ry="2" />
<text  x="200.02" y="975.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (2 samples, 0.04%)</title><rect x="292.8" y="741" width="0.4" height="15.0" fill="rgb(227,100,13)" rx="2" ry="2" />
<text  x="295.75" y="751.5" ></text>
</g>
<g >
<title>mojo::core::WatcherDispatcher::NotifyHandleState(mojo::core::Dispatcher*, mojo::core::HandleSignalsState const&amp;) (10 samples, 0.21%)</title><rect x="109.7" y="725" width="2.5" height="15.0" fill="rgb(228,167,13)" rx="2" ry="2" />
<text  x="112.69" y="735.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.04%)</title><rect x="1135.8" y="661" width="0.5" height="15.0" fill="rgb(228,183,49)" rx="2" ry="2" />
<text  x="1138.82" y="671.5" ></text>
</g>
<g >
<title>vp8cx_mb_init_quantizer (1 samples, 0.02%)</title><rect x="941.4" y="725" width="0.2" height="15.0" fill="rgb(230,160,30)" rx="2" ry="2" />
<text  x="944.38" y="735.5" ></text>
</g>
<g >
<title>blink::MediaStreamAudioSource::GetAudioParameters() const (1 samples, 0.02%)</title><rect x="1131.4" y="821" width="0.2" height="15.0" fill="rgb(223,4,49)" rx="2" ry="2" />
<text  x="1134.37" y="831.5" ></text>
</g>
<g >
<title>base::internal::UncheckedScopedBlockingCall::~UncheckedScopedBlockingCall() (1 samples, 0.02%)</title><rect x="1165.3" y="901" width="0.2" height="15.0" fill="rgb(227,201,23)" rx="2" ry="2" />
<text  x="1168.26" y="911.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="178.2" y="821" width="0.3" height="15.0" fill="rgb(220,139,26)" rx="2" ry="2" />
<text  x="181.22" y="831.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="941.1" y="677" width="0.3" height="15.0" fill="rgb(248,14,18)" rx="2" ry="2" />
<text  x="944.14" y="687.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::AppendData(unsigned int, unsigned int const*, unsigned int) (2 samples, 0.04%)</title><rect x="251.7" y="581" width="0.5" height="15.0" fill="rgb(245,6,4)" rx="2" ry="2" />
<text  x="254.69" y="591.5" ></text>
</g>
<g >
<title>backtrace (1 samples, 0.02%)</title><rect x="578.0" y="869" width="0.2" height="15.0" fill="rgb(238,125,25)" rx="2" ry="2" />
<text  x="580.98" y="879.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="718.7" y="885" width="0.3" height="15.0" fill="rgb(217,97,6)" rx="2" ry="2" />
<text  x="721.74" y="895.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3 (1 samples, 0.02%)</title><rect x="681.6" y="693" width="0.3" height="15.0" fill="rgb(236,133,54)" rx="2" ry="2" />
<text  x="684.64" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::MaybeShrinkQueue() (1 samples, 0.02%)</title><rect x="355.1" y="821" width="0.2" height="15.0" fill="rgb(231,83,31)" rx="2" ry="2" />
<text  x="358.09" y="831.5" ></text>
</g>
<g >
<title>network::mojom::P2PSocketProxy::Send(std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&amp;, network::P2PPacketInfo const&amp;, net::MutableNetworkTrafficAnnotationTag const&amp;) (58 samples, 1.22%)</title><rect x="240.8" y="661" width="14.4" height="15.0" fill="rgb(235,107,42)" rx="2" ry="2" />
<text  x="243.81" y="671.5" ></text>
</g>
<g >
<title>MojoWriteMessage (2 samples, 0.04%)</title><rect x="1041.1" y="581" width="0.5" height="15.0" fill="rgb(230,131,11)" rx="2" ry="2" />
<text  x="1044.08" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="212.4" y="837" width="0.2" height="15.0" fill="rgb(207,155,5)" rx="2" ry="2" />
<text  x="215.36" y="847.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="357.1" y="757" width="0.2" height="15.0" fill="rgb(249,33,3)" rx="2" ry="2" />
<text  x="360.07" y="767.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (29 samples, 0.61%)</title><rect x="863.7" y="933" width="7.2" height="15.0" fill="rgb(223,147,37)" rx="2" ry="2" />
<text  x="866.71" y="943.5" ></text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="878.1" y="885" width="0.2" height="15.0" fill="rgb(218,206,2)" rx="2" ry="2" />
<text  x="881.05" y="895.5" ></text>
</g>
<g >
<title>base::internal::UncheckedScopedBlockingCall::UncheckedScopedBlockingCall(base::BlockingType) (2 samples, 0.04%)</title><rect x="1164.8" y="885" width="0.5" height="15.0" fill="rgb(248,47,34)" rx="2" ry="2" />
<text  x="1167.77" y="895.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="133.9" y="629" width="0.3" height="15.0" fill="rgb(250,5,34)" rx="2" ry="2" />
<text  x="136.94" y="639.5" ></text>
</g>
<g >
<title>base::TimeDelta::InSecondsF() const (3 samples, 0.06%)</title><rect x="1096.7" y="917" width="0.8" height="15.0" fill="rgb(244,78,23)" rx="2" ry="2" />
<text  x="1099.74" y="927.5" ></text>
</g>
<g >
<title>vp8_encode_bool (5 samples, 0.10%)</title><rect x="464.2" y="725" width="1.2" height="15.0" fill="rgb(231,125,15)" rx="2" ry="2" />
<text  x="467.19" y="735.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::MaybeAdjustTaskDelay(base::sequence_manager::internal::PostedTask*, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="1149.7" y="773" width="0.2" height="15.0" fill="rgb(231,15,35)" rx="2" ry="2" />
<text  x="1152.68" y="783.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="714.3" y="821" width="0.2" height="15.0" fill="rgb(230,3,5)" rx="2" ry="2" />
<text  x="717.29" y="831.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::FreeDefiniteSizeImpl(base::allocator::AllocatorDispatch const*, void*, unsigned long, void*) (1 samples, 0.02%)</title><rect x="22.9" y="693" width="0.2" height="15.0" fill="rgb(210,71,39)" rx="2" ry="2" />
<text  x="25.86" y="703.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::ParseBuffer(unsigned char const*, unsigned long) (1 samples, 0.02%)</title><rect x="227.0" y="549" width="0.2" height="15.0" fill="rgb(252,81,53)" rx="2" ry="2" />
<text  x="229.95" y="559.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), void&gt;::Invoke&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;(void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&amp;&amp;) (9 samples, 0.19%)</title><rect x="67.9" y="949" width="2.2" height="15.0" fill="rgb(229,92,54)" rx="2" ry="2" />
<text  x="70.89" y="959.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::BuildRasterQueue(cc::TreePriority, cc::RasterTilePriorityQueue::Type) (1 samples, 0.02%)</title><rect x="1067.5" y="741" width="0.3" height="15.0" fill="rgb(254,110,15)" rx="2" ry="2" />
<text  x="1070.55" y="751.5" ></text>
</g>
<g >
<title>base::internal::WeakReferenceOwner::Invalidate() (1 samples, 0.02%)</title><rect x="38.2" y="613" width="0.2" height="15.0" fill="rgb(226,105,47)" rx="2" ry="2" />
<text  x="41.20" y="623.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="961.9" y="661" width="0.3" height="15.0" fill="rgb(219,40,14)" rx="2" ry="2" />
<text  x="964.92" y="671.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="533.2" y="597" width="0.3" height="15.0" fill="rgb(226,68,10)" rx="2" ry="2" />
<text  x="536.21" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::UpdateCrossThreadQueueStateLocked() (1 samples, 0.02%)</title><rect x="185.1" y="773" width="0.3" height="15.0" fill="rgb(217,0,7)" rx="2" ry="2" />
<text  x="188.14" y="783.5" ></text>
</g>
<g >
<title>gpu::GpuChannelHost::EnqueueDeferredMessage(IPC::Message const&amp;, std::__Cr::vector&lt;gpu::SyncToken, std::__Cr::allocator&lt;gpu::SyncToken&gt; &gt;) (1 samples, 0.02%)</title><rect x="205.9" y="805" width="0.3" height="15.0" fill="rgb(222,76,37)" rx="2" ry="2" />
<text  x="208.92" y="815.5" ></text>
</g>
<g >
<title>vp8_estimate_entropy_savings (1 samples, 0.02%)</title><rect x="632.9" y="741" width="0.2" height="15.0" fill="rgb(246,182,39)" rx="2" ry="2" />
<text  x="635.90" y="751.5" ></text>
</g>
<g >
<title>base::internal::Task::Task(base::internal::Task&amp;&amp;) (1 samples, 0.02%)</title><rect x="570.6" y="917" width="0.2" height="15.0" fill="rgb(242,206,20)" rx="2" ry="2" />
<text  x="573.56" y="927.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::MaybeEncodeVideoFrame(webrtc::VideoFrame const&amp;, long long) (321 samples, 6.73%)</title><rect x="883.0" y="837" width="79.4" height="15.0" fill="rgb(210,148,21)" rx="2" ry="2" />
<text  x="886.00" y="847.5" >webrtc::V..</text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="184.6" y="773" width="0.3" height="15.0" fill="rgb(245,22,21)" rx="2" ry="2" />
<text  x="187.65" y="783.5" ></text>
</g>
<g >
<title>opus_decode_frame (36 samples, 0.75%)</title><rect x="1115.8" y="661" width="8.9" height="15.0" fill="rgb(208,205,0)" rx="2" ry="2" />
<text  x="1118.79" y="671.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="328.9" y="821" width="0.2" height="15.0" fill="rgb(225,185,16)" rx="2" ry="2" />
<text  x="331.87" y="831.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="261.1" y="709" width="0.2" height="15.0" fill="rgb(219,103,13)" rx="2" ry="2" />
<text  x="264.09" y="719.5" ></text>
</g>
<g >
<title>base::debug::SetCrashKeyString(base::debug::CrashKeyString*, base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;) (1 samples, 0.02%)</title><rect x="43.4" y="629" width="0.2" height="15.0" fill="rgb(209,160,17)" rx="2" ry="2" />
<text  x="46.40" y="639.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::voe::(anonymous namespace)::ChannelSend::ProcessAndEncodeAudio(std::__Cr::unique_ptr&lt;webrtc::AudioFrame, std::__Cr::default_delete&lt;webrtc::AudioFrame&gt; &gt;)::ProcessAndEncodeAudio&gt;::Run() (46 samples, 0.96%)</title><rect x="993.8" y="853" width="11.4" height="15.0" fill="rgb(245,56,33)" rx="2" ry="2" />
<text  x="996.83" y="863.5" ></text>
</g>
<g >
<title>silk_NLSF_del_dec_quant (2 samples, 0.04%)</title><rect x="1000.8" y="645" width="0.4" height="15.0" fill="rgb(224,59,28)" rx="2" ry="2" />
<text  x="1003.75" y="655.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="856.5" y="917" width="0.3" height="15.0" fill="rgb(249,135,22)" rx="2" ry="2" />
<text  x="859.53" y="927.5" ></text>
</g>
<g >
<title>silk_find_pred_coefs_FLP (5 samples, 0.10%)</title><rect x="1000.0" y="709" width="1.2" height="15.0" fill="rgb(247,147,48)" rx="2" ry="2" />
<text  x="1003.01" y="719.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="1005.2" y="821" width="0.3" height="15.0" fill="rgb(228,220,0)" rx="2" ry="2" />
<text  x="1008.21" y="831.5" ></text>
</g>
<g >
<title>cc::PictureLayerTilingSet::CopyTilingsAndPropertiesFromPendingTwin(cc::PictureLayerTilingSet const*, scoped_refptr&lt;cc::RasterSource&gt;, cc::Region const&amp;) (1 samples, 0.02%)</title><rect x="1069.8" y="677" width="0.2" height="15.0" fill="rgb(237,83,3)" rx="2" ry="2" />
<text  x="1072.77" y="687.5" ></text>
</g>
<g >
<title>opus_fft_c (1 samples, 0.02%)</title><rect x="537.4" y="709" width="0.3" height="15.0" fill="rgb(211,31,16)" rx="2" ry="2" />
<text  x="540.41" y="719.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="377.1" y="885" width="0.3" height="15.0" fill="rgb(240,138,7)" rx="2" ry="2" />
<text  x="380.11" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TakeImmediateIncomingQueueTasks(base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;*) (2 samples, 0.04%)</title><rect x="327.9" y="821" width="0.5" height="15.0" fill="rgb(219,100,49)" rx="2" ry="2" />
<text  x="330.88" y="831.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::GetLastUsedTime() const (4 samples, 0.08%)</title><rect x="862.5" y="933" width="1.0" height="15.0" fill="rgb(209,193,23)" rx="2" ry="2" />
<text  x="865.47" y="943.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="266.0" y="533" width="0.5" height="15.0" fill="rgb(210,21,31)" rx="2" ry="2" />
<text  x="269.04" y="543.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (4 samples, 0.08%)</title><rect x="67.9" y="917" width="1.0" height="15.0" fill="rgb(205,133,45)" rx="2" ry="2" />
<text  x="70.89" y="927.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::Release() const (4 samples, 0.08%)</title><rect x="232.6" y="789" width="1.0" height="15.0" fill="rgb(237,49,28)" rx="2" ry="2" />
<text  x="235.64" y="799.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (1 samples, 0.02%)</title><rect x="486.7" y="725" width="0.2" height="15.0" fill="rgb(223,184,41)" rx="2" ry="2" />
<text  x="489.70" y="735.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::ProcessBitrate() (1 samples, 0.02%)</title><rect x="1178.1" y="949" width="0.3" height="15.0" fill="rgb(250,69,16)" rx="2" ry="2" />
<text  x="1181.13" y="959.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="132.0" y="725" width="0.2" height="15.0" fill="rgb(234,127,51)" rx="2" ry="2" />
<text  x="134.96" y="735.5" ></text>
</g>
<g >
<title>srtp_hmac_update (3 samples, 0.06%)</title><rect x="307.8" y="501" width="0.8" height="15.0" fill="rgb(244,18,40)" rx="2" ry="2" />
<text  x="310.84" y="511.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="971.1" y="693" width="0.2" height="15.0" fill="rgb(211,195,49)" rx="2" ry="2" />
<text  x="974.07" y="703.5" ></text>
</g>
<g >
<title>WTF::HashTable&lt;unsigned int, WTF::KeyValuePair&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::IntHash&lt;unsigned int&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;unsigned int&gt;, WTF::HashTraits&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt; &gt;, WTF::HashTraits&lt;unsigned int&gt;, WTF::PartitionAllocator&gt;::Expand(WTF::KeyValuePair&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;*) (1 samples, 0.02%)</title><rect x="1051.5" y="629" width="0.2" height="15.0" fill="rgb(251,70,28)" rx="2" ry="2" />
<text  x="1054.47" y="639.5" ></text>
</g>
<g >
<title>viz::ClientResourceProvider::PrepareSendToParent(std::__Cr::vector&lt;unsigned int, std::__Cr::allocator&lt;unsigned int&gt; &gt; const&amp;, std::__Cr::vector&lt;viz::TransferableResource, std::__Cr::allocator&lt;viz::TransferableResource&gt; &gt;*, viz::RasterContextProvider*) (18 samples, 0.38%)</title><rect x="1033.9" y="629" width="4.5" height="15.0" fill="rgb(240,102,17)" rx="2" ry="2" />
<text  x="1036.90" y="639.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="228.2" y="533" width="0.2" height="15.0" fill="rgb(240,28,25)" rx="2" ry="2" />
<text  x="231.19" y="543.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::Write(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (4 samples, 0.08%)</title><rect x="166.6" y="565" width="1.0" height="15.0" fill="rgb(222,97,24)" rx="2" ry="2" />
<text  x="169.59" y="575.5" ></text>
</g>
<g >
<title>tonality_analysis (3 samples, 0.06%)</title><rect x="684.6" y="725" width="0.7" height="15.0" fill="rgb(246,98,48)" rx="2" ry="2" />
<text  x="687.60" y="735.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="176.5" y="613" width="0.2" height="15.0" fill="rgb(219,77,15)" rx="2" ry="2" />
<text  x="179.49" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (3 samples, 0.06%)</title><rect x="190.3" y="789" width="0.8" height="15.0" fill="rgb(220,179,9)" rx="2" ry="2" />
<text  x="193.34" y="799.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="84.7" y="741" width="0.3" height="15.0" fill="rgb(224,125,44)" rx="2" ry="2" />
<text  x="87.71" y="751.5" ></text>
</g>
<g >
<title>base::MessagePumpNSRunLoop::DoRun(base::MessagePump::Delegate*) (171 samples, 3.58%)</title><rect x="10.0" y="901" width="42.3" height="15.0" fill="rgb(246,82,38)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >bas..</text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="108.7" y="693" width="0.3" height="15.0" fill="rgb(222,91,34)" rx="2" ry="2" />
<text  x="111.70" y="703.5" ></text>
</g>
<g >
<title>dynalloc_analysis (1 samples, 0.02%)</title><rect x="535.7" y="725" width="0.2" height="15.0" fill="rgb(216,86,29)" rx="2" ry="2" />
<text  x="538.68" y="735.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::video_coding::FrameBuffer::InsertFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;)::$_2&gt;::Run() (1 samples, 0.02%)</title><rect x="534.2" y="853" width="0.2" height="15.0" fill="rgb(225,108,36)" rx="2" ry="2" />
<text  x="537.20" y="863.5" ></text>
</g>
<g >
<title>mojo::core::ports::PortLocker::PortLocker(mojo::core::ports::PortRef const**, unsigned long) (1 samples, 0.02%)</title><rect x="117.1" y="789" width="0.3" height="15.0" fill="rgb(250,60,35)" rx="2" ry="2" />
<text  x="120.12" y="799.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::FindOrCreateExtensionInfo(int) (1 samples, 0.02%)</title><rect x="260.3" y="709" width="0.3" height="15.0" fill="rgb(243,83,18)" rx="2" ry="2" />
<text  x="263.35" y="719.5" ></text>
</g>
<g >
<title>-[NSAutoreleasePool drain] (2 samples, 0.04%)</title><rect x="197.3" y="917" width="0.5" height="15.0" fill="rgb(252,87,52)" rx="2" ry="2" />
<text  x="200.27" y="927.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="279.1" y="613" width="0.3" height="15.0" fill="rgb(251,29,12)" rx="2" ry="2" />
<text  x="282.15" y="623.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1155.9" y="821" width="0.2" height="15.0" fill="rgb(217,34,38)" rx="2" ry="2" />
<text  x="1158.86" y="831.5" ></text>
</g>
<g >
<title>cricket::Connection::OnConnectionRequestSent(cricket::ConnectionRequest*) (1 samples, 0.02%)</title><rect x="292.5" y="693" width="0.3" height="15.0" fill="rgb(247,3,8)" rx="2" ry="2" />
<text  x="295.51" y="703.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1159.3" y="821" width="0.3" height="15.0" fill="rgb(236,2,4)" rx="2" ry="2" />
<text  x="1162.32" y="831.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::WalkTree(blink::LocalFrameView&amp;) (5 samples, 0.10%)</title><rect x="27.8" y="517" width="1.2" height="15.0" fill="rgb(242,118,10)" rx="2" ry="2" />
<text  x="30.81" y="527.5" ></text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::CopyOnWriteBuffer(unsigned long) (2 samples, 0.04%)</title><rect x="260.6" y="709" width="0.5" height="15.0" fill="rgb(250,33,43)" rx="2" ry="2" />
<text  x="263.60" y="719.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="196.0" y="853" width="0.3" height="15.0" fill="rgb(248,161,0)" rx="2" ry="2" />
<text  x="199.03" y="863.5" ></text>
</g>
<g >
<title>srtp_aes_icm_openssl_set_iv (1 samples, 0.02%)</title><rect x="238.3" y="725" width="0.3" height="15.0" fill="rgb(235,36,14)" rx="2" ry="2" />
<text  x="241.33" y="735.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (3 samples, 0.06%)</title><rect x="235.9" y="549" width="0.7" height="15.0" fill="rgb(216,54,5)" rx="2" ry="2" />
<text  x="238.86" y="559.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_wake (1 samples, 0.02%)</title><rect x="130.7" y="629" width="0.3" height="15.0" fill="rgb(228,86,45)" rx="2" ry="2" />
<text  x="133.72" y="639.5" ></text>
</g>
<g >
<title>webrtc::RtpTransport::OnSentPacket(rtc::PacketTransportInternal*, rtc::SentPacket const&amp;) (13 samples, 0.27%)</title><rect x="315.0" y="581" width="3.2" height="15.0" fill="rgb(229,208,6)" rx="2" ry="2" />
<text  x="318.02" y="591.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::SendMessageLocked(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (2 samples, 0.04%)</title><rect x="173.3" y="565" width="0.5" height="15.0" fill="rgb(240,62,11)" rx="2" ry="2" />
<text  x="176.27" y="575.5" ></text>
</g>
<g >
<title>vp8_compute_skin_block (1 samples, 0.02%)</title><rect x="722.7" y="741" width="0.2" height="15.0" fill="rgb(219,108,31)" rx="2" ry="2" />
<text  x="725.70" y="751.5" ></text>
</g>
<g >
<title>base::mac::internal::SendRightTraits::Free(unsigned int) (1 samples, 0.02%)</title><rect x="1037.6" y="501" width="0.3" height="15.0" fill="rgb(229,22,20)" rx="2" ry="2" />
<text  x="1040.61" y="511.5" ></text>
</g>
<g >
<title>cost (1 samples, 0.02%)</title><rect x="632.7" y="645" width="0.2" height="15.0" fill="rgb(236,201,43)" rx="2" ry="2" />
<text  x="635.65" y="655.5" ></text>
</g>
<g >
<title>(anonymous namespace)::AutoreleasePoolPage::pop(void*) (2 samples, 0.04%)</title><rect x="873.4" y="933" width="0.4" height="15.0" fill="rgb(231,178,15)" rx="2" ry="2" />
<text  x="876.35" y="943.5" ></text>
</g>
<g >
<title>webrtc::PacketRouter::AllocateSequenceNumber() (1 samples, 0.02%)</title><rect x="1160.3" y="885" width="0.3" height="15.0" fill="rgb(253,207,19)" rx="2" ry="2" />
<text  x="1163.31" y="895.5" ></text>
</g>
<g >
<title>base::SequenceToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="553.0" y="869" width="0.2" height="15.0" fill="rgb(206,62,28)" rx="2" ry="2" />
<text  x="556.00" y="879.5" ></text>
</g>
<g >
<title>base::Thread::ThreadMain() (444 samples, 9.31%)</title><rect x="87.2" y="997" width="109.8" height="15.0" fill="rgb(253,82,39)" rx="2" ry="2" />
<text  x="90.18" y="1007.5" >base::Thread:..</text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyWillProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (1 samples, 0.02%)</title><rect x="85.2" y="821" width="0.3" height="15.0" fill="rgb(232,199,50)" rx="2" ry="2" />
<text  x="88.20" y="831.5" ></text>
</g>
<g >
<title>base::internal::circular_deque_const_iterator&lt;base::internal::Task&gt;::operator*() const (1 samples, 0.02%)</title><rect x="1157.1" y="725" width="0.2" height="15.0" fill="rgb(242,200,52)" rx="2" ry="2" />
<text  x="1160.10" y="735.5" ></text>
</g>
<g >
<title>webrtc::NetEqImpl::Decode(std::__Cr::list&lt;webrtc::Packet, std::__Cr::allocator&lt;webrtc::Packet&gt; &gt;*, webrtc::Operations*, int*, webrtc::AudioDecoder::SpeechType*) (44 samples, 0.92%)</title><rect x="1114.8" y="789" width="10.9" height="15.0" fill="rgb(206,197,35)" rx="2" ry="2" />
<text  x="1117.80" y="799.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_half_loop (1 samples, 0.02%)</title><rect x="760.8" y="661" width="0.2" height="15.0" fill="rgb(226,45,45)" rx="2" ry="2" />
<text  x="763.80" y="671.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (2 samples, 0.04%)</title><rect x="695.7" y="933" width="0.5" height="15.0" fill="rgb(246,54,12)" rx="2" ry="2" />
<text  x="698.74" y="943.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (1 samples, 0.02%)</title><rect x="224.5" y="869" width="0.2" height="15.0" fill="rgb(224,162,20)" rx="2" ry="2" />
<text  x="227.48" y="879.5" ></text>
</g>
<g >
<title>DYLD-STUB$$media::AudioShifter::Push(std::__Cr::unique_ptr&lt;media::AudioBus, std::__Cr::default_delete&lt;media::AudioBus&gt; &gt;, base::TimeTicks) (1 samples, 0.02%)</title><rect x="1080.2" y="933" width="0.2" height="15.0" fill="rgb(211,160,35)" rx="2" ry="2" />
<text  x="1083.16" y="943.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="551.3" y="773" width="0.2" height="15.0" fill="rgb(213,77,43)" rx="2" ry="2" />
<text  x="554.27" y="783.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.02%)</title><rect x="299.7" y="773" width="0.2" height="15.0" fill="rgb(217,55,46)" rx="2" ry="2" />
<text  x="302.68" y="783.5" ></text>
</g>
<g >
<title>cc::TileManager::IssueSignals() (3 samples, 0.06%)</title><rect x="1069.3" y="821" width="0.7" height="15.0" fill="rgb(242,95,23)" rx="2" ry="2" />
<text  x="1072.28" y="831.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="83.0" y="709" width="0.2" height="15.0" fill="rgb(223,171,46)" rx="2" ry="2" />
<text  x="85.98" y="719.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="187.4" y="773" width="0.2" height="15.0" fill="rgb(233,13,9)" rx="2" ry="2" />
<text  x="190.37" y="783.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="267.8" y="485" width="0.2" height="15.0" fill="rgb(248,28,10)" rx="2" ry="2" />
<text  x="270.77" y="495.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (content::WebMediaPlayerMS::*)(), base::WeakPtr&lt;content::WebMediaPlayerMS&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="29.3" y="693" width="0.2" height="15.0" fill="rgb(244,24,0)" rx="2" ry="2" />
<text  x="32.30" y="703.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (3 samples, 0.06%)</title><rect x="812.7" y="725" width="0.8" height="15.0" fill="rgb(241,166,14)" rx="2" ry="2" />
<text  x="815.75" y="735.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;)::$_0, scoped_refptr&lt;base::internal::Sequence&gt;, base::internal::UnretainedWrapper&lt;base::internal::ThreadPoolImpl&gt; &gt;, void (base::internal::Task)&gt;::RunOnce(base::internal::BindStateBase*, base::internal::Task&amp;&amp;) (12 samples, 0.25%)</title><rect x="77.8" y="837" width="3.0" height="15.0" fill="rgb(223,156,49)" rx="2" ry="2" />
<text  x="80.78" y="847.5" ></text>
</g>
<g >
<title>content::mojom::FrameHostProxy::DidAddMessageToConsole(blink::mojom::ConsoleMessageLevel, std::__Cr::basic_string&lt;unsigned short, base::string16_internals::string16_char_traits, std::__Cr::allocator&lt;unsigned short&gt; &gt; const&amp;, int, std::__Cr::basic_string&lt;unsigned short, base::string16_internals::string16_char_traits, std::__Cr::allocator&lt;unsigned short&gt; &gt; const&amp;) (1 samples, 0.02%)</title><rect x="19.9" y="229" width="0.2" height="15.0" fill="rgb(206,132,17)" rx="2" ry="2" />
<text  x="22.90" y="239.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="855.5" y="869" width="0.3" height="15.0" fill="rgb(231,224,11)" rx="2" ry="2" />
<text  x="858.54" y="879.5" ></text>
</g>
<g >
<title>mach_msg_trap (3 samples, 0.06%)</title><rect x="139.4" y="277" width="0.7" height="15.0" fill="rgb(213,13,15)" rx="2" ry="2" />
<text  x="142.38" y="287.5" ></text>
</g>
<g >
<title>mojo::Message::Message() (1 samples, 0.02%)</title><rect x="1059.1" y="805" width="0.3" height="15.0" fill="rgb(237,80,37)" rx="2" ry="2" />
<text  x="1062.14" y="815.5" ></text>
</g>
<g >
<title>mojo::MessageHandle::Close() (1 samples, 0.02%)</title><rect x="141.1" y="629" width="0.3" height="15.0" fill="rgb(236,143,20)" rx="2" ry="2" />
<text  x="144.11" y="639.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="1006.4" y="933" width="0.3" height="15.0" fill="rgb(244,75,6)" rx="2" ry="2" />
<text  x="1009.44" y="943.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (7 samples, 0.15%)</title><rect x="83.5" y="821" width="1.7" height="15.0" fill="rgb(250,55,37)" rx="2" ry="2" />
<text  x="86.47" y="831.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::UpdateRootLayerStateForSynchronousInputHandler() (1 samples, 0.02%)</title><rect x="1072.2" y="533" width="0.3" height="15.0" fill="rgb(210,90,34)" rx="2" ry="2" />
<text  x="1075.25" y="543.5" ></text>
</g>
<g >
<title>std::__Cr::__list_iterator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, void*&gt; std::__Cr::list&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt; &gt; &gt;::__sort&lt;webrtc::ForwardErrorCorrection::SortablePacket::LessThan&gt;(std::__Cr::__list_iterator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, void*&gt;, std::__Cr::__list_iterator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, void*&gt;, unsigned long, webrtc::ForwardErrorCorrection::SortablePacket::LessThan&amp;) (3 samples, 0.06%)</title><rect x="264.1" y="613" width="0.7" height="15.0" fill="rgb(244,194,19)" rx="2" ry="2" />
<text  x="267.06" y="623.5" ></text>
</g>
<g >
<title>webrtc::video_coding::PacketBuffer::OnTimestampReceived(unsigned int) (2 samples, 0.04%)</title><rect x="268.8" y="597" width="0.5" height="15.0" fill="rgb(229,62,5)" rx="2" ry="2" />
<text  x="271.76" y="607.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker  0x65933f (569 samples, 11.93%)</title><rect x="566.6" y="1077" width="140.8" height="15.0" fill="rgb(212,146,48)" rx="2" ry="2" />
<text  x="569.60" y="1087.5" >base::internal::W..</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="19.9" y="117" width="0.2" height="15.0" fill="rgb(215,159,30)" rx="2" ry="2" />
<text  x="22.90" y="127.5" ></text>
</g>
<g >
<title>__CFRunLoopDoSource0 (133 samples, 2.79%)</title><rect x="14.0" y="821" width="32.9" height="15.0" fill="rgb(223,97,28)" rx="2" ry="2" />
<text  x="16.96" y="831.5" >__..</text>
</g>
<g >
<title>vpx_subtract_block_sse2.loop_16 (1 samples, 0.02%)</title><rect x="790.0" y="693" width="0.2" height="15.0" fill="rgb(232,210,49)" rx="2" ry="2" />
<text  x="792.99" y="703.5" ></text>
</g>
<g >
<title>vp8_copy_and_extend_frame (4 samples, 0.08%)</title><rect x="650.2" y="725" width="1.0" height="15.0" fill="rgb(234,194,30)" rx="2" ry="2" />
<text  x="653.22" y="735.5" ></text>
</g>
<g >
<title>blink::FindObjectVisualRectNeedingUpdateScope::~FindObjectVisualRectNeedingUpdateScope() (1 samples, 0.02%)</title><rect x="28.3" y="357" width="0.3" height="15.0" fill="rgb(211,76,54)" rx="2" ry="2" />
<text  x="31.31" y="367.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_Impl_ConsoleLog(v8::internal::BuiltinArguments, v8::internal::Isolate*) (1 samples, 0.02%)</title><rect x="19.9" y="389" width="0.2" height="15.0" fill="rgb(245,38,10)" rx="2" ry="2" />
<text  x="22.90" y="399.5" ></text>
</g>
<g >
<title>vp8_short_walsh4x4_sse2 (1 samples, 0.02%)</title><rect x="739.5" y="677" width="0.3" height="15.0" fill="rgb(248,206,34)" rx="2" ry="2" />
<text  x="742.52" y="687.5" ></text>
</g>
<g >
<title>vp8_decode_mb_tokens (77 samples, 1.61%)</title><rect x="502.5" y="709" width="19.1" height="15.0" fill="rgb(254,42,37)" rx="2" ry="2" />
<text  x="505.53" y="719.5" ></text>
</g>
<g >
<title>blink::scheduler::MainThreadSchedulerImpl::OnTaskStarted(blink::scheduler::MainThreadTaskQueue*, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (1 samples, 0.02%)</title><rect x="44.1" y="629" width="0.3" height="15.0" fill="rgb(237,194,50)" rx="2" ry="2" />
<text  x="47.14" y="639.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="107.5" y="677" width="0.2" height="15.0" fill="rgb(252,107,9)" rx="2" ry="2" />
<text  x="110.47" y="687.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.08%)</title><rect x="144.3" y="821" width="1.0" height="15.0" fill="rgb(214,180,34)" rx="2" ry="2" />
<text  x="147.33" y="831.5" ></text>
</g>
<g >
<title>webrtc::PushResampler&lt;short&gt;::InitializeIfNeeded(int, int, unsigned long) (1 samples, 0.02%)</title><rect x="1139.0" y="901" width="0.3" height="15.0" fill="rgb(206,179,3)" rx="2" ry="2" />
<text  x="1142.04" y="911.5" ></text>
</g>
<g >
<title>write_component_probs (2 samples, 0.04%)</title><rect x="478.8" y="709" width="0.5" height="15.0" fill="rgb(252,137,30)" rx="2" ry="2" />
<text  x="481.78" y="719.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::UpdateLifecyclePhasesInternal(blink::DocumentLifecycle::LifecycleState) (16 samples, 0.34%)</title><rect x="25.3" y="549" width="4.0" height="15.0" fill="rgb(211,190,47)" rx="2" ry="2" />
<text  x="28.34" y="559.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="1035.6" y="485" width="0.5" height="15.0" fill="rgb(237,203,40)" rx="2" ry="2" />
<text  x="1038.64" y="495.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateRawExtension(int, unsigned long) (1 samples, 0.02%)</title><rect x="691.0" y="757" width="0.3" height="15.0" fill="rgb(252,27,11)" rx="2" ry="2" />
<text  x="694.04" y="767.5" ></text>
</g>
<g >
<title>vp8_pack_bitstream (41 samples, 0.86%)</title><rect x="636.6" y="741" width="10.2" height="15.0" fill="rgb(222,29,9)" rx="2" ry="2" />
<text  x="639.61" y="751.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="111.7" y="661" width="0.2" height="15.0" fill="rgb(222,226,22)" rx="2" ry="2" />
<text  x="114.67" y="671.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="533.2" y="581" width="0.3" height="15.0" fill="rgb(243,200,52)" rx="2" ry="2" />
<text  x="536.21" y="591.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (3 samples, 0.06%)</title><rect x="650.5" y="693" width="0.7" height="15.0" fill="rgb(218,145,7)" rx="2" ry="2" />
<text  x="653.47" y="703.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (1 samples, 0.02%)</title><rect x="124.3" y="693" width="0.2" height="15.0" fill="rgb(220,84,37)" rx="2" ry="2" />
<text  x="127.29" y="703.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="370.9" y="885" width="0.3" height="15.0" fill="rgb(240,16,2)" rx="2" ry="2" />
<text  x="373.93" y="895.5" ></text>
</g>
<g >
<title>check_dot_artifact_candidate (1 samples, 0.02%)</title><rect x="903.3" y="677" width="0.2" height="15.0" fill="rgb(239,217,2)" rx="2" ry="2" />
<text  x="906.29" y="687.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (26 samples, 0.55%)</title><rect x="1066.8" y="901" width="6.4" height="15.0" fill="rgb(207,204,2)" rx="2" ry="2" />
<text  x="1069.81" y="911.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="293.0" y="677" width="0.2" height="15.0" fill="rgb(229,74,52)" rx="2" ry="2" />
<text  x="296.00" y="687.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="186.6" y="789" width="0.3" height="15.0" fill="rgb(241,137,52)" rx="2" ry="2" />
<text  x="189.63" y="799.5" ></text>
</g>
<g >
<title>webrtc::StatisticsCalculator::IncreaseCounter(unsigned long, int) (1 samples, 0.02%)</title><rect x="1128.6" y="789" width="0.3" height="15.0" fill="rgb(242,125,38)" rx="2" ry="2" />
<text  x="1131.65" y="799.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3.vp8_filter_block1d16_v6_ssse3_loop (1 samples, 0.02%)</title><rect x="891.2" y="645" width="0.2" height="15.0" fill="rgb(215,49,2)" rx="2" ry="2" />
<text  x="894.17" y="655.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::RunTask((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (698 samples, 14.63%)</title><rect x="379.3" y="869" width="172.7" height="15.0" fill="rgb(211,176,36)" rx="2" ry="2" />
<text  x="382.34" y="879.5" >(anonymous namespace):..</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="213.1" y="869" width="0.2" height="15.0" fill="rgb(239,113,32)" rx="2" ry="2" />
<text  x="216.10" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::MoveReadyDelayedTasksToWorkQueue(base::sequence_manager::LazyNow*) (1 samples, 0.02%)</title><rect x="1074.0" y="821" width="0.2" height="15.0" fill="rgb(227,84,21)" rx="2" ry="2" />
<text  x="1076.98" y="831.5" ></text>
</g>
<g >
<title>base::internal::WeakReferenceOwner::GetRef() const (1 samples, 0.02%)</title><rect x="137.4" y="549" width="0.2" height="15.0" fill="rgb(219,211,46)" rx="2" ry="2" />
<text  x="140.40" y="559.5" ></text>
</g>
<g >
<title>blink::V8Function::InvokeAndReportException(blink::bindings::V8ValueOrScriptWrappableAdapter, WTF::Vector&lt;blink::ScriptValue, 0u, WTF::PartitionAllocator&gt; const&amp;) (6 samples, 0.13%)</title><rect x="16.9" y="597" width="1.5" height="15.0" fill="rgb(207,213,5)" rx="2" ry="2" />
<text  x="19.93" y="607.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="265.0" y="597" width="0.3" height="15.0" fill="rgb(234,120,14)" rx="2" ry="2" />
<text  x="268.05" y="607.5" ></text>
</g>
<g >
<title>webrtc::EncodedImageBuffer::Realloc(unsigned long) (1 samples, 0.02%)</title><rect x="961.2" y="757" width="0.2" height="15.0" fill="rgb(243,166,46)" rx="2" ry="2" />
<text  x="964.17" y="767.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="280.9" y="661" width="0.2" height="15.0" fill="rgb(241,44,50)" rx="2" ry="2" />
<text  x="283.88" y="671.5" ></text>
</g>
<g >
<title>vp8_short_inv_walsh4x4_sse2 (1 samples, 0.02%)</title><rect x="934.5" y="693" width="0.2" height="15.0" fill="rgb(214,159,53)" rx="2" ry="2" />
<text  x="937.46" y="703.5" ></text>
</g>
<g >
<title>vp8_cost_mv_ref (7 samples, 0.15%)</title><rect x="409.3" y="677" width="1.7" height="15.0" fill="rgb(243,91,24)" rx="2" ry="2" />
<text  x="412.27" y="687.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="693.8" y="949" width="0.2" height="15.0" fill="rgb(222,14,22)" rx="2" ry="2" />
<text  x="696.76" y="959.5" ></text>
</g>
<g >
<title>extend_plane (3 samples, 0.06%)</title><rect x="648.7" y="725" width="0.8" height="15.0" fill="rgb(222,193,42)" rx="2" ry="2" />
<text  x="651.73" y="735.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.02%)</title><rect x="345.9" y="757" width="0.3" height="15.0" fill="rgb(220,35,35)" rx="2" ry="2" />
<text  x="348.94" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (4 samples, 0.08%)</title><rect x="333.8" y="869" width="1.0" height="15.0" fill="rgb(243,8,52)" rx="2" ry="2" />
<text  x="336.82" y="879.5" ></text>
</g>
<g >
<title>v8_inspector::V8ConsoleMessage::createForConsoleAPI(v8::Local&lt;v8::Context&gt;, int, int, v8_inspector::V8InspectorImpl*, double, v8_inspector::ConsoleAPIType, std::__Cr::vector&lt;v8::Local&lt;v8::Value&gt;, std::__Cr::allocator&lt;v8::Local&lt;v8::Value&gt; &gt; &gt; const&amp;, v8_inspector::String16 const&amp;, std::__Cr::unique_ptr&lt;v8_inspector::V8StackTraceImpl, std::__Cr::default_delete&lt;v8_inspector::V8StackTraceImpl&gt; &gt;) (2 samples, 0.04%)</title><rect x="17.7" y="341" width="0.5" height="15.0" fill="rgb(225,45,33)" rx="2" ry="2" />
<text  x="20.67" y="351.5" ></text>
</g>
<g >
<title>base::LazyInstance&lt;base::SequenceLocalStorageSlot&lt;mojo::internal::MessageDispatchContext*, std::__Cr::default_delete&lt;mojo::internal::MessageDispatchContext*&gt; &gt;, base::internal::LeakyLazyInstanceTraits&lt;base::SequenceLocalStorageSlot&lt;mojo::internal::MessageDispatchContext*, std::__Cr::default_delete&lt;mojo::internal::MessageDispatchContext*&gt; &gt; &gt; &gt;::Pointer() (1 samples, 0.02%)</title><rect x="1050.5" y="645" width="0.2" height="15.0" fill="rgb(222,189,4)" rx="2" ry="2" />
<text  x="1053.48" y="655.5" ></text>
</g>
<g >
<title>MojoWriteMessage (4 samples, 0.08%)</title><rect x="235.6" y="597" width="1.0" height="15.0" fill="rgb(236,101,3)" rx="2" ry="2" />
<text  x="238.61" y="607.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="268.0" y="485" width="0.3" height="15.0" fill="rgb(248,175,3)" rx="2" ry="2" />
<text  x="271.02" y="495.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (2 samples, 0.04%)</title><rect x="78.5" y="725" width="0.5" height="15.0" fill="rgb(221,92,24)" rx="2" ry="2" />
<text  x="81.52" y="735.5" ></text>
</g>
<g >
<title>vp8_hex_search (7 samples, 0.15%)</title><rect x="771.9" y="677" width="1.8" height="15.0" fill="rgb(234,14,4)" rx="2" ry="2" />
<text  x="774.93" y="687.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="279.1" y="581" width="0.3" height="15.0" fill="rgb(236,112,2)" rx="2" ry="2" />
<text  x="282.15" y="591.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::PutRtpPacket(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType, absl::optional&lt;long long&gt;) (1 samples, 0.02%)</title><rect x="816.5" y="677" width="0.2" height="15.0" fill="rgb(249,22,28)" rx="2" ry="2" />
<text  x="819.46" y="687.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="31.5" y="613" width="0.3" height="15.0" fill="rgb(224,150,52)" rx="2" ry="2" />
<text  x="34.52" y="623.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_half_loop (1 samples, 0.02%)</title><rect x="746.0" y="661" width="0.2" height="15.0" fill="rgb(231,150,30)" rx="2" ry="2" />
<text  x="748.95" y="671.5" ></text>
</g>
<g >
<title>v8::internal::CheckObjectType(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="17.2" y="405" width="0.2" height="15.0" fill="rgb(236,41,3)" rx="2" ry="2" />
<text  x="20.17" y="415.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="215.6" y="917" width="0.2" height="15.0" fill="rgb(235,173,30)" rx="2" ry="2" />
<text  x="218.57" y="927.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunAndPopNextTask(base::internal::DecoratorWithTaskSource&lt;base::internal::TaskSource::RunIntent, base::internal::RegisteredTaskSource&gt;) (153 samples, 3.21%)</title><rect x="1022.3" y="965" width="37.8" height="15.0" fill="rgb(213,131,22)" rx="2" ry="2" />
<text  x="1025.28" y="975.5" >bas..</text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (3 samples, 0.06%)</title><rect x="390.0" y="661" width="0.7" height="15.0" fill="rgb(211,78,26)" rx="2" ry="2" />
<text  x="392.97" y="671.5" ></text>
</g>
<g >
<title>_pthread_body (64 samples, 1.34%)</title><rect x="1087.1" y="1029" width="15.8" height="15.0" fill="rgb(252,224,21)" rx="2" ry="2" />
<text  x="1090.09" y="1039.5" ></text>
</g>
<g >
<title>IOSurfaceClientLock (4 samples, 0.08%)</title><rect x="69.1" y="901" width="1.0" height="15.0" fill="rgb(219,227,1)" rx="2" ry="2" />
<text  x="72.12" y="911.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintLayerContents(blink::GraphicsContext&amp;, blink::PaintLayerPaintingInfo const&amp;, unsigned int) (2 samples, 0.04%)</title><rect x="26.6" y="309" width="0.5" height="15.0" fill="rgb(205,33,30)" rx="2" ry="2" />
<text  x="29.57" y="319.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="1073.5" y="853" width="0.2" height="15.0" fill="rgb(253,213,53)" rx="2" ry="2" />
<text  x="1076.48" y="863.5" ></text>
</g>
<g >
<title>mojo::Connector::DispatchMessage(mojo::Message) (76 samples, 1.59%)</title><rect x="301.7" y="789" width="18.8" height="15.0" fill="rgb(252,24,39)" rx="2" ry="2" />
<text  x="304.66" y="799.5" ></text>
</g>
<g >
<title>base::Lock::~Lock() (1 samples, 0.02%)</title><rect x="34.2" y="613" width="0.3" height="15.0" fill="rgb(223,159,1)" rx="2" ry="2" />
<text  x="37.24" y="623.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (2 samples, 0.04%)</title><rect x="861.7" y="901" width="0.5" height="15.0" fill="rgb(232,148,40)" rx="2" ry="2" />
<text  x="864.73" y="911.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (6 samples, 0.13%)</title><rect x="229.4" y="853" width="1.5" height="15.0" fill="rgb(229,153,31)" rx="2" ry="2" />
<text  x="232.43" y="863.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="1162.5" y="853" width="0.5" height="15.0" fill="rgb(239,208,1)" rx="2" ry="2" />
<text  x="1165.54" y="863.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="77.0" y="693" width="0.3" height="15.0" fill="rgb(245,48,34)" rx="2" ry="2" />
<text  x="80.04" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkDeduplicator::WillCheckForMoreWork() (2 samples, 0.04%)</title><rect x="182.2" y="885" width="0.5" height="15.0" fill="rgb(220,13,5)" rx="2" ry="2" />
<text  x="185.18" y="895.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.02%)</title><rect x="1006.9" y="917" width="0.3" height="15.0" fill="rgb(220,18,43)" rx="2" ry="2" />
<text  x="1009.94" y="927.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1041.8" y="437" width="0.3" height="15.0" fill="rgb(211,84,33)" rx="2" ry="2" />
<text  x="1044.82" y="447.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="310.6" y="437" width="0.2" height="15.0" fill="rgb(234,82,46)" rx="2" ry="2" />
<text  x="313.57" y="447.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (2 samples, 0.04%)</title><rect x="312.8" y="565" width="0.5" height="15.0" fill="rgb(226,31,40)" rx="2" ry="2" />
<text  x="315.79" y="575.5" ></text>
</g>
<g >
<title>CopyPlane (2 samples, 0.04%)</title><rect x="66.4" y="901" width="0.5" height="15.0" fill="rgb(209,122,9)" rx="2" ry="2" />
<text  x="69.40" y="911.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="1007.2" y="933" width="0.2" height="15.0" fill="rgb(221,169,10)" rx="2" ry="2" />
<text  x="1010.19" y="943.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetWaitAllowed(bool) (3 samples, 0.06%)</title><rect x="578.0" y="917" width="0.7" height="15.0" fill="rgb(234,131,13)" rx="2" ry="2" />
<text  x="580.98" y="927.5" ></text>
</g>
<g >
<title>gfx::SizeF::Enlarge(float, float) (1 samples, 0.02%)</title><rect x="1072.2" y="469" width="0.3" height="15.0" fill="rgb(236,63,13)" rx="2" ry="2" />
<text  x="1075.25" y="479.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="327.6" y="837" width="0.3" height="15.0" fill="rgb(205,192,38)" rx="2" ry="2" />
<text  x="330.64" y="847.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.02%)</title><rect x="30.5" y="661" width="0.3" height="15.0" fill="rgb(252,122,22)" rx="2" ry="2" />
<text  x="33.53" y="671.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (1 samples, 0.02%)</title><rect x="140.6" y="341" width="0.3" height="15.0" fill="rgb(218,43,38)" rx="2" ry="2" />
<text  x="143.62" y="351.5" ></text>
</g>
<g >
<title>base::internal::AssertBaseSyncPrimitivesAllowed() (1 samples, 0.02%)</title><rect x="1164.5" y="885" width="0.3" height="15.0" fill="rgb(226,177,17)" rx="2" ry="2" />
<text  x="1167.52" y="895.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Wait() (19 samples, 0.40%)</title><rect x="1060.4" y="949" width="4.7" height="15.0" fill="rgb(221,119,41)" rx="2" ry="2" />
<text  x="1063.37" y="959.5" ></text>
</g>
<g >
<title>mach_msg (4 samples, 0.08%)</title><rect x="134.2" y="517" width="1.0" height="15.0" fill="rgb(225,129,48)" rx="2" ry="2" />
<text  x="137.18" y="527.5" ></text>
</g>
<g >
<title>operator delete[](void*) (1 samples, 0.02%)</title><rect x="1125.4" y="725" width="0.3" height="15.0" fill="rgb(233,81,24)" rx="2" ry="2" />
<text  x="1128.43" y="735.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="344.0" y="789" width="0.2" height="15.0" fill="rgb(214,27,31)" rx="2" ry="2" />
<text  x="346.96" y="799.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.02%)</title><rect x="283.4" y="549" width="0.2" height="15.0" fill="rgb(206,79,45)" rx="2" ry="2" />
<text  x="286.35" y="559.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::ReloadEmptyImmediateWorkQueue() (1 samples, 0.02%)</title><rect x="1073.7" y="837" width="0.3" height="15.0" fill="rgb(207,120,39)" rx="2" ry="2" />
<text  x="1076.73" y="847.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="207.7" y="773" width="0.5" height="15.0" fill="rgb(227,107,13)" rx="2" ry="2" />
<text  x="210.66" y="783.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWait(base::TimeDelta const&amp;) (29 samples, 0.61%)</title><rect x="863.7" y="949" width="7.2" height="15.0" fill="rgb(243,15,17)" rx="2" ry="2" />
<text  x="866.71" y="959.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="317.5" y="453" width="0.2" height="15.0" fill="rgb(222,16,22)" rx="2" ry="2" />
<text  x="320.49" y="463.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1176.9" y="933" width="0.2" height="15.0" fill="rgb(217,128,33)" rx="2" ry="2" />
<text  x="1179.89" y="943.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="321.0" y="725" width="0.2" height="15.0" fill="rgb(237,213,0)" rx="2" ry="2" />
<text  x="323.96" y="735.5" ></text>
</g>
<g >
<title>mojo::core::RequestContext::~RequestContext() (1 samples, 0.02%)</title><rect x="325.4" y="741" width="0.3" height="15.0" fill="rgb(222,135,15)" rx="2" ry="2" />
<text  x="328.41" y="751.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="341.2" y="741" width="0.3" height="15.0" fill="rgb(214,203,46)" rx="2" ry="2" />
<text  x="344.24" y="751.5" ></text>
</g>
<g >
<title>cc::TileManager::FlushAndIssueSignals() (4 samples, 0.08%)</title><rect x="1069.3" y="853" width="1.0" height="15.0" fill="rgb(216,144,38)" rx="2" ry="2" />
<text  x="1072.28" y="863.5" ></text>
</g>
<g >
<title>webrtc::EncoderSimulcastProxy::GetEncoderInfo() const (1 samples, 0.02%)</title><rect x="722.5" y="805" width="0.2" height="15.0" fill="rgb(227,42,27)" rx="2" ry="2" />
<text  x="725.45" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyWillProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (17 samples, 0.36%)</title><rect x="40.7" y="661" width="4.2" height="15.0" fill="rgb(221,203,16)" rx="2" ry="2" />
<text  x="43.68" y="671.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="138.1" y="501" width="0.5" height="15.0" fill="rgb(205,86,23)" rx="2" ry="2" />
<text  x="141.14" y="511.5" ></text>
</g>
<g >
<title>webrtc::RtpTransport::SendPacket(bool, rtc::CopyOnWriteBuffer*, rtc::PacketOptions const&amp;, int) (66 samples, 1.38%)</title><rect x="239.1" y="773" width="16.3" height="15.0" fill="rgb(253,65,49)" rx="2" ry="2" />
<text  x="242.07" y="783.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::Release() const (2 samples, 0.04%)</title><rect x="881.8" y="869" width="0.5" height="15.0" fill="rgb(234,195,1)" rx="2" ry="2" />
<text  x="884.77" y="879.5" ></text>
</g>
<g >
<title>blink::EventPath::CalculatePath() (1 samples, 0.02%)</title><rect x="22.6" y="565" width="0.3" height="15.0" fill="rgb(237,181,27)" rx="2" ry="2" />
<text  x="25.62" y="575.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="46.6" y="693" width="0.3" height="15.0" fill="rgb(223,223,53)" rx="2" ry="2" />
<text  x="49.61" y="703.5" ></text>
</g>
<g >
<title>cc::Scheduler::ProcessScheduledActions() (6 samples, 0.13%)</title><rect x="1067.5" y="837" width="1.5" height="15.0" fill="rgb(216,53,31)" rx="2" ry="2" />
<text  x="1070.55" y="847.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="52.1" y="853" width="0.2" height="15.0" fill="rgb(229,77,12)" rx="2" ry="2" />
<text  x="55.05" y="863.5" ></text>
</g>
<g >
<title>vp8_tokenize_mb (18 samples, 0.38%)</title><rect x="934.7" y="693" width="4.5" height="15.0" fill="rgb(243,74,37)" rx="2" ry="2" />
<text  x="937.70" y="703.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Leave() const (1 samples, 0.02%)</title><rect x="262.6" y="661" width="0.2" height="15.0" fill="rgb(249,93,47)" rx="2" ry="2" />
<text  x="265.57" y="671.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="1111.6" y="821" width="0.5" height="15.0" fill="rgb(208,155,2)" rx="2" ry="2" />
<text  x="1114.58" y="831.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (2 samples, 0.04%)</title><rect x="282.6" y="581" width="0.5" height="15.0" fill="rgb(230,115,32)" rx="2" ry="2" />
<text  x="285.61" y="591.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (2 samples, 0.04%)</title><rect x="390.7" y="661" width="0.5" height="15.0" fill="rgb(234,214,14)" rx="2" ry="2" />
<text  x="393.72" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (4 samples, 0.08%)</title><rect x="140.1" y="357" width="1.0" height="15.0" fill="rgb(252,212,34)" rx="2" ry="2" />
<text  x="143.12" y="367.5" ></text>
</g>
<g >
<title>_pthread_body (1 samples, 0.02%)</title><rect x="1020.3" y="1029" width="0.2" height="15.0" fill="rgb(217,129,45)" rx="2" ry="2" />
<text  x="1023.30" y="1039.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMSCompositor::SetCurrentFrame(scoped_refptr&lt;media::VideoFrame&gt;) (1 samples, 0.02%)</title><rect x="1029.9" y="853" width="0.3" height="15.0" fill="rgb(233,136,54)" rx="2" ry="2" />
<text  x="1032.95" y="863.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="42.2" y="613" width="0.2" height="15.0" fill="rgb(213,67,19)" rx="2" ry="2" />
<text  x="45.16" y="623.5" ></text>
</g>
<g >
<title>GetCoeffs (35 samples, 0.73%)</title><rect x="975.3" y="693" width="8.6" height="15.0" fill="rgb(224,82,13)" rx="2" ry="2" />
<text  x="978.27" y="703.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (3 samples, 0.06%)</title><rect x="696.5" y="933" width="0.7" height="15.0" fill="rgb(245,8,53)" rx="2" ry="2" />
<text  x="699.48" y="943.5" ></text>
</g>
<g >
<title>base::SequencedTaskRunnerHandle::~SequencedTaskRunnerHandle() (1 samples, 0.02%)</title><rect x="370.4" y="917" width="0.3" height="15.0" fill="rgb(232,195,28)" rx="2" ry="2" />
<text  x="373.43" y="927.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="993.6" y="709" width="0.2" height="15.0" fill="rgb(224,205,40)" rx="2" ry="2" />
<text  x="996.58" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeTaskFromWorkQueue() (3 samples, 0.06%)</title><rect x="45.9" y="661" width="0.7" height="15.0" fill="rgb(223,81,35)" rx="2" ry="2" />
<text  x="48.87" y="671.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendPeerEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (3 samples, 0.06%)</title><rect x="235.9" y="485" width="0.7" height="15.0" fill="rgb(248,176,41)" rx="2" ry="2" />
<text  x="238.86" y="495.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="174.8" y="693" width="0.2" height="15.0" fill="rgb(226,76,36)" rx="2" ry="2" />
<text  x="177.75" y="703.5" ></text>
</g>
<g >
<title>cricket::P2PTransportChannel::OnReadPacket(cricket::Connection*, char const*, unsigned long, long long) (24 samples, 0.50%)</title><rect x="304.9" y="597" width="5.9" height="15.0" fill="rgb(208,202,20)" rx="2" ry="2" />
<text  x="307.88" y="607.5" ></text>
</g>
<g >
<title>mojo::internal::Buffer::Allocate(unsigned long) (1 samples, 0.02%)</title><rect x="253.2" y="629" width="0.2" height="15.0" fill="rgb(212,35,52)" rx="2" ry="2" />
<text  x="256.17" y="639.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="266.0" y="581" width="0.5" height="15.0" fill="rgb(231,49,42)" rx="2" ry="2" />
<text  x="269.04" y="591.5" ></text>
</g>
<g >
<title>_CFGetTSDCreateIfNeeded (1 samples, 0.02%)</title><rect x="46.9" y="821" width="0.2" height="15.0" fill="rgb(221,124,52)" rx="2" ry="2" />
<text  x="49.86" y="831.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::ReadMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (15 samples, 0.31%)</title><rect x="321.0" y="741" width="3.7" height="15.0" fill="rgb(241,77,7)" rx="2" ry="2" />
<text  x="323.96" y="751.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="344.0" y="805" width="0.2" height="15.0" fill="rgb(222,153,54)" rx="2" ry="2" />
<text  x="346.96" y="815.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="346.4" y="741" width="0.3" height="15.0" fill="rgb(221,17,27)" rx="2" ry="2" />
<text  x="349.44" y="751.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="33.5" y="661" width="0.2" height="15.0" fill="rgb(214,154,43)" rx="2" ry="2" />
<text  x="36.50" y="671.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::OnHandleReady(int, unsigned int, mojo::HandleSignalsState const&amp;) (7 samples, 0.15%)</title><rect x="1071.5" y="869" width="1.7" height="15.0" fill="rgb(213,205,32)" rx="2" ry="2" />
<text  x="1074.51" y="879.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (6 samples, 0.13%)</title><rect x="1085.1" y="725" width="1.5" height="15.0" fill="rgb(248,215,28)" rx="2" ry="2" />
<text  x="1088.11" y="735.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::MaybeScheduleAdjustMaxTasksLockRequired(base::internal::ThreadGroupImpl::ScopedWorkersExecutor*) (1 samples, 0.02%)</title><rect x="557.7" y="933" width="0.2" height="15.0" fill="rgb(245,111,7)" rx="2" ry="2" />
<text  x="560.70" y="943.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="1128.9" y="741" width="0.2" height="15.0" fill="rgb(227,160,40)" rx="2" ry="2" />
<text  x="1131.90" y="751.5" ></text>
</g>
<g >
<title>webrtc::RemoteAudioSource::AudioDataProxy::OnData(webrtc::AudioSinkInterface::Data const&amp;) (4 samples, 0.08%)</title><rect x="1130.9" y="853" width="1.0" height="15.0" fill="rgb(221,129,21)" rx="2" ry="2" />
<text  x="1133.88" y="863.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 0.04%)</title><rect x="26.6" y="485" width="0.5" height="15.0" fill="rgb(245,216,32)" rx="2" ry="2" />
<text  x="29.57" y="495.5" ></text>
</g>
<g >
<title>mojo::Connector::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="1072.5" y="517" width="0.2" height="15.0" fill="rgb(224,212,26)" rx="2" ry="2" />
<text  x="1075.49" y="527.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="167.8" y="693" width="0.3" height="15.0" fill="rgb(234,190,24)" rx="2" ry="2" />
<text  x="170.83" y="703.5" ></text>
</g>
<g >
<title>vp8_hex_search (14 samples, 0.29%)</title><rect x="434.3" y="677" width="3.4" height="15.0" fill="rgb(222,60,22)" rx="2" ry="2" />
<text  x="437.26" y="687.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::PutRtpPacket(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType, absl::optional&lt;long long&gt;) (2 samples, 0.04%)</title><rect x="550.0" y="773" width="0.5" height="15.0" fill="rgb(217,36,7)" rx="2" ry="2" />
<text  x="553.03" y="783.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="30.0" y="661" width="0.3" height="15.0" fill="rgb(245,147,2)" rx="2" ry="2" />
<text  x="33.04" y="671.5" ></text>
</g>
<g >
<title>mojo::SimpleWatcher::OnHandleReady(int, unsigned int, mojo::HandleSignalsState const&amp;) (112 samples, 2.35%)</title><rect x="299.2" y="853" width="27.7" height="15.0" fill="rgb(240,49,27)" rx="2" ry="2" />
<text  x="302.19" y="863.5" >m..</text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="260.3" y="645" width="0.3" height="15.0" fill="rgb(230,122,54)" rx="2" ry="2" />
<text  x="263.35" y="655.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::ResourceOwningTask&lt;webrtc::RtcEvent&gt;::Run() (4 samples, 0.08%)</title><rect x="720.7" y="853" width="1.0" height="15.0" fill="rgb(251,157,23)" rx="2" ry="2" />
<text  x="723.72" y="863.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (11 samples, 0.23%)</title><rect x="197.8" y="901" width="2.7" height="15.0" fill="rgb(218,56,11)" rx="2" ry="2" />
<text  x="200.76" y="911.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::EnsureEnoughWorkersLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*) (3 samples, 0.06%)</title><rect x="1009.9" y="949" width="0.7" height="15.0" fill="rgb(210,169,0)" rx="2" ry="2" />
<text  x="1012.91" y="959.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Set(void*) (1 samples, 0.02%)</title><rect x="376.4" y="901" width="0.2" height="15.0" fill="rgb(213,152,50)" rx="2" ry="2" />
<text  x="379.37" y="911.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (3 samples, 0.06%)</title><rect x="693.0" y="949" width="0.8" height="15.0" fill="rgb(233,73,34)" rx="2" ry="2" />
<text  x="696.01" y="959.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="1162.5" y="885" width="0.5" height="15.0" fill="rgb(254,202,9)" rx="2" ry="2" />
<text  x="1165.54" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="309.1" y="437" width="0.2" height="15.0" fill="rgb(218,32,18)" rx="2" ry="2" />
<text  x="312.08" y="447.5" ></text>
</g>
<g >
<title>cricket::BaseChannel::SendPacket(bool, rtc::CopyOnWriteBuffer*, rtc::PacketOptions const&amp;) (88 samples, 1.84%)</title><rect x="233.6" y="805" width="21.8" height="15.0" fill="rgb(228,34,51)" rx="2" ry="2" />
<text  x="236.63" y="815.5" >c..</text>
</g>
<g >
<title>silk_NSQ_wrapper_FLP (15 samples, 0.31%)</title><rect x="685.3" y="709" width="3.8" height="15.0" fill="rgb(234,57,17)" rx="2" ry="2" />
<text  x="688.35" y="719.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="317.5" y="485" width="0.2" height="15.0" fill="rgb(237,19,24)" rx="2" ry="2" />
<text  x="320.49" y="495.5" ></text>
</g>
<g >
<title>webrtc::RmsLevel::Analyze(rtc::ArrayView&lt;short const, -4711l&gt;) (2 samples, 0.04%)</title><rect x="550.8" y="837" width="0.5" height="15.0" fill="rgb(245,221,7)" rx="2" ry="2" />
<text  x="553.77" y="847.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="18.4" y="485" width="0.3" height="15.0" fill="rgb(212,97,41)" rx="2" ry="2" />
<text  x="21.41" y="495.5" ></text>
</g>
<g >
<title>webrtc::SequenceCheckerImpl::IsCurrent() const (1 samples, 0.02%)</title><rect x="533.7" y="805" width="0.2" height="15.0" fill="rgb(251,50,0)" rx="2" ry="2" />
<text  x="536.70" y="815.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (7 samples, 0.15%)</title><rect x="124.8" y="709" width="1.7" height="15.0" fill="rgb(222,18,37)" rx="2" ry="2" />
<text  x="127.78" y="719.5" ></text>
</g>
<g >
<title>vpx_codec_encode (316 samples, 6.62%)</title><rect x="883.0" y="789" width="78.2" height="15.0" fill="rgb(211,192,6)" rx="2" ry="2" />
<text  x="886.00" y="799.5" >vpx_codec..</text>
</g>
<g >
<title>small_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="577.7" y="789" width="0.3" height="15.0" fill="rgb(231,160,20)" rx="2" ry="2" />
<text  x="580.74" y="799.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="174.0" y="805" width="0.5" height="15.0" fill="rgb(205,223,8)" rx="2" ry="2" />
<text  x="177.01" y="815.5" ></text>
</g>
<g >
<title>base::internal::Sequence::WillRunTask() (1 samples, 0.02%)</title><rect x="1009.7" y="949" width="0.2" height="15.0" fill="rgb(219,32,35)" rx="2" ry="2" />
<text  x="1012.66" y="959.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="1022.5" y="949" width="0.3" height="15.0" fill="rgb(228,75,2)" rx="2" ry="2" />
<text  x="1025.52" y="959.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::is_end() const (1 samples, 0.02%)</title><rect x="343.5" y="805" width="0.2" height="15.0" fill="rgb(226,2,20)" rx="2" ry="2" />
<text  x="346.47" y="815.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::ReEnqueueTaskSourceLockRequired(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::ThreadGroup::ScopedReenqueueExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.02%)</title><rect x="554.7" y="949" width="0.3" height="15.0" fill="rgb(246,68,34)" rx="2" ry="2" />
<text  x="557.73" y="959.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (2 samples, 0.04%)</title><rect x="206.4" y="757" width="0.5" height="15.0" fill="rgb(208,32,1)" rx="2" ry="2" />
<text  x="209.42" y="767.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="680.2" y="693" width="0.2" height="15.0" fill="rgb(224,17,0)" rx="2" ry="2" />
<text  x="683.15" y="703.5" ></text>
</g>
<g >
<title>mojo::internal::Serializer&lt;mojo::ArrayDataView&lt;viz::mojom::CopyOutputRequestDataView&gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt; &gt; &gt; const&gt;::Serialize(std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::CopyOutputRequest, std::__Cr::default_delete&lt;viz::CopyOutputRequest&gt; &gt; &gt; &gt; const&amp;, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;mojo::internal::Pointer&lt;viz::mojom::internal::CopyOutputRequest_Data&gt; &gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1042.6" y="565" width="0.2" height="15.0" fill="rgb(241,67,30)" rx="2" ry="2" />
<text  x="1045.56" y="575.5" ></text>
</g>
<g >
<title>content::VideoCaptureImpl::DidFinishConsumingFrame(media::VideoFrameMetadata const*, base::OnceCallback&lt;void (double)&gt;) (1 samples, 0.02%)</title><rect x="962.7" y="677" width="0.2" height="15.0" fill="rgb(234,182,41)" rx="2" ry="2" />
<text  x="965.66" y="687.5" ></text>
</g>
<g >
<title>_pthread_body (444 samples, 9.31%)</title><rect x="87.2" y="1029" width="109.8" height="15.0" fill="rgb(251,141,39)" rx="2" ry="2" />
<text  x="90.18" y="1039.5" >_pthread_body</text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="880.3" y="885" width="0.2" height="15.0" fill="rgb(228,127,9)" rx="2" ry="2" />
<text  x="883.28" y="895.5" ></text>
</g>
<g >
<title>WTF::HashTable&lt;blink::DisplayItemClient const*, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::PartitionAllocator&gt;::Expand(WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;*) (1 samples, 0.02%)</title><rect x="26.6" y="85" width="0.2" height="15.0" fill="rgb(252,76,25)" rx="2" ry="2" />
<text  x="29.57" y="95.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Release() (1 samples, 0.02%)</title><rect x="1007.2" y="949" width="0.2" height="15.0" fill="rgb(252,138,33)" rx="2" ry="2" />
<text  x="1010.19" y="959.5" ></text>
</g>
<g >
<title>base::debug::StackTrace::StackTrace() (2 samples, 0.04%)</title><rect x="714.8" y="901" width="0.5" height="15.0" fill="rgb(212,203,8)" rx="2" ry="2" />
<text  x="717.78" y="911.5" ></text>
</g>
<g >
<title>webrtc::ProcessThreadImpl::Process() (93 samples, 1.95%)</title><rect x="1140.5" y="981" width="23.0" height="15.0" fill="rgb(234,21,25)" rx="2" ry="2" />
<text  x="1143.52" y="991.5" >w..</text>
</g>
<g >
<title>base::ThreadRestrictions::SetWaitAllowed(bool) (9 samples, 0.19%)</title><rect x="376.4" y="917" width="2.2" height="15.0" fill="rgb(250,122,41)" rx="2" ry="2" />
<text  x="379.37" y="927.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="292.5" y="613" width="0.3" height="15.0" fill="rgb(213,73,6)" rx="2" ry="2" />
<text  x="295.51" y="623.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.02%)</title><rect x="854.8" y="709" width="0.2" height="15.0" fill="rgb(219,21,6)" rx="2" ry="2" />
<text  x="857.80" y="719.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), void&gt;::Invoke&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;(void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&amp;&amp;) (1 samples, 0.02%)</title><rect x="64.7" y="885" width="0.2" height="15.0" fill="rgb(254,41,46)" rx="2" ry="2" />
<text  x="67.67" y="895.5" ></text>
</g>
<g >
<title>webrtc::RtpDemuxer::ResolveSink(webrtc::RtpPacketReceived const&amp;) (1 samples, 0.02%)</title><rect x="261.3" y="709" width="0.3" height="15.0" fill="rgb(254,228,41)" rx="2" ry="2" />
<text  x="264.34" y="719.5" ></text>
</g>
<g >
<title>__psynch_mutexdrop (1 samples, 0.02%)</title><rect x="367.0" y="885" width="0.2" height="15.0" fill="rgb(216,182,20)" rx="2" ry="2" />
<text  x="369.97" y="895.5" ></text>
</g>
<g >
<title>objc_removeAssociatedObjects (3 samples, 0.06%)</title><rect x="214.8" y="901" width="0.8" height="15.0" fill="rgb(252,20,50)" rx="2" ry="2" />
<text  x="217.83" y="911.5" ></text>
</g>
<g >
<title>webrtc::RTCPReceiver::IncomingPacket(unsigned char const*, unsigned long) (3 samples, 0.06%)</title><rect x="284.3" y="741" width="0.8" height="15.0" fill="rgb(228,169,46)" rx="2" ry="2" />
<text  x="287.34" y="751.5" ></text>
</g>
<g >
<title>vp8_loop_filter_vertical_edge_uv_sse2 (1 samples, 0.02%)</title><rect x="528.3" y="693" width="0.2" height="15.0" fill="rgb(211,202,1)" rx="2" ry="2" />
<text  x="531.26" y="703.5" ></text>
</g>
<g >
<title>base::internal::Task::Task(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="286.3" y="709" width="0.3" height="15.0" fill="rgb(248,74,19)" rx="2" ry="2" />
<text  x="289.32" y="719.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_8::__invoke(_malloc_zone_t*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="104.5" y="757" width="0.2" height="15.0" fill="rgb(210,2,13)" rx="2" ry="2" />
<text  x="107.50" y="767.5" ></text>
</g>
<g >
<title>tlv_get_addr (1 samples, 0.02%)</title><rect x="1161.1" y="853" width="0.2" height="15.0" fill="rgb(229,136,24)" rx="2" ry="2" />
<text  x="1164.06" y="863.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelReceive::PreferredSampleRate() const (1 samples, 0.02%)</title><rect x="1111.1" y="869" width="0.2" height="15.0" fill="rgb(238,194,4)" rx="2" ry="2" />
<text  x="1114.09" y="879.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (3 samples, 0.06%)</title><rect x="293.2" y="789" width="0.8" height="15.0" fill="rgb(250,182,21)" rx="2" ry="2" />
<text  x="296.25" y="799.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskImpl&lt;webrtc::video_coding::FrameBuffer::StartWaitForNextFrameOnQueue()::$_1&gt;::RunClosure() (1 samples, 0.02%)</title><rect x="692.5" y="837" width="0.3" height="15.0" fill="rgb(241,18,19)" rx="2" ry="2" />
<text  x="695.52" y="847.5" ></text>
</g>
<g >
<title>logging::ShouldCreateLogMessage(int) (1 samples, 0.02%)</title><rect x="252.7" y="629" width="0.2" height="15.0" fill="rgb(230,67,31)" rx="2" ry="2" />
<text  x="255.68" y="639.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (8 samples, 0.17%)</title><rect x="1046.5" y="645" width="2.0" height="15.0" fill="rgb(244,28,49)" rx="2" ry="2" />
<text  x="1049.52" y="655.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (2 samples, 0.04%)</title><rect x="282.6" y="565" width="0.5" height="15.0" fill="rgb(253,13,54)" rx="2" ry="2" />
<text  x="285.61" y="575.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="286.1" y="725" width="0.2" height="15.0" fill="rgb(253,119,13)" rx="2" ry="2" />
<text  x="289.08" y="735.5" ></text>
</g>
<g >
<title>viz::mojom::CompositorFrameSinkProxy::DidNotProduceFrame(viz::BeginFrameAck const&amp;) (1 samples, 0.02%)</title><rect x="1072.0" y="517" width="0.2" height="15.0" fill="rgb(222,165,17)" rx="2" ry="2" />
<text  x="1075.00" y="527.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="280.4" y="629" width="0.2" height="15.0" fill="rgb(254,134,29)" rx="2" ry="2" />
<text  x="283.39" y="639.5" ></text>
</g>
<g >
<title>std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, void*&gt;*, long&gt; std::__Cr::__tree&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::__map_value_compare&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::less&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__emplace_hint_unique_key_args&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; const, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;(std::__Cr::__tree_const_iterator&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;, void*&gt;*, long&gt;, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; const&amp;, std::__Cr::pair&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; const, std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;&amp;&amp;) (1 samples, 0.02%)</title><rect x="281.1" y="629" width="0.3" height="15.0" fill="rgb(249,166,41)" rx="2" ry="2" />
<text  x="284.13" y="639.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="1131.1" y="789" width="0.3" height="15.0" fill="rgb(211,22,21)" rx="2" ry="2" />
<text  x="1134.12" y="799.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (2 samples, 0.04%)</title><rect x="1011.4" y="901" width="0.5" height="15.0" fill="rgb(249,137,51)" rx="2" ry="2" />
<text  x="1014.39" y="911.5" ></text>
</g>
<g >
<title>mojo::core::Core::ReadMessage(unsigned int, MojoReadMessageOptions const*, unsigned long*) (12 samples, 0.25%)</title><rect x="1055.9" y="773" width="3.0" height="15.0" fill="rgb(207,0,27)" rx="2" ry="2" />
<text  x="1058.92" y="783.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::ResourceOwningTask&lt;webrtc::RtcEvent&gt;::~ResourceOwningTask() (1 samples, 0.02%)</title><rect x="380.8" y="853" width="0.3" height="15.0" fill="rgb(220,216,4)" rx="2" ry="2" />
<text  x="383.82" y="863.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (1 samples, 0.02%)</title><rect x="284.6" y="565" width="0.2" height="15.0" fill="rgb(227,52,43)" rx="2" ry="2" />
<text  x="287.59" y="575.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="333.8" y="837" width="0.3" height="15.0" fill="rgb(214,36,14)" rx="2" ry="2" />
<text  x="336.82" y="847.5" ></text>
</g>
<g >
<title>IPC::(anonymous namespace)::ChannelAssociatedGroupController::SendMessage(mojo::Message*) (1 samples, 0.02%)</title><rect x="19.9" y="181" width="0.2" height="15.0" fill="rgb(241,180,16)" rx="2" ry="2" />
<text  x="22.90" y="191.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (3 samples, 0.06%)</title><rect x="414.5" y="645" width="0.7" height="15.0" fill="rgb(226,34,34)" rx="2" ry="2" />
<text  x="417.47" y="655.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="190.1" y="725" width="0.2" height="15.0" fill="rgb(237,152,4)" rx="2" ry="2" />
<text  x="193.09" y="735.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_full_2x_sse2 (5 samples, 0.10%)</title><rect x="986.4" y="693" width="1.2" height="15.0" fill="rgb(247,228,52)" rx="2" ry="2" />
<text  x="989.41" y="703.5" ></text>
</g>
<g >
<title>MojoWriteMessage (1 samples, 0.02%)</title><rect x="165.8" y="725" width="0.3" height="15.0" fill="rgb(221,75,8)" rx="2" ry="2" />
<text  x="168.85" y="735.5" ></text>
</g>
<g >
<title>webrtc::RtpTransportControllerSend::UpdateControllerWithTimeInterval() (1 samples, 0.02%)</title><rect x="1005.9" y="821" width="0.3" height="15.0" fill="rgb(236,177,39)" rx="2" ry="2" />
<text  x="1008.95" y="831.5" ></text>
</g>
<g >
<title>rtc::AsyncClosure::~AsyncClosure() (7 samples, 0.15%)</title><rect x="295.2" y="789" width="1.8" height="15.0" fill="rgb(207,131,7)" rx="2" ry="2" />
<text  x="298.23" y="799.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="193.1" y="853" width="0.2" height="15.0" fill="rgb(245,205,9)" rx="2" ry="2" />
<text  x="196.06" y="863.5" ></text>
</g>
<g >
<title>mojo::core::ports::Event::Deserialize(void const*, unsigned long) (5 samples, 0.10%)</title><rect x="106.5" y="805" width="1.2" height="15.0" fill="rgb(226,134,1)" rx="2" ry="2" />
<text  x="109.48" y="815.5" ></text>
</g>
<g >
<title>cricket::StunRequestManager::SendDelayed(cricket::StunRequest*, int) (1 samples, 0.02%)</title><rect x="292.5" y="773" width="0.3" height="15.0" fill="rgb(234,209,6)" rx="2" ry="2" />
<text  x="295.51" y="783.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::SetScrollParent(cc::Layer*) (1 samples, 0.02%)</title><rect x="26.1" y="373" width="0.2" height="15.0" fill="rgb(231,179,47)" rx="2" ry="2" />
<text  x="29.08" y="383.5" ></text>
</g>
<g >
<title>opus_fft_impl (1 samples, 0.02%)</title><rect x="995.1" y="709" width="0.2" height="15.0" fill="rgb(235,91,47)" rx="2" ry="2" />
<text  x="998.06" y="719.5" ></text>
</g>
<g >
<title>viz::ExternalBeginFrameSource::OnBeginFrame(viz::BeginFrameArgs const&amp;) (4 samples, 0.08%)</title><rect x="1071.8" y="661" width="0.9" height="15.0" fill="rgb(214,46,34)" rx="2" ry="2" />
<text  x="1074.75" y="671.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::RunTask((anonymous namespace)::WebrtcTaskQueue*, scoped_refptr&lt;base::RefCountedData&lt;bool&gt; &gt;, std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (501 samples, 10.50%)</title><rect x="882.5" y="869" width="123.9" height="15.0" fill="rgb(207,219,6)" rx="2" ry="2" />
<text  x="885.51" y="879.5" >(anonymous name..</text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetSleepTimeout() (1 samples, 0.02%)</title><rect x="870.9" y="949" width="0.2" height="15.0" fill="rgb(238,50,6)" rx="2" ry="2" />
<text  x="873.88" y="959.5" ></text>
</g>
<g >
<title>rtc::VideoBroadcaster::OnFrame(webrtc::VideoFrame const&amp;) (4 samples, 0.08%)</title><rect x="297.9" y="789" width="1.0" height="15.0" fill="rgb(214,165,50)" rx="2" ry="2" />
<text  x="300.95" y="799.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="1181.6" y="821" width="0.2" height="15.0" fill="rgb(248,79,4)" rx="2" ry="2" />
<text  x="1184.59" y="831.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="415.0" y="629" width="0.2" height="15.0" fill="rgb(224,76,26)" rx="2" ry="2" />
<text  x="417.96" y="639.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="235.6" y="565" width="0.3" height="15.0" fill="rgb(229,187,13)" rx="2" ry="2" />
<text  x="238.61" y="575.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (3 samples, 0.06%)</title><rect x="1153.6" y="789" width="0.8" height="15.0" fill="rgb(241,133,10)" rx="2" ry="2" />
<text  x="1156.64" y="799.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="192.8" y="885" width="0.5" height="15.0" fill="rgb(222,115,38)" rx="2" ry="2" />
<text  x="195.81" y="895.5" ></text>
</g>
<g >
<title>webrtc::VideoQualityObserver::OnRenderedFrame(webrtc::VideoFrame const&amp;, long long) (1 samples, 0.02%)</title><rect x="533.5" y="693" width="0.2" height="15.0" fill="rgb(252,16,38)" rx="2" ry="2" />
<text  x="536.45" y="703.5" ></text>
</g>
<g >
<title>blink::scheduler::WorkerThread::SimpleThreadImpl::Run() (36 samples, 0.75%)</title><rect x="1065.3" y="997" width="8.9" height="15.0" fill="rgb(240,2,0)" rx="2" ry="2" />
<text  x="1068.32" y="1007.5" ></text>
</g>
<g >
<title>blink::MediaStreamVideoRendererSink::FrameDeliverer::OnVideoFrame(scoped_refptr&lt;media::VideoFrame&gt;, base::TimeTicks) (4 samples, 0.08%)</title><rect x="176.0" y="725" width="1.0" height="15.0" fill="rgb(226,117,20)" rx="2" ry="2" />
<text  x="178.99" y="735.5" ></text>
</g>
<g >
<title>io_connect_method (4 samples, 0.08%)</title><rect x="69.1" y="869" width="1.0" height="15.0" fill="rgb(222,193,15)" rx="2" ry="2" />
<text  x="72.12" y="879.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="81.7" y="821" width="0.5" height="15.0" fill="rgb(242,24,53)" rx="2" ry="2" />
<text  x="84.74" y="831.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="331.8" y="821" width="0.3" height="15.0" fill="rgb(218,87,18)" rx="2" ry="2" />
<text  x="334.84" y="831.5" ></text>
</g>
<g >
<title>media::SincResampler::SetRatio(double) (1 samples, 0.02%)</title><rect x="1102.4" y="917" width="0.3" height="15.0" fill="rgb(214,215,30)" rx="2" ry="2" />
<text  x="1105.43" y="927.5" ></text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.02%)</title><rect x="48.8" y="805" width="0.3" height="15.0" fill="rgb(253,124,9)" rx="2" ry="2" />
<text  x="51.84" y="815.5" ></text>
</g>
<g >
<title>base::ConditionVariable::Signal() (1 samples, 0.02%)</title><rect x="68.6" y="853" width="0.3" height="15.0" fill="rgb(215,135,9)" rx="2" ry="2" />
<text  x="71.63" y="863.5" ></text>
</g>
<g >
<title>IOSurfaceClientUnlock (1 samples, 0.02%)</title><rect x="67.6" y="837" width="0.3" height="15.0" fill="rgb(208,141,9)" rx="2" ry="2" />
<text  x="70.64" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::MaybeShrinkQueue() (1 samples, 0.02%)</title><rect x="210.6" y="773" width="0.3" height="15.0" fill="rgb(254,27,29)" rx="2" ry="2" />
<text  x="213.62" y="783.5" ></text>
</g>
<g >
<title>_pthread_start (2 samples, 0.04%)</title><rect x="213.8" y="1045" width="0.5" height="15.0" fill="rgb(220,31,32)" rx="2" ry="2" />
<text  x="216.84" y="1055.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="184.2" y="805" width="0.2" height="15.0" fill="rgb(227,175,47)" rx="2" ry="2" />
<text  x="187.16" y="815.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="228.2" y="549" width="0.2" height="15.0" fill="rgb(236,119,21)" rx="2" ry="2" />
<text  x="231.19" y="559.5" ></text>
</g>
<g >
<title>std::__Cr::__list_iterator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, void*&gt; std::__Cr::list&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt; &gt; &gt;::__sort&lt;webrtc::ForwardErrorCorrection::SortablePacket::LessThan&gt;(std::__Cr::__list_iterator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, void*&gt;, std::__Cr::__list_iterator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, void*&gt;, unsigned long, webrtc::ForwardErrorCorrection::SortablePacket::LessThan&amp;) (2 samples, 0.04%)</title><rect x="264.3" y="581" width="0.5" height="15.0" fill="rgb(212,139,18)" rx="2" ry="2" />
<text  x="267.31" y="591.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::FindOrCreateExtensionInfo(int) (1 samples, 0.02%)</title><rect x="227.0" y="533" width="0.2" height="15.0" fill="rgb(243,201,45)" rx="2" ry="2" />
<text  x="229.95" y="543.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::UnregisterTaskSource(scoped_refptr&lt;base::internal::TaskSource&gt;) (1 samples, 0.02%)</title><rect x="711.3" y="933" width="0.3" height="15.0" fill="rgb(215,133,28)" rx="2" ry="2" />
<text  x="714.32" y="943.5" ></text>
</g>
<g >
<title>srtp_aes_icm_openssl_encrypt (1 samples, 0.02%)</title><rect x="234.6" y="741" width="0.3" height="15.0" fill="rgb(209,15,46)" rx="2" ry="2" />
<text  x="237.62" y="751.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="1067.3" y="629" width="0.2" height="15.0" fill="rgb(220,110,10)" rx="2" ry="2" />
<text  x="1070.30" y="639.5" ></text>
</g>
<g >
<title>mojo::core::Core::AppendMessageData(unsigned long, unsigned int, unsigned int const*, unsigned int, MojoAppendMessageDataOptions const*, void**, unsigned int*) (1 samples, 0.02%)</title><rect x="253.2" y="581" width="0.2" height="15.0" fill="rgb(223,188,8)" rx="2" ry="2" />
<text  x="256.17" y="591.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::WakeUp() (9 samples, 0.19%)</title><rect x="288.3" y="629" width="2.2" height="15.0" fill="rgb(242,102,24)" rx="2" ry="2" />
<text  x="291.30" y="639.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="309.6" y="453" width="0.2" height="15.0" fill="rgb(217,224,13)" rx="2" ry="2" />
<text  x="312.58" y="463.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="1160.6" y="805" width="0.5" height="15.0" fill="rgb(222,170,41)" rx="2" ry="2" />
<text  x="1163.56" y="815.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="714.5" y="837" width="0.3" height="15.0" fill="rgb(248,80,8)" rx="2" ry="2" />
<text  x="717.54" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::GetDelayTillNextDelayedTask(base::sequence_manager::LazyNow*) const (5 samples, 0.10%)</title><rect x="177.2" y="869" width="1.3" height="15.0" fill="rgb(241,210,44)" rx="2" ry="2" />
<text  x="180.23" y="879.5" ></text>
</g>
<g >
<title>cc::TileTaskManagerImpl::CheckForCompletedTasks() (1 samples, 0.02%)</title><rect x="1070.0" y="837" width="0.3" height="15.0" fill="rgb(220,226,8)" rx="2" ry="2" />
<text  x="1073.02" y="847.5" ></text>
</g>
<g >
<title>read_mvcomponent (2 samples, 0.04%)</title><rect x="524.1" y="693" width="0.4" height="15.0" fill="rgb(247,163,38)" rx="2" ry="2" />
<text  x="527.05" y="703.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="651.5" y="693" width="0.2" height="15.0" fill="rgb(238,130,48)" rx="2" ry="2" />
<text  x="654.45" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::GetHighestPendingPriority() const (1 samples, 0.02%)</title><rect x="208.6" y="869" width="0.3" height="15.0" fill="rgb(213,99,37)" rx="2" ry="2" />
<text  x="211.65" y="879.5" ></text>
</g>
<g >
<title>write_mb_features (1 samples, 0.02%)</title><rect x="957.0" y="725" width="0.2" height="15.0" fill="rgb(217,32,37)" rx="2" ry="2" />
<text  x="959.97" y="735.5" ></text>
</g>
<g >
<title>IPC::ChannelMojo::Send(IPC::Message*) (1 samples, 0.02%)</title><rect x="165.8" y="837" width="0.3" height="15.0" fill="rgb(227,221,37)" rx="2" ry="2" />
<text  x="168.85" y="847.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (1 samples, 0.02%)</title><rect x="898.8" y="677" width="0.3" height="15.0" fill="rgb(225,217,14)" rx="2" ry="2" />
<text  x="901.83" y="687.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="340.7" y="773" width="0.3" height="15.0" fill="rgb(249,162,40)" rx="2" ry="2" />
<text  x="343.75" y="783.5" ></text>
</g>
<g >
<title>vp8_denoiser_filter_sse2 (4 samples, 0.08%)</title><rect x="910.7" y="661" width="1.0" height="15.0" fill="rgb(216,52,32)" rx="2" ry="2" />
<text  x="913.71" y="671.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="990.9" y="693" width="0.2" height="15.0" fill="rgb(206,126,20)" rx="2" ry="2" />
<text  x="993.86" y="703.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="107.2" y="725" width="0.3" height="15.0" fill="rgb(209,165,18)" rx="2" ry="2" />
<text  x="110.22" y="735.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (8 samples, 0.17%)</title><rect x="271.5" y="693" width="2.0" height="15.0" fill="rgb(240,190,6)" rx="2" ry="2" />
<text  x="274.48" y="703.5" ></text>
</g>
<g >
<title>gpu::MailboxHolder::MailboxHolder() (1 samples, 0.02%)</title><rect x="204.9" y="837" width="0.3" height="15.0" fill="rgb(244,167,37)" rx="2" ry="2" />
<text  x="207.94" y="847.5" ></text>
</g>
<g >
<title>void base::internal::ThreadGroupImpl::ScopedWorkersExecutor::WorkerContainer::ForEachWorker&lt;base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)&gt;(base::internal::ThreadGroupImpl::ScopedWorkersExecutor::FlushImpl()::'lambda'(base::internal::WorkerThread*)) (3 samples, 0.06%)</title><rect x="272.7" y="581" width="0.8" height="15.0" fill="rgb(217,137,53)" rx="2" ry="2" />
<text  x="275.72" y="591.5" ></text>
</g>
<g >
<title>objc_msgSend (1 samples, 0.02%)</title><rect x="213.6" y="933" width="0.2" height="15.0" fill="rgb(227,154,47)" rx="2" ry="2" />
<text  x="216.59" y="943.5" ></text>
</g>
<g >
<title>bool base::internal::QueryCancellationTraits&lt;base::internal::BindState&lt;void (mojo::SimpleWatcher::*)(int, unsigned int, mojo::HandleSignalsState const&amp;), base::WeakPtr&lt;mojo::SimpleWatcher&gt;, int, unsigned int, mojo::HandleSignalsState&gt; &gt;(base::internal::BindStateBase const*, base::internal::BindStateBase::CancellationQueryMode) (1 samples, 0.02%)</title><rect x="354.1" y="805" width="0.3" height="15.0" fill="rgb(232,134,1)" rx="2" ry="2" />
<text  x="357.10" y="815.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::CreateEventMessage(unsigned long, unsigned long, void**, unsigned long) (1 samples, 0.02%)</title><rect x="168.1" y="693" width="0.2" height="15.0" fill="rgb(240,49,54)" rx="2" ry="2" />
<text  x="171.08" y="703.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::ContextAt(unsigned int) (1 samples, 0.02%)</title><rect x="27.8" y="325" width="0.3" height="15.0" fill="rgb(246,98,14)" rx="2" ry="2" />
<text  x="30.81" y="335.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1112.8" y="773" width="0.3" height="15.0" fill="rgb(207,88,48)" rx="2" ry="2" />
<text  x="1115.82" y="783.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (2 samples, 0.04%)</title><rect x="277.2" y="613" width="0.5" height="15.0" fill="rgb(232,189,27)" rx="2" ry="2" />
<text  x="280.17" y="623.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="19.9" y="37" width="0.2" height="15.0" fill="rgb(218,226,41)" rx="2" ry="2" />
<text  x="22.90" y="47.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintForegroundForFragments(WTF::Vector&lt;blink::PaintLayerFragment, 1u, WTF::PartitionAllocator&gt; const&amp;, blink::GraphicsContext&amp;, blink::PaintLayerPaintingInfo const&amp;, bool, bool, unsigned int) (1 samples, 0.02%)</title><rect x="26.8" y="293" width="0.3" height="15.0" fill="rgb(248,57,44)" rx="2" ry="2" />
<text  x="29.82" y="303.5" ></text>
</g>
<g >
<title>mach_msg_send (1 samples, 0.02%)</title><rect x="962.7" y="549" width="0.2" height="15.0" fill="rgb(205,122,13)" rx="2" ry="2" />
<text  x="965.66" y="559.5" ></text>
</g>
<g >
<title>viz::mojom::internal::CompositorFrameSinkClient_ReclaimResources_Params_Data::Validate(void const*, mojo::internal::ValidationContext*) (1 samples, 0.02%)</title><rect x="1054.2" y="693" width="0.2" height="15.0" fill="rgb(235,184,16)" rx="2" ry="2" />
<text  x="1057.19" y="703.5" ></text>
</g>
<g >
<title>silk_NSQ_wrapper_FLP (18 samples, 0.38%)</title><rect x="995.3" y="709" width="4.5" height="15.0" fill="rgb(205,41,0)" rx="2" ry="2" />
<text  x="998.31" y="719.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="482.5" y="709" width="0.2" height="15.0" fill="rgb(210,114,2)" rx="2" ry="2" />
<text  x="485.49" y="719.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::CalculateRenderPasses(cc::LayerTreeHostImpl::FrameData*) (1 samples, 0.02%)</title><rect x="1068.8" y="757" width="0.2" height="15.0" fill="rgb(237,170,33)" rx="2" ry="2" />
<text  x="1071.78" y="767.5" ></text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*) (171 samples, 3.58%)</title><rect x="10.0" y="917" width="42.3" height="15.0" fill="rgb(252,12,12)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >bas..</text>
</g>
<g >
<title>WTF::CurrentThread() (1 samples, 0.02%)</title><rect x="28.1" y="261" width="0.2" height="15.0" fill="rgb(230,163,33)" rx="2" ry="2" />
<text  x="31.06" y="271.5" ></text>
</g>
<g >
<title>extend_plane (3 samples, 0.06%)</title><rect x="649.5" y="725" width="0.7" height="15.0" fill="rgb(223,138,41)" rx="2" ry="2" />
<text  x="652.48" y="735.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1027.2" y="885" width="0.3" height="15.0" fill="rgb(248,168,20)" rx="2" ry="2" />
<text  x="1030.22" y="895.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (4 samples, 0.08%)</title><rect x="486.2" y="773" width="1.0" height="15.0" fill="rgb(212,51,17)" rx="2" ry="2" />
<text  x="489.21" y="783.5" ></text>
</g>
<g >
<title>mojo::Message::Message(unsigned int, unsigned int, unsigned long, unsigned long, std::__Cr::vector&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt;, std::__Cr::allocator&lt;mojo::ScopedHandleBase&lt;mojo::Handle&gt; &gt; &gt;*) (1 samples, 0.02%)</title><rect x="1041.6" y="629" width="0.2" height="15.0" fill="rgb(217,201,33)" rx="2" ry="2" />
<text  x="1044.57" y="639.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="310.6" y="421" width="0.2" height="15.0" fill="rgb(236,197,16)" rx="2" ry="2" />
<text  x="313.57" y="431.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (1 samples, 0.02%)</title><rect x="989.1" y="693" width="0.3" height="15.0" fill="rgb(249,117,20)" rx="2" ry="2" />
<text  x="992.13" y="703.5" ></text>
</g>
<g >
<title>__fcntl (5 samples, 0.10%)</title><rect x="1075.7" y="949" width="1.2" height="15.0" fill="rgb(233,174,12)" rx="2" ry="2" />
<text  x="1078.71" y="959.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="85.7" y="789" width="0.2" height="15.0" fill="rgb(227,197,5)" rx="2" ry="2" />
<text  x="88.70" y="799.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::HandleEncodedFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;) (122 samples, 2.56%)</title><rect x="652.9" y="837" width="30.2" height="15.0" fill="rgb(205,194,54)" rx="2" ry="2" />
<text  x="655.94" y="847.5" >we..</text>
</g>
<g >
<title>mojo::internal::Serializer&lt;viz::mojom::RenderPassDataView, std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; const&gt;::Serialize(std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; const&amp;, mojo::internal::Buffer*, viz::mojom::internal::RenderPass_Data::BufferWriter*, mojo::internal::SerializationContext*) (3 samples, 0.06%)</title><rect x="1042.1" y="581" width="0.7" height="15.0" fill="rgb(228,129,1)" rx="2" ry="2" />
<text  x="1045.07" y="591.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (4 samples, 0.08%)</title><rect x="879.8" y="901" width="1.0" height="15.0" fill="rgb(231,188,23)" rx="2" ry="2" />
<text  x="882.79" y="911.5" ></text>
</g>
<g >
<title>cricket::BaseChannel::OnPacketReceived(bool, rtc::CopyOnWriteBuffer const&amp;, long long) (1 samples, 0.02%)</title><rect x="306.1" y="533" width="0.3" height="15.0" fill="rgb(253,83,54)" rx="2" ry="2" />
<text  x="309.11" y="543.5" ></text>
</g>
<g >
<title>webrtc::DecisionLogic::GetDecision(webrtc::SyncBuffer const&amp;, webrtc::Expand const&amp;, unsigned long, webrtc::Packet const*, webrtc::Modes, bool, unsigned long, bool*) (6 samples, 0.13%)</title><rect x="1125.9" y="773" width="1.5" height="15.0" fill="rgb(205,186,5)" rx="2" ry="2" />
<text  x="1128.93" y="783.5" ></text>
</g>
<g >
<title>__fcntl (4 samples, 0.08%)</title><rect x="1103.9" y="949" width="1.0" height="15.0" fill="rgb(246,18,24)" rx="2" ry="2" />
<text  x="1106.91" y="959.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (1 samples, 0.02%)</title><rect x="284.6" y="677" width="0.2" height="15.0" fill="rgb(235,168,27)" rx="2" ry="2" />
<text  x="287.59" y="687.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (3 samples, 0.06%)</title><rect x="527.5" y="693" width="0.8" height="15.0" fill="rgb(213,27,25)" rx="2" ry="2" />
<text  x="530.52" y="703.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::TransportFeedbackProxy::OnAddPacket(webrtc::RtpPacketSendInfo const&amp;) (3 samples, 0.06%)</title><rect x="1147.7" y="885" width="0.7" height="15.0" fill="rgb(246,58,36)" rx="2" ry="2" />
<text  x="1150.70" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="67.4" y="837" width="0.2" height="15.0" fill="rgb(207,229,31)" rx="2" ry="2" />
<text  x="70.39" y="847.5" ></text>
</g>
<g >
<title>rtc::TimeMicros() (1 samples, 0.02%)</title><rect x="1168.0" y="949" width="0.2" height="15.0" fill="rgb(229,139,19)" rx="2" ry="2" />
<text  x="1170.98" y="959.5" ></text>
</g>
<g >
<title>vpx_variance16x16_avx2 (3 samples, 0.06%)</title><rect x="442.7" y="677" width="0.7" height="15.0" fill="rgb(249,146,46)" rx="2" ry="2" />
<text  x="445.67" y="687.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="718.5" y="869" width="0.2" height="15.0" fill="rgb(212,101,49)" rx="2" ry="2" />
<text  x="721.49" y="879.5" ></text>
</g>
<g >
<title>vp8_encode_motion_vector (1 samples, 0.02%)</title><rect x="465.4" y="725" width="0.3" height="15.0" fill="rgb(247,123,50)" rx="2" ry="2" />
<text  x="468.43" y="735.5" ></text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="274.4" y="597" width="0.3" height="15.0" fill="rgb(209,105,32)" rx="2" ry="2" />
<text  x="277.45" y="607.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3 (2 samples, 0.04%)</title><rect x="916.6" y="661" width="0.5" height="15.0" fill="rgb(232,37,32)" rx="2" ry="2" />
<text  x="919.65" y="671.5" ></text>
</g>
<g >
<title>base::internal::UncheckedScopedBlockingCall::UncheckedScopedBlockingCall(base::BlockingType) (1 samples, 0.02%)</title><rect x="1142.5" y="885" width="0.3" height="15.0" fill="rgb(222,131,15)" rx="2" ry="2" />
<text  x="1145.50" y="895.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() const (1 samples, 0.02%)</title><rect x="77.0" y="709" width="0.3" height="15.0" fill="rgb(227,140,48)" rx="2" ry="2" />
<text  x="80.04" y="719.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Reset() (8 samples, 0.17%)</title><rect x="707.9" y="965" width="1.9" height="15.0" fill="rgb(211,138,7)" rx="2" ry="2" />
<text  x="710.86" y="975.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::UpdateTransportSequenceNumber(webrtc::RtpPacketToSend*, int*) (4 samples, 0.08%)</title><rect x="1160.3" y="901" width="1.0" height="15.0" fill="rgb(250,196,21)" rx="2" ry="2" />
<text  x="1163.31" y="911.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;(anonymous namespace)::FrameAdapter&lt;webrtc::I420BufferInterface&gt; &gt;::Release() const (2 samples, 0.04%)</title><rect x="487.7" y="805" width="0.5" height="15.0" fill="rgb(219,84,29)" rx="2" ry="2" />
<text  x="490.69" y="815.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::ChannelMac::MachMessageSendLocked(mach_msg_header_t*) (3 samples, 0.06%)</title><rect x="166.6" y="533" width="0.7" height="15.0" fill="rgb(212,191,35)" rx="2" ry="2" />
<text  x="169.59" y="543.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::voe::(anonymous namespace)::ChannelSend::ProcessAndEncodeAudio(std::__Cr::unique_ptr&lt;webrtc::AudioFrame, std::__Cr::default_delete&lt;webrtc::AudioFrame&gt; &gt;)::ProcessAndEncodeAudio&gt;::Run() (52 samples, 1.09%)</title><rect x="841.9" y="853" width="12.9" height="15.0" fill="rgb(225,67,43)" rx="2" ry="2" />
<text  x="844.94" y="863.5" ></text>
</g>
<g >
<title>DYLD-STUB$$base::Value::GetAsDictionary(base::DictionaryValue const**) const (1 samples, 0.02%)</title><rect x="136.9" y="549" width="0.3" height="15.0" fill="rgb(228,199,30)" rx="2" ry="2" />
<text  x="139.91" y="559.5" ></text>
</g>
<g >
<title>base::HistogramSamples::IncreaseSumAndCount(long long, int) (1 samples, 0.02%)</title><rect x="861.7" y="885" width="0.3" height="15.0" fill="rgb(216,158,10)" rx="2" ry="2" />
<text  x="864.73" y="895.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (5 samples, 0.10%)</title><rect x="187.9" y="821" width="1.2" height="15.0" fill="rgb(254,141,38)" rx="2" ry="2" />
<text  x="190.87" y="831.5" ></text>
</g>
<g >
<title>objc_alloc (2 samples, 0.04%)</title><rect x="871.6" y="949" width="0.5" height="15.0" fill="rgb(231,223,38)" rx="2" ry="2" />
<text  x="874.62" y="959.5" ></text>
</g>
<g >
<title>blink::RootScrollerController::PerformRootScrollerSelection() (1 samples, 0.02%)</title><rect x="29.0" y="517" width="0.3" height="15.0" fill="rgb(237,27,3)" rx="2" ry="2" />
<text  x="32.05" y="527.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.02%)</title><rect x="76.1" y="805" width="0.2" height="15.0" fill="rgb(205,106,25)" rx="2" ry="2" />
<text  x="79.05" y="815.5" ></text>
</g>
<g >
<title>base::time_internal::SaturatedSub(long long, base::TimeDelta) (1 samples, 0.02%)</title><rect x="138.9" y="501" width="0.2" height="15.0" fill="rgb(232,118,51)" rx="2" ry="2" />
<text  x="141.88" y="511.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="697.5" y="933" width="0.2" height="15.0" fill="rgb(232,28,43)" rx="2" ry="2" />
<text  x="700.47" y="943.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="341.5" y="725" width="0.2" height="15.0" fill="rgb(221,14,32)" rx="2" ry="2" />
<text  x="344.49" y="735.5" ></text>
</g>
<g >
<title>base::ThreadRestrictions::SetSingletonAllowed(bool) (13 samples, 0.27%)</title><rect x="373.2" y="917" width="3.2" height="15.0" fill="rgb(205,226,41)" rx="2" ry="2" />
<text  x="376.15" y="927.5" ></text>
</g>
<g >
<title>decltype(auto) base::internal::BindImpl&lt;base::OnceCallback, void (media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (double)&gt; &gt;::*&amp;)(double), std::__Cr::unique_ptr&lt;media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (double)&gt; &gt;, std::__Cr::default_delete&lt;media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (double)&gt; &gt; &gt; &gt; &gt;(void (media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (double)&gt; &gt;::*&amp;&amp;&amp;)(double), std::__Cr::unique_ptr&lt;media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (double)&gt; &gt;, std::__Cr::default_delete&lt;media::internal::TrampolineHelper&lt;base::OnceCallback&lt;void (double)&gt; &gt; &gt; &gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="137.2" y="533" width="0.2" height="15.0" fill="rgb(205,168,45)" rx="2" ry="2" />
<text  x="140.15" y="543.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="39.2" y="677" width="0.2" height="15.0" fill="rgb(252,80,43)" rx="2" ry="2" />
<text  x="42.19" y="687.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequenceNow(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (8 samples, 0.17%)</title><rect x="271.5" y="629" width="2.0" height="15.0" fill="rgb(241,127,13)" rx="2" ry="2" />
<text  x="274.48" y="639.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="138.9" y="517" width="0.2" height="15.0" fill="rgb(228,147,46)" rx="2" ry="2" />
<text  x="141.88" y="527.5" ></text>
</g>
<g >
<title>_pthread_body (39 samples, 0.82%)</title><rect x="1168.7" y="1029" width="9.7" height="15.0" fill="rgb(239,203,46)" rx="2" ry="2" />
<text  x="1171.73" y="1039.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="168.1" y="629" width="0.2" height="15.0" fill="rgb(211,138,30)" rx="2" ry="2" />
<text  x="171.08" y="639.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="337.3" y="853" width="0.7" height="15.0" fill="rgb(235,192,6)" rx="2" ry="2" />
<text  x="340.28" y="863.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="853.8" y="725" width="0.3" height="15.0" fill="rgb(227,25,35)" rx="2" ry="2" />
<text  x="856.81" y="735.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_horizontal_edge_uv_sse2 (3 samples, 0.06%)</title><rect x="794.4" y="709" width="0.8" height="15.0" fill="rgb(235,65,43)" rx="2" ry="2" />
<text  x="797.44" y="719.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="1108.4" y="933" width="0.5" height="15.0" fill="rgb(215,11,47)" rx="2" ry="2" />
<text  x="1111.36" y="943.5" ></text>
</g>
<g >
<title>WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::String, char const*&gt;, WTF::String&gt;, char const*&gt;, WTF::String&gt;::length() const (1 samples, 0.02%)</title><rect x="20.6" y="501" width="0.3" height="15.0" fill="rgb(230,162,35)" rx="2" ry="2" />
<text  x="23.64" y="511.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::AddRtpHeaderExtensions(webrtc::RTPVideoHeader const&amp;, absl::optional&lt;webrtc::PlayoutDelay&gt; const&amp;, webrtc::VideoFrameType, bool, bool, bool, bool, bool, webrtc::RtpPacketToSend*) (1 samples, 0.02%)</title><rect x="816.0" y="709" width="0.2" height="15.0" fill="rgb(238,112,37)" rx="2" ry="2" />
<text  x="818.96" y="719.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (2 samples, 0.04%)</title><rect x="282.6" y="549" width="0.5" height="15.0" fill="rgb(205,209,20)" rx="2" ry="2" />
<text  x="285.61" y="559.5" ></text>
</g>
<g >
<title>webrtc::rtcp::TransportFeedback::Parse(webrtc::rtcp::CommonHeader const&amp;) (1 samples, 0.02%)</title><rect x="284.3" y="709" width="0.3" height="15.0" fill="rgb(246,182,52)" rx="2" ry="2" />
<text  x="287.34" y="719.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::SendChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (4 samples, 0.08%)</title><rect x="1046.8" y="469" width="1.0" height="15.0" fill="rgb(250,163,39)" rx="2" ry="2" />
<text  x="1049.77" y="479.5" ></text>
</g>
<g >
<title>main (171 samples, 3.58%)</title><rect x="10.0" y="1045" width="42.3" height="15.0" fill="rgb(220,145,4)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >main</text>
</g>
<g >
<title>base::ScopedClosureRunner::~ScopedClosureRunner() (2 samples, 0.04%)</title><rect x="67.4" y="917" width="0.5" height="15.0" fill="rgb(207,53,26)" rx="2" ry="2" />
<text  x="70.39" y="927.5" ></text>
</g>
<g >
<title>_platform_strlen (1 samples, 0.02%)</title><rect x="1108.1" y="917" width="0.3" height="15.0" fill="rgb(208,217,12)" rx="2" ry="2" />
<text  x="1111.12" y="927.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendPeerEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (1 samples, 0.02%)</title><rect x="1072.5" y="389" width="0.2" height="15.0" fill="rgb(253,198,53)" rx="2" ry="2" />
<text  x="1075.49" y="399.5" ></text>
</g>
<g >
<title>base::LazyInstance&lt;base::SequenceLocalStorageSlot&lt;mojo::internal::MessageDispatchContext*, std::__Cr::default_delete&lt;mojo::internal::MessageDispatchContext*&gt; &gt;, base::internal::LeakyLazyInstanceTraits&lt;base::SequenceLocalStorageSlot&lt;mojo::internal::MessageDispatchContext*, std::__Cr::default_delete&lt;mojo::internal::MessageDispatchContext*&gt; &gt; &gt; &gt;::Pointer() (1 samples, 0.02%)</title><rect x="312.5" y="629" width="0.3" height="15.0" fill="rgb(218,89,16)" rx="2" ry="2" />
<text  x="315.55" y="639.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="1111.6" y="805" width="0.5" height="15.0" fill="rgb(213,99,45)" rx="2" ry="2" />
<text  x="1114.58" y="815.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="1159.3" y="837" width="0.3" height="15.0" fill="rgb(234,228,41)" rx="2" ry="2" />
<text  x="1162.32" y="847.5" ></text>
</g>
<g >
<title>webrtc::SendDelayStats::OnSendPacket(unsigned short, long long, unsigned int) (1 samples, 0.02%)</title><rect x="1161.6" y="901" width="0.2" height="15.0" fill="rgb(222,77,39)" rx="2" ry="2" />
<text  x="1164.55" y="911.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (1 samples, 0.02%)</title><rect x="823.4" y="693" width="0.2" height="15.0" fill="rgb(229,5,28)" rx="2" ry="2" />
<text  x="826.38" y="703.5" ></text>
</g>
<g >
<title>webrtc::RtcEventLogImpl::LogToMemory(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;) (2 samples, 0.04%)</title><rect x="380.3" y="821" width="0.5" height="15.0" fill="rgb(231,213,47)" rx="2" ry="2" />
<text  x="383.33" y="831.5" ></text>
</g>
<g >
<title>-[NSAutoreleasePool drain] (3 samples, 0.06%)</title><rect x="362.5" y="965" width="0.8" height="15.0" fill="rgb(219,158,21)" rx="2" ry="2" />
<text  x="365.52" y="975.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::SendHelper(int, void const*, unsigned long) (8 samples, 0.17%)</title><rect x="1087.8" y="965" width="2.0" height="15.0" fill="rgb(218,50,9)" rx="2" ry="2" />
<text  x="1090.83" y="975.5" ></text>
</g>
<g >
<title>vp8_update_coef_probs (3 samples, 0.06%)</title><rect x="477.8" y="725" width="0.7" height="15.0" fill="rgb(232,73,17)" rx="2" ry="2" />
<text  x="480.79" y="735.5" ></text>
</g>
<g >
<title>webrtc::SendStatisticsProxy::OnSendEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*) (1 samples, 0.02%)</title><rect x="651.2" y="757" width="0.3" height="15.0" fill="rgb(214,183,27)" rx="2" ry="2" />
<text  x="654.21" y="767.5" ></text>
</g>
<g >
<title>viz::mojom::blink::CompositorFrameSinkClientStubDispatch::Accept(viz::mojom::blink::CompositorFrameSinkClient*, mojo::Message*) (89 samples, 1.87%)</title><rect x="1031.7" y="693" width="22.0" height="15.0" fill="rgb(225,72,39)" rx="2" ry="2" />
<text  x="1034.68" y="703.5" >v..</text>
</g>
<g >
<title>silk_A2NLSF_FLP (1 samples, 0.02%)</title><rect x="689.1" y="677" width="0.2" height="15.0" fill="rgb(245,146,3)" rx="2" ry="2" />
<text  x="692.06" y="687.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="75.8" y="837" width="0.3" height="15.0" fill="rgb(252,197,4)" rx="2" ry="2" />
<text  x="78.80" y="847.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::AudioCodingModuleImpl::PlayoutData10Ms(int, webrtc::AudioFrame*, bool*) (66 samples, 1.38%)</title><rect x="1113.3" y="853" width="16.3" height="15.0" fill="rgb(231,74,7)" rx="2" ry="2" />
<text  x="1116.31" y="863.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="332.8" y="805" width="0.3" height="15.0" fill="rgb(211,37,17)" rx="2" ry="2" />
<text  x="335.83" y="815.5" ></text>
</g>
<g >
<title>webrtc::ReceiveStatisticsImpl::GetOrCreateStatistician(unsigned int) (1 samples, 0.02%)</title><rect x="261.6" y="677" width="0.2" height="15.0" fill="rgb(248,78,14)" rx="2" ry="2" />
<text  x="264.58" y="687.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::RtpPacketSenderProxy::InsertPacket(webrtc::RtpPacketSender::Priority, unsigned int, unsigned short, long long, unsigned long, bool) (1 samples, 0.02%)</title><rect x="550.5" y="773" width="0.3" height="15.0" fill="rgb(208,210,49)" rx="2" ry="2" />
<text  x="553.52" y="783.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (8 samples, 0.17%)</title><rect x="271.5" y="645" width="2.0" height="15.0" fill="rgb(210,176,10)" rx="2" ry="2" />
<text  x="274.48" y="655.5" ></text>
</g>
<g >
<title>cricket::BaseChannel::SignalSentPacket_n(rtc::SentPacket const&amp;) (2 samples, 0.04%)</title><rect x="227.9" y="613" width="0.5" height="15.0" fill="rgb(215,176,35)" rx="2" ry="2" />
<text  x="230.94" y="623.5" ></text>
</g>
<g >
<title>std::__Cr::__tree&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, std::__Cr::__map_value_compare&lt;unsigned short, std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, std::__Cr::less&lt;unsigned short&gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt; &gt; &gt;::erase(std::__Cr::__tree_const_iterator&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, void*&gt;*, long&gt;) (1 samples, 0.02%)</title><rect x="284.8" y="613" width="0.3" height="15.0" fill="rgb(247,123,39)" rx="2" ry="2" />
<text  x="287.84" y="623.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="139.1" y="485" width="0.3" height="15.0" fill="rgb(219,183,3)" rx="2" ry="2" />
<text  x="142.13" y="495.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="211.6" y="789" width="0.3" height="15.0" fill="rgb(221,142,20)" rx="2" ry="2" />
<text  x="214.61" y="799.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (1 samples, 0.02%)</title><rect x="913.7" y="661" width="0.2" height="15.0" fill="rgb(237,43,19)" rx="2" ry="2" />
<text  x="916.68" y="671.5" ></text>
</g>
<g >
<title>base::MessagePumpKqueue::Run(base::MessagePump::Delegate*) (444 samples, 9.31%)</title><rect x="87.2" y="933" width="109.8" height="15.0" fill="rgb(253,113,36)" rx="2" ry="2" />
<text  x="90.18" y="943.5" >base::Message..</text>
</g>
<g >
<title>base::internal::WorkerThread::Delegate::WaitForWork(base::WaitableEvent*) (20 samples, 0.42%)</title><rect x="1060.1" y="965" width="5.0" height="15.0" fill="rgb(231,157,22)" rx="2" ry="2" />
<text  x="1063.13" y="975.5" ></text>
</g>
<g >
<title>quant_all_bands (2 samples, 0.04%)</title><rect x="842.9" y="725" width="0.5" height="15.0" fill="rgb(242,174,16)" rx="2" ry="2" />
<text  x="845.93" y="735.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_uv_sse2 (3 samples, 0.06%)</title><rect x="990.1" y="693" width="0.8" height="15.0" fill="rgb(205,154,10)" rx="2" ry="2" />
<text  x="993.12" y="703.5" ></text>
</g>
<g >
<title>IPC::(anonymous namespace)::ChannelAssociatedGroupController::Endpoint::SendMessage(mojo::Message*) (7 samples, 0.15%)</title><rect x="169.6" y="773" width="1.7" height="15.0" fill="rgb(228,164,31)" rx="2" ry="2" />
<text  x="172.56" y="783.5" ></text>
</g>
<g >
<title>read (11 samples, 0.23%)</title><rect x="1104.9" y="949" width="2.7" height="15.0" fill="rgb(244,216,50)" rx="2" ry="2" />
<text  x="1107.90" y="959.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="86.4" y="853" width="0.3" height="15.0" fill="rgb(241,194,33)" rx="2" ry="2" />
<text  x="89.44" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) (106 samples, 2.22%)</title><rect x="164.9" y="901" width="26.2" height="15.0" fill="rgb(211,216,15)" rx="2" ry="2" />
<text  x="167.86" y="911.5" >b..</text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::RtpTransportControllerSend::OnSentPacket(rtc::SentPacket const&amp;)::$_5&gt;::Run() (1 samples, 0.02%)</title><rect x="721.7" y="853" width="0.3" height="15.0" fill="rgb(210,16,27)" rx="2" ry="2" />
<text  x="724.71" y="863.5" ></text>
</g>
<g >
<title>blink::PaintPropertyTreeBuilder::UpdateForSelf() (1 samples, 0.02%)</title><rect x="28.1" y="341" width="0.2" height="15.0" fill="rgb(222,78,16)" rx="2" ry="2" />
<text  x="31.06" y="351.5" ></text>
</g>
<g >
<title>IPC::ChannelMojo::Send(IPC::Message*) (9 samples, 0.19%)</title><rect x="166.1" y="837" width="2.2" height="15.0" fill="rgb(254,85,38)" rx="2" ry="2" />
<text  x="169.10" y="847.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="714.3" y="869" width="0.2" height="15.0" fill="rgb(210,98,38)" rx="2" ry="2" />
<text  x="717.29" y="879.5" ></text>
</g>
<g >
<title>webrtc::VCMDecodedFrameCallback::Decoded(webrtc::VideoFrame&amp;, absl::optional&lt;int&gt;, absl::optional&lt;unsigned char&gt;) (4 samples, 0.08%)</title><rect x="532.7" y="757" width="1.0" height="15.0" fill="rgb(228,204,37)" rx="2" ry="2" />
<text  x="535.71" y="767.5" ></text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::CopyOnWriteBuffer(unsigned long) (2 samples, 0.04%)</title><rect x="259.9" y="709" width="0.4" height="15.0" fill="rgb(206,155,10)" rx="2" ry="2" />
<text  x="262.85" y="719.5" ></text>
</g>
<g >
<title>base::mac::CallWithEHFrame(void () block_pointer) (133 samples, 2.79%)</title><rect x="14.0" y="773" width="32.9" height="15.0" fill="rgb(214,155,23)" rx="2" ry="2" />
<text  x="16.96" y="783.5" >ba..</text>
</g>
<g >
<title>encode_mvcomponent (1 samples, 0.02%)</title><rect x="463.9" y="725" width="0.3" height="15.0" fill="rgb(242,154,49)" rx="2" ry="2" />
<text  x="466.94" y="735.5" ></text>
</g>
<g >
<title>objc_msgSend (1 samples, 0.02%)</title><rect x="196.8" y="917" width="0.2" height="15.0" fill="rgb(215,56,22)" rx="2" ry="2" />
<text  x="199.77" y="927.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="692.3" y="821" width="0.2" height="15.0" fill="rgb(240,51,35)" rx="2" ry="2" />
<text  x="695.27" y="831.5" ></text>
</g>
<g >
<title>media::AudioShifter::Pull(media::AudioBus*, base::TimeTicks) (24 samples, 0.50%)</title><rect x="1096.7" y="949" width="6.0" height="15.0" fill="rgb(222,1,44)" rx="2" ry="2" />
<text  x="1099.74" y="959.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="326.6" y="773" width="0.3" height="15.0" fill="rgb(237,11,39)" rx="2" ry="2" />
<text  x="329.65" y="783.5" ></text>
</g>
<g >
<title>cc::ScrollTree::scroll_bounds(int) const (1 samples, 0.02%)</title><rect x="1072.2" y="485" width="0.3" height="15.0" fill="rgb(214,87,44)" rx="2" ry="2" />
<text  x="1075.25" y="495.5" ></text>
</g>
<g >
<title>cricket::DtlsTransport::OnSentPacket(rtc::PacketTransportInternal*, rtc::SentPacket const&amp;) (3 samples, 0.06%)</title><rect x="227.7" y="645" width="0.7" height="15.0" fill="rgb(244,162,22)" rx="2" ry="2" />
<text  x="230.69" y="655.5" ></text>
</g>
<g >
<title>gpu::GpuMemoryBufferImplIOSurface::Map() (1 samples, 0.02%)</title><rect x="62.4" y="917" width="0.3" height="15.0" fill="rgb(212,106,31)" rx="2" ry="2" />
<text  x="65.44" y="927.5" ></text>
</g>
<g >
<title>silk_encode_frame_FLP (38 samples, 0.80%)</title><rect x="844.4" y="725" width="9.4" height="15.0" fill="rgb(232,58,46)" rx="2" ry="2" />
<text  x="847.41" y="735.5" ></text>
</g>
<g >
<title>mojo::core::Watch::NotifyState(mojo::core::HandleSignalsState const&amp;, bool) (1 samples, 0.02%)</title><rect x="322.4" y="693" width="0.3" height="15.0" fill="rgb(227,151,47)" rx="2" ry="2" />
<text  x="325.44" y="703.5" ></text>
</g>
<g >
<title>gpu::ImplementationBase::VerifySyncTokens(signed char**, int) (16 samples, 0.34%)</title><rect x="1033.9" y="581" width="4.0" height="15.0" fill="rgb(214,110,47)" rx="2" ry="2" />
<text  x="1036.90" y="591.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.02%)</title><rect x="226.0" y="373" width="0.2" height="15.0" fill="rgb(212,131,17)" rx="2" ry="2" />
<text  x="228.96" y="383.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="962.9" y="837" width="0.3" height="15.0" fill="rgb(246,52,30)" rx="2" ry="2" />
<text  x="965.91" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() const (1 samples, 0.02%)</title><rect x="44.9" y="661" width="0.2" height="15.0" fill="rgb(223,192,0)" rx="2" ry="2" />
<text  x="47.88" y="671.5" ></text>
</g>
<g >
<title>mojo::core::ports::MessageQueue::GetNextMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*, mojo::core::ports::MessageFilter*) (1 samples, 0.02%)</title><rect x="1057.9" y="725" width="0.2" height="15.0" fill="rgb(253,68,25)" rx="2" ry="2" />
<text  x="1060.90" y="735.5" ></text>
</g>
<g >
<title>_pthread_mutex_fairshare_lock_slow (1 samples, 0.02%)</title><rect x="1141.5" y="949" width="0.3" height="15.0" fill="rgb(216,214,0)" rx="2" ry="2" />
<text  x="1144.51" y="959.5" ></text>
</g>
<g >
<title>media::VideoFrame::~VideoFrame() (1 samples, 0.02%)</title><rect x="652.7" y="773" width="0.2" height="15.0" fill="rgb(228,24,53)" rx="2" ry="2" />
<text  x="655.69" y="783.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="577.5" y="837" width="0.2" height="15.0" fill="rgb(234,177,18)" rx="2" ry="2" />
<text  x="580.49" y="847.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::Release() const (1 samples, 0.02%)</title><rect x="274.4" y="629" width="0.3" height="15.0" fill="rgb(215,109,53)" rx="2" ry="2" />
<text  x="277.45" y="639.5" ></text>
</g>
<g >
<title>IPC::(anonymous namespace)::ChannelAssociatedGroupController::SendMessage(mojo::Message*) (1 samples, 0.02%)</title><rect x="165.8" y="757" width="0.3" height="15.0" fill="rgb(238,155,48)" rx="2" ry="2" />
<text  x="168.85" y="767.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;, void&gt;::Invoke&lt;base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;, scoped_refptr&lt;media::VideoFrame&gt; &gt;(base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="962.7" y="741" width="0.2" height="15.0" fill="rgb(224,65,22)" rx="2" ry="2" />
<text  x="965.66" y="751.5" ></text>
</g>
<g >
<title>cc::Scheduler::ProcessScheduledActions() (2 samples, 0.04%)</title><rect x="1067.1" y="821" width="0.4" height="15.0" fill="rgb(251,220,21)" rx="2" ry="2" />
<text  x="1070.05" y="831.5" ></text>
</g>
<g >
<title>rtc::Event::Wait(int) (21 samples, 0.44%)</title><rect x="1170.5" y="965" width="5.2" height="15.0" fill="rgb(209,200,20)" rx="2" ry="2" />
<text  x="1173.46" y="975.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker() (1 samples, 0.02%)</title><rect x="1020.3" y="997" width="0.2" height="15.0" fill="rgb(244,14,24)" rx="2" ry="2" />
<text  x="1023.30" y="1007.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="236.6" y="533" width="0.2" height="15.0" fill="rgb(222,65,0)" rx="2" ry="2" />
<text  x="239.60" y="543.5" ></text>
</g>
<g >
<title>blink::scheduler::TaskQueueThrottler::OnTaskRunTimeReported(base::sequence_manager::TaskQueue*, base::TimeTicks, base::TimeTicks) (1 samples, 0.02%)</title><rect x="37.2" y="629" width="0.3" height="15.0" fill="rgb(241,22,32)" rx="2" ry="2" />
<text  x="40.21" y="639.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (3 samples, 0.06%)</title><rect x="497.3" y="693" width="0.8" height="15.0" fill="rgb(231,46,46)" rx="2" ry="2" />
<text  x="500.34" y="703.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="30.5" y="645" width="0.3" height="15.0" fill="rgb(230,55,0)" rx="2" ry="2" />
<text  x="33.53" y="655.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (2 samples, 0.04%)</title><rect x="267.0" y="405" width="0.5" height="15.0" fill="rgb(242,183,27)" rx="2" ry="2" />
<text  x="270.03" y="415.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1162.8" y="837" width="0.2" height="15.0" fill="rgb(233,76,17)" rx="2" ry="2" />
<text  x="1165.79" y="847.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="533.2" y="613" width="0.3" height="15.0" fill="rgb(236,61,18)" rx="2" ry="2" />
<text  x="536.21" y="623.5" ></text>
</g>
<g >
<title>mojo::Connector::ReadMessage(mojo::Message*) (15 samples, 0.31%)</title><rect x="1055.4" y="805" width="3.7" height="15.0" fill="rgb(242,106,38)" rx="2" ry="2" />
<text  x="1058.43" y="815.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="195.3" y="853" width="0.2" height="15.0" fill="rgb(235,197,24)" rx="2" ry="2" />
<text  x="198.29" y="863.5" ></text>
</g>
<g >
<title>vp8_loopfilter_frame (14 samples, 0.29%)</title><rect x="633.1" y="741" width="3.5" height="15.0" fill="rgb(227,79,27)" rx="2" ry="2" />
<text  x="636.15" y="751.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::GetHandleSignalsStateNoLock() const (1 samples, 0.02%)</title><rect x="321.5" y="725" width="0.2" height="15.0" fill="rgb(226,216,35)" rx="2" ry="2" />
<text  x="324.45" y="735.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMSCompositor::RenderWithoutAlgorithm(scoped_refptr&lt;media::VideoFrame&gt;) (2 samples, 0.04%)</title><rect x="174.5" y="789" width="0.5" height="15.0" fill="rgb(210,85,52)" rx="2" ry="2" />
<text  x="177.51" y="799.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::OnFrame(webrtc::VideoFrame const&amp;) (2 samples, 0.04%)</title><rect x="993.1" y="725" width="0.5" height="15.0" fill="rgb(216,154,18)" rx="2" ry="2" />
<text  x="996.09" y="735.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.02%)</title><rect x="206.7" y="677" width="0.2" height="15.0" fill="rgb(208,68,39)" rx="2" ry="2" />
<text  x="209.67" y="687.5" ></text>
</g>
<g >
<title>I420ToNV12 (8 samples, 0.17%)</title><rect x="62.7" y="917" width="2.0" height="15.0" fill="rgb(241,166,45)" rx="2" ry="2" />
<text  x="65.69" y="927.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="267.0" y="341" width="0.5" height="15.0" fill="rgb(245,56,4)" rx="2" ry="2" />
<text  x="270.03" y="351.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="316.8" y="469" width="0.2" height="15.0" fill="rgb(250,196,21)" rx="2" ry="2" />
<text  x="319.75" y="479.5" ></text>
</g>
<g >
<title>vp8_write_mvprobs (3 samples, 0.06%)</title><rect x="478.5" y="725" width="0.8" height="15.0" fill="rgb(220,224,1)" rx="2" ry="2" />
<text  x="481.54" y="735.5" ></text>
</g>
<g >
<title>base::internal::ScopedBlockingCallWithBaseSyncPrimitives::ScopedBlockingCallWithBaseSyncPrimitives(base::BlockingType) (4 samples, 0.08%)</title><rect x="1164.3" y="917" width="1.0" height="15.0" fill="rgb(250,112,16)" rx="2" ry="2" />
<text  x="1167.27" y="927.5" ></text>
</g>
<g >
<title>mach_msg (11 samples, 0.23%)</title><rect x="128.0" y="661" width="2.7" height="15.0" fill="rgb(226,63,23)" rx="2" ry="2" />
<text  x="131.00" y="671.5" ></text>
</g>
<g >
<title>blink::PersistentNodePtr&lt;(blink::ThreadAffinity)1, (blink::WeaknessPersistentConfiguration)1&gt;::Uninitialize() (1 samples, 0.02%)</title><rect x="18.9" y="597" width="0.3" height="15.0" fill="rgb(246,202,20)" rx="2" ry="2" />
<text  x="21.91" y="607.5" ></text>
</g>
<g >
<title>free (3 samples, 0.06%)</title><rect x="576.5" y="885" width="0.7" height="15.0" fill="rgb(242,214,17)" rx="2" ry="2" />
<text  x="579.50" y="895.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="1053.7" y="661" width="0.2" height="15.0" fill="rgb(226,96,29)" rx="2" ry="2" />
<text  x="1056.69" y="671.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_zero_loop (1 samples, 0.02%)</title><rect x="429.6" y="661" width="0.2" height="15.0" fill="rgb(210,95,54)" rx="2" ry="2" />
<text  x="432.56" y="671.5" ></text>
</g>
<g >
<title>vp8_copy_mem8x8_mmx (1 samples, 0.02%)</title><rect x="733.3" y="661" width="0.3" height="15.0" fill="rgb(233,193,2)" rx="2" ry="2" />
<text  x="736.34" y="671.5" ></text>
</g>
<g >
<title>downmix_and_resample (2 samples, 0.04%)</title><rect x="684.6" y="709" width="0.5" height="15.0" fill="rgb(212,98,34)" rx="2" ry="2" />
<text  x="687.60" y="719.5" ></text>
</g>
<g >
<title>mojo::core::ports::PortLocker::PortLocker(mojo::core::ports::PortRef const**, unsigned long) (3 samples, 0.06%)</title><rect x="323.4" y="709" width="0.8" height="15.0" fill="rgb(207,93,15)" rx="2" ry="2" />
<text  x="326.43" y="719.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3 (1 samples, 0.02%)</title><rect x="890.9" y="645" width="0.3" height="15.0" fill="rgb(206,75,52)" rx="2" ry="2" />
<text  x="893.92" y="655.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoSendStreamImpl::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (2 samples, 0.04%)</title><rect x="486.7" y="757" width="0.5" height="15.0" fill="rgb(224,58,50)" rx="2" ry="2" />
<text  x="489.70" y="767.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintBackgroundForFragments(WTF::Vector&lt;blink::PaintLayerFragment, 1u, WTF::PartitionAllocator&gt; const&amp;, blink::GraphicsContext&amp;, blink::PaintLayerPaintingInfo const&amp;, unsigned int) (1 samples, 0.02%)</title><rect x="26.6" y="293" width="0.2" height="15.0" fill="rgb(223,20,47)" rx="2" ry="2" />
<text  x="29.57" y="303.5" ></text>
</g>
<g >
<title>mojo::internal::InterfacePtrState&lt;viz::mojom::blink::CompositorFrameSink&gt;::ConfigureProxyIfNecessary() (1 samples, 0.02%)</title><rect x="1046.3" y="661" width="0.2" height="15.0" fill="rgb(225,227,46)" rx="2" ry="2" />
<text  x="1049.27" y="671.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3.filter_block1d8_h4_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="661.1" y="677" width="0.3" height="15.0" fill="rgb(248,33,43)" rx="2" ry="2" />
<text  x="664.10" y="687.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="303.9" y="677" width="0.2" height="15.0" fill="rgb(209,88,3)" rx="2" ry="2" />
<text  x="306.89" y="687.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="231.4" y="821" width="0.3" height="15.0" fill="rgb(238,171,19)" rx="2" ry="2" />
<text  x="234.40" y="831.5" ></text>
</g>
<g >
<title>mojo::core::Channel::Message::Message(unsigned long, unsigned long, unsigned long, mojo::core::Channel::Message::MessageType) (5 samples, 0.10%)</title><rect x="104.3" y="837" width="1.2" height="15.0" fill="rgb(210,102,48)" rx="2" ry="2" />
<text  x="107.25" y="847.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (18 samples, 0.38%)</title><rect x="969.8" y="709" width="4.5" height="15.0" fill="rgb(222,200,16)" rx="2" ry="2" />
<text  x="972.83" y="719.5" ></text>
</g>
<g >
<title>v8_inspector::(anonymous namespace)::ConsoleHelper::reportCall(v8_inspector::ConsoleAPIType) (1 samples, 0.02%)</title><rect x="19.9" y="341" width="0.2" height="15.0" fill="rgb(225,123,23)" rx="2" ry="2" />
<text  x="22.90" y="351.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="262.3" y="661" width="0.3" height="15.0" fill="rgb(206,111,51)" rx="2" ry="2" />
<text  x="265.33" y="671.5" ></text>
</g>
<g >
<title>media::PaintCanvasVideoRenderer::ResetCache() (1 samples, 0.02%)</title><rect x="29.3" y="661" width="0.2" height="15.0" fill="rgb(228,177,21)" rx="2" ry="2" />
<text  x="32.30" y="671.5" ></text>
</g>
<g >
<title>WTF::CurrentThread() (1 samples, 0.02%)</title><rect x="16.7" y="645" width="0.2" height="15.0" fill="rgb(216,145,19)" rx="2" ry="2" />
<text  x="19.68" y="655.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::SetMarker(bool) (1 samples, 0.02%)</title><rect x="691.8" y="789" width="0.2" height="15.0" fill="rgb(207,151,1)" rx="2" ry="2" />
<text  x="694.78" y="799.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (3 samples, 0.06%)</title><rect x="1025.2" y="853" width="0.8" height="15.0" fill="rgb(240,219,40)" rx="2" ry="2" />
<text  x="1028.25" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="317.0" y="469" width="0.2" height="15.0" fill="rgb(242,31,40)" rx="2" ry="2" />
<text  x="320.00" y="479.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::GetWork(base::internal::WorkerThread*) (26 samples, 0.55%)</title><rect x="694.5" y="965" width="6.4" height="15.0" fill="rgb(241,201,19)" rx="2" ry="2" />
<text  x="697.50" y="975.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoStreamReceiver::OnRecoveredPacket(unsigned char const*, unsigned long) (17 samples, 0.36%)</title><rect x="265.0" y="661" width="4.3" height="15.0" fill="rgb(219,4,50)" rx="2" ry="2" />
<text  x="268.05" y="671.5" ></text>
</g>
<g >
<title>non-virtual thunk to cc::LayerTreeHostImpl::BuildRasterQueue(cc::TreePriority, cc::RasterTilePriorityQueue::Type) (2 samples, 0.04%)</title><rect x="1070.8" y="725" width="0.5" height="15.0" fill="rgb(241,120,41)" rx="2" ry="2" />
<text  x="1073.76" y="735.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (4 samples, 0.08%)</title><rect x="195.3" y="885" width="1.0" height="15.0" fill="rgb(206,207,10)" rx="2" ry="2" />
<text  x="198.29" y="895.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="33.3" y="629" width="0.2" height="15.0" fill="rgb(244,217,17)" rx="2" ry="2" />
<text  x="36.25" y="639.5" ></text>
</g>
<g >
<title>IPC::(anonymous namespace)::ChannelAssociatedGroupController::Endpoint::SendMessage(mojo::Message*) (7 samples, 0.15%)</title><rect x="166.3" y="773" width="1.8" height="15.0" fill="rgb(241,199,16)" rx="2" ry="2" />
<text  x="169.34" y="783.5" ></text>
</g>
<g >
<title>malloc_zone_memalign (1 samples, 0.02%)</title><rect x="1039.3" y="533" width="0.3" height="15.0" fill="rgb(250,222,16)" rx="2" ry="2" />
<text  x="1042.35" y="543.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (content::VideoCaptureImpl::*)(int, scoped_refptr&lt;content::VideoCaptureImpl::BufferContext&gt;, double), base::WeakPtr&lt;content::VideoCaptureImpl&gt;, int, scoped_refptr&lt;content::VideoCaptureImpl::BufferContext&gt; &gt;, void (double)&gt;::RunOnce(base::internal::BindStateBase*, double) (9 samples, 0.19%)</title><rect x="171.8" y="853" width="2.2" height="15.0" fill="rgb(230,13,19)" rx="2" ry="2" />
<text  x="174.79" y="863.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h4_ssse3.filter_block1d8_h4_rowloop_ssse3 (1 samples, 0.02%)</title><rect x="530.5" y="693" width="0.2" height="15.0" fill="rgb(211,194,11)" rx="2" ry="2" />
<text  x="533.49" y="703.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (7 samples, 0.15%)</title><rect x="647.0" y="725" width="1.7" height="15.0" fill="rgb(210,62,48)" rx="2" ry="2" />
<text  x="650.00" y="735.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.02%)</title><rect x="226.0" y="389" width="0.2" height="15.0" fill="rgb(229,169,17)" rx="2" ry="2" />
<text  x="228.96" y="399.5" ></text>
</g>
<g >
<title>read (8 samples, 0.17%)</title><rect x="1077.2" y="949" width="2.0" height="15.0" fill="rgb(232,70,31)" rx="2" ry="2" />
<text  x="1080.19" y="959.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::PutRtpPacket(std::__Cr::unique_ptr&lt;webrtc::RtpPacketToSend, std::__Cr::default_delete&lt;webrtc::RtpPacketToSend&gt; &gt;, webrtc::StorageType, absl::optional&lt;long long&gt;) (2 samples, 0.04%)</title><rect x="854.1" y="773" width="0.5" height="15.0" fill="rgb(237,58,11)" rx="2" ry="2" />
<text  x="857.06" y="783.5" ></text>
</g>
<g >
<title>webrtc::PostDecodeVad::Update(short*, unsigned long, webrtc::AudioDecoder::SpeechType, bool, int) (1 samples, 0.02%)</title><rect x="1128.4" y="789" width="0.2" height="15.0" fill="rgb(249,71,14)" rx="2" ry="2" />
<text  x="1131.40" y="799.5" ></text>
</g>
<g >
<title>cricket::BaseChannel::SendPacket(bool, rtc::CopyOnWriteBuffer*, rtc::PacketOptions const&amp;) (3 samples, 0.06%)</title><rect x="1181.6" y="853" width="0.7" height="15.0" fill="rgb(242,86,48)" rx="2" ry="2" />
<text  x="1184.59" y="863.5" ></text>
</g>
<g >
<title>IOConnectCallMethod (3 samples, 0.06%)</title><rect x="57.5" y="821" width="0.7" height="15.0" fill="rgb(223,138,44)" rx="2" ry="2" />
<text  x="60.50" y="831.5" ></text>
</g>
<g >
<title>webrtc::RateStatistics::Update(unsigned long, long long) (1 samples, 0.02%)</title><rect x="816.7" y="709" width="0.3" height="15.0" fill="rgb(245,222,48)" rx="2" ry="2" />
<text  x="819.70" y="719.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (3 samples, 0.06%)</title><rect x="553.7" y="901" width="0.8" height="15.0" fill="rgb(217,157,37)" rx="2" ry="2" />
<text  x="556.74" y="911.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoSender::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (3 samples, 0.06%)</title><rect x="961.4" y="741" width="0.8" height="15.0" fill="rgb(218,43,47)" rx="2" ry="2" />
<text  x="964.42" y="751.5" ></text>
</g>
<g >
<title>blink::Document::GetTaskRunner(blink::TaskType) (1 samples, 0.02%)</title><rect x="18.4" y="581" width="0.3" height="15.0" fill="rgb(223,189,53)" rx="2" ry="2" />
<text  x="21.41" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() const (1 samples, 0.02%)</title><rect x="30.0" y="693" width="0.3" height="15.0" fill="rgb(252,187,7)" rx="2" ry="2" />
<text  x="33.04" y="703.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="486.7" y="693" width="0.2" height="15.0" fill="rgb(232,122,6)" rx="2" ry="2" />
<text  x="489.70" y="703.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::~CallbackBase() (1 samples, 0.02%)</title><rect x="316.3" y="485" width="0.2" height="15.0" fill="rgb(211,188,5)" rx="2" ry="2" />
<text  x="319.26" y="495.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="208.2" y="757" width="0.2" height="15.0" fill="rgb(230,100,40)" rx="2" ry="2" />
<text  x="211.15" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::GetHighestPendingPriority() const (2 samples, 0.04%)</title><rect x="178.7" y="869" width="0.5" height="15.0" fill="rgb(248,105,48)" rx="2" ry="2" />
<text  x="181.71" y="879.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), void&gt;::Invoke&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;(void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&amp;&amp;) (5 samples, 0.10%)</title><rect x="61.5" y="949" width="1.2" height="15.0" fill="rgb(208,217,50)" rx="2" ry="2" />
<text  x="64.45" y="959.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="355.1" y="805" width="0.2" height="15.0" fill="rgb(215,77,44)" rx="2" ry="2" />
<text  x="358.09" y="815.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="180.4" y="853" width="0.3" height="15.0" fill="rgb(217,24,18)" rx="2" ry="2" />
<text  x="183.44" y="863.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="38.9" y="661" width="0.3" height="15.0" fill="rgb(248,116,34)" rx="2" ry="2" />
<text  x="41.94" y="671.5" ></text>
</g>
<g >
<title>Builtins_CreateUnmappedArgumentsHandler (1 samples, 0.02%)</title><rect x="17.2" y="421" width="0.2" height="15.0" fill="rgb(227,77,23)" rx="2" ry="2" />
<text  x="20.17" y="431.5" ></text>
</g>
<g >
<title>base::internal::SequenceLocalStorageMap::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="1050.7" y="645" width="0.3" height="15.0" fill="rgb(247,51,1)" rx="2" ry="2" />
<text  x="1053.73" y="655.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoSender::OnEncodedImage(webrtc::EncodedImage const&amp;, webrtc::CodecSpecificInfo const*, webrtc::RTPFragmentationHeader const*) (1 samples, 0.02%)</title><rect x="486.9" y="741" width="0.3" height="15.0" fill="rgb(205,184,49)" rx="2" ry="2" />
<text  x="489.95" y="751.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="1153.1" y="773" width="0.3" height="15.0" fill="rgb(216,0,42)" rx="2" ry="2" />
<text  x="1156.14" y="783.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (2 samples, 0.04%)</title><rect x="693.3" y="933" width="0.5" height="15.0" fill="rgb(208,225,12)" rx="2" ry="2" />
<text  x="696.26" y="943.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="347.7" y="805" width="0.2" height="15.0" fill="rgb(252,87,15)" rx="2" ry="2" />
<text  x="350.67" y="815.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="1152.2" y="837" width="0.4" height="15.0" fill="rgb(241,10,51)" rx="2" ry="2" />
<text  x="1155.15" y="847.5" ></text>
</g>
<g >
<title>objc_msgSend (3 samples, 0.06%)</title><rect x="361.3" y="933" width="0.7" height="15.0" fill="rgb(207,52,43)" rx="2" ry="2" />
<text  x="364.28" y="943.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::UpdateGraphicsLayerConfiguration(blink::PaintLayer const*) (1 samples, 0.02%)</title><rect x="25.6" y="405" width="0.2" height="15.0" fill="rgb(211,56,0)" rx="2" ry="2" />
<text  x="28.58" y="415.5" ></text>
</g>
<g >
<title>-[NSAutoreleasePool drain] (1 samples, 0.02%)</title><rect x="213.8" y="917" width="0.3" height="15.0" fill="rgb(209,66,20)" rx="2" ry="2" />
<text  x="216.84" y="927.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_half_loop (1 samples, 0.02%)</title><rect x="611.4" y="661" width="0.2" height="15.0" fill="rgb(205,181,42)" rx="2" ry="2" />
<text  x="614.38" y="671.5" ></text>
</g>
<g >
<title>viz::CompositorFrame::~CompositorFrame() (3 samples, 0.06%)</title><rect x="1039.6" y="645" width="0.7" height="15.0" fill="rgb(252,125,18)" rx="2" ry="2" />
<text  x="1042.59" y="655.5" ></text>
</g>
<g >
<title>vp8_cost_mv_ref (1 samples, 0.02%)</title><rect x="750.4" y="677" width="0.3" height="15.0" fill="rgb(252,108,26)" rx="2" ry="2" />
<text  x="753.41" y="687.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::GetMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*, mojo::core::ports::MessageFilter*) (2 samples, 0.04%)</title><rect x="141.9" y="629" width="0.4" height="15.0" fill="rgb(251,6,45)" rx="2" ry="2" />
<text  x="144.85" y="639.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="1066.8" y="821" width="0.3" height="15.0" fill="rgb(253,106,22)" rx="2" ry="2" />
<text  x="1069.81" y="831.5" ></text>
</g>
<g >
<title>mojo::core::ports::PortLocker::PortLocker(mojo::core::ports::PortRef const**, unsigned long) (1 samples, 0.02%)</title><rect x="1048.3" y="485" width="0.2" height="15.0" fill="rgb(216,63,34)" rx="2" ry="2" />
<text  x="1051.25" y="495.5" ></text>
</g>
<g >
<title>blink::ImagePainter::Paint(blink::PaintInfo const&amp;) (1 samples, 0.02%)</title><rect x="26.6" y="245" width="0.2" height="15.0" fill="rgb(243,116,18)" rx="2" ry="2" />
<text  x="29.57" y="255.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="1116.3" y="629" width="0.5" height="15.0" fill="rgb(249,82,14)" rx="2" ry="2" />
<text  x="1119.28" y="639.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="1051.0" y="661" width="0.5" height="15.0" fill="rgb(215,108,29)" rx="2" ry="2" />
<text  x="1053.97" y="671.5" ></text>
</g>
<g >
<title>free_small (1 samples, 0.02%)</title><rect x="574.0" y="885" width="0.3" height="15.0" fill="rgb(234,55,5)" rx="2" ry="2" />
<text  x="577.03" y="895.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="29.5" y="677" width="0.3" height="15.0" fill="rgb(229,139,40)" rx="2" ry="2" />
<text  x="32.54" y="687.5" ></text>
</g>
<g >
<title>base::internal::BindStateBase::BindStateBase(void (*)(), void (*)(base::internal::BindStateBase const*), bool (*)(base::internal::BindStateBase const*, base::internal::BindStateBase::CancellationQueryMode)) (1 samples, 0.02%)</title><rect x="131.7" y="757" width="0.3" height="15.0" fill="rgb(244,46,35)" rx="2" ry="2" />
<text  x="134.71" y="767.5" ></text>
</g>
<g >
<title>transient_analysis (3 samples, 0.06%)</title><rect x="843.4" y="725" width="0.8" height="15.0" fill="rgb(224,112,21)" rx="2" ry="2" />
<text  x="846.42" y="735.5" ></text>
</g>
<g >
<title>cricket::BaseChannel::ProcessPacket(bool, rtc::CopyOnWriteBuffer const&amp;, long long) (118 samples, 2.47%)</title><rect x="256.1" y="805" width="29.2" height="15.0" fill="rgb(245,171,19)" rx="2" ry="2" />
<text  x="259.14" y="815.5" >cr..</text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="1108.6" y="917" width="0.3" height="15.0" fill="rgb(220,184,25)" rx="2" ry="2" />
<text  x="1111.61" y="927.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (1 samples, 0.02%)</title><rect x="486.7" y="645" width="0.2" height="15.0" fill="rgb(246,170,0)" rx="2" ry="2" />
<text  x="489.70" y="655.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (2 samples, 0.04%)</title><rect x="1157.8" y="709" width="0.5" height="15.0" fill="rgb(250,102,10)" rx="2" ry="2" />
<text  x="1160.84" y="719.5" ></text>
</g>
<g >
<title>CopyPlane (3 samples, 0.06%)</title><rect x="682.1" y="741" width="0.8" height="15.0" fill="rgb(235,206,15)" rx="2" ry="2" />
<text  x="685.13" y="751.5" ></text>
</g>
<g >
<title>webrtc::AudioEncoder::Encode(unsigned int, rtc::ArrayView&lt;short const, -4711l&gt;, rtc::BufferT&lt;unsigned char, false&gt;*) (41 samples, 0.86%)</title><rect x="993.8" y="821" width="10.2" height="15.0" fill="rgb(237,141,15)" rx="2" ry="2" />
<text  x="996.83" y="831.5" ></text>
</g>
<g >
<title>vp8_loop_filter_mbv_sse2 (2 samples, 0.04%)</title><rect x="758.1" y="661" width="0.5" height="15.0" fill="rgb(245,13,35)" rx="2" ry="2" />
<text  x="761.08" y="671.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_half_loop (4 samples, 0.08%)</title><rect x="607.7" y="661" width="1.0" height="15.0" fill="rgb(207,225,1)" rx="2" ry="2" />
<text  x="610.67" y="671.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (1 samples, 0.02%)</title><rect x="651.5" y="677" width="0.2" height="15.0" fill="rgb(236,64,7)" rx="2" ry="2" />
<text  x="654.45" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() const (1 samples, 0.02%)</title><rect x="178.5" y="869" width="0.2" height="15.0" fill="rgb(247,87,30)" rx="2" ry="2" />
<text  x="181.47" y="879.5" ></text>
</g>
<g >
<title>sctp_chunk_output (3 samples, 0.06%)</title><rect x="53.5" y="981" width="0.8" height="15.0" fill="rgb(241,34,52)" rx="2" ry="2" />
<text  x="56.54" y="991.5" ></text>
</g>
<g >
<title>v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local&lt;v8::Value&gt;*) (5 samples, 0.10%)</title><rect x="16.9" y="549" width="1.3" height="15.0" fill="rgb(221,141,53)" rx="2" ry="2" />
<text  x="19.93" y="559.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="555.0" y="917" width="0.2" height="15.0" fill="rgb(219,111,48)" rx="2" ry="2" />
<text  x="557.98" y="927.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.08%)</title><rect x="372.2" y="885" width="1.0" height="15.0" fill="rgb(212,56,42)" rx="2" ry="2" />
<text  x="375.16" y="895.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::Transaction::~Transaction() (1 samples, 0.02%)</title><rect x="1021.0" y="933" width="0.3" height="15.0" fill="rgb(222,25,27)" rx="2" ry="2" />
<text  x="1024.04" y="943.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (13 samples, 0.27%)</title><rect x="732.8" y="677" width="3.3" height="15.0" fill="rgb(241,106,32)" rx="2" ry="2" />
<text  x="735.84" y="687.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="32.5" y="645" width="0.3" height="15.0" fill="rgb(243,192,14)" rx="2" ry="2" />
<text  x="35.51" y="655.5" ></text>
</g>
<g >
<title>base::Thread::ThreadMain  0x644a00 (69 samples, 1.45%)</title><rect x="70.1" y="1077" width="17.1" height="15.0" fill="rgb(230,159,16)" rx="2" ry="2" />
<text  x="73.11" y="1087.5" ></text>
</g>
<g >
<title>base::CancelableSyncSocket::Send(void const*, unsigned long) (17 samples, 0.36%)</title><rect x="1087.8" y="981" width="4.2" height="15.0" fill="rgb(240,213,54)" rx="2" ry="2" />
<text  x="1090.83" y="991.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="15.9" y="725" width="0.3" height="15.0" fill="rgb(215,142,39)" rx="2" ry="2" />
<text  x="18.94" y="735.5" ></text>
</g>
<g >
<title>DYLD-STUB$$pthread_getspecific (1 samples, 0.02%)</title><rect x="366.7" y="933" width="0.3" height="15.0" fill="rgb(206,36,52)" rx="2" ry="2" />
<text  x="369.72" y="943.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="553.5" y="949" width="0.2" height="15.0" fill="rgb(235,102,30)" rx="2" ry="2" />
<text  x="556.49" y="959.5" ></text>
</g>
<g >
<title>webrtc::VCMEncodedFrame::~VCMEncodedFrame() (1 samples, 0.02%)</title><rect x="841.4" y="821" width="0.3" height="15.0" fill="rgb(243,26,10)" rx="2" ry="2" />
<text  x="844.44" y="831.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::~RtpPacket() (1 samples, 0.02%)</title><rect x="550.3" y="741" width="0.2" height="15.0" fill="rgb(228,189,52)" rx="2" ry="2" />
<text  x="553.28" y="751.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::Release() const (1 samples, 0.02%)</title><rect x="369.2" y="917" width="0.2" height="15.0" fill="rgb(249,207,3)" rx="2" ry="2" />
<text  x="372.19" y="927.5" ></text>
</g>
<g >
<title>silk_noise_shape_quantizer_del_dec (18 samples, 0.38%)</title><rect x="995.3" y="677" width="4.5" height="15.0" fill="rgb(231,92,54)" rx="2" ry="2" />
<text  x="998.31" y="687.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="302.2" y="741" width="0.2" height="15.0" fill="rgb(241,62,44)" rx="2" ry="2" />
<text  x="305.16" y="751.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="32.3" y="629" width="0.2" height="15.0" fill="rgb(243,38,29)" rx="2" ry="2" />
<text  x="35.26" y="639.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::PrepareTiles() (2 samples, 0.04%)</title><rect x="1070.8" y="773" width="0.5" height="15.0" fill="rgb(227,190,54)" rx="2" ry="2" />
<text  x="1073.76" y="783.5" ></text>
</g>
<g >
<title>_kernelrpc_mach_port_mod_refs_trap (3 samples, 0.06%)</title><rect x="1036.9" y="453" width="0.7" height="15.0" fill="rgb(217,89,19)" rx="2" ry="2" />
<text  x="1039.87" y="463.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="354.1" y="789" width="0.3" height="15.0" fill="rgb(212,187,0)" rx="2" ry="2" />
<text  x="357.10" y="799.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="577.0" y="869" width="0.2" height="15.0" fill="rgb(242,179,9)" rx="2" ry="2" />
<text  x="579.99" y="879.5" ></text>
</g>
<g >
<title>media::VideoFrameMetadata::SetBoolean(media::VideoFrameMetadata::Key, bool) (1 samples, 0.02%)</title><rect x="208.2" y="837" width="0.2" height="15.0" fill="rgb(231,69,3)" rx="2" ry="2" />
<text  x="211.15" y="847.5" ></text>
</g>
<g >
<title>blink::ReplacedPainter::Paint(blink::PaintInfo const&amp;) (1 samples, 0.02%)</title><rect x="26.8" y="197" width="0.3" height="15.0" fill="rgb(227,225,35)" rx="2" ry="2" />
<text  x="29.82" y="207.5" ></text>
</g>
<g >
<title>base::internal::UncheckedScopedBlockingCall::~UncheckedScopedBlockingCall() (1 samples, 0.02%)</title><rect x="1183.3" y="901" width="0.3" height="15.0" fill="rgb(218,114,43)" rx="2" ry="2" />
<text  x="1186.32" y="911.5" ></text>
</g>
<g >
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="1145.5" y="933" width="0.2" height="15.0" fill="rgb(207,170,4)" rx="2" ry="2" />
<text  x="1148.47" y="943.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="715.8" y="869" width="0.2" height="15.0" fill="rgb(248,174,3)" rx="2" ry="2" />
<text  x="718.77" y="879.5" ></text>
</g>
<g >
<title>cricket::BaseChannel::SignalSentPacket_w(rtc::SentPacket const&amp;) (29 samples, 0.61%)</title><rect x="285.3" y="805" width="7.2" height="15.0" fill="rgb(253,43,44)" rx="2" ry="2" />
<text  x="288.33" y="815.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::AddPacketToTransportFeedback(unsigned short, webrtc::RtpPacketToSend const&amp;, webrtc::PacedPacketInfo const&amp;) (7 samples, 0.15%)</title><rect x="1146.7" y="901" width="1.7" height="15.0" fill="rgb(224,52,21)" rx="2" ry="2" />
<text  x="1149.71" y="911.5" ></text>
</g>
<g >
<title>base::Lock::~Lock() (1 samples, 0.02%)</title><rect x="1074.0" y="741" width="0.2" height="15.0" fill="rgb(242,130,5)" rx="2" ry="2" />
<text  x="1076.98" y="751.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="1160.6" y="821" width="0.5" height="15.0" fill="rgb(227,222,6)" rx="2" ry="2" />
<text  x="1163.56" y="831.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Leave() const (1 samples, 0.02%)</title><rect x="319.0" y="565" width="0.2" height="15.0" fill="rgb(205,77,47)" rx="2" ry="2" />
<text  x="321.98" y="575.5" ></text>
</g>
<g >
<title>blink::LayoutGeometryMap::PushMappingsToAncestor(blink::PaintLayer const*, blink::PaintLayer const*) (1 samples, 0.02%)</title><rect x="25.3" y="405" width="0.3" height="15.0" fill="rgb(236,207,21)" rx="2" ry="2" />
<text  x="28.34" y="415.5" ></text>
</g>
<g >
<title>blink::WebString::length() const (1 samples, 0.02%)</title><rect x="17.7" y="261" width="0.2" height="15.0" fill="rgb(232,188,26)" rx="2" ry="2" />
<text  x="20.67" y="271.5" ></text>
</g>
<g >
<title>base::ScaledLinearHistogram::AddScaledCount(int, int) (1 samples, 0.02%)</title><rect x="36.5" y="597" width="0.2" height="15.0" fill="rgb(207,154,47)" rx="2" ry="2" />
<text  x="39.47" y="607.5" ></text>
</g>
<g >
<title>cc::Scheduler::FinishImplFrame() (2 samples, 0.04%)</title><rect x="1067.1" y="837" width="0.4" height="15.0" fill="rgb(222,173,28)" rx="2" ry="2" />
<text  x="1070.05" y="847.5" ></text>
</g>
<g >
<title>mach_msg_trap (9 samples, 0.19%)</title><rect x="288.3" y="581" width="2.2" height="15.0" fill="rgb(251,163,45)" rx="2" ry="2" />
<text  x="291.30" y="591.5" ></text>
</g>
<g >
<title>base::internal::Sequence::Transaction::PushTask(base::internal::Task) (1 samples, 0.02%)</title><rect x="286.8" y="677" width="0.3" height="15.0" fill="rgb(236,178,0)" rx="2" ry="2" />
<text  x="289.82" y="687.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="1072.5" y="437" width="0.2" height="15.0" fill="rgb(238,63,42)" rx="2" ry="2" />
<text  x="1075.49" y="447.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::InterfaceEndpoint::SendMessage(mojo::Message*) (1 samples, 0.02%)</title><rect x="1068.3" y="709" width="0.2" height="15.0" fill="rgb(228,67,17)" rx="2" ry="2" />
<text  x="1071.29" y="719.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (1 samples, 0.02%)</title><rect x="676.9" y="693" width="0.3" height="15.0" fill="rgb(207,148,44)" rx="2" ry="2" />
<text  x="679.94" y="703.5" ></text>
</g>
<g >
<title>vp8_decode_mode_mvs (5 samples, 0.10%)</title><rect x="983.9" y="709" width="1.3" height="15.0" fill="rgb(243,125,6)" rx="2" ry="2" />
<text  x="986.93" y="719.5" ></text>
</g>
<g >
<title>network::mojom::internal::P2PSocketClient_SendComplete_Params_Data::Validate(void const*, mojo::internal::ValidationContext*) (1 samples, 0.02%)</title><rect x="319.7" y="677" width="0.3" height="15.0" fill="rgb(244,137,25)" rx="2" ry="2" />
<text  x="322.72" y="687.5" ></text>
</g>
<g >
<title>vp8_short_fdct8x4_sse2 (12 samples, 0.25%)</title><rect x="780.6" y="693" width="3.0" height="15.0" fill="rgb(212,131,14)" rx="2" ry="2" />
<text  x="783.59" y="703.5" ></text>
</g>
<g >
<title>blink::LayoutObject::DebugName() const (1 samples, 0.02%)</title><rect x="28.8" y="405" width="0.2" height="15.0" fill="rgb(230,124,48)" rx="2" ry="2" />
<text  x="31.80" y="415.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::ScheduleTimeupdateEvent(bool) (1 samples, 0.02%)</title><rect x="18.4" y="629" width="0.3" height="15.0" fill="rgb(244,85,20)" rx="2" ry="2" />
<text  x="21.41" y="639.5" ></text>
</g>
<g >
<title>webrtc::FecControllerDefault::UpdateWithEncodedData(unsigned long, webrtc::VideoFrameType) (1 samples, 0.02%)</title><rect x="815.7" y="725" width="0.3" height="15.0" fill="rgb(246,7,12)" rx="2" ry="2" />
<text  x="818.71" y="735.5" ></text>
</g>
<g >
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="204.2" y="869" width="0.2" height="15.0" fill="rgb(238,33,30)" rx="2" ry="2" />
<text  x="207.19" y="879.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="1025.0" y="869" width="0.2" height="15.0" fill="rgb(243,93,2)" rx="2" ry="2" />
<text  x="1028.00" y="879.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="15.9" y="693" width="0.3" height="15.0" fill="rgb(224,46,0)" rx="2" ry="2" />
<text  x="18.94" y="703.5" ></text>
</g>
<g >
<title>operator delete[](void*) (1 samples, 0.02%)</title><rect x="233.4" y="757" width="0.2" height="15.0" fill="rgb(225,77,35)" rx="2" ry="2" />
<text  x="236.38" y="767.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="1127.4" y="725" width="0.3" height="15.0" fill="rgb(250,140,13)" rx="2" ry="2" />
<text  x="1130.41" y="735.5" ></text>
</g>
<g >
<title>cc::Scheduler::StartOrStopBeginFrames() (2 samples, 0.04%)</title><rect x="1067.1" y="805" width="0.4" height="15.0" fill="rgb(213,40,2)" rx="2" ry="2" />
<text  x="1070.05" y="815.5" ></text>
</g>
<g >
<title>set_tiny_meta_header_in_use (1 samples, 0.02%)</title><rect x="111.7" y="597" width="0.2" height="15.0" fill="rgb(232,28,27)" rx="2" ry="2" />
<text  x="114.67" y="607.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.02%)</title><rect x="43.1" y="613" width="0.3" height="15.0" fill="rgb(232,8,43)" rx="2" ry="2" />
<text  x="46.15" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() const (1 samples, 0.02%)</title><rect x="347.7" y="837" width="0.2" height="15.0" fill="rgb(233,48,39)" rx="2" ry="2" />
<text  x="350.67" y="847.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="697.5" y="917" width="0.2" height="15.0" fill="rgb(206,101,1)" rx="2" ry="2" />
<text  x="700.47" y="927.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::~RtpPacket() (1 samples, 0.02%)</title><rect x="274.4" y="645" width="0.3" height="15.0" fill="rgb(248,63,8)" rx="2" ry="2" />
<text  x="277.45" y="655.5" ></text>
</g>
<g >
<title>celt_inner_prod_sse (1 samples, 0.02%)</title><rect x="683.9" y="709" width="0.2" height="15.0" fill="rgb(226,107,54)" rx="2" ry="2" />
<text  x="686.86" y="719.5" ></text>
</g>
<g >
<title>webrtc::EncodedImage::Allocate(unsigned long) (1 samples, 0.02%)</title><rect x="961.2" y="773" width="0.2" height="15.0" fill="rgb(232,215,1)" rx="2" ry="2" />
<text  x="964.17" y="783.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_zero_loop (1 samples, 0.02%)</title><rect x="405.3" y="661" width="0.3" height="15.0" fill="rgb(239,194,50)" rx="2" ry="2" />
<text  x="408.31" y="671.5" ></text>
</g>
<g >
<title>webrtc::DelayBasedBwe::IncomingPacketFeedbackVector(webrtc::TransportPacketsFeedback const&amp;, absl::optional&lt;webrtc::DataRate&gt;, absl::optional&lt;webrtc::DataRate&gt;, absl::optional&lt;webrtc::NetworkStateEstimate&gt;, bool) (1 samples, 0.02%)</title><rect x="581.0" y="821" width="0.2" height="15.0" fill="rgb(223,97,51)" rx="2" ry="2" />
<text  x="583.95" y="831.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="300.7" y="709" width="0.5" height="15.0" fill="rgb(250,5,36)" rx="2" ry="2" />
<text  x="303.67" y="719.5" ></text>
</g>
<g >
<title>blink::Fullscreen::FullscreenElementForBindingFrom(blink::TreeScope&amp;) (1 samples, 0.02%)</title><rect x="29.0" y="469" width="0.3" height="15.0" fill="rgb(210,166,0)" rx="2" ry="2" />
<text  x="32.05" y="479.5" ></text>
</g>
<g >
<title>base::Histogram::bucket_count() const (1 samples, 0.02%)</title><rect x="36.2" y="549" width="0.3" height="15.0" fill="rgb(205,203,9)" rx="2" ry="2" />
<text  x="39.22" y="559.5" ></text>
</g>
<g >
<title>cricket::WebRtcVideoChannel::OnRtcpReceived(rtc::CopyOnWriteBuffer, long long) (10 samples, 0.21%)</title><rect x="273.5" y="789" width="2.4" height="15.0" fill="rgb(226,7,30)" rx="2" ry="2" />
<text  x="276.46" y="799.5" ></text>
</g>
<g >
<title>CopyPlane (6 samples, 0.13%)</title><rect x="531.2" y="741" width="1.5" height="15.0" fill="rgb(209,204,28)" rx="2" ry="2" />
<text  x="534.23" y="751.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderVideo::SendVideo(webrtc::VideoFrameType, signed char, unsigned int, long long, unsigned char const*, unsigned long, webrtc::RTPFragmentationHeader const*, webrtc::RTPVideoHeader const*, absl::optional&lt;long long&gt;) (2 samples, 0.04%)</title><rect x="961.7" y="725" width="0.5" height="15.0" fill="rgb(229,74,28)" rx="2" ry="2" />
<text  x="964.67" y="735.5" ></text>
</g>
<g >
<title>mach_msg_trap (8 samples, 0.17%)</title><rect x="364.0" y="917" width="2.0" height="15.0" fill="rgb(219,106,12)" rx="2" ry="2" />
<text  x="367.00" y="927.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="281.1" y="517" width="0.3" height="15.0" fill="rgb(251,97,17)" rx="2" ry="2" />
<text  x="284.13" y="527.5" ></text>
</g>
<g >
<title>encode_mb_row (300 samples, 6.29%)</title><rect x="383.3" y="725" width="74.2" height="15.0" fill="rgb(235,222,53)" rx="2" ry="2" />
<text  x="386.30" y="735.5" >encode_m..</text>
</g>
<g >
<title>base::sequence_manager::internal::WorkDeduplicator::OnWorkStarted() (1 samples, 0.02%)</title><rect x="46.6" y="725" width="0.3" height="15.0" fill="rgb(227,106,42)" rx="2" ry="2" />
<text  x="49.61" y="735.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (93 samples, 1.95%)</title><rect x="1031.4" y="725" width="23.0" height="15.0" fill="rgb(219,226,39)" rx="2" ry="2" />
<text  x="1034.43" y="735.5" >m..</text>
</g>
<g >
<title>mojo::internal::ArraySerializationHelper&lt;mojo::internal::Pointer&lt;viz::mojom::internal::ReturnedResource_Data&gt;, false, false&gt;::ValidateElements(mojo::internal::ArrayHeader const*, mojo::internal::Pointer&lt;viz::mojom::internal::ReturnedResource_Data&gt; const*, mojo::internal::ValidationContext*, mojo::internal::ContainerValidateParams const*) (1 samples, 0.02%)</title><rect x="1054.2" y="677" width="0.2" height="15.0" fill="rgb(236,151,44)" rx="2" ry="2" />
<text  x="1057.19" y="687.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (6 samples, 0.13%)</title><rect x="202.0" y="805" width="1.5" height="15.0" fill="rgb(242,117,15)" rx="2" ry="2" />
<text  x="204.97" y="815.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="185.1" y="741" width="0.3" height="15.0" fill="rgb(227,150,2)" rx="2" ry="2" />
<text  x="188.14" y="751.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="268.0" y="517" width="0.3" height="15.0" fill="rgb(231,65,40)" rx="2" ry="2" />
<text  x="271.02" y="527.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_uv_block_sse2 (1 samples, 0.02%)</title><rect x="583.9" y="693" width="0.3" height="15.0" fill="rgb(248,180,43)" rx="2" ry="2" />
<text  x="586.92" y="703.5" ></text>
</g>
<g >
<title>webrtc::GoogCcNetworkController::OnSentPacket(webrtc::SentPacket) (3 samples, 0.06%)</title><rect x="580.2" y="837" width="0.8" height="15.0" fill="rgb(212,52,19)" rx="2" ry="2" />
<text  x="583.21" y="847.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 0.04%)</title><rect x="294.2" y="757" width="0.5" height="15.0" fill="rgb(218,0,41)" rx="2" ry="2" />
<text  x="297.24" y="767.5" ></text>
</g>
<g >
<title>webrtc::internal::AudioSendStream::SendAudioData(std::__Cr::unique_ptr&lt;webrtc::AudioFrame, std::__Cr::default_delete&lt;webrtc::AudioFrame&gt; &gt;) (14 samples, 0.29%)</title><rect x="1083.1" y="869" width="3.5" height="15.0" fill="rgb(227,34,5)" rx="2" ry="2" />
<text  x="1086.13" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (2 samples, 0.04%)</title><rect x="19.2" y="437" width="0.4" height="15.0" fill="rgb(216,197,45)" rx="2" ry="2" />
<text  x="22.15" y="447.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="195.5" y="853" width="0.3" height="15.0" fill="rgb(249,13,42)" rx="2" ry="2" />
<text  x="198.53" y="863.5" ></text>
</g>
<g >
<title>vp8_dequant_idct_add_y_block_sse2 (5 samples, 0.10%)</title><rect x="837.0" y="709" width="1.2" height="15.0" fill="rgb(235,191,21)" rx="2" ry="2" />
<text  x="839.99" y="719.5" ></text>
</g>
<g >
<title>external_hmac_start(void*) (2 samples, 0.04%)</title><rect x="237.3" y="725" width="0.5" height="15.0" fill="rgb(211,10,45)" rx="2" ry="2" />
<text  x="240.34" y="735.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="1049.5" y="613" width="0.2" height="15.0" fill="rgb(235,226,50)" rx="2" ry="2" />
<text  x="1052.49" y="623.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="550.5" y="757" width="0.3" height="15.0" fill="rgb(242,97,45)" rx="2" ry="2" />
<text  x="553.52" y="767.5" ></text>
</g>
<g >
<title>base::RunLoop::RunWithTimeout(base::TimeDelta) (444 samples, 9.31%)</title><rect x="87.2" y="965" width="109.8" height="15.0" fill="rgb(233,161,20)" rx="2" ry="2" />
<text  x="90.18" y="975.5" >base::RunLoop..</text>
</g>
<g >
<title>base::(anonymous namespace)::ThreadFunc(void*) (2 samples, 0.04%)</title><rect x="213.8" y="1013" width="0.5" height="15.0" fill="rgb(216,93,49)" rx="2" ry="2" />
<text  x="216.84" y="1023.5" ></text>
</g>
<g >
<title>non-virtual thunk to cc::LayerTreeHostImpl::BuildRasterQueue(cc::TreePriority, cc::RasterTilePriorityQueue::Type) (1 samples, 0.02%)</title><rect x="1067.5" y="757" width="0.3" height="15.0" fill="rgb(221,114,21)" rx="2" ry="2" />
<text  x="1070.55" y="767.5" ></text>
</g>
<g >
<title>viz::TextureDrawQuad::~TextureDrawQuad() (1 samples, 0.02%)</title><rect x="1040.1" y="597" width="0.2" height="15.0" fill="rgb(235,32,42)" rx="2" ry="2" />
<text  x="1043.09" y="607.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroup::PushTaskSourceAndWakeUpWorkersImpl(base::internal::ThreadGroup::BaseScopedWorkersExecutor*, base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="276.7" y="613" width="0.5" height="15.0" fill="rgb(225,147,19)" rx="2" ry="2" />
<text  x="279.68" y="623.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Set(void*) (1 samples, 0.02%)</title><rect x="250.0" y="469" width="0.2" height="15.0" fill="rgb(220,143,3)" rx="2" ry="2" />
<text  x="252.96" y="479.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="367.0" y="917" width="0.2" height="15.0" fill="rgb(246,52,17)" rx="2" ry="2" />
<text  x="369.97" y="927.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::AtomicFlagSet::RunActiveCallbacks() const (9 samples, 0.19%)</title><rect x="183.7" y="837" width="2.2" height="15.0" fill="rgb(253,4,1)" rx="2" ry="2" />
<text  x="186.66" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::MaybeAdjustTaskDelay(base::sequence_manager::internal::PostedTask*, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.02%)</title><rect x="293.0" y="725" width="0.2" height="15.0" fill="rgb(216,87,36)" rx="2" ry="2" />
<text  x="296.00" y="735.5" ></text>
</g>
<g >
<title>viz::ClientResourceProvider::ReceiveReturnsFromParent(std::__Cr::vector&lt;viz::ReturnedResource, std::__Cr::allocator&lt;viz::ReturnedResource&gt; &gt;) (6 samples, 0.13%)</title><rect x="1052.2" y="645" width="1.5" height="15.0" fill="rgb(254,222,17)" rx="2" ry="2" />
<text  x="1055.21" y="655.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="133.9" y="613" width="0.3" height="15.0" fill="rgb(226,129,18)" rx="2" ry="2" />
<text  x="136.94" y="623.5" ></text>
</g>
<g >
<title>mojo::core::Core::ArmTrap(unsigned int, MojoArmTrapOptions const*, unsigned int*, MojoTrapEvent*) (1 samples, 0.02%)</title><rect x="142.8" y="645" width="0.3" height="15.0" fill="rgb(223,89,25)" rx="2" ry="2" />
<text  x="145.84" y="655.5" ></text>
</g>
<g >
<title>gpu::Capabilities::Capabilities(gpu::Capabilities const&amp;) (2 samples, 0.04%)</title><rect x="201.5" y="805" width="0.5" height="15.0" fill="rgb(252,226,44)" rx="2" ry="2" />
<text  x="204.47" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyDidProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (33 samples, 0.69%)</title><rect x="30.3" y="693" width="8.1" height="15.0" fill="rgb(207,129,37)" rx="2" ry="2" />
<text  x="33.29" y="703.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::MaybeScheduleAdjustMaxTasksLockRequired(base::internal::ThreadGroupImpl::ScopedWorkersExecutor*) (1 samples, 0.02%)</title><rect x="860.7" y="933" width="0.3" height="15.0" fill="rgb(254,72,25)" rx="2" ry="2" />
<text  x="863.74" y="943.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::GetSizeIfSerialized() const (1 samples, 0.02%)</title><rect x="323.2" y="693" width="0.2" height="15.0" fill="rgb(206,95,8)" rx="2" ry="2" />
<text  x="326.18" y="703.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.02%)</title><rect x="130.7" y="645" width="0.3" height="15.0" fill="rgb(244,192,7)" rx="2" ry="2" />
<text  x="133.72" y="655.5" ></text>
</g>
<g >
<title>thread_start (52 samples, 1.09%)</title><rect x="1074.2" y="1061" width="12.9" height="15.0" fill="rgb(230,85,4)" rx="2" ry="2" />
<text  x="1077.23" y="1071.5" ></text>
</g>
<g >
<title>cc::CompositorTimingHistory::WillBeginImplFrame(viz::BeginFrameArgs const&amp;, bool, base::TimeTicks) (1 samples, 0.02%)</title><rect x="1071.8" y="581" width="0.2" height="15.0" fill="rgb(240,16,4)" rx="2" ry="2" />
<text  x="1074.75" y="591.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1165.3" y="885" width="0.2" height="15.0" fill="rgb(221,56,0)" rx="2" ry="2" />
<text  x="1168.26" y="895.5" ></text>
</g>
<g >
<title>std::__Cr::vector&lt;mojo::core::ports::PortRef const*, base::StackAllocator&lt;mojo::core::ports::PortRef const*, 5ul&gt; &gt;::__append(unsigned long) (1 samples, 0.02%)</title><rect x="250.2" y="485" width="0.3" height="15.0" fill="rgb(226,7,16)" rx="2" ry="2" />
<text  x="253.21" y="495.5" ></text>
</g>
<g >
<title>snprintf (1 samples, 0.02%)</title><rect x="53.8" y="901" width="0.2" height="15.0" fill="rgb(221,228,9)" rx="2" ry="2" />
<text  x="56.79" y="911.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::CreateHardwareFrame(scoped_refptr&lt;media::VideoFrame&gt;, base::OnceCallback&lt;void (scoped_refptr&lt;media::VideoFrame&gt;)&gt;) (14 samples, 0.29%)</title><rect x="200.7" y="837" width="3.5" height="15.0" fill="rgb(227,137,29)" rx="2" ry="2" />
<text  x="203.73" y="847.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;blink::WebRtcVideoFrameAdapter&gt;::Release() const (2 samples, 0.04%)</title><rect x="962.4" y="837" width="0.5" height="15.0" fill="rgb(219,182,45)" rx="2" ry="2" />
<text  x="965.41" y="847.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() const (1 samples, 0.02%)</title><rect x="85.9" y="805" width="0.3" height="15.0" fill="rgb(205,120,9)" rx="2" ry="2" />
<text  x="88.95" y="815.5" ></text>
</g>
<g >
<title>silk_autocorrelation_FLP (1 samples, 0.02%)</title><rect x="850.3" y="693" width="0.3" height="15.0" fill="rgb(222,152,23)" rx="2" ry="2" />
<text  x="853.35" y="703.5" ></text>
</g>
<g >
<title>mojo::native::internal::NativeStruct_Data::Validate(void const*, mojo::internal::ValidationContext*) (1 samples, 0.02%)</title><rect x="319.7" y="661" width="0.3" height="15.0" fill="rgb(231,176,35)" rx="2" ry="2" />
<text  x="322.72" y="671.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="696.2" y="933" width="0.3" height="15.0" fill="rgb(205,221,23)" rx="2" ry="2" />
<text  x="699.23" y="943.5" ></text>
</g>
<g >
<title>vp8cx_pick_filter_level_fast (4 samples, 0.08%)</title><rect x="943.4" y="725" width="1.0" height="15.0" fill="rgb(209,194,53)" rx="2" ry="2" />
<text  x="946.36" y="735.5" ></text>
</g>
<g >
<title>mach_msg_trap (28 samples, 0.59%)</title><rect x="864.0" y="901" width="6.9" height="15.0" fill="rgb(230,187,32)" rx="2" ry="2" />
<text  x="866.95" y="911.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="86.4" y="837" width="0.3" height="15.0" fill="rgb(247,35,53)" rx="2" ry="2" />
<text  x="89.44" y="847.5" ></text>
</g>
<g >
<title>cc::LayerTreeHostImpl::CommitComplete() (3 samples, 0.06%)</title><rect x="1070.8" y="821" width="0.7" height="15.0" fill="rgb(250,67,39)" rx="2" ry="2" />
<text  x="1073.76" y="831.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="85.9" y="757" width="0.3" height="15.0" fill="rgb(217,25,47)" rx="2" ry="2" />
<text  x="88.95" y="767.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::GetBucketIndex(int) const (1 samples, 0.02%)</title><rect x="862.0" y="885" width="0.2" height="15.0" fill="rgb(212,150,17)" rx="2" ry="2" />
<text  x="864.97" y="895.5" ></text>
</g>
<g >
<title>objc_autoreleasePoolPush (1 samples, 0.02%)</title><rect x="1065.1" y="917" width="0.2" height="15.0" fill="rgb(206,164,39)" rx="2" ry="2" />
<text  x="1068.07" y="927.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="558.7" y="885" width="0.2" height="15.0" fill="rgb(225,138,0)" rx="2" ry="2" />
<text  x="561.69" y="895.5" ></text>
</g>
<g >
<title>extend_plane (5 samples, 0.10%)</title><rect x="482.7" y="725" width="1.3" height="15.0" fill="rgb(252,66,35)" rx="2" ry="2" />
<text  x="485.74" y="735.5" ></text>
</g>
<g >
<title>mojo::internal::ArraySerializer&lt;mojo::ArrayDataView&lt;viz::mojom::RenderPassDataView&gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; const, mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; &gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; const, false&gt;, void&gt;::SerializeElements(mojo::internal::ArrayIterator&lt;mojo::ArrayTraits&lt;std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; &gt;, std::__Cr::vector&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;viz::RenderPass, std::__Cr::default_delete&lt;viz::RenderPass&gt; &gt; &gt; &gt; const, false&gt;*, mojo::internal::Buffer*, mojo::internal::Array_Data&lt;mojo::internal::Pointer&lt;viz::mojom::internal::RenderPass_Data&gt; &gt;::BufferWriter*, mojo::internal::ContainerValidateParams const*, mojo::internal::SerializationContext*) (1 samples, 0.02%)</title><rect x="1068.5" y="693" width="0.3" height="15.0" fill="rgb(214,6,35)" rx="2" ry="2" />
<text  x="1071.54" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="993.1" y="629" width="0.2" height="15.0" fill="rgb(240,181,53)" rx="2" ry="2" />
<text  x="996.09" y="639.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::OnChannelMessage(void const*, unsigned long, std::__Cr::vector&lt;mojo::PlatformHandle, std::__Cr::allocator&lt;mojo::PlatformHandle&gt; &gt;) (172 samples, 3.61%)</title><rect x="102.8" y="853" width="42.5" height="15.0" fill="rgb(246,226,54)" rx="2" ry="2" />
<text  x="105.77" y="863.5" >mojo..</text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::MailboxHoldersReleased(media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*, gpu::SyncToken const&amp;) (4 samples, 0.08%)</title><rect x="1052.7" y="517" width="1.0" height="15.0" fill="rgb(221,199,27)" rx="2" ry="2" />
<text  x="1055.70" y="527.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursively() (2 samples, 0.04%)</title><rect x="26.6" y="501" width="0.5" height="15.0" fill="rgb(206,102,24)" rx="2" ry="2" />
<text  x="29.57" y="511.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="33.3" y="613" width="0.2" height="15.0" fill="rgb(232,158,17)" rx="2" ry="2" />
<text  x="36.25" y="623.5" ></text>
</g>
<g >
<title>v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local&lt;v8::Value&gt;*) (1 samples, 0.02%)</title><rect x="19.9" y="517" width="0.2" height="15.0" fill="rgb(226,74,45)" rx="2" ry="2" />
<text  x="22.90" y="527.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() (124 samples, 2.60%)</title><rect x="16.2" y="741" width="30.7" height="15.0" fill="rgb(217,112,14)" rx="2" ry="2" />
<text  x="19.18" y="751.5" >no..</text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.02%)</title><rect x="226.0" y="357" width="0.2" height="15.0" fill="rgb(250,93,33)" rx="2" ry="2" />
<text  x="228.96" y="367.5" ></text>
</g>
<g >
<title>mojo::core::UserMessageImpl::AppendData(unsigned int, unsigned int const*, unsigned int) (1 samples, 0.02%)</title><rect x="168.1" y="725" width="0.2" height="15.0" fill="rgb(223,34,40)" rx="2" ry="2" />
<text  x="171.08" y="735.5" ></text>
</g>
<g >
<title>vp8_copy_mem16x16_sse2 (1 samples, 0.02%)</title><rect x="602.5" y="645" width="0.2" height="15.0" fill="rgb(228,194,26)" rx="2" ry="2" />
<text  x="605.47" y="655.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="1069.3" y="645" width="0.2" height="15.0" fill="rgb(227,114,49)" rx="2" ry="2" />
<text  x="1072.28" y="655.5" ></text>
</g>
<g >
<title>silk_noise_shape_quantizer_del_dec (22 samples, 0.46%)</title><rect x="844.9" y="677" width="5.4" height="15.0" fill="rgb(252,185,26)" rx="2" ry="2" />
<text  x="847.91" y="687.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="30.8" y="597" width="0.2" height="15.0" fill="rgb(245,36,9)" rx="2" ry="2" />
<text  x="33.78" y="607.5" ></text>
</g>
<g >
<title>content::(anonymous namespace)::IpcPacketSocket::OnDataReceived(net::IPEndPoint const&amp;, std::__Cr::vector&lt;signed char, std::__Cr::allocator&lt;signed char&gt; &gt; const&amp;, base::TimeTicks const&amp;) (10 samples, 0.21%)</title><rect x="225.2" y="693" width="2.5" height="15.0" fill="rgb(233,181,27)" rx="2" ry="2" />
<text  x="228.22" y="703.5" ></text>
</g>
<g >
<title>base::internal::Sequence::BeginTransaction() (1 samples, 0.02%)</title><rect x="124.0" y="709" width="0.3" height="15.0" fill="rgb(233,63,44)" rx="2" ry="2" />
<text  x="127.04" y="719.5" ></text>
</g>
<g >
<title>CopyRow_ERMS (4 samples, 0.08%)</title><rect x="992.1" y="725" width="1.0" height="15.0" fill="rgb(253,169,11)" rx="2" ry="2" />
<text  x="995.10" y="735.5" ></text>
</g>
<g >
<title>MergeUVPlane (5 samples, 0.10%)</title><rect x="56.0" y="901" width="1.2" height="15.0" fill="rgb(221,98,9)" rx="2" ry="2" />
<text  x="59.01" y="911.5" ></text>
</g>
<g >
<title>rtc::CritScope::CritScope(rtc::CriticalSection const*) (1 samples, 0.02%)</title><rect x="1170.0" y="965" width="0.2" height="15.0" fill="rgb(225,50,26)" rx="2" ry="2" />
<text  x="1172.96" y="975.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::erase(base::internal::HeapHandle) (1 samples, 0.02%)</title><rect x="46.4" y="629" width="0.2" height="15.0" fill="rgb(226,119,48)" rx="2" ry="2" />
<text  x="49.36" y="639.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="733.1" y="661" width="0.2" height="15.0" fill="rgb(220,0,8)" rx="2" ry="2" />
<text  x="736.09" y="671.5" ></text>
</g>
<g >
<title>default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="1027.5" y="885" width="0.2" height="15.0" fill="rgb(231,57,26)" rx="2" ry="2" />
<text  x="1030.47" y="895.5" ></text>
</g>
<g >
<title>base::internal::OperationsController::TryBeginOperation() (1 samples, 0.02%)</title><rect x="1149.2" y="789" width="0.2" height="15.0" fill="rgb(236,120,3)" rx="2" ry="2" />
<text  x="1152.18" y="799.5" ></text>
</g>
<g >
<title>vp8_build_intra_predictors_mby_s (1 samples, 0.02%)</title><rect x="907.0" y="677" width="0.2" height="15.0" fill="rgb(226,191,0)" rx="2" ry="2" />
<text  x="910.00" y="687.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (2 samples, 0.04%)</title><rect x="909.7" y="661" width="0.5" height="15.0" fill="rgb(219,219,2)" rx="2" ry="2" />
<text  x="912.72" y="671.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="190.1" y="773" width="0.2" height="15.0" fill="rgb(249,103,26)" rx="2" ry="2" />
<text  x="193.09" y="783.5" ></text>
</g>
<g >
<title>small_malloc_from_free_list (2 samples, 0.04%)</title><rect x="881.0" y="789" width="0.5" height="15.0" fill="rgb(227,127,39)" rx="2" ry="2" />
<text  x="884.02" y="799.5" ></text>
</g>
<g >
<title>blink::VideoTrackAdapter::CalculateDesiredSize(bool, gfx::Size const&amp;, blink::VideoTrackAdapterSettings const&amp;, gfx::Size*) (1 samples, 0.02%)</title><rect x="175.5" y="789" width="0.2" height="15.0" fill="rgb(236,5,45)" rx="2" ry="2" />
<text  x="178.50" y="799.5" ></text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="909.5" y="661" width="0.2" height="15.0" fill="rgb(245,39,30)" rx="2" ry="2" />
<text  x="912.47" y="671.5" ></text>
</g>
<g >
<title>blink::scheduler::IdleHelper::DidProcessTask(base::PendingTask const&amp;) (1 samples, 0.02%)</title><rect x="38.2" y="677" width="0.2" height="15.0" fill="rgb(208,140,6)" rx="2" ry="2" />
<text  x="41.20" y="687.5" ></text>
</g>
<g >
<title>vp8_denoiser_filter_sse2 (9 samples, 0.19%)</title><rect x="416.7" y="661" width="2.2" height="15.0" fill="rgb(251,20,44)" rx="2" ry="2" />
<text  x="419.69" y="671.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (4 samples, 0.08%)</title><rect x="372.2" y="901" width="1.0" height="15.0" fill="rgb(238,27,26)" rx="2" ry="2" />
<text  x="375.16" y="911.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="256.9" y="645" width="0.2" height="15.0" fill="rgb(222,140,40)" rx="2" ry="2" />
<text  x="259.88" y="655.5" ></text>
</g>
<g >
<title>blink::LocalFrame::GetTaskRunner(blink::TaskType) (1 samples, 0.02%)</title><rect x="18.4" y="565" width="0.3" height="15.0" fill="rgb(220,188,47)" rx="2" ry="2" />
<text  x="21.41" y="575.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (4 samples, 0.08%)</title><rect x="555.5" y="949" width="1.0" height="15.0" fill="rgb(247,192,31)" rx="2" ry="2" />
<text  x="558.47" y="959.5" ></text>
</g>
<g >
<title>vp8_filter_block1d16_v6_ssse3 (1 samples, 0.02%)</title><rect x="733.1" y="645" width="0.2" height="15.0" fill="rgb(207,74,15)" rx="2" ry="2" />
<text  x="736.09" y="655.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="993.1" y="549" width="0.2" height="15.0" fill="rgb(224,51,30)" rx="2" ry="2" />
<text  x="996.09" y="559.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (6 samples, 0.13%)</title><rect x="172.3" y="789" width="1.5" height="15.0" fill="rgb(254,87,16)" rx="2" ry="2" />
<text  x="175.28" y="799.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="329.4" y="821" width="0.2" height="15.0" fill="rgb(231,67,54)" rx="2" ry="2" />
<text  x="332.37" y="831.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::AssertNoLockHeldOnCurrentThread() (1 samples, 0.02%)</title><rect x="273.2" y="549" width="0.3" height="15.0" fill="rgb(216,121,42)" rx="2" ry="2" />
<text  x="276.21" y="559.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.02%)</title><rect x="27.6" y="453" width="0.2" height="15.0" fill="rgb(252,11,8)" rx="2" ry="2" />
<text  x="30.56" y="463.5" ></text>
</g>
<g >
<title>silk_noise_shape_analysis_FLP (3 samples, 0.06%)</title><rect x="689.8" y="709" width="0.7" height="15.0" fill="rgb(252,200,35)" rx="2" ry="2" />
<text  x="692.80" y="719.5" ></text>
</g>
<g >
<title>blink::ScheduledAction::Execute(blink::ExecutionContext*) (6 samples, 0.13%)</title><rect x="16.9" y="629" width="1.5" height="15.0" fill="rgb(211,194,54)" rx="2" ry="2" />
<text  x="19.93" y="639.5" ></text>
</g>
<g >
<title>webrtc::UlpfecGenerator::ResetState() (1 samples, 0.02%)</title><rect x="961.9" y="677" width="0.3" height="15.0" fill="rgb(210,23,48)" rx="2" ry="2" />
<text  x="964.92" y="687.5" ></text>
</g>
<g >
<title>CFRunLoopWakeUp (2 samples, 0.04%)</title><rect x="140.1" y="341" width="0.5" height="15.0" fill="rgb(244,140,14)" rx="2" ry="2" />
<text  x="143.12" y="351.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.02%)</title><rect x="356.1" y="789" width="0.2" height="15.0" fill="rgb(243,148,5)" rx="2" ry="2" />
<text  x="359.08" y="799.5" ></text>
</g>
<g >
<title>base::AtomicFlag::Set() (1 samples, 0.02%)</title><rect x="38.2" y="581" width="0.2" height="15.0" fill="rgb(246,23,18)" rx="2" ry="2" />
<text  x="41.20" y="591.5" ></text>
</g>
<g >
<title>webrtc::(anonymous namespace)::AudioCodingModuleImpl::ReceiveCodec() const (1 samples, 0.02%)</title><rect x="281.1" y="677" width="0.3" height="15.0" fill="rgb(233,206,30)" rx="2" ry="2" />
<text  x="284.13" y="687.5" ></text>
</g>
<g >
<title>vp8_build_inter16x16_predictors_mb (13 samples, 0.27%)</title><rect x="586.6" y="677" width="3.3" height="15.0" fill="rgb(205,176,30)" rx="2" ry="2" />
<text  x="589.64" y="687.5" ></text>
</g>
<g >
<title>unsigned char* rtc::CopyOnWriteBuffer::data&lt;unsigned char, (void*)0&gt;() (2 samples, 0.04%)</title><rect x="1160.6" y="853" width="0.5" height="15.0" fill="rgb(246,165,40)" rx="2" ry="2" />
<text  x="1163.56" y="863.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="1021.8" y="933" width="0.2" height="15.0" fill="rgb(238,110,3)" rx="2" ry="2" />
<text  x="1024.78" y="943.5" ></text>
</g>
<g >
<title>base::internal::WorkerThread::RunPooledWorker() (595 samples, 12.47%)</title><rect x="873.1" y="997" width="147.2" height="15.0" fill="rgb(237,56,40)" rx="2" ry="2" />
<text  x="876.11" y="1007.5" >base::internal::Wo..</text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="176.5" y="565" width="0.2" height="15.0" fill="rgb(209,44,44)" rx="2" ry="2" />
<text  x="179.49" y="575.5" ></text>
</g>
<g >
<title>SHA1_Update (1 samples, 0.02%)</title><rect x="307.6" y="469" width="0.2" height="15.0" fill="rgb(205,194,48)" rx="2" ry="2" />
<text  x="310.60" y="479.5" ></text>
</g>
<g >
<title>_pthread_mutex_unlock_init_slow (1 samples, 0.02%)</title><rect x="10.0" y="853" width="0.2" height="15.0" fill="rgb(217,197,19)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>webrtc::RTPSender::AllocatePacket() const (1 samples, 0.02%)</title><rect x="691.0" y="789" width="0.3" height="15.0" fill="rgb(207,0,49)" rx="2" ry="2" />
<text  x="694.04" y="799.5" ></text>
</g>
<g >
<title>vp8_find_best_sub_pixel_step (40 samples, 0.84%)</title><rect x="913.9" y="677" width="9.9" height="15.0" fill="rgb(211,73,52)" rx="2" ry="2" />
<text  x="916.92" y="687.5" ></text>
</g>
<g >
<title>WTF::HashTableAddResult&lt;WTF::HashTable&lt;unsigned int, WTF::KeyValuePair&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::IntHash&lt;unsigned int&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;unsigned int&gt;, WTF::HashTraits&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt; &gt;, WTF::HashTraits&lt;unsigned int&gt;, WTF::PartitionAllocator&gt;, WTF::KeyValuePair&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt; &gt; WTF::HashTable&lt;unsigned int, WTF::KeyValuePair&lt;unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::IntHash&lt;unsigned int&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;unsigned int&gt;, WTF::HashTraits&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt; &gt;, WTF::HashTraits&lt;unsigned int&gt;, WTF::PartitionAllocator&gt;::insert&lt;WTF::HashMapTranslator&lt;WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;unsigned int&gt;, WTF::HashTraits&lt;mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt; &gt;, WTF::IntHash&lt;unsigned int&gt;, WTF::PartitionAllocator&gt;, unsigned int, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt; &gt;(unsigned int&amp;&amp;, mojo::StructPtr&lt;viz::mojom::blink::FrameTimingDetails&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="1051.5" y="645" width="0.2" height="15.0" fill="rgb(211,79,50)" rx="2" ry="2" />
<text  x="1054.47" y="655.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Decoder::ReturnFrame(vpx_image const*, unsigned int, int) (6 samples, 0.13%)</title><rect x="992.1" y="773" width="1.5" height="15.0" fill="rgb(224,144,37)" rx="2" ry="2" />
<text  x="995.10" y="783.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_other_loop (5 samples, 0.10%)</title><rect x="424.6" y="661" width="1.2" height="15.0" fill="rgb(207,16,34)" rx="2" ry="2" />
<text  x="427.61" y="671.5" ></text>
</g>
<g >
<title>vpx_sad16x16_sse2.loop (21 samples, 0.44%)</title><rect x="774.9" y="677" width="5.2" height="15.0" fill="rgb(250,179,15)" rx="2" ry="2" />
<text  x="777.90" y="687.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1013.1" y="901" width="0.3" height="15.0" fill="rgb(240,71,0)" rx="2" ry="2" />
<text  x="1016.12" y="911.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="31.8" y="645" width="0.2" height="15.0" fill="rgb(253,26,24)" rx="2" ry="2" />
<text  x="34.77" y="655.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (4 samples, 0.08%)</title><rect x="733.6" y="661" width="1.0" height="15.0" fill="rgb(250,98,8)" rx="2" ry="2" />
<text  x="736.58" y="671.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="367.0" y="933" width="0.2" height="15.0" fill="rgb(224,24,46)" rx="2" ry="2" />
<text  x="369.97" y="943.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="314.3" y="597" width="0.2" height="15.0" fill="rgb(248,8,29)" rx="2" ry="2" />
<text  x="317.28" y="607.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::WeakReference(base::internal::WeakReference const&amp;) (1 samples, 0.02%)</title><rect x="301.9" y="773" width="0.3" height="15.0" fill="rgb(252,94,22)" rx="2" ry="2" />
<text  x="304.91" y="783.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="107.2" y="757" width="0.5" height="15.0" fill="rgb(252,89,20)" rx="2" ry="2" />
<text  x="110.22" y="767.5" ></text>
</g>
<g >
<title>free_tiny (2 samples, 0.04%)</title><rect x="579.2" y="853" width="0.5" height="15.0" fill="rgb(247,153,2)" rx="2" ry="2" />
<text  x="582.22" y="863.5" ></text>
</g>
<g >
<title>blink::HTMLInputElement::ParseAttribute(blink::Element::AttributeModificationParams const&amp;) (1 samples, 0.02%)</title><rect x="20.9" y="453" width="0.2" height="15.0" fill="rgb(237,9,22)" rx="2" ry="2" />
<text  x="23.88" y="463.5" ></text>
</g>
<g >
<title>base::(anonymous namespace)::BarrierInfo::Run() (2 samples, 0.04%)</title><rect x="67.4" y="901" width="0.5" height="15.0" fill="rgb(251,209,43)" rx="2" ry="2" />
<text  x="70.39" y="911.5" ></text>
</g>
<g >
<title>gpu::GpuChannelHost::Send(IPC::Message*) (2 samples, 0.04%)</title><rect x="1034.4" y="517" width="0.5" height="15.0" fill="rgb(222,28,15)" rx="2" ry="2" />
<text  x="1037.40" y="527.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (9 samples, 0.19%)</title><rect x="1156.4" y="805" width="2.2" height="15.0" fill="rgb(228,63,40)" rx="2" ry="2" />
<text  x="1159.36" y="815.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) (93 samples, 1.95%)</title><rect x="1031.4" y="741" width="23.0" height="15.0" fill="rgb(222,191,43)" rx="2" ry="2" />
<text  x="1034.43" y="751.5" >m..</text>
</g>
<g >
<title>DYLD-STUB$$IPC::ParamTraits&lt;base::FileDescriptor&gt;::Write(base::Pickle*, base::FileDescriptor const&amp;) (1 samples, 0.02%)</title><rect x="205.4" y="789" width="0.3" height="15.0" fill="rgb(224,107,40)" rx="2" ry="2" />
<text  x="208.43" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="993.1" y="645" width="0.2" height="15.0" fill="rgb(249,86,36)" rx="2" ry="2" />
<text  x="996.09" y="655.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="171.8" y="821" width="0.2" height="15.0" fill="rgb(208,180,40)" rx="2" ry="2" />
<text  x="174.79" y="831.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="195.0" y="837" width="0.3" height="15.0" fill="rgb(205,19,23)" rx="2" ry="2" />
<text  x="198.04" y="847.5" ></text>
</g>
<g >
<title>content::VideoCaptureImpl::OnBufferReady(int, mojo::StructPtr&lt;media::mojom::VideoFrameInfo&gt;) (17 samples, 0.36%)</title><rect x="136.9" y="565" width="4.2" height="15.0" fill="rgb(226,91,12)" rx="2" ry="2" />
<text  x="139.91" y="575.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelReceive::GetAudioFrameWithInfo(int, webrtc::AudioFrame*) (102 samples, 2.14%)</title><rect x="1112.6" y="869" width="25.2" height="15.0" fill="rgb(220,159,54)" rx="2" ry="2" />
<text  x="1115.57" y="879.5" >w..</text>
</g>
<g >
<title>webrtc::NetEqImpl::GetAudio(webrtc::AudioFrame*, bool*, absl::optional&lt;webrtc::Operations&gt;) (65 samples, 1.36%)</title><rect x="1113.6" y="821" width="16.0" height="15.0" fill="rgb(237,189,15)" rx="2" ry="2" />
<text  x="1116.56" y="831.5" ></text>
</g>
<g >
<title>vp8_get_frame (21 samples, 0.44%)</title><rect x="817.0" y="773" width="5.1" height="15.0" fill="rgb(247,121,1)" rx="2" ry="2" />
<text  x="819.95" y="783.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="30.8" y="661" width="0.2" height="15.0" fill="rgb(224,162,4)" rx="2" ry="2" />
<text  x="33.78" y="671.5" ></text>
</g>
<g >
<title>base::internal::TaskSource::ClearHeapHandle() (1 samples, 0.02%)</title><rect x="557.2" y="933" width="0.3" height="15.0" fill="rgb(234,79,50)" rx="2" ry="2" />
<text  x="560.20" y="943.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.02%)</title><rect x="298.9" y="837" width="0.3" height="15.0" fill="rgb(252,179,53)" rx="2" ry="2" />
<text  x="301.94" y="847.5" ></text>
</g>
<g >
<title>base::FileDescriptorWatcher::~FileDescriptorWatcher() (1 samples, 0.02%)</title><rect x="369.2" y="933" width="0.2" height="15.0" fill="rgb(228,136,31)" rx="2" ry="2" />
<text  x="372.19" y="943.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.02%)</title><rect x="815.5" y="693" width="0.2" height="15.0" fill="rgb(247,146,17)" rx="2" ry="2" />
<text  x="818.47" y="703.5" ></text>
</g>
<g >
<title>__ulock_wait (1 samples, 0.02%)</title><rect x="552.3" y="853" width="0.2" height="15.0" fill="rgb(235,30,46)" rx="2" ry="2" />
<text  x="555.26" y="863.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="1141.8" y="949" width="0.2" height="15.0" fill="rgb(245,198,0)" rx="2" ry="2" />
<text  x="1144.76" y="959.5" ></text>
</g>
<g >
<title>gpu::GpuChannelHost::Listener::OnMessageReceived(IPC::Message const&amp;) (4 samples, 0.08%)</title><rect x="134.2" y="549" width="1.0" height="15.0" fill="rgb(249,225,38)" rx="2" ry="2" />
<text  x="137.18" y="559.5" ></text>
</g>
<g >
<title>std::__Cr::__list_iterator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, void*&gt; std::__Cr::list&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, std::__Cr::allocator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt; &gt; &gt;::__sort&lt;webrtc::ForwardErrorCorrection::SortablePacket::LessThan&gt;(std::__Cr::__list_iterator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, void*&gt;, std::__Cr::__list_iterator&lt;std::__Cr::unique_ptr&lt;webrtc::ForwardErrorCorrection::RecoveredPacket, std::__Cr::default_delete&lt;webrtc::ForwardErrorCorrection::RecoveredPacket&gt; &gt;, void*&gt;, unsigned long, webrtc::ForwardErrorCorrection::SortablePacket::LessThan&amp;) (2 samples, 0.04%)</title><rect x="264.3" y="597" width="0.5" height="15.0" fill="rgb(236,27,45)" rx="2" ry="2" />
<text  x="267.31" y="607.5" ></text>
</g>
<g >
<title>base::ConditionVariable::Signal() (1 samples, 0.02%)</title><rect x="569.6" y="901" width="0.2" height="15.0" fill="rgb(212,46,47)" rx="2" ry="2" />
<text  x="572.57" y="911.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (4 samples, 0.08%)</title><rect x="134.2" y="533" width="1.0" height="15.0" fill="rgb(234,133,0)" rx="2" ry="2" />
<text  x="137.18" y="543.5" ></text>
</g>
<g >
<title>media::GpuMemoryBufferVideoFramePool::PoolImpl::CopyVideoFrameToGpuMemoryBuffers(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*) (5 samples, 0.10%)</title><rect x="61.5" y="933" width="1.2" height="15.0" fill="rgb(213,133,19)" rx="2" ry="2" />
<text  x="64.45" y="943.5" ></text>
</g>
<g >
<title>cc::TaskGraphWorkQueue::GetNextTaskToRun(unsigned short) (1 samples, 0.02%)</title><rect x="55.0" y="965" width="0.3" height="15.0" fill="rgb(248,3,45)" rx="2" ry="2" />
<text  x="58.02" y="975.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.02%)</title><rect x="176.5" y="645" width="0.2" height="15.0" fill="rgb(234,172,20)" rx="2" ry="2" />
<text  x="179.49" y="655.5" ></text>
</g>
<g >
<title>DYLD-STUB$$IPC::MessageView::~MessageView() (1 samples, 0.02%)</title><rect x="166.1" y="821" width="0.2" height="15.0" fill="rgb(228,177,32)" rx="2" ry="2" />
<text  x="169.10" y="831.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::AssertNoLockHeldOnCurrentThread() (1 samples, 0.02%)</title><rect x="1035.4" y="421" width="0.2" height="15.0" fill="rgb(254,4,52)" rx="2" ry="2" />
<text  x="1038.39" y="431.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="292.5" y="629" width="0.3" height="15.0" fill="rgb(236,144,37)" rx="2" ry="2" />
<text  x="295.51" y="639.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (*)(int, int, int, media::VideoFrame const*, unsigned char*, int, unsigned char*, int, base::OnceCallback&lt;void ()&gt;), int, int, int, base::internal::UnretainedWrapper&lt;media::VideoFrame&gt;, unsigned char*, int, unsigned char*, int, base::RepeatingCallback&lt;void ()&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (9 samples, 0.19%)</title><rect x="62.7" y="949" width="2.2" height="15.0" fill="rgb(240,131,1)" rx="2" ry="2" />
<text  x="65.69" y="959.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::Release() const (1 samples, 0.02%)</title><rect x="1158.3" y="789" width="0.3" height="15.0" fill="rgb(209,157,11)" rx="2" ry="2" />
<text  x="1161.34" y="799.5" ></text>
</g>
<g >
<title>non-virtual thunk to webrtc::ReceiveStatisticsImpl::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (1 samples, 0.02%)</title><rect x="261.6" y="693" width="0.2" height="15.0" fill="rgb(235,159,24)" rx="2" ry="2" />
<text  x="264.58" y="703.5" ></text>
</g>
<g >
<title>base::sequence_manager::LazyNow::Now() (2 samples, 0.04%)</title><rect x="328.6" y="837" width="0.5" height="15.0" fill="rgb(216,221,51)" rx="2" ry="2" />
<text  x="331.62" y="847.5" ></text>
</g>
<g >
<title>__CFRunLoopServiceMachPort (7 samples, 0.15%)</title><rect x="47.1" y="837" width="1.7" height="15.0" fill="rgb(233,168,10)" rx="2" ry="2" />
<text  x="50.11" y="847.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWaitUntil(base::TimeTicks const&amp;) (24 samples, 0.50%)</title><rect x="1183.1" y="933" width="5.9" height="15.0" fill="rgb(215,186,19)" rx="2" ry="2" />
<text  x="1186.07" y="943.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict8x8_ssse3 (2 samples, 0.04%)</title><rect x="739.0" y="677" width="0.5" height="15.0" fill="rgb(214,14,14)" rx="2" ry="2" />
<text  x="742.03" y="687.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::ProcessIncomingMessage(mojo::internal::MultiplexRouter::MessageWrapper*, mojo::internal::MultiplexRouter::ClientCallBehavior, base::SequencedTaskRunner*) (5 samples, 0.10%)</title><rect x="1071.8" y="757" width="1.2" height="15.0" fill="rgb(227,81,42)" rx="2" ry="2" />
<text  x="1074.75" y="767.5" ></text>
</g>
<g >
<title>vp8_loop_filter_bh_y_sse2 (1 samples, 0.02%)</title><rect x="792.2" y="709" width="0.3" height="15.0" fill="rgb(239,112,49)" rx="2" ry="2" />
<text  x="795.21" y="719.5" ></text>
</g>
<g >
<title>clt_mdct_backward_c (4 samples, 0.08%)</title><rect x="1117.0" y="613" width="1.0" height="15.0" fill="rgb(214,99,2)" rx="2" ry="2" />
<text  x="1120.02" y="623.5" ></text>
</g>
<g >
<title>base::WaitableEvent::PeekPort(unsigned int, bool) (8 samples, 0.17%)</title><rect x="707.9" y="949" width="1.9" height="15.0" fill="rgb(206,27,24)" rx="2" ry="2" />
<text  x="710.86" y="959.5" ></text>
</g>
<g >
<title>_kernelrpc_mach_port_construct_trap (2 samples, 0.04%)</title><rect x="1036.1" y="485" width="0.5" height="15.0" fill="rgb(217,189,44)" rx="2" ry="2" />
<text  x="1039.13" y="495.5" ></text>
</g>
<g >
<title>cc::ListContainer&lt;viz::DrawQuad&gt;::~ListContainer() (3 samples, 0.06%)</title><rect x="1039.6" y="613" width="0.7" height="15.0" fill="rgb(250,20,44)" rx="2" ry="2" />
<text  x="1042.59" y="623.5" ></text>
</g>
<g >
<title>__CFRunLoopCollectSources0 (1 samples, 0.02%)</title><rect x="13.7" y="773" width="0.3" height="15.0" fill="rgb(209,97,35)" rx="2" ry="2" />
<text  x="16.71" y="783.5" ></text>
</g>
<g >
<title>base::debug::CollectStackTrace(void**, unsigned long) (1 samples, 0.02%)</title><rect x="1024.8" y="885" width="0.2" height="15.0" fill="rgb(218,191,1)" rx="2" ry="2" />
<text  x="1027.75" y="895.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunAndPopNextTask(base::internal::DecoratorWithTaskSource&lt;base::internal::TaskSource::RunIntent, base::internal::RegisteredTaskSource&gt;) (754 samples, 15.81%)</title><rect x="367.0" y="965" width="186.5" height="15.0" fill="rgb(209,158,0)" rx="2" ry="2" />
<text  x="369.97" y="975.5" >base::internal::TaskTrac..</text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="693.8" y="933" width="0.2" height="15.0" fill="rgb(228,17,0)" rx="2" ry="2" />
<text  x="696.76" y="943.5" ></text>
</g>
<g >
<title>vp8_estimate_entropy_savings (1 samples, 0.02%)</title><rect x="941.6" y="741" width="0.3" height="15.0" fill="rgb(243,71,52)" rx="2" ry="2" />
<text  x="944.63" y="751.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="1085.1" y="677" width="0.3" height="15.0" fill="rgb(247,119,29)" rx="2" ry="2" />
<text  x="1088.11" y="687.5" ></text>
</g>
<g >
<title>mojo::Connector::ActiveDispatchTracker::ActiveDispatchTracker(base::WeakPtr&lt;mojo::Connector&gt; const&amp;) (1 samples, 0.02%)</title><rect x="302.2" y="773" width="0.2" height="15.0" fill="rgb(218,73,8)" rx="2" ry="2" />
<text  x="305.16" y="783.5" ></text>
</g>
<g >
<title>tiny_size (1 samples, 0.02%)</title><rect x="253.9" y="517" width="0.3" height="15.0" fill="rgb(221,134,8)" rx="2" ry="2" />
<text  x="256.92" y="527.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (4 samples, 0.08%)</title><rect x="283.4" y="677" width="0.9" height="15.0" fill="rgb(249,58,52)" rx="2" ry="2" />
<text  x="286.35" y="687.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1067.1" y="709" width="0.2" height="15.0" fill="rgb(213,26,25)" rx="2" ry="2" />
<text  x="1070.05" y="719.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="178.0" y="837" width="0.5" height="15.0" fill="rgb(226,55,14)" rx="2" ry="2" />
<text  x="180.97" y="847.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="696.2" y="917" width="0.3" height="15.0" fill="rgb(233,125,21)" rx="2" ry="2" />
<text  x="699.23" y="927.5" ></text>
</g>
<g >
<title>mojo::internal::Buffer::Allocate(unsigned long) (1 samples, 0.02%)</title><rect x="1041.8" y="613" width="0.3" height="15.0" fill="rgb(234,57,8)" rx="2" ry="2" />
<text  x="1044.82" y="623.5" ></text>
</g>
<g >
<title>silk_NLSF_encode (4 samples, 0.08%)</title><rect x="544.8" y="661" width="1.0" height="15.0" fill="rgb(219,134,38)" rx="2" ry="2" />
<text  x="547.83" y="671.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelReceive::OnRtpPacket(webrtc::RtpPacketReceived const&amp;) (14 samples, 0.29%)</title><rect x="278.2" y="709" width="3.4" height="15.0" fill="rgb(230,156,5)" rx="2" ry="2" />
<text  x="281.16" y="719.5" ></text>
</g>
<g >
<title>std::__Cr::vector&lt;char, std::__Cr::allocator&lt;char&gt; &gt;::__append(unsigned long) (1 samples, 0.02%)</title><rect x="238.8" y="773" width="0.3" height="15.0" fill="rgb(248,186,43)" rx="2" ry="2" />
<text  x="241.83" y="783.5" ></text>
</g>
<g >
<title>silk_encode_frame_FLP (34 samples, 0.71%)</title><rect x="995.3" y="725" width="8.4" height="15.0" fill="rgb(245,123,3)" rx="2" ry="2" />
<text  x="998.31" y="735.5" ></text>
</g>
<g >
<title>DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="103.8" y="837" width="0.2" height="15.0" fill="rgb(215,80,30)" rx="2" ry="2" />
<text  x="106.76" y="847.5" ></text>
</g>
<g >
<title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="1182.8" y="885" width="0.3" height="15.0" fill="rgb(237,61,44)" rx="2" ry="2" />
<text  x="1185.83" y="895.5" ></text>
</g>
<g >
<title>void blink::RootScrollerController::ForAllNonThrottledLocalControllers&lt;blink::RootScrollerController::PerformRootScrollerSelection()::$_0&gt;(blink::RootScrollerController::PerformRootScrollerSelection()::$_0 const&amp;) (1 samples, 0.02%)</title><rect x="29.0" y="501" width="0.3" height="15.0" fill="rgb(241,148,17)" rx="2" ry="2" />
<text  x="32.05" y="511.5" ></text>
</g>
<g >
<title>webrtc::AudioTransportImpl::PullRenderData(int, int, unsigned long, unsigned long, void*, long long*, long long*) (119 samples, 2.49%)</title><rect x="1109.8" y="917" width="29.5" height="15.0" fill="rgb(220,118,46)" rx="2" ry="2" />
<text  x="1112.85" y="927.5" >we..</text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1055.2" y="629" width="0.2" height="15.0" fill="rgb(223,33,26)" rx="2" ry="2" />
<text  x="1058.18" y="639.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16x16_ssse3 (1 samples, 0.02%)</title><rect x="402.1" y="661" width="0.2" height="15.0" fill="rgb(245,137,42)" rx="2" ry="2" />
<text  x="405.10" y="671.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::WriteChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (1 samples, 0.02%)</title><rect x="1072.5" y="357" width="0.2" height="15.0" fill="rgb(219,118,33)" rx="2" ry="2" />
<text  x="1075.49" y="367.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTaskImpl() (78 samples, 1.64%)</title><rect x="339.0" y="853" width="19.3" height="15.0" fill="rgb(206,49,5)" rx="2" ry="2" />
<text  x="342.01" y="863.5" ></text>
</g>
<g >
<title>vp8_encode_bool (1 samples, 0.02%)</title><rect x="478.3" y="709" width="0.2" height="15.0" fill="rgb(240,53,47)" rx="2" ry="2" />
<text  x="481.29" y="719.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketHistory::RemovePacket(std::__Cr::__map_iterator&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;unsigned short, webrtc::RtpPacketHistory::StoredPacket&gt;, void*&gt;*, long&gt; &gt;) (1 samples, 0.02%)</title><rect x="274.7" y="645" width="0.2" height="15.0" fill="rgb(246,77,12)" rx="2" ry="2" />
<text  x="277.70" y="655.5" ></text>
</g>
<g >
<title>vp8_encode_bool (1 samples, 0.02%)</title><rect x="638.1" y="693" width="0.2" height="15.0" fill="rgb(249,187,48)" rx="2" ry="2" />
<text  x="641.10" y="703.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="243.5" y="565" width="0.3" height="15.0" fill="rgb(236,173,42)" rx="2" ry="2" />
<text  x="246.53" y="575.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="325.7" y="741" width="0.2" height="15.0" fill="rgb(229,32,6)" rx="2" ry="2" />
<text  x="328.66" y="751.5" ></text>
</g>
<g >
<title>media::SincResampler::Resample(int, float*) (19 samples, 0.40%)</title><rect x="1097.7" y="917" width="4.7" height="15.0" fill="rgb(220,25,18)" rx="2" ry="2" />
<text  x="1100.73" y="927.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (2 samples, 0.04%)</title><rect x="378.1" y="837" width="0.5" height="15.0" fill="rgb(216,21,17)" rx="2" ry="2" />
<text  x="381.10" y="847.5" ></text>
</g>
<g >
<title>rtc::IsThreadRefEqual(_opaque_pthread_t* const&amp;, _opaque_pthread_t* const&amp;) (1 samples, 0.02%)</title><rect x="291.0" y="741" width="0.3" height="15.0" fill="rgb(226,162,32)" rx="2" ry="2" />
<text  x="294.02" y="751.5" ></text>
</g>
<g >
<title>base::sequence_manager::LazyNow::Now() (1 samples, 0.02%)</title><rect x="342.2" y="805" width="0.3" height="15.0" fill="rgb(249,209,15)" rx="2" ry="2" />
<text  x="345.23" y="815.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_0_2x_sse2 (3 samples, 0.06%)</title><rect x="729.4" y="677" width="0.7" height="15.0" fill="rgb(234,184,51)" rx="2" ry="2" />
<text  x="732.38" y="687.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="107.5" y="709" width="0.2" height="15.0" fill="rgb(243,59,23)" rx="2" ry="2" />
<text  x="110.47" y="719.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_zero_loop (3 samples, 0.06%)</title><rect x="919.4" y="661" width="0.7" height="15.0" fill="rgb(211,65,37)" rx="2" ry="2" />
<text  x="922.37" y="671.5" ></text>
</g>
<g >
<title>non-virtual thunk to cricket::BaseChannel::SendPacket(rtc::CopyOnWriteBuffer*, rtc::PacketOptions const&amp;) (1 samples, 0.02%)</title><rect x="1153.4" y="869" width="0.2" height="15.0" fill="rgb(209,194,46)" rx="2" ry="2" />
<text  x="1156.39" y="879.5" ></text>
</g>
<g >
<title>mojo::core::Watch::NotifyState(mojo::core::HandleSignalsState const&amp;, bool) (1 samples, 0.02%)</title><rect x="141.6" y="597" width="0.3" height="15.0" fill="rgb(251,38,23)" rx="2" ry="2" />
<text  x="144.61" y="607.5" ></text>
</g>
<g >
<title>mojo::Connector::ReadAllAvailableMessages() (106 samples, 2.22%)</title><rect x="300.7" y="805" width="26.2" height="15.0" fill="rgb(252,53,17)" rx="2" ry="2" />
<text  x="303.67" y="815.5" >m..</text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="310.6" y="453" width="0.2" height="15.0" fill="rgb(233,204,45)" rx="2" ry="2" />
<text  x="313.57" y="463.5" ></text>
</g>
<g >
<title>content::(anonymous namespace)::IpcPacketSocket::SendTo(void const*, unsigned long, rtc::SocketAddress const&amp;, rtc::PacketOptions const&amp;) (61 samples, 1.28%)</title><rect x="240.3" y="709" width="15.1" height="15.0" fill="rgb(227,106,11)" rx="2" ry="2" />
<text  x="243.31" y="719.5" ></text>
</g>
<g >
<title>vp8_deblock (22 samples, 0.46%)</title><rect x="652.9" y="725" width="5.5" height="15.0" fill="rgb(216,106,6)" rx="2" ry="2" />
<text  x="655.94" y="735.5" ></text>
</g>
<g >
<title>cc::LayerTreeHost::DoUpdateLayers() (2 samples, 0.04%)</title><rect x="24.3" y="629" width="0.5" height="15.0" fill="rgb(223,96,17)" rx="2" ry="2" />
<text  x="27.35" y="639.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="284.1" y="549" width="0.2" height="15.0" fill="rgb(218,144,11)" rx="2" ry="2" />
<text  x="287.10" y="559.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (4 samples, 0.08%)</title><rect x="371.2" y="821" width="1.0" height="15.0" fill="rgb(226,181,0)" rx="2" ry="2" />
<text  x="374.17" y="831.5" ></text>
</g>
<g >
<title>base::internal::Sequence::Transaction::PushTask(base::internal::Task) (1 samples, 0.02%)</title><rect x="1157.1" y="773" width="0.2" height="15.0" fill="rgb(230,215,41)" rx="2" ry="2" />
<text  x="1160.10" y="783.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyWillProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (2 samples, 0.04%)</title><rect x="187.1" y="837" width="0.5" height="15.0" fill="rgb(249,187,10)" rx="2" ry="2" />
<text  x="190.12" y="847.5" ></text>
</g>
<g >
<title>__fcntl (9 samples, 0.19%)</title><rect x="1089.8" y="949" width="2.2" height="15.0" fill="rgb(246,92,40)" rx="2" ry="2" />
<text  x="1092.81" y="959.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (5 samples, 0.10%)</title><rect x="92.6" y="853" width="1.3" height="15.0" fill="rgb(247,127,38)" rx="2" ry="2" />
<text  x="95.62" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (6 samples, 0.13%)</title><rect x="342.0" y="837" width="1.5" height="15.0" fill="rgb(226,198,23)" rx="2" ry="2" />
<text  x="344.98" y="847.5" ></text>
</g>
<g >
<title>base::internal::CheckedThreadLocalOwnedPointer&lt;base::debug::StackTrace&gt;::Set(std::__Cr::unique_ptr&lt;base::debug::StackTrace, std::__Cr::default_delete&lt;base::debug::StackTrace&gt; &gt;) (7 samples, 0.15%)</title><rect x="576.0" y="901" width="1.7" height="15.0" fill="rgb(231,129,40)" rx="2" ry="2" />
<text  x="579.00" y="911.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="816.0" y="533" width="0.2" height="15.0" fill="rgb(243,168,17)" rx="2" ry="2" />
<text  x="818.96" y="543.5" ></text>
</g>
<g >
<title>IOSurfaceClientLock (1 samples, 0.02%)</title><rect x="62.4" y="901" width="0.3" height="15.0" fill="rgb(206,144,43)" rx="2" ry="2" />
<text  x="65.44" y="911.5" ></text>
</g>
<g >
<title>mojo::Message::CreateFromMessageHandle(mojo::ScopedHandleBase&lt;mojo::MessageHandle&gt;*) (1 samples, 0.02%)</title><rect x="1073.0" y="789" width="0.2" height="15.0" fill="rgb(222,8,11)" rx="2" ry="2" />
<text  x="1075.99" y="799.5" ></text>
</g>
<g >
<title>vpx_dc_predictor_16x16_sse2.loop (1 samples, 0.02%)</title><rect x="438.7" y="677" width="0.3" height="15.0" fill="rgb(254,74,3)" rx="2" ry="2" />
<text  x="441.71" y="687.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendUserMessage(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="165.8" y="677" width="0.3" height="15.0" fill="rgb(250,202,25)" rx="2" ry="2" />
<text  x="168.85" y="687.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.02%)</title><rect x="370.2" y="885" width="0.2" height="15.0" fill="rgb(211,177,52)" rx="2" ry="2" />
<text  x="373.18" y="895.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;content::RenderViewObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::Iter(base::ObserverList&lt;content::RenderViewObserver, false, true, base::internal::UncheckedObserverAdapter&gt; const*) (1 samples, 0.02%)</title><rect x="24.1" y="581" width="0.2" height="15.0" fill="rgb(209,229,10)" rx="2" ry="2" />
<text  x="27.10" y="591.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="962.2" y="805" width="0.2" height="15.0" fill="rgb(237,131,52)" rx="2" ry="2" />
<text  x="965.16" y="815.5" ></text>
</g>
<g >
<title>base::internal::PooledSequencedTaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (10 samples, 0.21%)</title><rect x="1084.1" y="789" width="2.5" height="15.0" fill="rgb(210,40,14)" rx="2" ry="2" />
<text  x="1087.12" y="799.5" ></text>
</g>
<g >
<title>_objc_rootAlloc (1 samples, 0.02%)</title><rect x="1019.6" y="949" width="0.2" height="15.0" fill="rgb(224,181,34)" rx="2" ry="2" />
<text  x="1022.56" y="959.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (21 samples, 0.44%)</title><rect x="1132.1" y="821" width="5.2" height="15.0" fill="rgb(218,136,44)" rx="2" ry="2" />
<text  x="1135.11" y="831.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="286.1" y="741" width="0.2" height="15.0" fill="rgb(219,69,7)" rx="2" ry="2" />
<text  x="289.08" y="751.5" ></text>
</g>
<g >
<title>vp8_post_proc_frame (21 samples, 0.44%)</title><rect x="963.2" y="741" width="5.1" height="15.0" fill="rgb(231,59,19)" rx="2" ry="2" />
<text  x="966.15" y="751.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Enter() const (2 samples, 0.04%)</title><rect x="318.5" y="565" width="0.5" height="15.0" fill="rgb(241,45,29)" rx="2" ry="2" />
<text  x="321.48" y="575.5" ></text>
</g>
<g >
<title>mach_msg_trap (19 samples, 0.40%)</title><rect x="1060.4" y="901" width="4.7" height="15.0" fill="rgb(237,167,16)" rx="2" ry="2" />
<text  x="1063.37" y="911.5" ></text>
</g>
<g >
<title>viz::mojom::CompositorFrameSinkProxy::DidNotProduceFrame(viz::BeginFrameAck const&amp;) (1 samples, 0.02%)</title><rect x="1072.5" y="565" width="0.2" height="15.0" fill="rgb(239,112,20)" rx="2" ry="2" />
<text  x="1075.49" y="575.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (1 samples, 0.02%)</title><rect x="283.8" y="565" width="0.3" height="15.0" fill="rgb(250,18,29)" rx="2" ry="2" />
<text  x="286.85" y="575.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::CreateOrExtendSerializedEventMessage(mojo::core::ports::UserMessageEvent*, unsigned long, unsigned long, mojo::core::Dispatcher::DispatcherInTransit const*, unsigned long, std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;*, void**, unsigned long*, void**) (2 samples, 0.04%)</title><rect x="251.7" y="565" width="0.5" height="15.0" fill="rgb(205,99,38)" rx="2" ry="2" />
<text  x="254.69" y="575.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::DecrementNumIncompleteTaskSources() (2 samples, 0.04%)</title><rect x="367.2" y="917" width="0.5" height="15.0" fill="rgb(240,134,2)" rx="2" ry="2" />
<text  x="370.22" y="927.5" ></text>
</g>
<g >
<title>rtc::DiagnosticLogMessage::~DiagnosticLogMessage() (1 samples, 0.02%)</title><rect x="53.5" y="917" width="0.3" height="15.0" fill="rgb(220,196,5)" rx="2" ry="2" />
<text  x="56.54" y="927.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.02%)</title><rect x="67.4" y="853" width="0.2" height="15.0" fill="rgb(232,177,41)" rx="2" ry="2" />
<text  x="70.39" y="863.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (1 samples, 0.02%)</title><rect x="23.9" y="565" width="0.2" height="15.0" fill="rgb(206,222,34)" rx="2" ry="2" />
<text  x="26.85" y="575.5" ></text>
</g>
<g >
<title>blink::LayoutView::ViewRect() const (1 samples, 0.02%)</title><rect x="28.6" y="405" width="0.2" height="15.0" fill="rgb(243,204,24)" rx="2" ry="2" />
<text  x="31.55" y="415.5" ></text>
</g>
<g >
<title>vpx_post_proc_down_and_across_mb_row_sse2.acrossnextcol (12 samples, 0.25%)</title><rect x="817.0" y="709" width="2.9" height="15.0" fill="rgb(225,224,37)" rx="2" ry="2" />
<text  x="819.95" y="719.5" ></text>
</g>
<g >
<title>small_free_list_remove_ptr_no_clear (1 samples, 0.02%)</title><rect x="376.1" y="773" width="0.3" height="15.0" fill="rgb(252,43,39)" rx="2" ry="2" />
<text  x="379.12" y="783.5" ></text>
</g>
<g >
<title>IPC::Message::Message(int, unsigned int, IPC::Message::PriorityValue) (1 samples, 0.02%)</title><rect x="1033.9" y="501" width="0.3" height="15.0" fill="rgb(206,99,35)" rx="2" ry="2" />
<text  x="1036.90" y="511.5" ></text>
</g>
<g >
<title>mojo::internal::MultiplexRouter::Accept(mojo::Message*) (72 samples, 1.51%)</title><rect x="302.6" y="757" width="17.9" height="15.0" fill="rgb(243,31,10)" rx="2" ry="2" />
<text  x="305.65" y="767.5" ></text>
</g>
<g >
<title>webrtc::RealTimeClock::TimeInMilliseconds() (1 samples, 0.02%)</title><rect x="841.7" y="821" width="0.2" height="15.0" fill="rgb(219,128,25)" rx="2" ry="2" />
<text  x="844.69" y="831.5" ></text>
</g>
<g >
<title>IPC::Message::~Message() (1 samples, 0.02%)</title><rect x="313.5" y="645" width="0.3" height="15.0" fill="rgb(242,137,11)" rx="2" ry="2" />
<text  x="316.53" y="655.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="127.0" y="677" width="0.3" height="15.0" fill="rgb(252,73,25)" rx="2" ry="2" />
<text  x="130.01" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::LazyNow::Now() (2 samples, 0.04%)</title><rect x="177.5" y="837" width="0.5" height="15.0" fill="rgb(254,38,18)" rx="2" ry="2" />
<text  x="180.48" y="847.5" ></text>
</g>
<g >
<title>base::Location::CreateFromHere(char const*, char const*, int) (1 samples, 0.02%)</title><rect x="1083.6" y="805" width="0.3" height="15.0" fill="rgb(240,81,27)" rx="2" ry="2" />
<text  x="1086.63" y="815.5" ></text>
</g>
<g >
<title>clt_mdct_forward_c (2 samples, 0.04%)</title><rect x="535.2" y="709" width="0.5" height="15.0" fill="rgb(217,211,50)" rx="2" ry="2" />
<text  x="538.19" y="719.5" ></text>
</g>
<g >
<title>base::internal::SequenceLocalStorageMap::Set(int, base::internal::SequenceLocalStorageMap::ValueDestructorPair) (1 samples, 0.02%)</title><rect x="135.7" y="565" width="0.2" height="15.0" fill="rgb(226,90,51)" rx="2" ry="2" />
<text  x="138.67" y="575.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.02%)</title><rect x="188.9" y="805" width="0.2" height="15.0" fill="rgb(227,92,4)" rx="2" ry="2" />
<text  x="191.86" y="815.5" ></text>
</g>
<g >
<title>base::HistogramBase::CheckName(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;) const (1 samples, 0.02%)</title><rect x="1069.5" y="725" width="0.3" height="15.0" fill="rgb(249,195,48)" rx="2" ry="2" />
<text  x="1072.53" y="735.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (1 samples, 0.02%)</title><rect x="1006.2" y="805" width="0.2" height="15.0" fill="rgb(233,160,49)" rx="2" ry="2" />
<text  x="1009.20" y="815.5" ></text>
</g>
<g >
<title>webrtc::RtpPacket::AllocateExtension(webrtc::RTPExtensionType, unsigned long) (1 samples, 0.02%)</title><rect x="1161.3" y="901" width="0.3" height="15.0" fill="rgb(221,146,5)" rx="2" ry="2" />
<text  x="1164.30" y="911.5" ></text>
</g>
<g >
<title>silk_Encode (35 samples, 0.73%)</title><rect x="995.3" y="741" width="8.7" height="15.0" fill="rgb(224,177,46)" rx="2" ry="2" />
<text  x="998.31" y="751.5" ></text>
</g>
<g >
<title>base::CancelableSyncSocket::Send(void const*, unsigned long) (7 samples, 0.15%)</title><rect x="1103.2" y="981" width="1.7" height="15.0" fill="rgb(248,188,12)" rx="2" ry="2" />
<text  x="1106.17" y="991.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (19 samples, 0.40%)</title><rect x="1132.4" y="805" width="4.7" height="15.0" fill="rgb(206,225,27)" rx="2" ry="2" />
<text  x="1135.36" y="815.5" ></text>
</g>
<g >
<title>_pthread_body (181 samples, 3.79%)</title><rect x="1020.5" y="1029" width="44.8" height="15.0" fill="rgb(227,174,31)" rx="2" ry="2" />
<text  x="1023.55" y="1039.5" >_pth..</text>
</g>
<g >
<title>base::sequence_manager::internal::WorkDeduplicator::OnWorkStarted() (2 samples, 0.04%)</title><rect x="86.4" y="885" width="0.5" height="15.0" fill="rgb(252,47,2)" rx="2" ry="2" />
<text  x="89.44" y="895.5" ></text>
</g>
<g >
<title>webrtc::GoogCcNetworkController::OnReceivedPacket(webrtc::ReceivedPacket) (1 samples, 0.02%)</title><rect x="580.0" y="837" width="0.2" height="15.0" fill="rgb(217,109,26)" rx="2" ry="2" />
<text  x="582.96" y="847.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.02%)</title><rect x="191.8" y="853" width="0.3" height="15.0" fill="rgb(231,118,36)" rx="2" ry="2" />
<text  x="194.82" y="863.5" ></text>
</g>
<g >
<title>webrtc::webrtc_repeating_task_impl::RepeatingTaskBase::Run() (2 samples, 0.04%)</title><rect x="692.3" y="853" width="0.5" height="15.0" fill="rgb(244,53,15)" rx="2" ry="2" />
<text  x="695.27" y="863.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="206.7" y="661" width="0.2" height="15.0" fill="rgb(248,136,14)" rx="2" ry="2" />
<text  x="209.67" y="671.5" ></text>
</g>
<g >
<title>srtp_unprotect_rtcp_mki (2 samples, 0.04%)</title><rect x="306.4" y="517" width="0.5" height="15.0" fill="rgb(242,25,4)" rx="2" ry="2" />
<text  x="309.36" y="527.5" ></text>
</g>
<g >
<title>cost_mvcomponent (1 samples, 0.02%)</title><rect x="478.5" y="693" width="0.3" height="15.0" fill="rgb(248,69,13)" rx="2" ry="2" />
<text  x="481.54" y="703.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (2 samples, 0.04%)</title><rect x="485.0" y="693" width="0.5" height="15.0" fill="rgb(214,215,17)" rx="2" ry="2" />
<text  x="487.97" y="703.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (16 samples, 0.34%)</title><rect x="224.7" y="821" width="4.0" height="15.0" fill="rgb(224,53,28)" rx="2" ry="2" />
<text  x="227.73" y="831.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="310.6" y="469" width="0.2" height="15.0" fill="rgb(231,103,16)" rx="2" ry="2" />
<text  x="313.57" y="479.5" ></text>
</g>
<g >
<title>media::AudioBus::BuildChannelData(int, int, float*) (1 samples, 0.02%)</title><rect x="1080.9" y="901" width="0.3" height="15.0" fill="rgb(220,188,34)" rx="2" ry="2" />
<text  x="1083.91" y="911.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::ReloadEmptyImmediateWorkQueue() (2 samples, 0.04%)</title><rect x="83.0" y="805" width="0.5" height="15.0" fill="rgb(226,100,2)" rx="2" ry="2" />
<text  x="85.98" y="815.5" ></text>
</g>
<g >
<title>mojo::core::PeekSizeMessageFilter::Match(mojo::core::ports::UserMessageEvent const&amp;) (2 samples, 0.04%)</title><rect x="112.7" y="709" width="0.5" height="15.0" fill="rgb(218,212,52)" rx="2" ry="2" />
<text  x="115.66" y="719.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyDidProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (1 samples, 0.02%)</title><rect x="209.6" y="869" width="0.3" height="15.0" fill="rgb(220,220,0)" rx="2" ry="2" />
<text  x="212.64" y="879.5" ></text>
</g>
<g >
<title>DYLD-STUB$$EVP_EncryptInit_ex (1 samples, 0.02%)</title><rect x="237.1" y="725" width="0.2" height="15.0" fill="rgb(215,183,24)" rx="2" ry="2" />
<text  x="240.09" y="735.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::PushTaskSourceAndWakeUpWorkers(base::internal::BasicTransactionWithTaskSource&lt;base::internal::RegisteredTaskSource&gt;) (2 samples, 0.04%)</title><rect x="282.6" y="613" width="0.5" height="15.0" fill="rgb(236,19,50)" rx="2" ry="2" />
<text  x="285.61" y="623.5" ></text>
</g>
<g >
<title>webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;) (13 samples, 0.27%)</title><rect x="256.6" y="741" width="3.3" height="15.0" fill="rgb(251,91,31)" rx="2" ry="2" />
<text  x="259.64" y="751.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (2 samples, 0.04%)</title><rect x="1073.7" y="901" width="0.5" height="15.0" fill="rgb(250,192,12)" rx="2" ry="2" />
<text  x="1076.73" y="911.5" ></text>
</g>
<g >
<title>MojoReadMessage (21 samples, 0.44%)</title><rect x="320.7" y="773" width="5.2" height="15.0" fill="rgb(243,8,9)" rx="2" ry="2" />
<text  x="323.71" y="783.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (media::VideoResourceUpdater::*)(scoped_refptr&lt;media::VideoFrame&gt;, gpu::SyncToken const&amp;, bool), void&gt;::Invoke&lt;void (media::VideoResourceUpdater::*)(scoped_refptr&lt;media::VideoFrame&gt;, gpu::SyncToken const&amp;, bool), base::WeakPtr&lt;media::VideoResourceUpdater&gt;, scoped_refptr&lt;media::VideoFrame&gt;, gpu::SyncToken const&amp;, bool&gt;(void (media::VideoResourceUpdater::*)(scoped_refptr&lt;media::VideoFrame&gt;, gpu::SyncToken const&amp;, bool), base::WeakPtr&lt;media::VideoResourceUpdater&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;, gpu::SyncToken const&amp;&amp;&amp;, bool&amp;&amp;) (6 samples, 0.13%)</title><rect x="1052.2" y="581" width="1.5" height="15.0" fill="rgb(230,115,42)" rx="2" ry="2" />
<text  x="1055.21" y="591.5" ></text>
</g>
<g >
<title>CFSetApplyFunction (1 samples, 0.02%)</title><rect x="13.7" y="821" width="0.3" height="15.0" fill="rgb(238,184,40)" rx="2" ry="2" />
<text  x="16.71" y="831.5" ></text>
</g>
<g >
<title>rtc::RefCountedObject&lt;rtc::BufferT&lt;unsigned char, false&gt; &gt;::Release() const (1 samples, 0.02%)</title><rect x="550.3" y="725" width="0.2" height="15.0" fill="rgb(241,121,31)" rx="2" ry="2" />
<text  x="553.28" y="735.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.02%)</title><rect x="91.6" y="853" width="0.3" height="15.0" fill="rgb(235,137,29)" rx="2" ry="2" />
<text  x="94.64" y="863.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="212.1" y="789" width="0.3" height="15.0" fill="rgb(251,187,13)" rx="2" ry="2" />
<text  x="215.11" y="799.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="341.5" y="741" width="0.2" height="15.0" fill="rgb(216,4,35)" rx="2" ry="2" />
<text  x="344.49" y="751.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::MaybeReclaimMemory() (1 samples, 0.02%)</title><rect x="213.3" y="869" width="0.3" height="15.0" fill="rgb(212,117,7)" rx="2" ry="2" />
<text  x="216.35" y="879.5" ></text>
</g>
<g >
<title>silk_process_NLSFs (4 samples, 0.08%)</title><rect x="544.8" y="677" width="1.0" height="15.0" fill="rgb(222,197,6)" rx="2" ry="2" />
<text  x="547.83" y="687.5" ></text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (5 samples, 0.10%)</title><rect x="16.9" y="469" width="1.3" height="15.0" fill="rgb(227,58,15)" rx="2" ry="2" />
<text  x="19.93" y="479.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.02%)</title><rect x="250.0" y="453" width="0.2" height="15.0" fill="rgb(212,227,9)" rx="2" ry="2" />
<text  x="252.96" y="463.5" ></text>
</g>
<g >
<title>IPC::(anonymous namespace)::ChannelAssociatedGroupController::Accept(mojo::Message*) (9 samples, 0.19%)</title><rect x="133.9" y="661" width="2.3" height="15.0" fill="rgb(229,86,1)" rx="2" ry="2" />
<text  x="136.94" y="671.5" ></text>
</g>
<g >
<title>silk_process_NLSFs_FLP (4 samples, 0.08%)</title><rect x="544.8" y="693" width="1.0" height="15.0" fill="rgb(224,20,46)" rx="2" ry="2" />
<text  x="547.83" y="703.5" ></text>
</g>
<g >
<title>szone_malloc (1 samples, 0.02%)</title><rect x="853.8" y="709" width="0.3" height="15.0" fill="rgb(247,119,47)" rx="2" ry="2" />
<text  x="856.81" y="719.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_full_2x_sse2 (2 samples, 0.04%)</title><rect x="677.9" y="693" width="0.5" height="15.0" fill="rgb(239,198,2)" rx="2" ry="2" />
<text  x="680.92" y="703.5" ></text>
</g>
<g >
<title>base::ScopedClosureRunner::~ScopedClosureRunner() (1 samples, 0.02%)</title><rect x="61.2" y="917" width="0.3" height="15.0" fill="rgb(218,39,48)" rx="2" ry="2" />
<text  x="64.21" y="927.5" ></text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::RtpTransportControllerSend::OnTransportFeedback(webrtc::rtcp::TransportFeedback const&amp;)::$_12&gt;::~ClosureTask() (1 samples, 0.02%)</title><rect x="581.2" y="853" width="0.2" height="15.0" fill="rgb(222,26,2)" rx="2" ry="2" />
<text  x="584.20" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() (1 samples, 0.02%)</title><rect x="179.2" y="853" width="0.3" height="15.0" fill="rgb(221,25,27)" rx="2" ry="2" />
<text  x="182.21" y="863.5" ></text>
</g>
<g >
<title>blink::VideoFrameSubmitter::SubmitFrame(viz::BeginFrameAck const&amp;, scoped_refptr&lt;media::VideoFrame&gt;) (43 samples, 0.90%)</title><rect x="1033.2" y="661" width="10.6" height="15.0" fill="rgb(219,217,15)" rx="2" ry="2" />
<text  x="1036.16" y="671.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.02%)</title><rect x="61.2" y="773" width="0.3" height="15.0" fill="rgb(217,102,34)" rx="2" ry="2" />
<text  x="64.21" y="783.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::WorkQueueSetBecameEmpty(unsigned long) (1 samples, 0.02%)</title><rect x="86.2" y="789" width="0.2" height="15.0" fill="rgb(238,24,0)" rx="2" ry="2" />
<text  x="89.19" y="799.5" ></text>
</g>
<g >
<title>webrtc::RtcEventAudioPlayout::RtcEventAudioPlayout(unsigned int) (1 samples, 0.02%)</title><rect x="1131.9" y="853" width="0.2" height="15.0" fill="rgb(209,44,1)" rx="2" ry="2" />
<text  x="1134.87" y="863.5" ></text>
</g>
<g >
<title>vpx_tm_predictor_16x16_sse2 (1 samples, 0.02%)</title><rect x="621.8" y="677" width="0.2" height="15.0" fill="rgb(216,109,50)" rx="2" ry="2" />
<text  x="624.77" y="687.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_other_y_other_loop (4 samples, 0.08%)</title><rect x="611.6" y="661" width="1.0" height="15.0" fill="rgb(240,2,30)" rx="2" ry="2" />
<text  x="614.63" y="671.5" ></text>
</g>
<g >
<title>viz::mojom::internal::CompositorFrameSinkClient_OnBeginFrame_Params_Data::Validate(void const*, mojo::internal::ValidationContext*) (1 samples, 0.02%)</title><rect x="1066.8" y="741" width="0.3" height="15.0" fill="rgb(220,14,21)" rx="2" ry="2" />
<text  x="1069.81" y="751.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_h6_ssse3.filter_block1d8_h6_rowloop_ssse3 (2 samples, 0.04%)</title><rect x="589.4" y="645" width="0.5" height="15.0" fill="rgb(229,35,37)" rx="2" ry="2" />
<text  x="592.36" y="655.5" ></text>
</g>
<g >
<title>blink::scheduler::TaskQueueThrottler::IsThrottled(base::sequence_manager::TaskQueue*) const (1 samples, 0.02%)</title><rect x="37.2" y="613" width="0.3" height="15.0" fill="rgb(216,139,10)" rx="2" ry="2" />
<text  x="40.21" y="623.5" ></text>
</g>
<g >
<title>mojo::core::Watch::InvokeCallback(unsigned int, mojo::core::HandleSignalsState const&amp;, unsigned int) (93 samples, 1.95%)</title><rect x="120.3" y="821" width="23.0" height="15.0" fill="rgb(224,23,34)" rx="2" ry="2" />
<text  x="123.33" y="831.5" >m..</text>
</g>
<g >
<title>silk_find_LPC_FLP (1 samples, 0.02%)</title><rect x="689.1" y="693" width="0.2" height="15.0" fill="rgb(227,76,5)" rx="2" ry="2" />
<text  x="692.06" y="703.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="206.2" y="757" width="0.2" height="15.0" fill="rgb(221,192,46)" rx="2" ry="2" />
<text  x="209.17" y="767.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (2 samples, 0.04%)</title><rect x="696.7" y="901" width="0.5" height="15.0" fill="rgb(228,8,9)" rx="2" ry="2" />
<text  x="699.73" y="911.5" ></text>
</g>
<g >
<title>blink::EventQueue::EnqueueEvent(base::Location const&amp;, blink::Event&amp;) (1 samples, 0.02%)</title><rect x="18.4" y="613" width="0.3" height="15.0" fill="rgb(221,158,19)" rx="2" ry="2" />
<text  x="21.41" y="623.5" ></text>
</g>
<g >
<title>_pthread_start (95 samples, 1.99%)</title><rect x="1140.0" y="1045" width="23.5" height="15.0" fill="rgb(245,118,31)" rx="2" ry="2" />
<text  x="1143.03" y="1055.5" >_..</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="340.7" y="789" width="0.5" height="15.0" fill="rgb(243,93,38)" rx="2" ry="2" />
<text  x="343.75" y="799.5" ></text>
</g>
<g >
<title>MergeUVRow_AVX2 (5 samples, 0.10%)</title><rect x="56.0" y="885" width="1.2" height="15.0" fill="rgb(217,106,13)" rx="2" ry="2" />
<text  x="59.01" y="895.5" ></text>
</g>
<g >
<title>webrtc::SrtpTransport::OnRtpPacketReceived(rtc::CopyOnWriteBuffer, long long) (8 samples, 0.17%)</title><rect x="225.5" y="597" width="1.9" height="15.0" fill="rgb(211,112,8)" rx="2" ry="2" />
<text  x="228.47" y="607.5" ></text>
</g>
<g >
<title>cricket::DtlsTransport::OnSentPacket(rtc::PacketTransportInternal*, rtc::SentPacket const&amp;) (17 samples, 0.36%)</title><rect x="315.0" y="597" width="4.2" height="15.0" fill="rgb(215,191,30)" rx="2" ry="2" />
<text  x="318.02" y="607.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (2 samples, 0.04%)</title><rect x="229.9" y="805" width="0.5" height="15.0" fill="rgb(226,102,24)" rx="2" ry="2" />
<text  x="232.92" y="815.5" ></text>
</g>
<g >
<title>base::SequencedTaskRunnerHandle::SequencedTaskRunnerHandle(scoped_refptr&lt;base::SequencedTaskRunner&gt;) (3 samples, 0.06%)</title><rect x="552.8" y="901" width="0.7" height="15.0" fill="rgb(213,193,27)" rx="2" ry="2" />
<text  x="555.75" y="911.5" ></text>
</g>
<g >
<title>webrtc::video_coding::FrameBuffer::PropagateContinuity(std::__Cr::__map_iterator&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;webrtc::video_coding::VideoLayerFrameId, webrtc::video_coding::FrameBuffer::FrameInfo&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;webrtc::video_coding::VideoLayerFrameId, webrtc::video_coding::FrameBuffer::FrameInfo&gt;, void*&gt;*, long&gt; &gt;) (1 samples, 0.02%)</title><rect x="267.8" y="517" width="0.2" height="15.0" fill="rgb(222,108,19)" rx="2" ry="2" />
<text  x="270.77" y="527.5" ></text>
</g>
<g >
<title>base::Value::MergeDictionary(base::Value const*) (2 samples, 0.04%)</title><rect x="138.1" y="533" width="0.5" height="15.0" fill="rgb(232,71,34)" rx="2" ry="2" />
<text  x="141.14" y="543.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::LazilyDeallocatedDeque&lt;base::sequence_manager::Task, &amp;(base::subtle::TimeTicksNowIgnoringOverride())&gt;::pop_front() (1 samples, 0.02%)</title><rect x="355.3" y="821" width="0.3" height="15.0" fill="rgb(235,23,53)" rx="2" ry="2" />
<text  x="358.34" y="831.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="338.0" y="853" width="0.3" height="15.0" fill="rgb(244,99,6)" rx="2" ry="2" />
<text  x="341.03" y="863.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_wake (1 samples, 0.02%)</title><rect x="1022.5" y="901" width="0.3" height="15.0" fill="rgb(228,16,39)" rx="2" ry="2" />
<text  x="1025.52" y="911.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkDeduplicator::OnWorkStarted() (1 samples, 0.02%)</title><rect x="213.1" y="901" width="0.2" height="15.0" fill="rgb(253,89,17)" rx="2" ry="2" />
<text  x="216.10" y="911.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (4 samples, 0.08%)</title><rect x="283.4" y="741" width="0.9" height="15.0" fill="rgb(216,76,9)" rx="2" ry="2" />
<text  x="286.35" y="751.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.02%)</title><rect x="27.6" y="469" width="0.2" height="15.0" fill="rgb(247,186,21)" rx="2" ry="2" />
<text  x="30.56" y="479.5" ></text>
</g>
<g >
<title>media::MovingAverage::AddSample(base::TimeDelta) (1 samples, 0.02%)</title><rect x="1045.0" y="597" width="0.3" height="15.0" fill="rgb(250,219,26)" rx="2" ry="2" />
<text  x="1048.04" y="607.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessageInternal(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (6 samples, 0.13%)</title><rect x="169.8" y="645" width="1.5" height="15.0" fill="rgb(245,189,49)" rx="2" ry="2" />
<text  x="172.81" y="655.5" ></text>
</g>
<g >
<title>free_tiny (1 samples, 0.02%)</title><rect x="207.4" y="789" width="0.3" height="15.0" fill="rgb(225,223,23)" rx="2" ry="2" />
<text  x="210.41" y="799.5" ></text>
</g>
<g >
<title>CFRunLoopRunSpecific (167 samples, 3.50%)</title><rect x="10.5" y="869" width="41.3" height="15.0" fill="rgb(252,21,2)" rx="2" ry="2" />
<text  x="13.49" y="879.5" >CFR..</text>
</g>
<g >
<title>base::internal::Sequence::BeginTransaction() (2 samples, 0.04%)</title><rect x="1133.6" y="741" width="0.5" height="15.0" fill="rgb(236,173,0)" rx="2" ry="2" />
<text  x="1136.60" y="751.5" ></text>
</g>
<g >
<title>mojo::FilterChain::Accept(mojo::Message*) (19 samples, 0.40%)</title><rect x="136.4" y="613" width="4.7" height="15.0" fill="rgb(250,227,22)" rx="2" ry="2" />
<text  x="139.41" y="623.5" ></text>
</g>
<g >
<title>webrtc::RtpVideoSender::OnPacketFeedbackVector(std::__Cr::vector&lt;webrtc::PacketFeedback, std::__Cr::allocator&lt;webrtc::PacketFeedback&gt; &gt; const&amp;) (2 samples, 0.04%)</title><rect x="274.4" y="677" width="0.5" height="15.0" fill="rgb(212,71,9)" rx="2" ry="2" />
<text  x="277.45" y="687.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::~LockImpl() (1 samples, 0.02%)</title><rect x="176.7" y="629" width="0.3" height="15.0" fill="rgb(253,137,15)" rx="2" ry="2" />
<text  x="179.73" y="639.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="260.8" y="629" width="0.3" height="15.0" fill="rgb(221,53,48)" rx="2" ry="2" />
<text  x="263.84" y="639.5" ></text>
</g>
<g >
<title>vp8_pack_bitstream (66 samples, 1.38%)</title><rect x="796.2" y="741" width="16.3" height="15.0" fill="rgb(240,46,15)" rx="2" ry="2" />
<text  x="799.17" y="751.5" ></text>
</g>
<g >
<title>vpx_variance16x16_avx2 (6 samples, 0.13%)</title><rect x="905.5" y="661" width="1.5" height="15.0" fill="rgb(219,194,27)" rx="2" ry="2" />
<text  x="908.51" y="671.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.02%)</title><rect x="46.6" y="677" width="0.3" height="15.0" fill="rgb(208,51,45)" rx="2" ry="2" />
<text  x="49.61" y="687.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (2 samples, 0.04%)</title><rect x="1007.7" y="933" width="0.5" height="15.0" fill="rgb(216,153,47)" rx="2" ry="2" />
<text  x="1010.68" y="943.5" ></text>
</g>
<g >
<title>base::SequenceToken::IsValid() const (1 samples, 0.02%)</title><rect x="302.2" y="725" width="0.2" height="15.0" fill="rgb(221,141,25)" rx="2" ry="2" />
<text  x="305.16" y="735.5" ></text>
</g>
<g >
<title>cricket::DtlsTransport::OnSentPacket(rtc::PacketTransportInternal*, rtc::SentPacket const&amp;) (1 samples, 0.02%)</title><rect x="314.5" y="597" width="0.3" height="15.0" fill="rgb(248,129,27)" rx="2" ry="2" />
<text  x="317.52" y="607.5" ></text>
</g>
<g >
<title>webrtc::AudioMixerImpl::GetAudioFromSources() (107 samples, 2.24%)</title><rect x="1111.3" y="885" width="26.5" height="15.0" fill="rgb(230,150,11)" rx="2" ry="2" />
<text  x="1114.33" y="895.5" >w..</text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="1035.4" y="405" width="0.2" height="15.0" fill="rgb(227,217,3)" rx="2" ry="2" />
<text  x="1038.39" y="415.5" ></text>
</g>
<g >
<title>vp8_find_near_mvs_bias (6 samples, 0.13%)</title><rect x="432.8" y="677" width="1.5" height="15.0" fill="rgb(246,43,45)" rx="2" ry="2" />
<text  x="435.77" y="687.5" ></text>
</g>
<g >
<title>base::internal::BindState&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;::BindState&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), media::GpuMemoryBufferVideoFramePool::PoolImpl*, scoped_refptr&lt;media::VideoFrame&gt;&amp;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&amp;&gt;(std::__Cr::integral_constant&lt;bool, false&gt;, void (*)(), void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*&amp;&amp;)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), media::GpuMemoryBufferVideoFramePool::PoolImpl*&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;&amp;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&amp;&amp;&amp;) (1 samples, 0.02%)</title><rect x="68.9" y="917" width="0.2" height="15.0" fill="rgb(250,200,23)" rx="2" ry="2" />
<text  x="71.88" y="927.5" ></text>
</g>
<g >
<title>mojo::internal::ValidateStructHeaderAndClaimMemory(void const*, mojo::internal::ValidationContext*) (1 samples, 0.02%)</title><rect x="319.2" y="645" width="0.3" height="15.0" fill="rgb(208,57,24)" rx="2" ry="2" />
<text  x="322.22" y="655.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (2 samples, 0.04%)</title><rect x="1053.0" y="421" width="0.4" height="15.0" fill="rgb(237,104,11)" rx="2" ry="2" />
<text  x="1055.95" y="431.5" ></text>
</g>
<g >
<title>srtp_aes_icm_openssl_encrypt (1 samples, 0.02%)</title><rect x="307.4" y="501" width="0.2" height="15.0" fill="rgb(227,12,14)" rx="2" ry="2" />
<text  x="310.35" y="511.5" ></text>
</g>
<g >
<title>vpx_codec_control_ (1 samples, 0.02%)</title><rect x="382.1" y="789" width="0.2" height="15.0" fill="rgb(245,118,41)" rx="2" ry="2" />
<text  x="385.06" y="799.5" ></text>
</g>
<g >
<title>vp8_encode_inter16x16 (34 samples, 0.71%)</title><rect x="388.5" y="693" width="8.4" height="15.0" fill="rgb(250,85,38)" rx="2" ry="2" />
<text  x="391.49" y="703.5" ></text>
</g>
<g >
<title>write_component_probs (1 samples, 0.02%)</title><rect x="812.3" y="709" width="0.2" height="15.0" fill="rgb(225,90,30)" rx="2" ry="2" />
<text  x="815.25" y="719.5" ></text>
</g>
<g >
<title>mojo::core::ports::UserMessageEvent::Deserialize(mojo::core::ports::PortName const&amp;, void const*, unsigned long) (4 samples, 0.08%)</title><rect x="106.7" y="789" width="1.0" height="15.0" fill="rgb(215,76,4)" rx="2" ry="2" />
<text  x="109.73" y="799.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="859.7" y="933" width="0.3" height="15.0" fill="rgb(242,111,41)" rx="2" ry="2" />
<text  x="862.75" y="943.5" ></text>
</g>
<g >
<title>vpx_post_proc_down_and_across_mb_row_sse2.nextcol (9 samples, 0.19%)</title><rect x="966.1" y="709" width="2.2" height="15.0" fill="rgb(221,201,10)" rx="2" ry="2" />
<text  x="969.12" y="719.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunSkipOnShutdown(base::internal::Task*) (703 samples, 14.74%)</title><rect x="378.8" y="917" width="174.0" height="15.0" fill="rgb(213,208,17)" rx="2" ry="2" />
<text  x="381.84" y="927.5" >base::internal::TaskTr..</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="353.9" y="741" width="0.2" height="15.0" fill="rgb(252,35,39)" rx="2" ry="2" />
<text  x="356.86" y="751.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::SendPeerEvent(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::Event, std::__Cr::default_delete&lt;mojo::core::ports::Event&gt; &gt;) (1 samples, 0.02%)</title><rect x="165.8" y="613" width="0.3" height="15.0" fill="rgb(244,28,2)" rx="2" ry="2" />
<text  x="168.85" y="623.5" ></text>
</g>
<g >
<title>default_zone_memalign (1 samples, 0.02%)</title><rect x="105.2" y="757" width="0.3" height="15.0" fill="rgb(205,81,1)" rx="2" ry="2" />
<text  x="108.24" y="767.5" ></text>
</g>
<g >
<title>vp8_filter_block1d8_v6_ssse3 (1 samples, 0.02%)</title><rect x="898.8" y="661" width="0.3" height="15.0" fill="rgb(232,154,37)" rx="2" ry="2" />
<text  x="901.83" y="671.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::AssertAcquired() const (1 samples, 0.02%)</title><rect x="711.1" y="933" width="0.2" height="15.0" fill="rgb(239,103,30)" rx="2" ry="2" />
<text  x="714.07" y="943.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::~Iter() (1 samples, 0.02%)</title><rect x="85.2" y="805" width="0.3" height="15.0" fill="rgb(209,8,26)" rx="2" ry="2" />
<text  x="88.20" y="815.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.02%)</title><rect x="260.3" y="629" width="0.3" height="15.0" fill="rgb(217,71,40)" rx="2" ry="2" />
<text  x="263.35" y="639.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::WorkerThreadDelegateImpl::CanGetWorkLockRequired(base::internal::WorkerThread*) (6 samples, 0.13%)</title><rect x="557.9" y="949" width="1.5" height="15.0" fill="rgb(237,109,44)" rx="2" ry="2" />
<text  x="560.95" y="959.5" ></text>
</g>
<g >
<title>mojo::internal::SerializationContext::TakeHandlesFromMessage(mojo::Message*) (1 samples, 0.02%)</title><rect x="313.8" y="661" width="0.2" height="15.0" fill="rgb(242,118,40)" rx="2" ry="2" />
<text  x="316.78" y="671.5" ></text>
</g>
<g >
<title>small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="267.8" y="373" width="0.2" height="15.0" fill="rgb(216,3,14)" rx="2" ry="2" />
<text  x="270.77" y="383.5" ></text>
</g>
<g >
<title>webrtc::RtpPacketReceived::RtpPacketReceived() (1 samples, 0.02%)</title><rect x="264.8" y="661" width="0.2" height="15.0" fill="rgb(215,73,34)" rx="2" ry="2" />
<text  x="267.80" y="671.5" ></text>
</g>
<g >
<title>rtc::CopyOnWriteBuffer::~CopyOnWriteBuffer() (1 samples, 0.02%)</title><rect x="275.9" y="757" width="0.3" height="15.0" fill="rgb(216,148,13)" rx="2" ry="2" />
<text  x="278.93" y="767.5" ></text>
</g>
<g >
<title>v8_inspector::(anonymous namespace)::ConsoleHelper::reportCall(v8_inspector::ConsoleAPIType, std::__Cr::vector&lt;v8::Local&lt;v8::Value&gt;, std::__Cr::allocator&lt;v8::Local&lt;v8::Value&gt; &gt; &gt; const&amp;) (2 samples, 0.04%)</title><rect x="17.7" y="357" width="0.5" height="15.0" fill="rgb(243,23,28)" rx="2" ry="2" />
<text  x="20.67" y="367.5" ></text>
</g>
<g >
<title>std::__Cr::back_insert_iterator&lt;std::__Cr::vector&lt;int, std::__Cr::allocator&lt;int&gt; &gt; &gt;::operator=(int&amp;&amp;) (1 samples, 0.02%)</title><rect x="1110.8" y="869" width="0.3" height="15.0" fill="rgb(249,136,23)" rx="2" ry="2" />
<text  x="1113.84" y="879.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="212.4" y="805" width="0.2" height="15.0" fill="rgb(231,155,13)" rx="2" ry="2" />
<text  x="215.36" y="815.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (3 samples, 0.06%)</title><rect x="31.0" y="645" width="0.8" height="15.0" fill="rgb(211,129,47)" rx="2" ry="2" />
<text  x="34.03" y="655.5" ></text>
</g>
<g >
<title>vp8_mbloop_filter_vertical_edge_sse2 (2 samples, 0.04%)</title><rect x="634.1" y="693" width="0.5" height="15.0" fill="rgb(238,44,52)" rx="2" ry="2" />
<text  x="637.14" y="703.5" ></text>
</g>
<g >
<title>mojo::core::(anonymous namespace)::DeserializeEventMessage(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (7 samples, 0.15%)</title><rect x="106.0" y="821" width="1.7" height="15.0" fill="rgb(210,181,31)" rx="2" ry="2" />
<text  x="108.98" y="831.5" ></text>
</g>
<g >
<title>tiny_malloc_from_free_list (2 samples, 0.04%)</title><rect x="1026.7" y="773" width="0.5" height="15.0" fill="rgb(218,101,47)" rx="2" ry="2" />
<text  x="1029.73" y="783.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (1 samples, 0.02%)</title><rect x="1068.3" y="725" width="0.2" height="15.0" fill="rgb(253,134,48)" rx="2" ry="2" />
<text  x="1071.29" y="735.5" ></text>
</g>
<g >
<title>base::WaitableEvent::TimedWait(base::TimeDelta const&amp;) (21 samples, 0.44%)</title><rect x="1013.9" y="949" width="5.2" height="15.0" fill="rgb(238,190,6)" rx="2" ry="2" />
<text  x="1016.87" y="959.5" ></text>
</g>
<g >
<title>vp8_yv12_copy_frame_c (12 samples, 0.25%)</title><rect x="479.8" y="741" width="2.9" height="15.0" fill="rgb(235,144,9)" rx="2" ry="2" />
<text  x="482.77" y="751.5" ></text>
</g>
<g >
<title>cricket::SrtpSession::ProtectRtcp(void*, int, int, int*) (1 samples, 0.02%)</title><rect x="234.6" y="773" width="0.3" height="15.0" fill="rgb(225,148,1)" rx="2" ry="2" />
<text  x="237.62" y="783.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (13 samples, 0.27%)</title><rect x="1083.4" y="837" width="3.2" height="15.0" fill="rgb(244,84,13)" rx="2" ry="2" />
<text  x="1086.38" y="847.5" ></text>
</g>
<g >
<title>MojoAppendMessageData (1 samples, 0.02%)</title><rect x="173.8" y="773" width="0.2" height="15.0" fill="rgb(215,134,17)" rx="2" ry="2" />
<text  x="176.77" y="783.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (3 samples, 0.06%)</title><rect x="27.8" y="405" width="0.8" height="15.0" fill="rgb(241,109,48)" rx="2" ry="2" />
<text  x="30.81" y="415.5" ></text>
</g>
<g >
<title>mojo::core::HandleTable::GetDispatcher(unsigned int) const (1 samples, 0.02%)</title><rect x="1046.5" y="565" width="0.3" height="15.0" fill="rgb(217,151,10)" rx="2" ry="2" />
<text  x="1049.52" y="575.5" ></text>
</g>
<g >
<title>base::internal::ThreadGroupImpl::ScopedWorkersExecutor::~ScopedWorkersExecutor() (7 samples, 0.15%)</title><rect x="79.0" y="789" width="1.8" height="15.0" fill="rgb(237,86,14)" rx="2" ry="2" />
<text  x="82.02" y="799.5" ></text>
</g>
<g >
<title>MojoAppendMessageDataImpl (1 samples, 0.02%)</title><rect x="236.6" y="597" width="0.2" height="15.0" fill="rgb(226,180,45)" rx="2" ry="2" />
<text  x="239.60" y="607.5" ></text>
</g>
<g >
<title>media::VideoResourceUpdater::AppendQuads(viz::RenderPass*, scoped_refptr&lt;media::VideoFrame&gt;, gfx::Transform, gfx::Rect, gfx::Rect, gfx::RRectF const&amp;, gfx::Rect, bool, bool, float, int) (1 samples, 0.02%)</title><rect x="1038.6" y="613" width="0.3" height="15.0" fill="rgb(224,214,50)" rx="2" ry="2" />
<text  x="1041.60" y="623.5" ></text>
</g>
<g >
<title>base::GetProgramCounter() (1 samples, 0.02%)</title><rect x="230.7" y="805" width="0.2" height="15.0" fill="rgb(213,25,30)" rx="2" ry="2" />
<text  x="233.66" y="815.5" ></text>
</g>
<g >
<title>rtc::TaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (1 samples, 0.02%)</title><rect x="486.7" y="741" width="0.2" height="15.0" fill="rgb(230,133,17)" rx="2" ry="2" />
<text  x="489.70" y="751.5" ></text>
</g>
<g >
<title>blink::PageAnimator::UpdateAllLifecyclePhases(blink::LocalFrame&amp;, blink::DocumentLifecycle::LifecycleUpdateReason) (17 samples, 0.36%)</title><rect x="25.1" y="597" width="4.2" height="15.0" fill="rgb(245,12,16)" rx="2" ry="2" />
<text  x="28.09" y="607.5" ></text>
</g>
<g >
<title>network::mojom::internal::IPAddress_Data::Validate(void const*, mojo::internal::ValidationContext*) (1 samples, 0.02%)</title><rect x="319.5" y="645" width="0.2" height="15.0" fill="rgb(250,168,43)" rx="2" ry="2" />
<text  x="322.47" y="655.5" ></text>
</g>
<g >
<title>vp8e_encode (420 samples, 8.81%)</title><rect x="382.3" y="773" width="103.9" height="15.0" fill="rgb(226,124,49)" rx="2" ry="2" />
<text  x="385.31" y="783.5" >vp8e_encode</text>
</g>
<g >
<title>webrtc::webrtc_new_closure_impl::ClosureTask&lt;webrtc::internal::VideoReceiveStream::StartNextDecode()::DecodeTask&gt;::Run() (125 samples, 2.62%)</title><rect x="962.9" y="853" width="30.9" height="15.0" fill="rgb(208,67,22)" rx="2" ry="2" />
<text  x="965.91" y="863.5" >we..</text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (2 samples, 0.04%)</title><rect x="92.9" y="837" width="0.5" height="15.0" fill="rgb(227,69,53)" rx="2" ry="2" />
<text  x="95.87" y="847.5" ></text>
</g>
<g >
<title>small_malloc_should_clear (3 samples, 0.06%)</title><rect x="880.8" y="805" width="0.7" height="15.0" fill="rgb(252,157,7)" rx="2" ry="2" />
<text  x="883.78" y="815.5" ></text>
</g>
<g >
<title>mojo::core::ports::Node::SendUserMessageInternal(mojo::core::ports::PortRef const&amp;, std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;*) (3 samples, 0.06%)</title><rect x="235.9" y="517" width="0.7" height="15.0" fill="rgb(224,97,41)" rx="2" ry="2" />
<text  x="238.86" y="527.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_0::__invoke(_malloc_zone_t*, void const*) (1 samples, 0.02%)</title><rect x="141.1" y="517" width="0.3" height="15.0" fill="rgb(240,48,9)" rx="2" ry="2" />
<text  x="144.11" y="527.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (3 samples, 0.06%)</title><rect x="144.6" y="773" width="0.7" height="15.0" fill="rgb(220,119,52)" rx="2" ry="2" />
<text  x="147.57" y="783.5" ></text>
</g>
<g >
<title>media::AudioParameters::AudioParameters(media::AudioParameters const&amp;) (1 samples, 0.02%)</title><rect x="1131.4" y="805" width="0.2" height="15.0" fill="rgb(250,157,48)" rx="2" ry="2" />
<text  x="1134.37" y="815.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.02%)</title><rect x="120.3" y="805" width="0.3" height="15.0" fill="rgb(253,39,20)" rx="2" ry="2" />
<text  x="123.33" y="815.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::ReloadEmptyImmediateWorkQueue() (1 samples, 0.02%)</title><rect x="39.4" y="645" width="0.3" height="15.0" fill="rgb(210,167,36)" rx="2" ry="2" />
<text  x="42.44" y="655.5" ></text>
</g>
<g >
<title>mojo::core::NodeChannel::WriteChannelMessage(std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (14 samples, 0.29%)</title><rect x="246.0" y="453" width="3.5" height="15.0" fill="rgb(254,153,9)" rx="2" ry="2" />
<text  x="249.00" y="463.5" ></text>
</g>
<g >
<title>vpx_dc_predictor_16x16_sse2.loop (1 samples, 0.02%)</title><rect x="927.5" y="677" width="0.3" height="15.0" fill="rgb(205,26,5)" rx="2" ry="2" />
<text  x="930.53" y="687.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.02%)</title><rect x="133.4" y="693" width="0.3" height="15.0" fill="rgb(247,6,14)" rx="2" ry="2" />
<text  x="136.44" y="703.5" ></text>
</g>
<g >
<title>webrtc::internal::VideoReceiveStream::HandleEncodedFrame(std::__Cr::unique_ptr&lt;webrtc::video_coding::EncodedFrame, std::__Cr::default_delete&lt;webrtc::video_coding::EncodedFrame&gt; &gt;) (123 samples, 2.58%)</title><rect x="963.2" y="837" width="30.4" height="15.0" fill="rgb(217,152,26)" rx="2" ry="2" />
<text  x="966.15" y="847.5" >we..</text>
</g>
<g >
<title>(anonymous namespace)::MachAbsoluteTimeToTicks(unsigned long long) (1 samples, 0.02%)</title><rect x="328.9" y="805" width="0.2" height="15.0" fill="rgb(209,102,34)" rx="2" ry="2" />
<text  x="331.87" y="815.5" ></text>
</g>
<g >
<title>std::__Cr::pair&lt;std::__Cr::__tree_iterator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__tree_node&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, void*&gt;*, long&gt;, bool&gt; std::__Cr::__tree&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::__map_value_compare&lt;int, std::__Cr::__value_type&lt;int, rtc::Message&gt;, std::__Cr::less&lt;int&gt;, true&gt;, std::__Cr::allocator&lt;std::__Cr::__value_type&lt;int, rtc::Message&gt; &gt; &gt;::__emplace_unique_key_args&lt;int, std::__Cr::pair&lt;int, rtc::Message&gt; &gt;(int const&amp;, std::__Cr::pair&lt;int, rtc::Message&gt;&amp;&amp;) (1 samples, 0.02%)</title><rect x="227.9" y="581" width="0.3" height="15.0" fill="rgb(207,149,27)" rx="2" ry="2" />
<text  x="230.94" y="591.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (3 samples, 0.06%)</title><rect x="344.7" y="789" width="0.7" height="15.0" fill="rgb(224,23,51)" rx="2" ry="2" />
<text  x="347.70" y="799.5" ></text>
</g>
<g >
<title>rtc::CriticalSection::Enter() const (1 samples, 0.02%)</title><rect x="1189.5" y="933" width="0.3" height="15.0" fill="rgb(251,103,12)" rx="2" ry="2" />
<text  x="1192.51" y="943.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.02%)</title><rect x="856.8" y="933" width="0.2" height="15.0" fill="rgb(220,77,0)" rx="2" ry="2" />
<text  x="859.78" y="943.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="263.8" y="581" width="0.3" height="15.0" fill="rgb(216,100,40)" rx="2" ry="2" />
<text  x="266.81" y="591.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (12 samples, 0.25%)</title><rect x="91.9" y="869" width="3.0" height="15.0" fill="rgb(247,126,28)" rx="2" ry="2" />
<text  x="94.88" y="879.5" ></text>
</g>
<g >
<title>webrtc::VideoStreamEncoder::MaybeEncodeVideoFrame(webrtc::VideoFrame const&amp;, long long) (382 samples, 8.01%)</title><rect x="722.5" y="837" width="94.5" height="15.0" fill="rgb(213,77,8)" rx="2" ry="2" />
<text  x="725.45" y="847.5" >webrtc::Vid..</text>
</g>
<g >
<title>base::internal::RegisteredTaskSource::~RegisteredTaskSource() (1 samples, 0.02%)</title><rect x="256.9" y="629" width="0.2" height="15.0" fill="rgb(219,85,46)" rx="2" ry="2" />
<text  x="259.88" y="639.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 0.04%)</title><rect x="42.7" y="597" width="0.4" height="15.0" fill="rgb(252,214,43)" rx="2" ry="2" />
<text  x="45.65" y="607.5" ></text>
</g>
<g >
<title>vpx_sad16x16_sse2.loop (11 samples, 0.23%)</title><rect x="619.0" y="677" width="2.8" height="15.0" fill="rgb(205,196,29)" rx="2" ry="2" />
<text  x="622.05" y="687.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::Validate() (1 samples, 0.02%)</title><rect x="85.5" y="821" width="0.2" height="15.0" fill="rgb(226,129,43)" rx="2" ry="2" />
<text  x="88.45" y="831.5" ></text>
</g>
<g >
<title>mojo::core::Core::AppendMessageData(unsigned long, unsigned int, unsigned int const*, unsigned int, MojoAppendMessageDataOptions const*, void**, unsigned int*) (1 samples, 0.02%)</title><rect x="1041.8" y="565" width="0.3" height="15.0" fill="rgb(245,114,12)" rx="2" ry="2" />
<text  x="1044.82" y="575.5" ></text>
</g>
<g >
<title>webrtc::AudioMultiVector::Channels() const (2 samples, 0.04%)</title><rect x="1114.8" y="773" width="0.5" height="15.0" fill="rgb(234,178,18)" rx="2" ry="2" />
<text  x="1117.80" y="783.5" ></text>
</g>
<g >
<title>(anonymous namespace)::WebrtcTaskQueue::PostTask(std::__Cr::unique_ptr&lt;webrtc::QueuedTask, std::__Cr::default_delete&lt;webrtc::QueuedTask&gt; &gt;) (19 samples, 0.40%)</title><rect x="286.3" y="757" width="4.7" height="15.0" fill="rgb(244,219,37)" rx="2" ry="2" />
<text  x="289.32" y="767.5" ></text>
</g>
<g >
<title>silk_NSQ_del_dec_c (19 samples, 0.40%)</title><rect x="538.4" y="693" width="4.7" height="15.0" fill="rgb(218,206,27)" rx="2" ry="2" />
<text  x="541.40" y="703.5" ></text>
</g>
<g >
<title>vp8_decode_mb_tokens (39 samples, 0.82%)</title><rect x="826.6" y="709" width="9.6" height="15.0" fill="rgb(240,51,12)" rx="2" ry="2" />
<text  x="829.60" y="719.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="29.5" y="693" width="0.3" height="15.0" fill="rgb(236,221,40)" rx="2" ry="2" />
<text  x="32.54" y="703.5" ></text>
</g>
<g >
<title>rtc::AsyncClosure::~AsyncClosure() (2 samples, 0.04%)</title><rect x="294.2" y="789" width="0.5" height="15.0" fill="rgb(213,64,54)" rx="2" ry="2" />
<text  x="297.24" y="799.5" ></text>
</g>
<g >
<title>base::internal::TaskTracker::RunAndPopNextTask(base::internal::DecoratorWithTaskSource&lt;base::internal::TaskSource::RunIntent, base::internal::RegisteredTaskSource&gt;) (525 samples, 11.01%)</title><rect x="876.6" y="965" width="129.8" height="15.0" fill="rgb(243,183,44)" rx="2" ry="2" />
<text  x="879.57" y="975.5" >base::internal::..</text>
</g>
<g >
<title>blink::WebViewFrameWidget::EndUpdateLayers() (1 samples, 0.02%)</title><rect x="24.8" y="613" width="0.3" height="15.0" fill="rgb(252,147,40)" rx="2" ry="2" />
<text  x="27.84" y="623.5" ></text>
</g>
<g >
<title>jingle_glue::JingleThreadWrapper::PostTaskInternal(rtc::Location const&amp;, int, rtc::MessageHandler*, unsigned int, rtc::MessageData*) (3 samples, 0.06%)</title><rect x="1181.6" y="837" width="0.7" height="15.0" fill="rgb(254,4,3)" rx="2" ry="2" />
<text  x="1184.59" y="847.5" ></text>
</g>
<g >
<title>WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::String, char const*&gt;, WTF::String&gt;, char const*&gt;::length() const (1 samples, 0.02%)</title><rect x="20.6" y="485" width="0.3" height="15.0" fill="rgb(228,50,32)" rx="2" ry="2" />
<text  x="23.64" y="495.5" ></text>
</g>
<g >
<title>webrtc::acm2::AcmReceiver::LastDecoder() const (4 samples, 0.08%)</title><rect x="1129.6" y="837" width="1.0" height="15.0" fill="rgb(245,219,19)" rx="2" ry="2" />
<text  x="1132.64" y="847.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (media::GpuMemoryBufferVideoFramePool::PoolImpl::*)(scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*), scoped_refptr&lt;media::GpuMemoryBufferVideoFramePool::PoolImpl&gt;, scoped_refptr&lt;media::VideoFrame&gt;, media::GpuMemoryBufferVideoFramePool::PoolImpl::FrameResources*&gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (1 samples, 0.02%)</title><rect x="57.2" y="885" width="0.3" height="15.0" fill="rgb(245,56,14)" rx="2" ry="2" />
<text  x="60.25" y="895.5" ></text>
</g>
<g >
<title>mojo::core::NodeController::OnEventMessage(mojo::core::ports::NodeName const&amp;, std::__Cr::unique_ptr&lt;mojo::core::Channel::Message, std::__Cr::default_delete&lt;mojo::core::Channel::Message&gt; &gt;) (52 samples, 1.09%)</title><rect x="105.5" y="837" width="12.9" height="15.0" fill="rgb(216,144,51)" rx="2" ry="2" />
<text  x="108.49" y="847.5" ></text>
</g>
<g >
<title>_pthread_body (52 samples, 1.09%)</title><rect x="1074.2" y="1029" width="12.9" height="15.0" fill="rgb(243,16,28)" rx="2" ry="2" />
<text  x="1077.23" y="1039.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.02%)</title><rect x="353.4" y="821" width="0.2" height="15.0" fill="rgb(239,96,35)" rx="2" ry="2" />
<text  x="356.36" y="831.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.02%)</title><rect x="176.2" y="645" width="0.3" height="15.0" fill="rgb(252,136,18)" rx="2" ry="2" />
<text  x="179.24" y="655.5" ></text>
</g>
<g >
<title>vp8_short_inv_walsh4x4_sse2 (1 samples, 0.02%)</title><rect x="448.9" y="693" width="0.2" height="15.0" fill="rgb(214,6,0)" rx="2" ry="2" />
<text  x="451.85" y="703.5" ></text>
</g>
<g >
<title>_thread_stack_pcs (1 samples, 0.02%)</title><rect x="713.8" y="853" width="0.2" height="15.0" fill="rgb(235,198,13)" rx="2" ry="2" />
<text  x="716.79" y="863.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.02%)</title><rect x="722.2" y="773" width="0.3" height="15.0" fill="rgb(240,161,34)" rx="2" ry="2" />
<text  x="725.21" y="783.5" ></text>
</g>
<g >
<title>WebRtcOpus_Encode (47 samples, 0.99%)</title><rect x="842.2" y="789" width="11.6" height="15.0" fill="rgb(208,115,41)" rx="2" ry="2" />
<text  x="845.18" y="799.5" ></text>
</g>
<g >
<title>vp8_sixtap_predict16x16_ssse3 (1 samples, 0.02%)</title><rect x="753.9" y="645" width="0.2" height="15.0" fill="rgb(228,105,43)" rx="2" ry="2" />
<text  x="756.87" y="655.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (3 samples, 0.06%)</title><rect x="377.9" y="901" width="0.7" height="15.0" fill="rgb(244,229,40)" rx="2" ry="2" />
<text  x="380.85" y="911.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::RunPaintLifecyclePhase() (5 samples, 0.10%)</title><rect x="26.6" y="533" width="1.2" height="15.0" fill="rgb(214,162,47)" rx="2" ry="2" />
<text  x="29.57" y="543.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.02%)</title><rect x="171.8" y="805" width="0.2" height="15.0" fill="rgb(207,7,50)" rx="2" ry="2" />
<text  x="174.79" y="815.5" ></text>
</g>
<g >
<title>cc::RasterTilePriorityQueueAll::Build(std::__Cr::vector&lt;cc::PictureLayerImpl*, std::__Cr::allocator&lt;cc::PictureLayerImpl*&gt; &gt; const&amp;, std::__Cr::vector&lt;cc::PictureLayerImpl*, std::__Cr::allocator&lt;cc::PictureLayerImpl*&gt; &gt; const&amp;, cc::TreePriority) (2 samples, 0.04%)</title><rect x="1070.8" y="677" width="0.5" height="15.0" fill="rgb(241,119,10)" rx="2" ry="2" />
<text  x="1073.76" y="687.5" ></text>
</g>
<g >
<title>cc::ScrollTree::MaxScrollOffset(int) const (1 samples, 0.02%)</title><rect x="1072.2" y="501" width="0.3" height="15.0" fill="rgb(205,225,40)" rx="2" ry="2" />
<text  x="1075.25" y="511.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_0::__invoke(_malloc_zone_t*, void const*) (1 samples, 0.02%)</title><rect x="320.0" y="661" width="0.2" height="15.0" fill="rgb(230,7,25)" rx="2" ry="2" />
<text  x="322.97" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::AtomicFlagSet::RunActiveCallbacks() const (2 samples, 0.04%)</title><rect x="83.0" y="821" width="0.5" height="15.0" fill="rgb(250,99,28)" rx="2" ry="2" />
<text  x="85.98" y="831.5" ></text>
</g>
<g >
<title>mojo::Connector::Accept(mojo::Message*) (2 samples, 0.04%)</title><rect x="1041.1" y="597" width="0.5" height="15.0" fill="rgb(240,143,14)" rx="2" ry="2" />
<text  x="1044.08" y="607.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (2 samples, 0.04%)</title><rect x="349.4" y="773" width="0.5" height="15.0" fill="rgb(220,180,47)" rx="2" ry="2" />
<text  x="352.40" y="783.5" ></text>
</g>
<g >
<title>base::Thread::ThreadMain() (597 samples, 12.52%)</title><rect x="214.3" y="997" width="147.7" height="15.0" fill="rgb(254,223,22)" rx="2" ry="2" />
<text  x="217.34" y="1007.5" >base::Thread::Thre..</text>
</g>
<g >
<title>pthread_get_stacksize_np (1 samples, 0.02%)</title><rect x="578.0" y="837" width="0.2" height="15.0" fill="rgb(240,63,10)" rx="2" ry="2" />
<text  x="580.98" y="847.5" ></text>
</g>
<g >
<title>webrtc::RTPSenderVideo::SendVideo(webrtc::VideoFrameType, signed char, unsigned int, long long, unsigned char const*, unsigned long, webrtc::RTPFragmentationHeader const*, webrtc::RTPVideoHeader const*, absl::optional&lt;long long&gt;) (4 samples, 0.08%)</title><rect x="816.0" y="725" width="1.0" height="15.0" fill="rgb(253,90,28)" rx="2" ry="2" />
<text  x="818.96" y="735.5" ></text>
</g>
<g >
<title>vp8_idct_dequant_full_2x_sse2 (5 samples, 0.10%)</title><rect x="584.9" y="677" width="1.2" height="15.0" fill="rgb(233,176,16)" rx="2" ry="2" />
<text  x="587.91" y="687.5" ></text>
</g>
<g >
<title>mojo::Message::Message(mojo::Message&amp;&amp;) (1 samples, 0.02%)</title><rect x="326.4" y="789" width="0.2" height="15.0" fill="rgb(224,129,45)" rx="2" ry="2" />
<text  x="329.40" y="799.5" ></text>
</g>
<g >
<title>webrtc::voe::(anonymous namespace)::ChannelSend::SendData(webrtc::AudioFrameType, unsigned char, unsigned int, unsigned char const*, unsigned long) (3 samples, 0.06%)</title><rect x="550.0" y="821" width="0.8" height="15.0" fill="rgb(207,216,37)" rx="2" ry="2" />
<text  x="553.03" y="831.5" ></text>
</g>
<g >
<title>webrtc::RtcEventLogImpl::Log(std::__Cr::unique_ptr&lt;webrtc::RtcEvent, std::__Cr::default_delete&lt;webrtc::RtcEvent&gt; &gt;) (12 samples, 0.25%)</title><rect x="1156.1" y="885" width="3.0" height="15.0" fill="rgb(251,7,29)" rx="2" ry="2" />
<text  x="1159.11" y="895.5" ></text>
</g>
<g >
<title>base::ConditionVariable::Wait() (2 samples, 0.04%)</title><rect x="65.7" y="981" width="0.5" height="15.0" fill="rgb(228,80,23)" rx="2" ry="2" />
<text  x="68.66" y="991.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (2 samples, 0.04%)</title><rect x="1111.6" y="837" width="0.5" height="15.0" fill="rgb(235,156,22)" rx="2" ry="2" />
<text  x="1114.58" y="847.5" ></text>
</g>
<g >
<title>rtc::CurrentThreadRef() (1 samples, 0.02%)</title><rect x="1147.2" y="869" width="0.3" height="15.0" fill="rgb(240,154,22)" rx="2" ry="2" />
<text  x="1150.20" y="879.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (4 samples, 0.08%)</title><rect x="140.1" y="373" width="1.0" height="15.0" fill="rgb(212,124,3)" rx="2" ry="2" />
<text  x="143.12" y="383.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::SetOfficialPlaybackPosition(double) const (2 samples, 0.04%)</title><rect x="18.7" y="613" width="0.5" height="15.0" fill="rgb(241,62,15)" rx="2" ry="2" />
<text  x="21.66" y="623.5" ></text>
</g>
<g >
<title>base::internal::ThreadPoolImpl::PostTaskWithSequence(base::internal::Task, scoped_refptr&lt;base::internal::Sequence&gt;) (2 samples, 0.04%)</title><rect x="1182.3" y="789" width="0.5" height="15.0" fill="rgb(237,20,22)" rx="2" ry="2" />
<text  x="1185.33" y="799.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="268.0" y="501" width="0.3" height="15.0" fill="rgb(227,223,8)" rx="2" ry="2" />
<text  x="271.02" y="511.5" ></text>
</g>
<g >
<title>_pthread_body (827 samples, 17.34%)</title><rect x="362.0" y="1029" width="204.6" height="15.0" fill="rgb(217,18,30)" rx="2" ry="2" />
<text  x="365.02" y="1039.5" >_pthread_body</text>
</g>
<g >
<title>silk_find_pred_coefs_FLP (10 samples, 0.21%)</title><rect x="543.4" y="709" width="2.4" height="15.0" fill="rgb(247,184,4)" rx="2" ry="2" />
<text  x="546.35" y="719.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (2 samples, 0.04%)</title><rect x="61.9" y="917" width="0.5" height="15.0" fill="rgb(229,137,0)" rx="2" ry="2" />
<text  x="64.95" y="927.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::HandleIncomingMessage(mojo::Message*) (1 samples, 0.02%)</title><rect x="1066.8" y="789" width="0.3" height="15.0" fill="rgb(237,124,22)" rx="2" ry="2" />
<text  x="1069.81" y="799.5" ></text>
</g>
<g >
<title>io_connect_method (3 samples, 0.06%)</title><rect x="57.5" y="805" width="0.7" height="15.0" fill="rgb(218,97,4)" rx="2" ry="2" />
<text  x="60.50" y="815.5" ></text>
</g>
<g >
<title>vpx_sub_pixel_variance16xh_ssse3.x_half_y_nonhalf (1 samples, 0.02%)</title><rect x="424.1" y="661" width="0.3" height="15.0" fill="rgb(232,189,7)" rx="2" ry="2" />
<text  x="427.11" y="671.5" ></text>
</g>
<g >
<title>base::internal::CheckedLockImpl::Acquire() (3 samples, 0.06%)</title><rect x="1008.7" y="949" width="0.7" height="15.0" fill="rgb(215,70,43)" rx="2" ry="2" />
<text  x="1011.67" y="959.5" ></text>
</g>
<g >
<title>blink::FindVisualRectNeedingUpdateScopeBase::CheckVisualRect(blink::IntRect const&amp;) (1 samples, 0.02%)</title><rect x="28.3" y="341" width="0.3" height="15.0" fill="rgb(247,124,28)" rx="2" ry="2" />
<text  x="31.31" y="351.5" ></text>
</g>
<g >
<title>base::internal::OperationsController::TryBeginOperation() (1 samples, 0.02%)</title><rect x="1148.7" y="789" width="0.2" height="15.0" fill="rgb(242,87,53)" rx="2" ry="2" />
<text  x="1151.69" y="799.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_8::__invoke(_malloc_zone_t*, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="253.7" y="485" width="0.2" height="15.0" fill="rgb(221,217,34)" rx="2" ry="2" />
<text  x="256.67" y="495.5" ></text>
</g>
<g >
<title>webrtc::LibvpxVp8Encoder::Encode(webrtc::VideoFrame const&amp;, std::__Cr::vector&lt;webrtc::VideoFrameType, std::__Cr::allocator&lt;webrtc::VideoFrameType&gt; &gt; const*) (287 samples, 6.02%)</title><rect x="581.7" y="805" width="71.0" height="15.0" fill="rgb(246,162,49)" rx="2" ry="2" />
<text  x="584.69" y="815.5" >webrtc::..</text>
</g>
<g >
<title>base::internal::DelayedTaskManager::AddDelayedTask(base::internal::Task, base::OnceCallback&lt;void (base::internal::Task)&gt;, scoped_refptr&lt;base::TaskRunner&gt;) (1 samples, 0.02%)</title><rect x="551.3" y="789" width="0.2" height="15.0" fill="rgb(243,46,2)" rx="2" ry="2" />
<text  x="554.27" y="799.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::OnTaskStarted(base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (1 samples, 0.02%)</title><rect x="44.1" y="645" width="0.3" height="15.0" fill="rgb(211,180,2)" rx="2" ry="2" />
<text  x="47.14" y="655.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.02%)</title><rect x="192.1" y="853" width="0.2" height="15.0" fill="rgb(213,195,30)" rx="2" ry="2" />
<text  x="195.07" y="863.5" ></text>
</g>
<g >
<title>vp8_pack_tokens (43 samples, 0.90%)</title><rect x="946.3" y="725" width="10.7" height="15.0" fill="rgb(221,151,22)" rx="2" ry="2" />
<text  x="949.33" y="735.5" ></text>
</g>
<g >
<title>media::(anonymous namespace)::CopyRowsToNV12Buffer(int, int, int, media::VideoFrame const*, unsigned char*, int, unsigned char*, int, base::OnceCallback&lt;void ()&gt;) (6 samples, 0.13%)</title><rect x="66.4" y="933" width="1.5" height="15.0" fill="rgb(206,116,11)" rx="2" ry="2" />
<text  x="69.40" y="943.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.02%)</title><rect x="556.5" y="933" width="0.2" height="15.0" fill="rgb(249,186,3)" rx="2" ry="2" />
<text  x="559.46" y="943.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (2 samples, 0.04%)</title><rect x="206.4" y="789" width="0.5" height="15.0" fill="rgb(230,25,12)" rx="2" ry="2" />
<text  x="209.42" y="799.5" ></text>
</g>
<g >
<title>mojo::core::MessagePipeDispatcher::WriteMessage(std::__Cr::unique_ptr&lt;mojo::core::ports::UserMessageEvent, std::__Cr::default_delete&lt;mojo::core::ports::UserMessageEvent&gt; &gt;) (1 samples, 0.02%)</title><rect x="1072.5" y="469" width="0.2" height="15.0" fill="rgb(240,228,48)" rx="2" ry="2" />
<text  x="1075.49" y="479.5" ></text>
</g>
<g >
<title>void base::internal::FunctorTraits&lt;void (blink::MediaStreamRemoteVideoSource::RemoteVideoSourceDelegate::*)(scoped_refptr&lt;media::VideoFrame&gt;), void&gt;::Invoke&lt;void (blink::MediaStreamRemoteVideoSource::RemoteVideoSourceDelegate::*)(scoped_refptr&lt;media::VideoFrame&gt;), scoped_refptr&lt;blink::MediaStreamRemoteVideoSource::RemoteVideoSourceDelegate&gt;, scoped_refptr&lt;media::VideoFrame&gt; &gt;(void (blink::MediaStreamRemoteVideoSource::RemoteVideoSourceDelegate::*)(scoped_refptr&lt;media::VideoFrame&gt;), scoped_refptr&lt;blink::MediaStreamRemoteVideoSource::RemoteVideoSourceDelegate&gt;&amp;&amp;, scoped_refptr&lt;media::VideoFrame&gt;&amp;&amp;) (7 samples, 0.15%)</title><rect x="175.5" y="869" width="1.7" height="15.0" fill="rgb(235,21,32)" rx="2" ry="2" />
<text  x="178.50" y="879.5" ></text>
</g>
</g>
</svg>
