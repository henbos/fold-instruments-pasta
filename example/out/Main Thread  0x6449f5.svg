<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1142.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1125" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="1125" > </text>
<g id="frames">
<g >
<title>blink::GraphicsLayerUpdater::UpdateRecursive(blink::PaintLayer&amp;, blink::GraphicsLayerUpdater::UpdateType, blink::GraphicsLayerUpdater::UpdateContext&amp;, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (4 samples, 2.34%)</title><rect x="444.7" y="421" width="27.6" height="15.0" fill="rgb(253,133,28)" rx="2" ry="2" />
<text  x="447.74" y="431.5" >b..</text>
</g>
<g >
<title>__CFRunLoopFindMode (1 samples, 0.58%)</title><rect x="30.7" y="853" width="6.9" height="15.0" fill="rgb(252,168,39)" rx="2" ry="2" />
<text  x="33.70" y="863.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LocalFrameView&amp;) (5 samples, 2.92%)</title><rect x="506.8" y="501" width="34.5" height="15.0" fill="rgb(228,189,22)" rx="2" ry="2" />
<text  x="509.84" y="511.5" >bl..</text>
</g>
<g >
<title>base::mac::CallWithEHFrame(void () block_pointer) (133 samples, 77.78%)</title><rect x="120.4" y="773" width="917.8" height="15.0" fill="rgb(206,21,45)" rx="2" ry="2" />
<text  x="123.41" y="783.5" >base::mac::CallWithEHFrame(void () block_pointer)</text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnTaskPushedToEmptyQueue(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.58%)</title><rect x="831.2" y="613" width="6.9" height="15.0" fill="rgb(229,192,9)" rx="2" ry="2" />
<text  x="834.17" y="623.5" ></text>
</g>
<g >
<title>base::Histogram::ranges(unsigned int) const (1 samples, 0.58%)</title><rect x="396.4" y="549" width="6.9" height="15.0" fill="rgb(253,196,54)" rx="2" ry="2" />
<text  x="399.43" y="559.5" ></text>
</g>
<g >
<title>__CFRunLoopDoSource0 (133 samples, 77.78%)</title><rect x="120.4" y="821" width="917.8" height="15.0" fill="rgb(242,75,25)" rx="2" ry="2" />
<text  x="123.41" y="831.5" >__CFRunLoopDoSource0</text>
</g>
<g >
<title>content::RenderViewImpl::DidCommitCompositorFrameForWidget() (1 samples, 0.58%)</title><rect x="403.3" y="597" width="6.9" height="15.0" fill="rgb(240,73,53)" rx="2" ry="2" />
<text  x="406.33" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) (3 samples, 1.75%)</title><rect x="154.9" y="725" width="20.7" height="15.0" fill="rgb(245,8,35)" rx="2" ry="2" />
<text  x="157.91" y="735.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::RunPaintLifecyclePhase() (5 samples, 2.92%)</title><rect x="472.3" y="533" width="34.5" height="15.0" fill="rgb(253,15,35)" rx="2" ry="2" />
<text  x="475.34" y="543.5" >bl..</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="845.0" y="597" width="6.9" height="15.0" fill="rgb(239,181,49)" rx="2" ry="2" />
<text  x="847.97" y="607.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="568.9" y="677" width="6.9" height="15.0" fill="rgb(231,131,23)" rx="2" ry="2" />
<text  x="571.95" y="687.5" ></text>
</g>
<g >
<title>cc::LayerTreeHost::UpdateLayers() (3 samples, 1.75%)</title><rect x="410.2" y="645" width="20.7" height="15.0" fill="rgb(234,224,21)" rx="2" ry="2" />
<text  x="413.23" y="655.5" ></text>
</g>
<g >
<title>WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::String, char const*&gt;, WTF::String&gt;, char const*&gt;, WTF::String&gt;::length() const (1 samples, 0.58%)</title><rect x="306.7" y="501" width="6.9" height="15.0" fill="rgb(233,120,2)" rx="2" ry="2" />
<text  x="309.73" y="511.5" ></text>
</g>
<g >
<title>blink::LayoutObject::DebugName() const (1 samples, 0.58%)</title><rect x="513.7" y="293" width="6.9" height="15.0" fill="rgb(207,205,24)" rx="2" ry="2" />
<text  x="516.74" y="303.5" ></text>
</g>
<g >
<title>blink::Document::GetTaskRunner(blink::TaskType) (1 samples, 0.58%)</title><rect x="244.6" y="581" width="6.9" height="15.0" fill="rgb(239,149,2)" rx="2" ry="2" />
<text  x="247.62" y="591.5" ></text>
</g>
<g >
<title>CFBasicHashApply (1 samples, 0.58%)</title><rect x="113.5" y="805" width="6.9" height="15.0" fill="rgb(230,56,28)" rx="2" ry="2" />
<text  x="116.51" y="815.5" ></text>
</g>
<g >
<title>CFSetApplyFunction (1 samples, 0.58%)</title><rect x="113.5" y="821" width="6.9" height="15.0" fill="rgb(205,215,7)" rx="2" ry="2" />
<text  x="116.51" y="831.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (2 samples, 1.17%)</title><rect x="506.8" y="389" width="13.8" height="15.0" fill="rgb(213,213,20)" rx="2" ry="2" />
<text  x="509.84" y="399.5" ></text>
</g>
<g >
<title>blink::HTMLElement::AttributeChanged(blink::Element::AttributeModificationParams const&amp;) (1 samples, 0.58%)</title><rect x="313.6" y="485" width="6.9" height="15.0" fill="rgb(239,85,31)" rx="2" ry="2" />
<text  x="316.63" y="495.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="658.7" y="629" width="6.9" height="15.0" fill="rgb(221,10,43)" rx="2" ry="2" />
<text  x="661.65" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (2 samples, 1.17%)</title><rect x="265.3" y="405" width="13.8" height="15.0" fill="rgb(215,41,28)" rx="2" ry="2" />
<text  x="268.32" y="415.5" ></text>
</g>
<g >
<title>blink::ChromeClientImpl::ShouldReportDetailedMessageForSource(blink::LocalFrame&amp;, WTF::String const&amp;) (1 samples, 0.58%)</title><rect x="223.9" y="293" width="6.9" height="15.0" fill="rgb(246,67,3)" rx="2" ry="2" />
<text  x="226.92" y="303.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.58%)</title><rect x="624.2" y="629" width="6.9" height="15.0" fill="rgb(213,65,39)" rx="2" ry="2" />
<text  x="627.15" y="639.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.58%)</title><rect x="589.6" y="549" width="6.9" height="15.0" fill="rgb(221,225,3)" rx="2" ry="2" />
<text  x="592.65" y="559.5" ></text>
</g>
<g >
<title>default_zone_malloc (1 samples, 0.58%)</title><rect x="389.5" y="549" width="6.9" height="15.0" fill="rgb(213,2,40)" rx="2" ry="2" />
<text  x="392.53" y="559.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::DoPaintTask(blink::GraphicsLayerPaintInfo const&amp;, blink::GraphicsLayer const&amp;, unsigned int, blink::GraphicsContext&amp;, blink::IntRect const&amp;) const (2 samples, 1.17%)</title><rect x="472.3" y="325" width="13.8" height="15.0" fill="rgb(251,144,17)" rx="2" ry="2" />
<text  x="475.34" y="335.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.58%)</title><rect x="603.5" y="581" width="6.9" height="15.0" fill="rgb(236,114,9)" rx="2" ry="2" />
<text  x="606.45" y="591.5" ></text>
</g>
<g >
<title>base::WaitableEvent::Signal() (2 samples, 1.17%)</title><rect x="265.3" y="373" width="13.8" height="15.0" fill="rgb(220,159,45)" rx="2" ry="2" />
<text  x="268.32" y="383.5" ></text>
</g>
<g >
<title>base::HistogramBase::CheckName(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt; const&amp;) const (1 samples, 0.58%)</title><rect x="727.7" y="613" width="6.9" height="15.0" fill="rgb(227,98,6)" rx="2" ry="2" />
<text  x="730.66" y="623.5" ></text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks(v8::internal::Isolate*, v8::internal::MicrotaskQueue*, v8::internal::MaybeHandle&lt;v8::internal::Object&gt;*) (1 samples, 0.58%)</title><rect x="782.9" y="613" width="6.9" height="15.0" fill="rgb(227,83,17)" rx="2" ry="2" />
<text  x="785.87" y="623.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.58%)</title><rect x="1003.7" y="565" width="6.9" height="15.0" fill="rgb(207,103,8)" rx="2" ry="2" />
<text  x="1006.68" y="575.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.58%)</title><rect x="499.9" y="485" width="6.9" height="15.0" fill="rgb(219,140,0)" rx="2" ry="2" />
<text  x="502.94" y="495.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintWithoutCommit(blink::GraphicsContext::DisabledMode, blink::IntRect const*) (2 samples, 1.17%)</title><rect x="472.3" y="357" width="13.8" height="15.0" fill="rgb(212,60,7)" rx="2" ry="2" />
<text  x="475.34" y="367.5" ></text>
</g>
<g >
<title>mach_msg_send (1 samples, 0.58%)</title><rect x="286.0" y="69" width="6.9" height="15.0" fill="rgb(228,40,4)" rx="2" ry="2" />
<text  x="289.02" y="79.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.58%)</title><rect x="286.0" y="165" width="6.9" height="15.0" fill="rgb(233,128,7)" rx="2" ry="2" />
<text  x="289.02" y="175.5" ></text>
</g>
<g >
<title>pthread_getspecific (1 samples, 0.58%)</title><rect x="810.5" y="661" width="6.9" height="15.0" fill="rgb(239,154,49)" rx="2" ry="2" />
<text  x="813.47" y="671.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (5 samples, 2.92%)</title><rect x="203.2" y="485" width="34.5" height="15.0" fill="rgb(222,169,35)" rx="2" ry="2" />
<text  x="206.22" y="495.5" >Bu..</text>
</g>
<g >
<title>base::internal::WeakLinkNode&lt;base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt; &gt;::SetList(base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;*) (1 samples, 0.58%)</title><rect x="651.8" y="661" width="6.9" height="15.0" fill="rgb(247,228,54)" rx="2" ry="2" />
<text  x="654.75" y="671.5" ></text>
</g>
<g >
<title>base::AtomicFlag::Set() (1 samples, 0.58%)</title><rect x="796.7" y="581" width="6.9" height="15.0" fill="rgb(223,221,32)" rx="2" ry="2" />
<text  x="799.67" y="591.5" ></text>
</g>
<g >
<title>v8::internal::Factory::NewNumber(double, v8::internal::AllocationType) (1 samples, 0.58%)</title><rect x="217.0" y="357" width="6.9" height="15.0" fill="rgb(238,226,8)" rx="2" ry="2" />
<text  x="220.02" y="367.5" ></text>
</g>
<g >
<title>cc::SolidColorAnalyzer::DetermineIfSolidColor(cc::PaintOpBuffer const*, gfx::Rect const&amp;, int, std::__Cr::vector&lt;unsigned long, std::__Cr::allocator&lt;unsigned long&gt; &gt; const*) (1 samples, 0.58%)</title><rect x="410.2" y="533" width="6.9" height="15.0" fill="rgb(254,177,42)" rx="2" ry="2" />
<text  x="413.23" y="543.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.58%)</title><rect x="817.4" y="661" width="6.9" height="15.0" fill="rgb(254,58,7)" rx="2" ry="2" />
<text  x="820.37" y="671.5" ></text>
</g>
<g >
<title>blink::PaintController::AddToIndicesByClientMap(blink::DisplayItemClient const&amp;, unsigned long, WTF::HashMap&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt;, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::PartitionAllocator&gt;&amp;) (1 samples, 0.58%)</title><rect x="472.3" y="117" width="6.9" height="15.0" fill="rgb(221,209,20)" rx="2" ry="2" />
<text  x="475.34" y="127.5" ></text>
</g>
<g >
<title>blink::scheduler::MainThreadSchedulerImpl::RecordTaskUkm(blink::scheduler::MainThreadTaskQueue*, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (1 samples, 0.58%)</title><rect x="762.2" y="629" width="6.9" height="15.0" fill="rgb(236,11,15)" rx="2" ry="2" />
<text  x="765.16" y="639.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::ConsoleCall(v8::internal::Isolate*, v8::internal::BuiltinArguments&amp;, void (v8::debug::ConsoleDelegate::*)(v8::debug::ConsoleCallArguments const&amp;, v8::debug::ConsoleContext const&amp;)) (1 samples, 0.58%)</title><rect x="286.0" y="373" width="6.9" height="15.0" fill="rgb(212,38,10)" rx="2" ry="2" />
<text  x="289.02" y="383.5" ></text>
</g>
<g >
<title>WTF::HashTable&lt;blink::DisplayItemClient const*, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::PartitionAllocator&gt;::RehashTo(WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;*, unsigned int, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;*) (1 samples, 0.58%)</title><rect x="472.3" y="53" width="6.9" height="15.0" fill="rgb(206,10,19)" rx="2" ry="2" />
<text  x="475.34" y="63.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="403.3" y="533" width="6.9" height="15.0" fill="rgb(216,221,39)" rx="2" ry="2" />
<text  x="406.33" y="543.5" ></text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::PreSourceObserver(__CFRunLoopObserver*, unsigned long, void*) (1 samples, 0.58%)</title><rect x="92.8" y="805" width="6.9" height="15.0" fill="rgb(241,106,40)" rx="2" ry="2" />
<text  x="95.81" y="815.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.58%)</title><rect x="555.1" y="677" width="6.9" height="15.0" fill="rgb(237,138,4)" rx="2" ry="2" />
<text  x="558.15" y="687.5" ></text>
</g>
<g >
<title>blink::PaintLayerScrollableArea::LayerForScrolling() const (1 samples, 0.58%)</title><rect x="493.0" y="485" width="6.9" height="15.0" fill="rgb(243,162,7)" rx="2" ry="2" />
<text  x="496.04" y="495.5" ></text>
</g>
<g >
<title>CFSetContainsValue (1 samples, 0.58%)</title><rect x="1176.2" y="837" width="6.9" height="15.0" fill="rgb(249,92,23)" rx="2" ry="2" />
<text  x="1179.20" y="847.5" ></text>
</g>
<g >
<title>blink::ObjectStartBitmap::FindHeader(unsigned char*) (1 samples, 0.58%)</title><rect x="348.1" y="501" width="6.9" height="15.0" fill="rgb(216,47,27)" rx="2" ry="2" />
<text  x="351.13" y="511.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::SetOfficialPlaybackPosition(double) const (1 samples, 0.58%)</title><rect x="299.8" y="533" width="6.9" height="15.0" fill="rgb(225,48,2)" rx="2" ry="2" />
<text  x="302.82" y="543.5" ></text>
</g>
<g >
<title>DYLD-STUB$$pthread_self (1 samples, 0.58%)</title><rect x="893.3" y="597" width="6.9" height="15.0" fill="rgb(213,78,42)" rx="2" ry="2" />
<text  x="896.27" y="607.5" ></text>
</g>
<g >
<title>blink::Element::PseudoStateChanged(blink::CSSSelector::PseudoType) (1 samples, 0.58%)</title><rect x="320.5" y="453" width="6.9" height="15.0" fill="rgb(214,224,52)" rx="2" ry="2" />
<text  x="323.53" y="463.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (1 samples, 0.58%)</title><rect x="286.0" y="101" width="6.9" height="15.0" fill="rgb(248,182,16)" rx="2" ry="2" />
<text  x="289.02" y="111.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.58%)</title><rect x="658.7" y="597" width="6.9" height="15.0" fill="rgb(229,94,10)" rx="2" ry="2" />
<text  x="661.65" y="607.5" ></text>
</g>
<g >
<title>base::allocator::(anonymous namespace)::FreeDefiniteSizeImpl(base::allocator::AllocatorDispatch const*, void*, unsigned long, void*) (1 samples, 0.58%)</title><rect x="368.8" y="693" width="6.9" height="15.0" fill="rgb(224,174,40)" rx="2" ry="2" />
<text  x="371.83" y="703.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.58%)</title><rect x="589.6" y="565" width="6.9" height="15.0" fill="rgb(245,31,49)" rx="2" ry="2" />
<text  x="592.65" y="575.5" ></text>
</g>
<g >
<title>blink::PaintInvalidator::InvalidatePaint(blink::LayoutObject const&amp;, blink::PaintPropertyTreeBuilderContext const*, blink::PaintInvalidatorContext&amp;) (1 samples, 0.58%)</title><rect x="520.6" y="373" width="6.9" height="15.0" fill="rgb(238,41,25)" rx="2" ry="2" />
<text  x="523.64" y="383.5" ></text>
</g>
<g >
<title>blink::EventDispatcher::DispatchEvent(blink::Node&amp;, blink::Event&amp;) (10 samples, 5.85%)</title><rect x="299.8" y="661" width="69.0" height="15.0" fill="rgb(250,63,11)" rx="2" ry="2" />
<text  x="302.82" y="671.5" >blink::..</text>
</g>
<g >
<title>v8_inspector::V8Console::Log(v8::debug::ConsoleCallArguments const&amp;, v8::debug::ConsoleContext const&amp;) (1 samples, 0.58%)</title><rect x="286.0" y="357" width="6.9" height="15.0" fill="rgb(253,128,32)" rx="2" ry="2" />
<text  x="289.02" y="367.5" ></text>
</g>
<g >
<title>mach_port_extract_member (4 samples, 2.34%)</title><rect x="1100.3" y="837" width="27.6" height="15.0" fill="rgb(205,85,53)" rx="2" ry="2" />
<text  x="1103.29" y="847.5" >m..</text>
</g>
<g >
<title>__commpage_gettimeofday_internal (1 samples, 0.58%)</title><rect x="72.1" y="805" width="6.9" height="15.0" fill="rgb(217,49,27)" rx="2" ry="2" />
<text  x="75.11" y="815.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;content::RenderFrameImpl, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.58%)</title><rect x="375.7" y="645" width="6.9" height="15.0" fill="rgb(252,145,39)" rx="2" ry="2" />
<text  x="378.73" y="655.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="582.7" y="645" width="6.9" height="15.0" fill="rgb(248,79,27)" rx="2" ry="2" />
<text  x="585.75" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (4 samples, 2.34%)</title><rect x="838.1" y="661" width="27.6" height="15.0" fill="rgb(237,218,8)" rx="2" ry="2" />
<text  x="841.07" y="671.5" >b..</text>
</g>
<g >
<title>blink::EventPath::CalculatePath() (1 samples, 0.58%)</title><rect x="361.9" y="565" width="6.9" height="15.0" fill="rgb(211,47,22)" rx="2" ry="2" />
<text  x="364.93" y="575.5" ></text>
</g>
<g >
<title>bool base::internal::QueryCancellationTraits&lt;base::internal::BindState&lt;void (media::AliveChecker::*)(), base::WeakPtr&lt;media::AliveChecker&gt; &gt; &gt;(base::internal::BindStateBase const*, base::internal::BindStateBase::CancellationQueryMode) (1 samples, 0.58%)</title><rect x="1003.7" y="629" width="6.9" height="15.0" fill="rgb(225,71,53)" rx="2" ry="2" />
<text  x="1006.68" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork() (1 samples, 0.58%)</title><rect x="99.7" y="741" width="6.9" height="15.0" fill="rgb(206,127,43)" rx="2" ry="2" />
<text  x="102.71" y="751.5" ></text>
</g>
<g >
<title>blink::MediaControlsImpl::UpdateTimeIndicators() (5 samples, 2.92%)</title><rect x="306.7" y="549" width="34.5" height="15.0" fill="rgb(210,158,50)" rx="2" ry="2" />
<text  x="309.73" y="559.5" >bl..</text>
</g>
<g >
<title>malloc (1 samples, 0.58%)</title><rect x="389.5" y="597" width="6.9" height="15.0" fill="rgb(229,70,27)" rx="2" ry="2" />
<text  x="392.53" y="607.5" ></text>
</g>
<g >
<title>blink::EventTarget::FireEventListeners(blink::Event&amp;) (1 samples, 0.58%)</title><rect x="286.0" y="613" width="6.9" height="15.0" fill="rgb(207,184,7)" rx="2" ry="2" />
<text  x="289.02" y="623.5" ></text>
</g>
<g >
<title>blink::PersistentBase&lt;blink::StyleFilterData, (blink::WeaknessPersistentConfiguration)0, (blink::CrossThreadnessPersistentConfiguration)0&gt;::CheckPointer() const (1 samples, 0.58%)</title><rect x="437.8" y="341" width="6.9" height="15.0" fill="rgb(254,229,18)" rx="2" ry="2" />
<text  x="440.84" y="351.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.58%)</title><rect x="10.0" y="869" width="6.9" height="15.0" fill="rgb(238,41,0)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>blink::WebViewImpl::EndUpdateLayers() (1 samples, 0.58%)</title><rect x="424.0" y="597" width="6.9" height="15.0" fill="rgb(235,80,53)" rx="2" ry="2" />
<text  x="427.04" y="607.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::WalkInternal(blink::LayoutObject const&amp;, blink::PrePaintTreeWalk::PrePaintTreeWalkContext&amp;) (2 samples, 1.17%)</title><rect x="527.5" y="469" width="13.8" height="15.0" fill="rgb(221,200,38)" rx="2" ry="2" />
<text  x="530.54" y="479.5" ></text>
</g>
<g >
<title>blink::StyleEngine::PseudoStateChangedForElement(blink::CSSSelector::PseudoType, blink::Element&amp;) (1 samples, 0.58%)</title><rect x="320.5" y="437" width="6.9" height="15.0" fill="rgb(229,202,34)" rx="2" ry="2" />
<text  x="323.53" y="447.5" ></text>
</g>
<g >
<title>crashpad::StringAnnotation&lt;64u&gt;::Set(base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;) (1 samples, 0.58%)</title><rect x="948.5" y="629" width="6.9" height="15.0" fill="rgb(253,22,43)" rx="2" ry="2" />
<text  x="951.48" y="639.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.58%)</title><rect x="1183.1" y="853" width="6.9" height="15.0" fill="rgb(229,50,6)" rx="2" ry="2" />
<text  x="1186.10" y="863.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() const (1 samples, 0.58%)</title><rect x="568.9" y="693" width="6.9" height="15.0" fill="rgb(230,187,54)" rx="2" ry="2" />
<text  x="571.95" y="703.5" ></text>
</g>
<g >
<title>content::RenderWidget::UpdateVisualState() (17 samples, 9.94%)</title><rect x="430.9" y="645" width="117.3" height="15.0" fill="rgb(208,22,35)" rx="2" ry="2" />
<text  x="433.94" y="655.5" >content::Rende..</text>
</g>
<g >
<title>v8_inspector::(anonymous namespace)::ConsoleHelper::reportCall(v8_inspector::ConsoleAPIType, std::__Cr::vector&lt;v8::Local&lt;v8::Value&gt;, std::__Cr::allocator&lt;v8::Local&lt;v8::Value&gt; &gt; &gt; const&amp;) (2 samples, 1.17%)</title><rect x="223.9" y="357" width="13.8" height="15.0" fill="rgb(227,81,34)" rx="2" ry="2" />
<text  x="226.92" y="367.5" ></text>
</g>
<g >
<title>WTF::ThreadSpecific&lt;blink::ThreadState*&gt;::operator blink::ThreadState**() (1 samples, 0.58%)</title><rect x="789.8" y="661" width="6.9" height="15.0" fill="rgb(237,184,27)" rx="2" ry="2" />
<text  x="792.77" y="671.5" ></text>
</g>
<g >
<title>mach_msg (2 samples, 1.17%)</title><rect x="265.3" y="357" width="13.8" height="15.0" fill="rgb(236,202,36)" rx="2" ry="2" />
<text  x="268.32" y="367.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.58%)</title><rect x="389.5" y="565" width="6.9" height="15.0" fill="rgb(251,225,36)" rx="2" ry="2" />
<text  x="392.53" y="575.5" ></text>
</g>
<g >
<title>cc::PaintImage::PaintImage() (1 samples, 0.58%)</title><rect x="548.2" y="645" width="6.9" height="15.0" fill="rgb(228,105,5)" rx="2" ry="2" />
<text  x="551.25" y="655.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.58%)</title><rect x="244.6" y="501" width="6.9" height="15.0" fill="rgb(231,114,31)" rx="2" ry="2" />
<text  x="247.62" y="511.5" ></text>
</g>
<g >
<title>blink::EventQueue::EnqueueEvent(base::Location const&amp;, blink::Event&amp;) (1 samples, 0.58%)</title><rect x="244.6" y="613" width="6.9" height="15.0" fill="rgb(248,208,9)" rx="2" ry="2" />
<text  x="247.62" y="623.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.58%)</title><rect x="617.3" y="645" width="6.9" height="15.0" fill="rgb(245,23,33)" rx="2" ry="2" />
<text  x="620.25" y="655.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 1.17%)</title><rect x="472.3" y="469" width="13.8" height="15.0" fill="rgb(246,216,33)" rx="2" ry="2" />
<text  x="475.34" y="479.5" ></text>
</g>
<g >
<title>blink::LocalFrameUkmAggregator::RecordSample(unsigned long, base::TimeTicks, base::TimeTicks) (1 samples, 0.58%)</title><rect x="396.4" y="581" width="6.9" height="15.0" fill="rgb(237,195,12)" rx="2" ry="2" />
<text  x="399.43" y="591.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.58%)</title><rect x="589.6" y="597" width="6.9" height="15.0" fill="rgb(221,99,46)" rx="2" ry="2" />
<text  x="592.65" y="607.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.58%)</title><rect x="962.3" y="613" width="6.9" height="15.0" fill="rgb(221,137,5)" rx="2" ry="2" />
<text  x="965.28" y="623.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (1 samples, 0.58%)</title><rect x="286.0" y="469" width="6.9" height="15.0" fill="rgb(218,0,44)" rx="2" ry="2" />
<text  x="289.02" y="479.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::ReloadEmptyImmediateWorkQueue() (1 samples, 0.58%)</title><rect x="831.2" y="645" width="6.9" height="15.0" fill="rgb(236,67,52)" rx="2" ry="2" />
<text  x="834.17" y="655.5" ></text>
</g>
<g >
<title>blink::CompositingInputsUpdater::UpdateSelfAndDescendantsRecursively(blink::PaintLayer*, blink::CompositingInputsUpdater::UpdateType, blink::CompositingInputsUpdater::AncestorInfo) (1 samples, 0.58%)</title><rect x="437.8" y="453" width="6.9" height="15.0" fill="rgb(238,133,2)" rx="2" ry="2" />
<text  x="440.84" y="463.5" ></text>
</g>
<g >
<title>Builtins_LdaNamedPropertyHandler (1 samples, 0.58%)</title><rect x="217.0" y="421" width="6.9" height="15.0" fill="rgb(227,136,49)" rx="2" ry="2" />
<text  x="220.02" y="431.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::is_end() const (2 samples, 1.17%)</title><rect x="920.9" y="629" width="13.8" height="15.0" fill="rgb(212,224,2)" rx="2" ry="2" />
<text  x="923.88" y="639.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.58%)</title><rect x="989.9" y="629" width="6.9" height="15.0" fill="rgb(213,171,9)" rx="2" ry="2" />
<text  x="992.88" y="639.5" ></text>
</g>
<g >
<title>blink::MainThreadDebugger::consoleAPIMessage(int, v8::Isolate::MessageErrorLevel, v8_inspector::StringView const&amp;, v8_inspector::StringView const&amp;, unsigned int, unsigned int, v8_inspector::V8StackTrace*) (1 samples, 0.58%)</title><rect x="286.0" y="293" width="6.9" height="15.0" fill="rgb(241,51,30)" rx="2" ry="2" />
<text  x="289.02" y="303.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="934.7" y="645" width="6.9" height="15.0" fill="rgb(225,165,16)" rx="2" ry="2" />
<text  x="937.68" y="655.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.58%)</title><rect x="244.6" y="485" width="6.9" height="15.0" fill="rgb(212,79,48)" rx="2" ry="2" />
<text  x="247.62" y="495.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::SelectWorkQueueToService() (2 samples, 1.17%)</title><rect x="989.9" y="661" width="13.8" height="15.0" fill="rgb(235,159,7)" rx="2" ry="2" />
<text  x="992.88" y="671.5" ></text>
</g>
<g >
<title>_kernelrpc_mach_port_extract_member_trap (4 samples, 2.34%)</title><rect x="1100.3" y="821" width="27.6" height="15.0" fill="rgb(245,183,52)" rx="2" ry="2" />
<text  x="1103.29" y="831.5" >_..</text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal::(anonymous namespace)::InvokeParams const&amp;) (1 samples, 0.58%)</title><rect x="286.0" y="485" width="6.9" height="15.0" fill="rgb(229,158,42)" rx="2" ry="2" />
<text  x="289.02" y="495.5" ></text>
</g>
<g >
<title>blink::ChromeClientImpl::ScheduleAnimation(blink::LocalFrameView const*) (2 samples, 1.17%)</title><rect x="265.3" y="517" width="13.8" height="15.0" fill="rgb(207,166,12)" rx="2" ry="2" />
<text  x="268.32" y="527.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::PlaybackProgressTimerFired(blink::TimerBase*) (3 samples, 1.75%)</title><rect x="244.6" y="645" width="20.7" height="15.0" fill="rgb(206,117,38)" rx="2" ry="2" />
<text  x="247.62" y="655.5" ></text>
</g>
<g >
<title>blink::LayoutObject::DebugName() const (1 samples, 0.58%)</title><rect x="534.4" y="405" width="6.9" height="15.0" fill="rgb(215,67,14)" rx="2" ry="2" />
<text  x="537.44" y="415.5" ></text>
</g>
<g >
<title>blink::LayoutObject::GetDocument() const (1 samples, 0.58%)</title><rect x="444.7" y="357" width="6.9" height="15.0" fill="rgb(223,66,40)" rx="2" ry="2" />
<text  x="447.74" y="367.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.58%)</title><rect x="886.4" y="613" width="6.9" height="15.0" fill="rgb(221,194,28)" rx="2" ry="2" />
<text  x="889.37" y="623.5" ></text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.58%)</title><rect x="955.4" y="581" width="6.9" height="15.0" fill="rgb(231,14,36)" rx="2" ry="2" />
<text  x="958.38" y="591.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::WalkInternal(blink::LayoutObject const&amp;, blink::PrePaintTreeWalk::PrePaintTreeWalkContext&amp;) (1 samples, 0.58%)</title><rect x="513.7" y="357" width="6.9" height="15.0" fill="rgb(239,100,27)" rx="2" ry="2" />
<text  x="516.74" y="367.5" ></text>
</g>
<g >
<title>blink::PaintLayer::SetNeedsCompositingInputsUpdate() (2 samples, 1.17%)</title><rect x="265.3" y="581" width="13.8" height="15.0" fill="rgb(238,166,10)" rx="2" ry="2" />
<text  x="268.32" y="591.5" ></text>
</g>
<g >
<title>__CFRunLoopRun (165 samples, 96.49%)</title><rect x="37.6" y="853" width="1138.6" height="15.0" fill="rgb(231,176,30)" rx="2" ry="2" />
<text  x="40.60" y="863.5" >__CFRunLoopRun</text>
</g>
<g >
<title>blink::EventQueue::DispatchEvent(blink::Event*) (10 samples, 5.85%)</title><rect x="299.8" y="677" width="69.0" height="15.0" fill="rgb(253,87,2)" rx="2" ry="2" />
<text  x="302.82" y="687.5" >blink::..</text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_wait (1 samples, 0.58%)</title><rect x="1093.4" y="821" width="6.9" height="15.0" fill="rgb(246,72,29)" rx="2" ry="2" />
<text  x="1096.39" y="831.5" ></text>
</g>
<g >
<title>blink::Element::AttributeChanged(blink::Element::AttributeModificationParams const&amp;) (1 samples, 0.58%)</title><rect x="313.6" y="469" width="6.9" height="15.0" fill="rgb(225,141,29)" rx="2" ry="2" />
<text  x="316.63" y="479.5" ></text>
</g>
<g >
<title>main (171 samples, 100.00%)</title><rect x="10.0" y="1045" width="1180.0" height="15.0" fill="rgb(235,208,8)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >main</text>
</g>
<g >
<title>blink::EventTarget::FireEventListeners(blink::Event&amp;) (8 samples, 4.68%)</title><rect x="299.8" y="597" width="55.2" height="15.0" fill="rgb(223,110,1)" rx="2" ry="2" />
<text  x="302.82" y="607.5" >blink..</text>
</g>
<g >
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.58%)</title><rect x="106.6" y="821" width="6.9" height="15.0" fill="rgb(246,74,18)" rx="2" ry="2" />
<text  x="109.61" y="831.5" ></text>
</g>
<g >
<title>blink::ScrollingCoordinator::UpdateAfterPaint(blink::LocalFrameView*) (1 samples, 0.58%)</title><rect x="493.0" y="517" width="6.9" height="15.0" fill="rgb(246,115,38)" rx="2" ry="2" />
<text  x="496.04" y="527.5" ></text>
</g>
<g >
<title>blink::GraphicsLayerUpdater::UpdateRecursive(blink::PaintLayer&amp;, blink::GraphicsLayerUpdater::UpdateType, blink::GraphicsLayerUpdater::UpdateContext&amp;, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (4 samples, 2.34%)</title><rect x="444.7" y="453" width="27.6" height="15.0" fill="rgb(229,0,6)" rx="2" ry="2" />
<text  x="447.74" y="463.5" >b..</text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeTaskFromWorkQueue() (3 samples, 1.75%)</title><rect x="1010.6" y="661" width="20.7" height="15.0" fill="rgb(205,195,17)" rx="2" ry="2" />
<text  x="1013.58" y="671.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="582.7" y="629" width="6.9" height="15.0" fill="rgb(234,202,52)" rx="2" ry="2" />
<text  x="585.75" y="639.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="624.2" y="661" width="6.9" height="15.0" fill="rgb(247,74,50)" rx="2" ry="2" />
<text  x="627.15" y="671.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::UpdateGraphicsLayerGeometry(blink::PaintLayer const*, blink::PaintLayer const*, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;, blink::GraphicsLayerUpdater::UpdateContext&amp;) (1 samples, 0.58%)</title><rect x="451.6" y="405" width="6.9" height="15.0" fill="rgb(212,114,3)" rx="2" ry="2" />
<text  x="454.64" y="415.5" ></text>
</g>
<g >
<title>scoped_refptr&lt;WTF::StringImpl&gt;::Release(WTF::StringImpl*) (1 samples, 0.58%)</title><rect x="334.3" y="517" width="6.9" height="15.0" fill="rgb(205,23,19)" rx="2" ry="2" />
<text  x="337.33" y="527.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (2 samples, 1.17%)</title><rect x="920.9" y="613" width="13.8" height="15.0" fill="rgb(223,215,21)" rx="2" ry="2" />
<text  x="923.88" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueSelector::SelectWorkQueueToService() (1 samples, 0.58%)</title><rect x="168.7" y="661" width="6.9" height="15.0" fill="rgb(221,200,48)" rx="2" ry="2" />
<text  x="171.71" y="671.5" ></text>
</g>
<g >
<title>blink::PaintController::ProcessNewItem(blink::DisplayItem&amp;) (1 samples, 0.58%)</title><rect x="472.3" y="133" width="6.9" height="15.0" fill="rgb(238,227,22)" rx="2" ry="2" />
<text  x="475.34" y="143.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;content::RenderViewObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::Iter(base::ObserverList&lt;content::RenderViewObserver, false, true, base::internal::UncheckedObserverAdapter&gt; const*) (1 samples, 0.58%)</title><rect x="403.3" y="581" width="6.9" height="15.0" fill="rgb(251,79,2)" rx="2" ry="2" />
<text  x="406.33" y="591.5" ></text>
</g>
<g >
<title>blink::PageAnimator::ScheduleVisualUpdate(blink::LocalFrame*) (2 samples, 1.17%)</title><rect x="265.3" y="533" width="13.8" height="15.0" fill="rgb(210,11,22)" rx="2" ry="2" />
<text  x="268.32" y="543.5" ></text>
</g>
<g >
<title>__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (2 samples, 1.17%)</title><rect x="92.8" y="821" width="13.8" height="15.0" fill="rgb(213,84,34)" rx="2" ry="2" />
<text  x="95.81" y="831.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::RunStyleAndLayoutLifecyclePhases(blink::DocumentLifecycle::LifecycleState) (1 samples, 0.58%)</title><rect x="541.3" y="533" width="6.9" height="15.0" fill="rgb(247,145,29)" rx="2" ry="2" />
<text  x="544.35" y="543.5" ></text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::RunWorkSource(void*) (133 samples, 77.78%)</title><rect x="120.4" y="789" width="917.8" height="15.0" fill="rgb(234,197,46)" rx="2" ry="2" />
<text  x="123.41" y="799.5" >base::MessagePumpCFRunLoopBase::RunWorkSource(void*)</text>
</g>
<g >
<title>mach_msg_trap (2 samples, 1.17%)</title><rect x="265.3" y="341" width="13.8" height="15.0" fill="rgb(239,107,6)" rx="2" ry="2" />
<text  x="268.32" y="351.5" ></text>
</g>
<g >
<title>blink::PaintPropertyTreeBuilder::UpdateForSelf() (1 samples, 0.58%)</title><rect x="513.7" y="341" width="6.9" height="15.0" fill="rgb(225,156,44)" rx="2" ry="2" />
<text  x="516.74" y="351.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.58%)</title><rect x="644.9" y="549" width="6.9" height="15.0" fill="rgb(243,166,48)" rx="2" ry="2" />
<text  x="647.85" y="559.5" ></text>
</g>
<g >
<title>blink::EventTarget::FireEventListeners(blink::Event&amp;, blink::EventTargetData*, blink::HeapVector&lt;blink::RegisteredEventListener, 1u&gt;&amp;) (8 samples, 4.68%)</title><rect x="299.8" y="581" width="55.2" height="15.0" fill="rgb(238,72,41)" rx="2" ry="2" />
<text  x="302.82" y="591.5" >blink..</text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.58%)</title><rect x="920.9" y="581" width="6.9" height="15.0" fill="rgb(239,177,18)" rx="2" ry="2" />
<text  x="923.88" y="591.5" ></text>
</g>
<g >
<title>blink::CompositingInputsUpdater::UpdateSelfAndDescendantsRecursively(blink::PaintLayer*, blink::CompositingInputsUpdater::UpdateType, blink::CompositingInputsUpdater::AncestorInfo) (1 samples, 0.58%)</title><rect x="437.8" y="421" width="6.9" height="15.0" fill="rgb(249,69,29)" rx="2" ry="2" />
<text  x="440.84" y="431.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::NotifyDidProcessTask(base::PendingTask const&amp;) (1 samples, 0.58%)</title><rect x="665.6" y="677" width="6.9" height="15.0" fill="rgb(223,201,21)" rx="2" ry="2" />
<text  x="668.56" y="687.5" ></text>
</g>
<g >
<title>v8_inspector::V8ConsoleMessage::createForConsoleAPI(v8::Local&lt;v8::Context&gt;, int, int, v8_inspector::V8InspectorImpl*, double, v8_inspector::ConsoleAPIType, std::__Cr::vector&lt;v8::Local&lt;v8::Value&gt;, std::__Cr::allocator&lt;v8::Local&lt;v8::Value&gt; &gt; &gt; const&amp;, v8_inspector::String16 const&amp;, std::__Cr::unique_ptr&lt;v8_inspector::V8StackTraceImpl, std::__Cr::default_delete&lt;v8_inspector::V8StackTraceImpl&gt; &gt;) (1 samples, 0.58%)</title><rect x="286.0" y="309" width="6.9" height="15.0" fill="rgb(211,10,50)" rx="2" ry="2" />
<text  x="289.02" y="319.5" ></text>
</g>
<g >
<title>blink::ComputedStyle::HasGroupingProperty() const (1 samples, 0.58%)</title><rect x="437.8" y="357" width="6.9" height="15.0" fill="rgb(207,183,13)" rx="2" ry="2" />
<text  x="440.84" y="367.5" ></text>
</g>
<g >
<title>base::mac::CallWithEHFrame(void () block_pointer) (1 samples, 0.58%)</title><rect x="99.7" y="789" width="6.9" height="15.0" fill="rgb(245,117,49)" rx="2" ry="2" />
<text  x="102.71" y="799.5" ></text>
</g>
<g >
<title>Builtins_CallProperty2Handler (1 samples, 0.58%)</title><rect x="203.2" y="421" width="6.9" height="15.0" fill="rgb(208,169,54)" rx="2" ry="2" />
<text  x="206.22" y="431.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::PrePaintTreeWalkContext::PrePaintTreeWalkContext(blink::PrePaintTreeWalk::PrePaintTreeWalkContext const&amp;, blink::PaintInvalidatorContext::ParentContextAccessor const&amp;, bool) (1 samples, 0.58%)</title><rect x="506.8" y="357" width="6.9" height="15.0" fill="rgb(238,224,39)" rx="2" ry="2" />
<text  x="509.84" y="367.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2 samples, 1.17%)</title><rect x="154.9" y="677" width="13.8" height="15.0" fill="rgb(242,173,1)" rx="2" ry="2" />
<text  x="157.91" y="687.5" ></text>
</g>
<g >
<title>blink::(anonymous namespace)::EndOfTaskRunner::WillProcessTask(base::PendingTask const&amp;) (2 samples, 1.17%)</title><rect x="969.2" y="645" width="13.8" height="15.0" fill="rgb(214,186,46)" rx="2" ry="2" />
<text  x="972.18" y="655.5" ></text>
</g>
<g >
<title>blink::EventPath::Initialize() (1 samples, 0.58%)</title><rect x="361.9" y="581" width="6.9" height="15.0" fill="rgb(253,15,41)" rx="2" ry="2" />
<text  x="364.93" y="591.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="1003.7" y="597" width="6.9" height="15.0" fill="rgb(243,99,1)" rx="2" ry="2" />
<text  x="1006.68" y="607.5" ></text>
</g>
<g >
<title>mach_msg (6 samples, 3.51%)</title><rect x="1052.0" y="821" width="41.4" height="15.0" fill="rgb(232,191,23)" rx="2" ry="2" />
<text  x="1054.99" y="831.5" >mac..</text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.58%)</title><rect x="175.6" y="693" width="6.9" height="15.0" fill="rgb(222,212,2)" rx="2" ry="2" />
<text  x="178.61" y="703.5" ></text>
</g>
<g >
<title>blink::MemberPointerVerifier&lt;blink::CoreProbeSink, (blink::TracenessMemberConfiguration)0&gt;::CheckPointer(blink::CoreProbeSink*) (1 samples, 0.58%)</title><rect x="348.1" y="549" width="6.9" height="15.0" fill="rgb(210,153,18)" rx="2" ry="2" />
<text  x="351.13" y="559.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::PaintTree() (2 samples, 1.17%)</title><rect x="472.3" y="517" width="13.8" height="15.0" fill="rgb(246,40,2)" rx="2" ry="2" />
<text  x="475.34" y="527.5" ></text>
</g>
<g >
<title>cc::ProxyMain::BeginMainFrame(std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt;) (24 samples, 14.04%)</title><rect x="382.6" y="661" width="165.6" height="15.0" fill="rgb(250,8,4)" rx="2" ry="2" />
<text  x="385.63" y="671.5" >cc::ProxyMain::BeginM..</text>
</g>
<g >
<title>blink::(anonymous namespace)::CanOmitOverflowClip(blink::LayoutObject const&amp;) (1 samples, 0.58%)</title><rect x="527.5" y="437" width="6.9" height="15.0" fill="rgb(237,224,6)" rx="2" ry="2" />
<text  x="530.54" y="447.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.58%)</title><rect x="286.0" y="149" width="6.9" height="15.0" fill="rgb(214,121,1)" rx="2" ry="2" />
<text  x="289.02" y="159.5" ></text>
</g>
<g >
<title>blink::scheduler::MainThreadMetricsHelper::RecordTaskMetrics(blink::scheduler::MainThreadTaskQueue*, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (8 samples, 4.68%)</title><rect x="707.0" y="629" width="55.2" height="15.0" fill="rgb(232,22,6)" rx="2" ry="2" />
<text  x="709.96" y="639.5" >blink..</text>
</g>
<g >
<title>cc::LayerTreeHost::CommitComplete() (2 samples, 1.17%)</title><rect x="396.4" y="645" width="13.8" height="15.0" fill="rgb(252,142,29)" rx="2" ry="2" />
<text  x="399.43" y="655.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.58%)</title><rect x="644.9" y="645" width="6.9" height="15.0" fill="rgb(248,23,51)" rx="2" ry="2" />
<text  x="647.85" y="655.5" ></text>
</g>
<g >
<title>blink::GraphicsLayerUpdater::UpdateRecursive(blink::PaintLayer&amp;, blink::GraphicsLayerUpdater::UpdateType, blink::GraphicsLayerUpdater::UpdateContext&amp;, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 1.17%)</title><rect x="458.5" y="405" width="13.8" height="15.0" fill="rgb(247,195,25)" rx="2" ry="2" />
<text  x="461.54" y="415.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="589.6" y="661" width="6.9" height="15.0" fill="rgb(219,156,15)" rx="2" ry="2" />
<text  x="592.65" y="671.5" ></text>
</g>
<g >
<title>scheduling_metrics::TaskDurationMetricReporter&lt;blink::scheduler::MainThreadTaskQueue::QueueType&gt;::RecordTask(blink::scheduler::MainThreadTaskQueue::QueueType, base::TimeDelta) (1 samples, 0.58%)</title><rect x="748.4" y="613" width="6.9" height="15.0" fill="rgb(215,115,30)" rx="2" ry="2" />
<text  x="751.36" y="623.5" ></text>
</g>
<g >
<title>non-virtual thunk to content::LayerTreeView::DidCommit() (2 samples, 1.17%)</title><rect x="396.4" y="629" width="13.8" height="15.0" fill="rgb(234,141,19)" rx="2" ry="2" />
<text  x="399.43" y="639.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle&lt;v8::internal::Object&gt;*) (1 samples, 0.58%)</title><rect x="286.0" y="501" width="6.9" height="15.0" fill="rgb(207,170,41)" rx="2" ry="2" />
<text  x="289.02" y="511.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (2 samples, 1.17%)</title><rect x="713.9" y="613" width="13.8" height="15.0" fill="rgb(234,151,33)" rx="2" ry="2" />
<text  x="716.86" y="623.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 1.17%)</title><rect x="472.3" y="389" width="13.8" height="15.0" fill="rgb(251,177,37)" rx="2" ry="2" />
<text  x="475.34" y="399.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.58%)</title><rect x="810.5" y="677" width="6.9" height="15.0" fill="rgb(210,41,38)" rx="2" ry="2" />
<text  x="813.47" y="687.5" ></text>
</g>
<g >
<title>blink::V8ScriptRunner::CallFunction(v8::Local&lt;v8::Function&gt;, blink::ExecutionContext*, v8::Local&lt;v8::Value&gt;, int, v8::Local&lt;v8::Value&gt;*, v8::Isolate*) (1 samples, 0.58%)</title><rect x="286.0" y="533" width="6.9" height="15.0" fill="rgb(244,146,50)" rx="2" ry="2" />
<text  x="289.02" y="543.5" ></text>
</g>
<g >
<title>blink::scheduler::MetricsHelper::RecordCommonTaskMetrics(base::sequence_manager::TaskQueue*, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (2 samples, 1.17%)</title><rect x="734.6" y="613" width="13.8" height="15.0" fill="rgb(224,223,44)" rx="2" ry="2" />
<text  x="737.56" y="623.5" ></text>
</g>
<g >
<title>blink::scheduler::MainThreadSchedulerImpl::OnTaskStarted(blink::scheduler::MainThreadTaskQueue*, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (1 samples, 0.58%)</title><rect x="962.3" y="629" width="6.9" height="15.0" fill="rgb(244,119,32)" rx="2" ry="2" />
<text  x="965.28" y="639.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="796.7" y="565" width="6.9" height="15.0" fill="rgb(241,85,42)" rx="2" ry="2" />
<text  x="799.67" y="575.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (2 samples, 1.17%)</title><rect x="265.3" y="437" width="13.8" height="15.0" fill="rgb(251,71,33)" rx="2" ry="2" />
<text  x="268.32" y="447.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (3 samples, 1.75%)</title><rect x="506.8" y="405" width="20.7" height="15.0" fill="rgb(208,144,25)" rx="2" ry="2" />
<text  x="509.84" y="415.5" ></text>
</g>
<g >
<title>v8_inspector::(anonymous namespace)::V8ValueStringBuilder::append(v8::Local&lt;v8::Value&gt;, unsigned int) (1 samples, 0.58%)</title><rect x="230.8" y="325" width="6.9" height="15.0" fill="rgb(244,211,5)" rx="2" ry="2" />
<text  x="233.82" y="335.5" ></text>
</g>
<g >
<title>base::internal::WeakReferenceOwner::Invalidate() (1 samples, 0.58%)</title><rect x="796.7" y="613" width="6.9" height="15.0" fill="rgb(239,121,17)" rx="2" ry="2" />
<text  x="799.67" y="623.5" ></text>
</g>
<g >
<title>blink::HTMLInputElement::SetNonAttributeValue(WTF::String const&amp;) (1 samples, 0.58%)</title><rect x="320.5" y="485" width="6.9" height="15.0" fill="rgb(252,16,13)" rx="2" ry="2" />
<text  x="323.53" y="495.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostImmediateTaskImpl(base::sequence_manager::internal::PostedTask, base::sequence_manager::internal::TaskQueueImpl::CurrentThread) (2 samples, 1.17%)</title><rect x="265.3" y="389" width="13.8" height="15.0" fill="rgb(229,171,47)" rx="2" ry="2" />
<text  x="268.32" y="399.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::DetachFromSequence() (1 samples, 0.58%)</title><rect x="686.3" y="629" width="6.9" height="15.0" fill="rgb(253,21,7)" rx="2" ry="2" />
<text  x="689.26" y="639.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (2 samples, 1.17%)</title><rect x="223.9" y="453" width="13.8" height="15.0" fill="rgb(217,220,43)" rx="2" ry="2" />
<text  x="226.92" y="463.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::operator!=(base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter const&amp;) const (4 samples, 2.34%)</title><rect x="596.5" y="677" width="27.7" height="15.0" fill="rgb(248,101,42)" rx="2" ry="2" />
<text  x="599.55" y="687.5" >b..</text>
</g>
<g >
<title>void blink::(anonymous namespace)::SetDebugName&lt;blink::ClipPaintPropertyNode&gt;(blink::ClipPaintPropertyNode const*, WTF::String const&amp;, blink::LayoutObject const&amp;) (1 samples, 0.58%)</title><rect x="513.7" y="309" width="6.9" height="15.0" fill="rgb(221,118,25)" rx="2" ry="2" />
<text  x="516.74" y="319.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::~Iter() (1 samples, 0.58%)</title><rect x="624.2" y="677" width="6.9" height="15.0" fill="rgb(238,22,11)" rx="2" ry="2" />
<text  x="627.15" y="687.5" ></text>
</g>
<g >
<title>content::RenderWidget::DidCommitAndDrawCompositorFrame() (1 samples, 0.58%)</title><rect x="375.7" y="661" width="6.9" height="15.0" fill="rgb(211,157,19)" rx="2" ry="2" />
<text  x="378.73" y="671.5" ></text>
</g>
<g >
<title>-[NSRunLoop(NSRunLoop) runMode:beforeDate:] (171 samples, 100.00%)</title><rect x="10.0" y="885" width="1180.0" height="15.0" fill="rgb(246,97,30)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >-[NSRunLoop(NSRunLoop) runMode:beforeDate:]</text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (4 samples, 2.34%)</title><rect x="803.6" y="709" width="27.6" height="15.0" fill="rgb(210,148,48)" rx="2" ry="2" />
<text  x="806.57" y="719.5" >b..</text>
</g>
<g >
<title>v8::Number::New(v8::Isolate*, double) (1 samples, 0.58%)</title><rect x="217.0" y="373" width="6.9" height="15.0" fill="rgb(242,226,8)" rx="2" ry="2" />
<text  x="220.02" y="383.5" ></text>
</g>
<g >
<title>v8_inspector::V8Console::Log(v8::debug::ConsoleCallArguments const&amp;, v8::debug::ConsoleContext const&amp;) (2 samples, 1.17%)</title><rect x="223.9" y="389" width="13.8" height="15.0" fill="rgb(254,102,21)" rx="2" ry="2" />
<text  x="226.92" y="399.5" ></text>
</g>
<g >
<title>blink::Element::SetNeedsCompositingUpdate() (2 samples, 1.17%)</title><rect x="265.3" y="597" width="13.8" height="15.0" fill="rgb(246,148,54)" rx="2" ry="2" />
<text  x="268.32" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::OnTaskStarted(base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (1 samples, 0.58%)</title><rect x="962.3" y="645" width="6.9" height="15.0" fill="rgb(252,180,13)" rx="2" ry="2" />
<text  x="965.28" y="655.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::Flag::Invalidate() (1 samples, 0.58%)</title><rect x="796.7" y="597" width="6.9" height="15.0" fill="rgb(237,119,23)" rx="2" ry="2" />
<text  x="799.67" y="607.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="562.0" y="677" width="6.9" height="15.0" fill="rgb(212,116,14)" rx="2" ry="2" />
<text  x="565.05" y="687.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.58%)</title><rect x="638.0" y="629" width="6.9" height="15.0" fill="rgb(235,161,42)" rx="2" ry="2" />
<text  x="640.95" y="639.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.58%)</title><rect x="389.5" y="613" width="6.9" height="15.0" fill="rgb(229,80,47)" rx="2" ry="2" />
<text  x="392.53" y="623.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.58%)</title><rect x="244.6" y="437" width="6.9" height="15.0" fill="rgb(226,152,48)" rx="2" ry="2" />
<text  x="247.62" y="447.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (3 samples, 1.75%)</title><rect x="596.5" y="629" width="20.8" height="15.0" fill="rgb(213,214,18)" rx="2" ry="2" />
<text  x="599.55" y="639.5" ></text>
</g>
<g >
<title>blink::DrawingRecorder::~DrawingRecorder() (1 samples, 0.58%)</title><rect x="472.3" y="165" width="6.9" height="15.0" fill="rgb(228,104,5)" rx="2" ry="2" />
<text  x="475.34" y="175.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="907.1" y="629" width="6.9" height="15.0" fill="rgb(221,25,41)" rx="2" ry="2" />
<text  x="910.08" y="639.5" ></text>
</g>
<g >
<title>blink::PaintLayerCompositor::UpdateIfNeededRecursive(blink::DocumentLifecycle::LifecycleState) (5 samples, 2.92%)</title><rect x="437.8" y="517" width="34.5" height="15.0" fill="rgb(224,95,13)" rx="2" ry="2" />
<text  x="440.84" y="527.5" >bl..</text>
</g>
<g >
<title>non-virtual thunk to blink::Document::GetTaskRunner(blink::TaskType) (1 samples, 0.58%)</title><rect x="244.6" y="597" width="6.9" height="15.0" fill="rgb(221,99,49)" rx="2" ry="2" />
<text  x="247.62" y="607.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="914.0" y="613" width="6.9" height="15.0" fill="rgb(245,209,40)" rx="2" ry="2" />
<text  x="916.98" y="623.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.58%)</title><rect x="644.9" y="613" width="6.9" height="15.0" fill="rgb(227,158,11)" rx="2" ry="2" />
<text  x="647.85" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::GetDelayTillNextDelayedTask(base::sequence_manager::LazyNow*) const (1 samples, 0.58%)</title><rect x="562.0" y="693" width="6.9" height="15.0" fill="rgb(221,60,5)" rx="2" ry="2" />
<text  x="565.05" y="703.5" ></text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::RunWork() (133 samples, 77.78%)</title><rect x="120.4" y="757" width="917.8" height="15.0" fill="rgb(208,116,3)" rx="2" ry="2" />
<text  x="123.41" y="767.5" >base::MessagePumpCFRunLoopBase::RunWork()</text>
</g>
<g >
<title>content::ContentMain(content::ContentMainParams const&amp;) (171 samples, 100.00%)</title><rect x="10.0" y="1013" width="1180.0" height="15.0" fill="rgb(217,53,30)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >content::ContentMain(content::ContentMainParams const&amp;)</text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.58%)</title><rect x="582.7" y="613" width="6.9" height="15.0" fill="rgb(208,71,0)" rx="2" ry="2" />
<text  x="585.75" y="623.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.58%)</title><rect x="644.9" y="565" width="6.9" height="15.0" fill="rgb(210,97,3)" rx="2" ry="2" />
<text  x="647.85" y="575.5" ></text>
</g>
<g >
<title>WTF::HashTableAddResult&lt;WTF::HashTable&lt;blink::DisplayItemClient const*, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::PartitionAllocator&gt;, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt; WTF::HashTable&lt;blink::DisplayItemClient const*, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::PartitionAllocator&gt;::insert&lt;WTF::HashMapTranslator&lt;WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::PartitionAllocator&gt;, blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;(blink::DisplayItemClient const*&amp;&amp;, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt;&amp;&amp;) (1 samples, 0.58%)</title><rect x="472.3" y="101" width="6.9" height="15.0" fill="rgb(211,161,24)" rx="2" ry="2" />
<text  x="475.34" y="111.5" ></text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (5 samples, 2.92%)</title><rect x="203.2" y="469" width="34.5" height="15.0" fill="rgb(250,227,14)" rx="2" ry="2" />
<text  x="206.22" y="479.5" >Bu..</text>
</g>
<g >
<title>base::sequence_manager::internal::AtomicFlagSet::RunActiveCallbacks() const (1 samples, 0.58%)</title><rect x="831.2" y="661" width="6.9" height="15.0" fill="rgb(226,180,16)" rx="2" ry="2" />
<text  x="834.17" y="671.5" ></text>
</g>
<g >
<title>WTF::StringTypeAdapter&lt;char const*&gt;::StringTypeAdapter(char const*) (1 samples, 0.58%)</title><rect x="306.7" y="469" width="6.9" height="15.0" fill="rgb(238,54,42)" rx="2" ry="2" />
<text  x="309.73" y="479.5" ></text>
</g>
<g >
<title>v8::internal::Isolate::RegisterTryCatchHandler(v8::TryCatch*) (1 samples, 0.58%)</title><rect x="782.9" y="565" width="6.9" height="15.0" fill="rgb(210,162,14)" rx="2" ry="2" />
<text  x="785.87" y="575.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (3 samples, 1.75%)</title><rect x="596.5" y="645" width="20.8" height="15.0" fill="rgb(236,173,23)" rx="2" ry="2" />
<text  x="599.55" y="655.5" ></text>
</g>
<g >
<title>blink::ScheduledAction::Execute(blink::LocalFrame*) (6 samples, 3.51%)</title><rect x="203.2" y="613" width="41.4" height="15.0" fill="rgb(248,17,50)" rx="2" ry="2" />
<text  x="206.22" y="623.5" >bli..</text>
</g>
<g >
<title>base::internal::WeakPtrBase::WeakPtrBase(base::internal::WeakReference const&amp;, unsigned long) (1 samples, 0.58%)</title><rect x="679.4" y="645" width="6.9" height="15.0" fill="rgb(221,103,50)" rx="2" ry="2" />
<text  x="682.36" y="655.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (1 samples, 0.58%)</title><rect x="286.0" y="453" width="6.9" height="15.0" fill="rgb(238,99,27)" rx="2" ry="2" />
<text  x="289.02" y="463.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::SetScrollParent(cc::Layer*) (1 samples, 0.58%)</title><rect x="458.5" y="373" width="6.9" height="15.0" fill="rgb(206,171,36)" rx="2" ry="2" />
<text  x="461.54" y="383.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTaskImpl() (1 samples, 0.58%)</title><rect x="168.7" y="677" width="6.9" height="15.0" fill="rgb(248,222,14)" rx="2" ry="2" />
<text  x="171.71" y="687.5" ></text>
</g>
<g >
<title>cc::PictureLayer::Update() (2 samples, 1.17%)</title><rect x="410.2" y="597" width="13.8" height="15.0" fill="rgb(238,205,19)" rx="2" ry="2" />
<text  x="413.23" y="607.5" ></text>
</g>
<g >
<title>cc::ProxyMain::SetNeedsAnimate() (2 samples, 1.17%)</title><rect x="265.3" y="485" width="13.8" height="15.0" fill="rgb(252,45,45)" rx="2" ry="2" />
<text  x="268.32" y="495.5" ></text>
</g>
<g >
<title>cc::RecordingSource::FinishDisplayItemListUpdate() (1 samples, 0.58%)</title><rect x="410.2" y="581" width="6.9" height="15.0" fill="rgb(225,67,2)" rx="2" ry="2" />
<text  x="413.23" y="591.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 1.17%)</title><rect x="693.2" y="629" width="13.8" height="15.0" fill="rgb(220,3,33)" rx="2" ry="2" />
<text  x="696.16" y="639.5" ></text>
</g>
<g >
<title>blink::StepRange::ClampValue(blink::Decimal const&amp;) const (1 samples, 0.58%)</title><rect x="327.4" y="485" width="6.9" height="15.0" fill="rgb(219,179,7)" rx="2" ry="2" />
<text  x="330.43" y="495.5" ></text>
</g>
<g >
<title>blink::InputType::SetValue(WTF::String const&amp;, bool, blink::TextFieldEventBehavior, blink::TextControlSetValueSelection) (1 samples, 0.58%)</title><rect x="320.5" y="501" width="6.9" height="15.0" fill="rgb(237,121,42)" rx="2" ry="2" />
<text  x="323.53" y="511.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::WalkTree(blink::LocalFrameView&amp;) (5 samples, 2.92%)</title><rect x="506.8" y="517" width="34.5" height="15.0" fill="rgb(206,7,50)" rx="2" ry="2" />
<text  x="509.84" y="527.5" >bl..</text>
</g>
<g >
<title>blink::ReplacedPainter::Paint(blink::PaintInfo const&amp;) (1 samples, 0.58%)</title><rect x="472.3" y="213" width="6.9" height="15.0" fill="rgb(205,20,45)" rx="2" ry="2" />
<text  x="475.34" y="223.5" ></text>
</g>
<g >
<title>blink::LayoutView::ViewRect() const (1 samples, 0.58%)</title><rect x="527.5" y="405" width="6.9" height="15.0" fill="rgb(252,189,50)" rx="2" ry="2" />
<text  x="530.54" y="415.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 1.17%)</title><rect x="472.3" y="453" width="13.8" height="15.0" fill="rgb(230,171,8)" rx="2" ry="2" />
<text  x="475.34" y="463.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::UpdateLifecyclePhases(blink::DocumentLifecycle::LifecycleState, blink::DocumentLifecycle::LifecycleUpdateReason) (16 samples, 9.36%)</title><rect x="437.8" y="565" width="110.4" height="15.0" fill="rgb(248,78,28)" rx="2" ry="2" />
<text  x="440.84" y="575.5" >blink::LocalF..</text>
</g>
<g >
<title>blink::LayoutBox::CanResize() const (1 samples, 0.58%)</title><rect x="479.2" y="181" width="6.9" height="15.0" fill="rgb(214,172,25)" rx="2" ry="2" />
<text  x="482.24" y="191.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.58%)</title><rect x="568.9" y="661" width="6.9" height="15.0" fill="rgb(225,8,15)" rx="2" ry="2" />
<text  x="571.95" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::TaskQueue::CreateTaskRunner(unsigned char) (1 samples, 0.58%)</title><rect x="244.6" y="533" width="6.9" height="15.0" fill="rgb(250,75,6)" rx="2" ry="2" />
<text  x="247.62" y="543.5" ></text>
</g>
<g >
<title>base::SequenceToken::IsValid() const (1 samples, 0.58%)</title><rect x="996.8" y="629" width="6.9" height="15.0" fill="rgb(228,86,9)" rx="2" ry="2" />
<text  x="999.78" y="639.5" ></text>
</g>
<g >
<title>cc::InvalidationRegion::Swap(cc::Region*) (1 samples, 0.58%)</title><rect x="417.1" y="565" width="6.9" height="15.0" fill="rgb(207,13,23)" rx="2" ry="2" />
<text  x="420.13" y="575.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="617.3" y="661" width="6.9" height="15.0" fill="rgb(229,186,26)" rx="2" ry="2" />
<text  x="620.25" y="671.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::EnqueueMicrotask(v8::internal::Microtask) (1 samples, 0.58%)</title><rect x="299.8" y="501" width="6.9" height="15.0" fill="rgb(218,190,51)" rx="2" ry="2" />
<text  x="302.82" y="511.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.58%)</title><rect x="244.6" y="453" width="6.9" height="15.0" fill="rgb(233,140,1)" rx="2" ry="2" />
<text  x="247.62" y="463.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.58%)</title><rect x="575.8" y="677" width="6.9" height="15.0" fill="rgb(217,119,19)" rx="2" ry="2" />
<text  x="578.85" y="687.5" ></text>
</g>
<g >
<title>blink::paint_property_tree_printer::UpdateDebugNames(blink::LayoutObject const&amp;, blink::ObjectPaintProperties&amp;) (1 samples, 0.58%)</title><rect x="513.7" y="325" width="6.9" height="15.0" fill="rgb(224,124,10)" rx="2" ry="2" />
<text  x="516.74" y="335.5" ></text>
</g>
<g >
<title>szone_malloc_should_clear (1 samples, 0.58%)</title><rect x="244.6" y="421" width="6.9" height="15.0" fill="rgb(250,188,12)" rx="2" ry="2" />
<text  x="247.62" y="431.5" ></text>
</g>
<g >
<title>cc::LayerTreeHost::SetNeedsAnimate() (2 samples, 1.17%)</title><rect x="265.3" y="501" width="13.8" height="15.0" fill="rgb(236,220,31)" rx="2" ry="2" />
<text  x="268.32" y="511.5" ></text>
</g>
<g >
<title>blink::ScheduledAction::Execute(blink::ExecutionContext*) (6 samples, 3.51%)</title><rect x="203.2" y="629" width="41.4" height="15.0" fill="rgb(226,147,30)" rx="2" ry="2" />
<text  x="206.22" y="639.5" >bli..</text>
</g>
<g >
<title>blink::RootScrollerController::RecomputeEffectiveRootScroller() (1 samples, 0.58%)</title><rect x="541.3" y="485" width="6.9" height="15.0" fill="rgb(232,173,31)" rx="2" ry="2" />
<text  x="544.35" y="495.5" ></text>
</g>
<g >
<title>base::ScopedDeferTaskPosting::ScopedDeferTaskPosting() (1 samples, 0.58%)</title><rect x="382.6" y="597" width="6.9" height="15.0" fill="rgb(209,140,14)" rx="2" ry="2" />
<text  x="385.63" y="607.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::is_end() const (1 samples, 0.58%)</title><rect x="658.7" y="661" width="6.9" height="15.0" fill="rgb(215,44,33)" rx="2" ry="2" />
<text  x="661.65" y="671.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::RecordCrashKeys(base::PendingTask const&amp;) (2 samples, 1.17%)</title><rect x="941.6" y="645" width="13.8" height="15.0" fill="rgb(229,120,7)" rx="2" ry="2" />
<text  x="944.58" y="655.5" ></text>
</g>
<g >
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.58%)</title><rect x="1093.4" y="837" width="6.9" height="15.0" fill="rgb(220,118,33)" rx="2" ry="2" />
<text  x="1096.39" y="847.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::InvokeWithTryCatch(v8::internal::Isolate*, v8::internal::(anonymous namespace)::InvokeParams const&amp;) (1 samples, 0.58%)</title><rect x="782.9" y="597" width="6.9" height="15.0" fill="rgb(247,59,29)" rx="2" ry="2" />
<text  x="785.87" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::OnTaskCompleted(base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming*, base::sequence_manager::LazyNow*) (17 samples, 9.94%)</title><rect x="672.5" y="677" width="117.3" height="15.0" fill="rgb(226,104,2)" rx="2" ry="2" />
<text  x="675.46" y="687.5" >base::sequence..</text>
</g>
<g >
<title>blink::JSBasedEventListener::Invoke(blink::ExecutionContext*, blink::Event*) (1 samples, 0.58%)</title><rect x="286.0" y="581" width="6.9" height="15.0" fill="rgb(242,66,7)" rx="2" ry="2" />
<text  x="289.02" y="591.5" ></text>
</g>
<g >
<title>blink::MediaControlTimelineElement::SetPosition(double) (5 samples, 2.92%)</title><rect x="306.7" y="533" width="34.5" height="15.0" fill="rgb(249,28,5)" rx="2" ry="2" />
<text  x="309.73" y="543.5" >bl..</text>
</g>
<g >
<title>WTF::ThreadCheckingCallbackWrapper&lt;base::OnceCallback&lt;void ()&gt;, void ()&gt;::Run() (27 samples, 15.79%)</title><rect x="182.5" y="693" width="186.3" height="15.0" fill="rgb(238,70,28)" rx="2" ry="2" />
<text  x="185.51" y="703.5" >WTF::ThreadCheckingCallb..</text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.58%)</title><rect x="983.0" y="629" width="6.9" height="15.0" fill="rgb(247,4,36)" rx="2" ry="2" />
<text  x="985.98" y="639.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="914.0" y="629" width="6.9" height="15.0" fill="rgb(251,74,3)" rx="2" ry="2" />
<text  x="916.98" y="639.5" ></text>
</g>
<g >
<title>__commpage_gettimeofday_internal (1 samples, 0.58%)</title><rect x="16.9" y="837" width="6.9" height="15.0" fill="rgb(240,211,32)" rx="2" ry="2" />
<text  x="19.90" y="847.5" ></text>
</g>
<g >
<title>v8::Isolate::EnqueueMicrotask(void (*)(void*), void*) (1 samples, 0.58%)</title><rect x="299.8" y="517" width="6.9" height="15.0" fill="rgb(225,194,5)" rx="2" ry="2" />
<text  x="302.82" y="527.5" ></text>
</g>
<g >
<title>blink::V8ScriptRunner::CallFunction(v8::Local&lt;v8::Function&gt;, blink::ExecutionContext*, v8::Local&lt;v8::Value&gt;, int, v8::Local&lt;v8::Value&gt;*, v8::Isolate*) (5 samples, 2.92%)</title><rect x="203.2" y="565" width="34.5" height="15.0" fill="rgb(214,143,16)" rx="2" ry="2" />
<text  x="206.22" y="575.5" >bl..</text>
</g>
<g >
<title>CFRunLoopRunSpecific (167 samples, 97.66%)</title><rect x="23.8" y="869" width="1152.4" height="15.0" fill="rgb(210,98,50)" rx="2" ry="2" />
<text  x="26.80" y="879.5" >CFRunLoopRunSpecific</text>
</g>
<g >
<title>blink::WebViewImpl::UpdateLifecycle(blink::WebWidget::LifecycleUpdate, blink::WebWidget::LifecycleUpdateReason) (17 samples, 9.94%)</title><rect x="430.9" y="613" width="117.3" height="15.0" fill="rgb(252,86,27)" rx="2" ry="2" />
<text  x="433.94" y="623.5" >blink::WebView..</text>
</g>
<g >
<title>blink::LocalFrameView::RunCompositingLifecyclePhase(blink::DocumentLifecycle::LifecycleState) (5 samples, 2.92%)</title><rect x="437.8" y="533" width="34.5" height="15.0" fill="rgb(250,17,44)" rx="2" ry="2" />
<text  x="440.84" y="543.5" >bl..</text>
</g>
<g >
<title>scheduling_metrics::ThreadMetrics::RecordTaskMetrics(base::sequence_manager::TaskQueue*, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming const&amp;) (2 samples, 1.17%)</title><rect x="734.6" y="597" width="13.8" height="15.0" fill="rgb(223,107,29)" rx="2" ry="2" />
<text  x="737.56" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::TakeImmediateIncomingQueueTasks() (1 samples, 0.58%)</title><rect x="831.2" y="629" width="6.9" height="15.0" fill="rgb(205,198,31)" rx="2" ry="2" />
<text  x="834.17" y="639.5" ></text>
</g>
<g >
<title>std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt;* logging::CheckNEImpl&lt;(anonymous namespace)::TlsVectorEntry*, void*&gt;((anonymous namespace)::TlsVectorEntry* const&amp;, void* const&amp;, char const*) (1 samples, 0.58%)</title><rect x="658.7" y="581" width="6.9" height="15.0" fill="rgb(226,164,19)" rx="2" ry="2" />
<text  x="661.65" y="591.5" ></text>
</g>
<g >
<title>gettimeofday (1 samples, 0.58%)</title><rect x="72.1" y="821" width="6.9" height="15.0" fill="rgb(212,223,35)" rx="2" ry="2" />
<text  x="75.11" y="831.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks(v8::internal::Isolate*) (1 samples, 0.58%)</title><rect x="782.9" y="629" width="6.9" height="15.0" fill="rgb(236,202,54)" rx="2" ry="2" />
<text  x="785.87" y="639.5" ></text>
</g>
<g >
<title>__CFRunLoopCollectSources0 (1 samples, 0.58%)</title><rect x="113.5" y="773" width="6.9" height="15.0" fill="rgb(216,166,21)" rx="2" ry="2" />
<text  x="116.51" y="783.5" ></text>
</g>
<g >
<title>blink::PaintInvalidatorContext::ParentContextAccessor::ParentContext() const (1 samples, 0.58%)</title><rect x="506.8" y="341" width="6.9" height="15.0" fill="rgb(238,13,50)" rx="2" ry="2" />
<text  x="509.84" y="351.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.58%)</title><rect x="707.0" y="613" width="6.9" height="15.0" fill="rgb(212,228,13)" rx="2" ry="2" />
<text  x="709.96" y="623.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="934.7" y="629" width="6.9" height="15.0" fill="rgb(228,27,41)" rx="2" ry="2" />
<text  x="937.68" y="639.5" ></text>
</g>
<g >
<title>blink::V8RTCSctpTransport::MaxMessageSizeAttributeGetterCallback(v8::FunctionCallbackInfo&lt;v8::Value&gt; const&amp;) (1 samples, 0.58%)</title><rect x="217.0" y="389" width="6.9" height="15.0" fill="rgb(209,52,50)" rx="2" ry="2" />
<text  x="220.02" y="399.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TraceQueueSize() const (1 samples, 0.58%)</title><rect x="1017.5" y="645" width="6.9" height="15.0" fill="rgb(224,173,3)" rx="2" ry="2" />
<text  x="1020.49" y="655.5" ></text>
</g>
<g >
<title>blink::EventDispatcher::DispatchEventAtTarget() (8 samples, 4.68%)</title><rect x="299.8" y="629" width="55.2" height="15.0" fill="rgb(246,94,33)" rx="2" ry="2" />
<text  x="302.82" y="639.5" >blink..</text>
</g>
<g >
<title>_CFGetTSDCreateIfNeeded (1 samples, 0.58%)</title><rect x="1038.2" y="821" width="6.9" height="15.0" fill="rgb(237,27,11)" rx="2" ry="2" />
<text  x="1041.19" y="831.5" ></text>
</g>
<g >
<title>blink::EventTarget::FireEventListeners(blink::Event&amp;, blink::EventTargetData*, blink::HeapVector&lt;blink::RegisteredEventListener, 1u&gt;&amp;) (1 samples, 0.58%)</title><rect x="286.0" y="597" width="6.9" height="15.0" fill="rgb(234,226,18)" rx="2" ry="2" />
<text  x="289.02" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTaskImpl() (29 samples, 16.96%)</title><rect x="831.2" y="677" width="200.1" height="15.0" fill="rgb(237,87,39)" rx="2" ry="2" />
<text  x="834.17" y="687.5" >base::sequence_manager::in..</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="638.0" y="645" width="6.9" height="15.0" fill="rgb(224,147,5)" rx="2" ry="2" />
<text  x="640.95" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, bool*) (123 samples, 71.93%)</title><rect x="182.5" y="725" width="848.8" height="15.0" fill="rgb(235,226,24)" rx="2" ry="2" />
<text  x="185.51" y="735.5" >base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWorkImpl(base::sequence_manager::LazyNow*, b..</text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.58%)</title><rect x="610.4" y="613" width="6.9" height="15.0" fill="rgb(250,187,18)" rx="2" ry="2" />
<text  x="613.35" y="623.5" ></text>
</g>
<g >
<title>blink::TaskRunnerTimer&lt;blink::HTMLMediaElement, true&gt;::CanFire() const (1 samples, 0.58%)</title><rect x="292.9" y="645" width="6.9" height="15.0" fill="rgb(227,204,48)" rx="2" ry="2" />
<text  x="295.92" y="655.5" ></text>
</g>
<g >
<title>blink::HTMLInputElement::ParseAttribute(blink::Element::AttributeModificationParams const&amp;) (1 samples, 0.58%)</title><rect x="313.6" y="453" width="6.9" height="15.0" fill="rgb(246,139,43)" rx="2" ry="2" />
<text  x="316.63" y="463.5" ></text>
</g>
<g >
<title>blink::EventPath* blink::MakeGarbageCollected&lt;blink::EventPath, blink::Node&amp;, blink::Event*&gt;(blink::Node&amp;&amp;&amp;, blink::Event*&amp;&amp;) (1 samples, 0.58%)</title><rect x="361.9" y="613" width="6.9" height="15.0" fill="rgb(214,229,15)" rx="2" ry="2" />
<text  x="364.93" y="623.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (1 samples, 0.58%)</title><rect x="217.0" y="405" width="6.9" height="15.0" fill="rgb(222,202,18)" rx="2" ry="2" />
<text  x="220.02" y="415.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::DelayTillNextTask(base::sequence_manager::LazyNow*) const (2 samples, 1.17%)</title><rect x="562.0" y="709" width="13.8" height="15.0" fill="rgb(251,121,8)" rx="2" ry="2" />
<text  x="565.05" y="719.5" ></text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::ScheduleDelayedWork(base::TimeTicks const&amp;) (5 samples, 2.92%)</title><rect x="120.4" y="741" width="34.5" height="15.0" fill="rgb(253,39,14)" rx="2" ry="2" />
<text  x="123.41" y="751.5" >ba..</text>
</g>
<g >
<title>blink::CompositingInputsUpdater::Update() (1 samples, 0.58%)</title><rect x="437.8" y="469" width="6.9" height="15.0" fill="rgb(247,68,51)" rx="2" ry="2" />
<text  x="440.84" y="479.5" ></text>
</g>
<g >
<title>blink::EventDispatcher::Dispatch() (9 samples, 5.26%)</title><rect x="299.8" y="645" width="62.1" height="15.0" fill="rgb(224,163,35)" rx="2" ry="2" />
<text  x="302.82" y="655.5" >blink:..</text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (2 samples, 1.17%)</title><rect x="713.9" y="597" width="13.8" height="15.0" fill="rgb(212,85,31)" rx="2" ry="2" />
<text  x="716.86" y="607.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.58%)</title><rect x="499.9" y="437" width="6.9" height="15.0" fill="rgb(227,219,10)" rx="2" ry="2" />
<text  x="502.94" y="447.5" ></text>
</g>
<g >
<title>base::SampleVectorBase::Accumulate(int, int) (1 samples, 0.58%)</title><rect x="707.0" y="597" width="6.9" height="15.0" fill="rgb(226,189,7)" rx="2" ry="2" />
<text  x="709.96" y="607.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.58%)</title><rect x="700.1" y="613" width="6.9" height="15.0" fill="rgb(235,62,11)" rx="2" ry="2" />
<text  x="703.06" y="623.5" ></text>
</g>
<g >
<title>blink::PageAnimator::UpdateAllLifecyclePhases(blink::LocalFrame&amp;, blink::DocumentLifecycle::LifecycleUpdateReason) (17 samples, 9.94%)</title><rect x="430.9" y="597" width="117.3" height="15.0" fill="rgb(217,61,33)" rx="2" ry="2" />
<text  x="433.94" y="607.5" >blink::PageAni..</text>
</g>
<g >
<title>scheduling_metrics::TaskDurationMetricReporter&lt;scheduling_metrics::ThreadType&gt;::RecordTask(scheduling_metrics::ThreadType, base::TimeDelta) (2 samples, 1.17%)</title><rect x="734.6" y="581" width="13.8" height="15.0" fill="rgb(247,160,46)" rx="2" ry="2" />
<text  x="737.56" y="591.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.58%)</title><rect x="575.8" y="645" width="6.9" height="15.0" fill="rgb(231,30,4)" rx="2" ry="2" />
<text  x="578.85" y="655.5" ></text>
</g>
<g >
<title>content::RenderFrameImpl::DidAddMessageToConsole(blink::WebConsoleMessage const&amp;, blink::WebString const&amp;, unsigned int, blink::WebString const&amp;) (1 samples, 0.58%)</title><rect x="286.0" y="245" width="6.9" height="15.0" fill="rgb(254,20,47)" rx="2" ry="2" />
<text  x="289.02" y="255.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::currentTime() const (2 samples, 1.17%)</title><rect x="251.5" y="629" width="13.8" height="15.0" fill="rgb(237,36,19)" rx="2" ry="2" />
<text  x="254.52" y="639.5" ></text>
</g>
<g >
<title>blink::ChromeClientImpl::AddMessageToConsole(blink::LocalFrame*, blink::mojom::ConsoleMessageSource, blink::mojom::ConsoleMessageLevel, WTF::String const&amp;, unsigned int, WTF::String const&amp;, WTF::String const&amp;) (1 samples, 0.58%)</title><rect x="286.0" y="261" width="6.9" height="15.0" fill="rgb(207,164,37)" rx="2" ry="2" />
<text  x="289.02" y="271.5" ></text>
</g>
<g >
<title>_CFRelease (1 samples, 0.58%)</title><rect x="85.9" y="821" width="6.9" height="15.0" fill="rgb(244,150,51)" rx="2" ry="2" />
<text  x="88.91" y="831.5" ></text>
</g>
<g >
<title>blink::scheduler::ThrottledTimeDomain::CreateLazyNow() const (2 samples, 1.17%)</title><rect x="851.9" y="645" width="13.8" height="15.0" fill="rgb(211,201,52)" rx="2" ry="2" />
<text  x="854.87" y="655.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (content::WebMediaPlayerMS::*)(), base::WeakPtr&lt;content::WebMediaPlayerMS&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (1 samples, 0.58%)</title><rect x="548.2" y="693" width="6.9" height="15.0" fill="rgb(217,224,49)" rx="2" ry="2" />
<text  x="551.25" y="703.5" ></text>
</g>
<g >
<title>blink::EventTiming::Create(blink::LocalDOMWindow*, blink::Event const&amp;) (1 samples, 0.58%)</title><rect x="355.0" y="629" width="6.9" height="15.0" fill="rgb(206,9,37)" rx="2" ry="2" />
<text  x="358.03" y="639.5" ></text>
</g>
<g >
<title>blink::ImagePainter::Paint(blink::PaintInfo const&amp;) (1 samples, 0.58%)</title><rect x="472.3" y="245" width="6.9" height="15.0" fill="rgb(210,89,29)" rx="2" ry="2" />
<text  x="475.34" y="255.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.58%)</title><rect x="665.6" y="629" width="6.9" height="15.0" fill="rgb(226,184,7)" rx="2" ry="2" />
<text  x="668.56" y="639.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.58%)</title><rect x="631.1" y="613" width="6.9" height="15.0" fill="rgb(207,133,10)" rx="2" ry="2" />
<text  x="634.05" y="623.5" ></text>
</g>
<g >
<title>blink::FindVisualRectNeedingUpdateScopeBase::CheckVisualRect(blink::IntRect const&amp;) (1 samples, 0.58%)</title><rect x="520.6" y="341" width="6.9" height="15.0" fill="rgb(216,212,41)" rx="2" ry="2" />
<text  x="523.64" y="351.5" ></text>
</g>
<g >
<title>WTF::HashTableAddResult&lt;WTF::HashTable&lt;void const*, void const*, WTF::IdentityExtractor, WTF::PtrHash&lt;void const&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::PartitionAllocator&gt;, void const*&gt; WTF::HashTable&lt;void const*, void const*, WTF::IdentityExtractor, WTF::PtrHash&lt;void const&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::PartitionAllocator&gt;::insert&lt;WTF::IdentityHashTranslator&lt;WTF::PtrHash&lt;void const&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::PartitionAllocator&gt;, blink::EffectPaintPropertyNode const* const&amp;, blink::EffectPaintPropertyNode const*&amp;&gt;(blink::EffectPaintPropertyNode const* const&amp;&amp;&amp;, blink::EffectPaintPropertyNode const*&amp;&amp;&amp;) (1 samples, 0.58%)</title><rect x="486.1" y="469" width="6.9" height="15.0" fill="rgb(232,182,18)" rx="2" ry="2" />
<text  x="489.14" y="479.5" ></text>
</g>
<g >
<title>WTF::CurrentThread() (1 samples, 0.58%)</title><rect x="513.7" y="261" width="6.9" height="15.0" fill="rgb(222,220,37)" rx="2" ry="2" />
<text  x="516.74" y="271.5" ></text>
</g>
<g >
<title>__CFRunLoopDoSources0 (134 samples, 78.36%)</title><rect x="113.5" y="837" width="924.7" height="15.0" fill="rgb(214,186,12)" rx="2" ry="2" />
<text  x="116.51" y="847.5" >__CFRunLoopDoSources0</text>
</g>
<g >
<title>blink::LayoutGeometryMap::PushMappingsToAncestor(blink::PaintLayer const*, blink::PaintLayer const*) (1 samples, 0.58%)</title><rect x="437.8" y="405" width="6.9" height="15.0" fill="rgb(232,200,53)" rx="2" ry="2" />
<text  x="440.84" y="415.5" ></text>
</g>
<g >
<title>blink::PaintLayerCompositor::UpdateIfNeededRecursiveInternal(blink::DocumentLifecycle::LifecycleState, blink::CompositingReasonsStats&amp;) (5 samples, 2.92%)</title><rect x="437.8" y="501" width="34.5" height="15.0" fill="rgb(248,154,30)" rx="2" ry="2" />
<text  x="440.84" y="511.5" >bl..</text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.58%)</title><rect x="499.9" y="453" width="6.9" height="15.0" fill="rgb(249,2,51)" rx="2" ry="2" />
<text  x="502.94" y="463.5" ></text>
</g>
<g >
<title>mach_msg_trap (1 samples, 0.58%)</title><rect x="286.0" y="37" width="6.9" height="15.0" fill="rgb(209,73,35)" rx="2" ry="2" />
<text  x="289.02" y="47.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoDelayedWork(base::TimeTicks*) (4 samples, 2.34%)</title><rect x="154.9" y="741" width="27.6" height="15.0" fill="rgb(234,71,27)" rx="2" ry="2" />
<text  x="157.91" y="751.5" >b..</text>
</g>
<g >
<title>__psynch_mutexwait (1 samples, 0.58%)</title><rect x="1093.4" y="805" width="6.9" height="15.0" fill="rgb(248,54,33)" rx="2" ry="2" />
<text  x="1096.39" y="815.5" ></text>
</g>
<g >
<title>scheduling_metrics::TotalDurationMetricReporter::RecordAdditionalDuration(base::TimeDelta) (1 samples, 0.58%)</title><rect x="755.3" y="613" width="6.9" height="15.0" fill="rgb(209,67,40)" rx="2" ry="2" />
<text  x="758.26" y="623.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.58%)</title><rect x="631.1" y="661" width="6.9" height="15.0" fill="rgb(242,100,45)" rx="2" ry="2" />
<text  x="634.05" y="671.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.58%)</title><rect x="845.0" y="581" width="6.9" height="15.0" fill="rgb(222,79,11)" rx="2" ry="2" />
<text  x="847.97" y="591.5" ></text>
</g>
<g >
<title>blink::PaintLayerCompositor::SetNeedsCompositingUpdate(blink::CompositingUpdateType) (2 samples, 1.17%)</title><rect x="265.3" y="549" width="13.8" height="15.0" fill="rgb(239,124,29)" rx="2" ry="2" />
<text  x="268.32" y="559.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::DidRunTask() (33 samples, 19.30%)</title><rect x="575.8" y="709" width="227.8" height="15.0" fill="rgb(225,103,37)" rx="2" ry="2" />
<text  x="578.85" y="719.5" >base::sequence_manager::intern..</text>
</g>
<g >
<title>v8::TryCatch::TryCatch(v8::Isolate*) (1 samples, 0.58%)</title><rect x="782.9" y="581" width="6.9" height="15.0" fill="rgb(245,199,37)" rx="2" ry="2" />
<text  x="785.87" y="591.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (3 samples, 1.75%)</title><rect x="506.8" y="421" width="20.7" height="15.0" fill="rgb(237,191,33)" rx="2" ry="2" />
<text  x="509.84" y="431.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;content::RenderViewObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.58%)</title><rect x="403.3" y="565" width="6.9" height="15.0" fill="rgb(243,158,37)" rx="2" ry="2" />
<text  x="406.33" y="575.5" ></text>
</g>
<g >
<title>blink::LayoutImage::Paint(blink::PaintInfo const&amp;) const (1 samples, 0.58%)</title><rect x="479.2" y="245" width="6.9" height="15.0" fill="rgb(221,204,6)" rx="2" ry="2" />
<text  x="482.24" y="255.5" ></text>
</g>
<g >
<title>v8::internal::HeapObject::IsConsString() const (1 samples, 0.58%)</title><rect x="230.8" y="261" width="6.9" height="15.0" fill="rgb(247,116,0)" rx="2" ry="2" />
<text  x="233.82" y="271.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::UpdateClipParent(blink::PaintLayer const*) (1 samples, 0.58%)</title><rect x="444.7" y="389" width="6.9" height="15.0" fill="rgb(215,72,42)" rx="2" ry="2" />
<text  x="447.74" y="399.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueue::RemoveAllCanceledTasksFromFront() (1 samples, 0.58%)</title><rect x="1003.7" y="661" width="6.9" height="15.0" fill="rgb(233,32,43)" rx="2" ry="2" />
<text  x="1006.68" y="671.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.58%)</title><rect x="900.2" y="629" width="6.9" height="15.0" fill="rgb(216,199,26)" rx="2" ry="2" />
<text  x="903.18" y="639.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::UpdateRenderingContext() (1 samples, 0.58%)</title><rect x="451.6" y="389" width="6.9" height="15.0" fill="rgb(231,48,23)" rx="2" ry="2" />
<text  x="454.64" y="399.5" ></text>
</g>
<g >
<title>blink::NormalPage::FindHeaderFromAddress(unsigned char*) (1 samples, 0.58%)</title><rect x="348.1" y="517" width="6.9" height="15.0" fill="rgb(213,32,37)" rx="2" ry="2" />
<text  x="351.13" y="527.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 1.17%)</title><rect x="472.3" y="485" width="13.8" height="15.0" fill="rgb(243,197,10)" rx="2" ry="2" />
<text  x="475.34" y="495.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::RunPrePaintLifecyclePhase(blink::DocumentLifecycle::LifecycleState) (5 samples, 2.92%)</title><rect x="506.8" y="533" width="34.5" height="15.0" fill="rgb(235,1,16)" rx="2" ry="2" />
<text  x="509.84" y="543.5" >bl..</text>
</g>
<g >
<title>blink::LayoutView::OverflowClipRect(blink::PhysicalOffset const&amp;, blink::OverlayScrollbarClipBehavior) const (1 samples, 0.58%)</title><rect x="527.5" y="421" width="6.9" height="15.0" fill="rgb(237,222,3)" rx="2" ry="2" />
<text  x="530.54" y="431.5" ></text>
</g>
<g >
<title>blink::LayoutVideo::UpdateFromElement() (2 samples, 1.17%)</title><rect x="265.3" y="629" width="13.8" height="15.0" fill="rgb(226,25,46)" rx="2" ry="2" />
<text  x="268.32" y="639.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.58%)</title><rect x="845.0" y="565" width="6.9" height="15.0" fill="rgb(211,29,35)" rx="2" ry="2" />
<text  x="847.97" y="575.5" ></text>
</g>
<g >
<title>blink::PaintArtifactCompositor::DecompositeTransforms(blink::PaintArtifact const&amp;) (1 samples, 0.58%)</title><rect x="486.1" y="485" width="6.9" height="15.0" fill="rgb(205,138,24)" rx="2" ry="2" />
<text  x="489.14" y="495.5" ></text>
</g>
<g >
<title>CFAbsoluteTimeGetCurrent (1 samples, 0.58%)</title><rect x="16.9" y="869" width="6.9" height="15.0" fill="rgb(218,219,12)" rx="2" ry="2" />
<text  x="19.90" y="879.5" ></text>
</g>
<g >
<title>blink::HTMLFormControlElement::AttributeChanged(blink::Element::AttributeModificationParams const&amp;) (1 samples, 0.58%)</title><rect x="313.6" y="501" width="6.9" height="15.0" fill="rgb(214,173,0)" rx="2" ry="2" />
<text  x="316.63" y="511.5" ></text>
</g>
<g >
<title>object_setClass (1 samples, 0.58%)</title><rect x="30.7" y="837" width="6.9" height="15.0" fill="rgb(242,140,1)" rx="2" ry="2" />
<text  x="33.70" y="847.5" ></text>
</g>
<g >
<title>cc::LayerTreeHost::PaintContent(std::__Cr::vector&lt;scoped_refptr&lt;cc::Layer&gt;, std::__Cr::allocator&lt;scoped_refptr&lt;cc::Layer&gt; &gt; &gt; const&amp;, bool*, bool*) (2 samples, 1.17%)</title><rect x="410.2" y="613" width="13.8" height="15.0" fill="rgb(215,162,11)" rx="2" ry="2" />
<text  x="413.23" y="623.5" ></text>
</g>
<g >
<title>WTF::ThreadSpecific&lt;blink::ThreadState*&gt;::operator blink::ThreadState**() (1 samples, 0.58%)</title><rect x="437.8" y="325" width="6.9" height="15.0" fill="rgb(217,72,12)" rx="2" ry="2" />
<text  x="440.84" y="335.5" ></text>
</g>
<g >
<title>DYLD-STUB$$v8::MicrotasksScope::PerformCheckpoint(v8::Isolate*) (1 samples, 0.58%)</title><rect x="672.5" y="645" width="6.9" height="15.0" fill="rgb(234,229,24)" rx="2" ry="2" />
<text  x="675.46" y="655.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.58%)</title><rect x="389.5" y="581" width="6.9" height="15.0" fill="rgb(254,176,10)" rx="2" ry="2" />
<text  x="392.53" y="591.5" ></text>
</g>
<g >
<title>base::Histogram::AddCount(int, int) (1 samples, 0.58%)</title><rect x="396.4" y="565" width="6.9" height="15.0" fill="rgb(243,119,1)" rx="2" ry="2" />
<text  x="399.43" y="575.5" ></text>
</g>
<g >
<title>__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ (133 samples, 77.78%)</title><rect x="120.4" y="805" width="917.8" height="15.0" fill="rgb(241,195,8)" rx="2" ry="2" />
<text  x="123.41" y="815.5" >__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__</text>
</g>
<g >
<title>blink::HTMLMediaElement::SetOfficialPlaybackPosition(double) const (2 samples, 1.17%)</title><rect x="251.5" y="613" width="13.8" height="15.0" fill="rgb(244,88,36)" rx="2" ry="2" />
<text  x="254.52" y="623.5" ></text>
</g>
<g >
<title>v8_inspector::V8ConsoleMessage::createForConsoleAPI(v8::Local&lt;v8::Context&gt;, int, int, v8_inspector::V8InspectorImpl*, double, v8_inspector::ConsoleAPIType, std::__Cr::vector&lt;v8::Local&lt;v8::Value&gt;, std::__Cr::allocator&lt;v8::Local&lt;v8::Value&gt; &gt; &gt; const&amp;, v8_inspector::String16 const&amp;, std::__Cr::unique_ptr&lt;v8_inspector::V8StackTraceImpl, std::__Cr::default_delete&lt;v8_inspector::V8StackTraceImpl&gt; &gt;) (2 samples, 1.17%)</title><rect x="223.9" y="341" width="13.8" height="15.0" fill="rgb(215,48,8)" rx="2" ry="2" />
<text  x="226.92" y="351.5" ></text>
</g>
<g >
<title>content::WebMediaPlayerMS::ResetCanvasCache() (1 samples, 0.58%)</title><rect x="548.2" y="677" width="6.9" height="15.0" fill="rgb(229,145,6)" rx="2" ry="2" />
<text  x="551.25" y="687.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="555.1" y="693" width="6.9" height="15.0" fill="rgb(215,194,15)" rx="2" ry="2" />
<text  x="558.15" y="703.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::operator!=(base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter const&amp;) const (2 samples, 1.17%)</title><rect x="920.9" y="645" width="13.8" height="15.0" fill="rgb(226,9,36)" rx="2" ry="2" />
<text  x="923.88" y="655.5" ></text>
</g>
<g >
<title>base::internal::CancelableCallbackImpl&lt;base::RepeatingCallback&lt;void ()&gt; &gt;::Reset(base::RepeatingCallback&lt;void ()&gt;) (1 samples, 0.58%)</title><rect x="796.7" y="629" width="6.9" height="15.0" fill="rgb(231,174,23)" rx="2" ry="2" />
<text  x="799.67" y="639.5" ></text>
</g>
<g >
<title>WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::String, char const*&gt;, WTF::String&gt;, char const*&gt;, WTF::String&gt;::operator WTF::String() const (1 samples, 0.58%)</title><rect x="306.7" y="517" width="6.9" height="15.0" fill="rgb(245,78,49)" rx="2" ry="2" />
<text  x="309.73" y="527.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.58%)</title><rect x="934.7" y="613" width="6.9" height="15.0" fill="rgb(215,54,19)" rx="2" ry="2" />
<text  x="937.68" y="623.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::operator!=(base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter const&amp;) const (1 samples, 0.58%)</title><rect x="658.7" y="677" width="6.9" height="15.0" fill="rgb(249,46,24)" rx="2" ry="2" />
<text  x="661.65" y="687.5" ></text>
</g>
<g >
<title>Builtins_ArgumentsAdaptorTrampoline (3 samples, 1.75%)</title><rect x="203.2" y="453" width="20.7" height="15.0" fill="rgb(238,105,22)" rx="2" ry="2" />
<text  x="206.22" y="463.5" ></text>
</g>
<g >
<title>cc::ProxyMain::DidCommitAndDrawFrame() (1 samples, 0.58%)</title><rect x="375.7" y="677" width="6.9" height="15.0" fill="rgb(247,197,15)" rx="2" ry="2" />
<text  x="378.73" y="687.5" ></text>
</g>
<g >
<title>Main Thread  0x6449f5 (171 samples, 100.00%)</title><rect x="10.0" y="1077" width="1180.0" height="15.0" fill="rgb(209,62,1)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >Main Thread  0x6449f5</text>
</g>
<g >
<title>blink::V8Function::Invoke(blink::bindings::V8ValueOrScriptWrappableAdapter, WTF::Vector&lt;blink::ScriptValue, 0u, WTF::PartitionAllocator&gt; const&amp;) (5 samples, 2.92%)</title><rect x="203.2" y="581" width="34.5" height="15.0" fill="rgb(222,58,1)" rx="2" ry="2" />
<text  x="206.22" y="591.5" >bl..</text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.58%)</title><rect x="168.7" y="613" width="6.9" height="15.0" fill="rgb(213,33,2)" rx="2" ry="2" />
<text  x="171.71" y="623.5" ></text>
</g>
<g >
<title>v8::MicrotasksScope::PerformCheckpoint(v8::Isolate*) (1 samples, 0.58%)</title><rect x="776.0" y="629" width="6.9" height="15.0" fill="rgb(228,61,52)" rx="2" ry="2" />
<text  x="778.96" y="639.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.58%)</title><rect x="589.6" y="613" width="6.9" height="15.0" fill="rgb(216,18,12)" rx="2" ry="2" />
<text  x="592.65" y="623.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::ContextAt(unsigned int) (1 samples, 0.58%)</title><rect x="506.8" y="325" width="6.9" height="15.0" fill="rgb(222,118,46)" rx="2" ry="2" />
<text  x="509.84" y="335.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (2 samples, 1.17%)</title><rect x="265.3" y="453" width="13.8" height="15.0" fill="rgb(216,212,28)" rx="2" ry="2" />
<text  x="268.32" y="463.5" ></text>
</g>
<g >
<title>CFBasicHashGetCountOfKey (1 samples, 0.58%)</title><rect x="1176.2" y="821" width="6.9" height="15.0" fill="rgb(254,119,34)" rx="2" ry="2" />
<text  x="1179.20" y="831.5" ></text>
</g>
<g >
<title>blink::scheduler::CancelableClosureHolder::Cancel() (1 samples, 0.58%)</title><rect x="796.7" y="645" width="6.9" height="15.0" fill="rgb(218,57,31)" rx="2" ry="2" />
<text  x="799.67" y="655.5" ></text>
</g>
<g >
<title>blink::LayoutReplaced::Paint(blink::PaintInfo const&amp;) const (1 samples, 0.58%)</title><rect x="472.3" y="229" width="6.9" height="15.0" fill="rgb(223,133,9)" rx="2" ry="2" />
<text  x="475.34" y="239.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::UpdateAllLifecyclePhases(blink::DocumentLifecycle::LifecycleUpdateReason) (17 samples, 9.94%)</title><rect x="430.9" y="581" width="117.3" height="15.0" fill="rgb(238,164,48)" rx="2" ry="2" />
<text  x="433.94" y="591.5" >blink::LocalFr..</text>
</g>
<g >
<title>WTF::StringView::~StringView() (1 samples, 0.58%)</title><rect x="513.7" y="277" width="6.9" height="15.0" fill="rgb(253,191,7)" rx="2" ry="2" />
<text  x="516.74" y="287.5" ></text>
</g>
<g >
<title>base::ScaledLinearHistogram::AddScaledCount(int, int) (1 samples, 0.58%)</title><rect x="748.4" y="597" width="6.9" height="15.0" fill="rgb(215,183,51)" rx="2" ry="2" />
<text  x="751.36" y="607.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="403.3" y="549" width="6.9" height="15.0" fill="rgb(227,138,4)" rx="2" ry="2" />
<text  x="406.33" y="559.5" ></text>
</g>
<g >
<title>blink::CompositingInputsUpdater::UpdateSelfAndDescendantsRecursively(blink::PaintLayer*, blink::CompositingInputsUpdater::UpdateType, blink::CompositingInputsUpdater::AncestorInfo) (1 samples, 0.58%)</title><rect x="437.8" y="437" width="6.9" height="15.0" fill="rgb(243,166,38)" rx="2" ry="2" />
<text  x="440.84" y="447.5" ></text>
</g>
<g >
<title>cc::LayerTreeHost::DoUpdateLayers() (2 samples, 1.17%)</title><rect x="410.2" y="629" width="13.8" height="15.0" fill="rgb(215,131,2)" rx="2" ry="2" />
<text  x="413.23" y="639.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (2 samples, 1.17%)</title><rect x="638.0" y="661" width="13.8" height="15.0" fill="rgb(237,158,41)" rx="2" ry="2" />
<text  x="640.95" y="671.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::ScheduleTimeupdateEvent(bool) (1 samples, 0.58%)</title><rect x="244.6" y="629" width="6.9" height="15.0" fill="rgb(237,24,23)" rx="2" ry="2" />
<text  x="247.62" y="639.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.58%)</title><rect x="603.5" y="613" width="6.9" height="15.0" fill="rgb(210,25,0)" rx="2" ry="2" />
<text  x="606.45" y="623.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::is_end() const (3 samples, 1.75%)</title><rect x="596.5" y="661" width="20.8" height="15.0" fill="rgb(214,85,18)" rx="2" ry="2" />
<text  x="599.55" y="671.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.58%)</title><rect x="168.7" y="629" width="6.9" height="15.0" fill="rgb(248,115,8)" rx="2" ry="2" />
<text  x="171.71" y="639.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.58%)</title><rect x="1031.3" y="677" width="6.9" height="15.0" fill="rgb(225,3,11)" rx="2" ry="2" />
<text  x="1034.29" y="687.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="575.8" y="661" width="6.9" height="15.0" fill="rgb(246,77,49)" rx="2" ry="2" />
<text  x="578.85" y="671.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::Iter(base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt; const*) (2 samples, 1.17%)</title><rect x="582.7" y="677" width="13.8" height="15.0" fill="rgb(223,74,52)" rx="2" ry="2" />
<text  x="585.75" y="687.5" ></text>
</g>
<g >
<title>blink::ComputedStyle::HasGroupingProperty() const (1 samples, 0.58%)</title><rect x="451.6" y="357" width="6.9" height="15.0" fill="rgb(244,65,2)" rx="2" ry="2" />
<text  x="454.64" y="367.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (29 samples, 16.96%)</title><rect x="831.2" y="693" width="200.1" height="15.0" fill="rgb(251,168,34)" rx="2" ry="2" />
<text  x="834.17" y="703.5" >base::sequence_manager::in..</text>
</g>
<g >
<title>base::ScaledLinearHistogram::AddScaledCount(int, int) (2 samples, 1.17%)</title><rect x="734.6" y="565" width="13.8" height="15.0" fill="rgb(226,93,6)" rx="2" ry="2" />
<text  x="737.56" y="575.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::OnSystemIdle() (1 samples, 0.58%)</title><rect x="99.7" y="725" width="6.9" height="15.0" fill="rgb(229,228,25)" rx="2" ry="2" />
<text  x="102.71" y="735.5" ></text>
</g>
<g >
<title>blink::PersistentBase&lt;blink::StyleFilterData, (blink::WeaknessPersistentConfiguration)0, (blink::CrossThreadnessPersistentConfiguration)0&gt;::CheckPointer() const (1 samples, 0.58%)</title><rect x="451.6" y="341" width="6.9" height="15.0" fill="rgb(245,11,49)" rx="2" ry="2" />
<text  x="454.64" y="351.5" ></text>
</g>
<g >
<title>start (171 samples, 100.00%)</title><rect x="10.0" y="1061" width="1180.0" height="15.0" fill="rgb(240,196,6)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >start</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="665.6" y="645" width="6.9" height="15.0" fill="rgb(251,200,27)" rx="2" ry="2" />
<text  x="668.56" y="655.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="886.4" y="629" width="6.9" height="15.0" fill="rgb(244,92,53)" rx="2" ry="2" />
<text  x="889.37" y="639.5" ></text>
</g>
<g >
<title>cc::RecordingSource::UpdateAndExpandInvalidation(cc::Region*, gfx::Size const&amp;, gfx::Rect const&amp;) (1 samples, 0.58%)</title><rect x="417.1" y="581" width="6.9" height="15.0" fill="rgb(238,16,10)" rx="2" ry="2" />
<text  x="420.13" y="591.5" ></text>
</g>
<g >
<title>base::TaskAnnotator::RunTask(char const*, base::PendingTask*) (54 samples, 31.58%)</title><rect x="182.5" y="709" width="372.6" height="15.0" fill="rgb(254,42,7)" rx="2" ry="2" />
<text  x="185.51" y="719.5" >base::TaskAnnotator::RunTask(char const*, base::Pe..</text>
</g>
<g >
<title>blink::LayoutGeometryMap::PushMappingsToAncestor(blink::LayoutObject const*, blink::LayoutBoxModelObject const*) (1 samples, 0.58%)</title><rect x="437.8" y="389" width="6.9" height="15.0" fill="rgb(240,106,20)" rx="2" ry="2" />
<text  x="440.84" y="399.5" ></text>
</g>
<g >
<title>blink::scheduler::TaskQueueThrottler::OnTaskRunTimeReported(base::sequence_manager::TaskQueue*, base::TimeTicks, base::TimeTicks) (1 samples, 0.58%)</title><rect x="769.1" y="629" width="6.9" height="15.0" fill="rgb(225,151,16)" rx="2" ry="2" />
<text  x="772.06" y="639.5" ></text>
</g>
<g >
<title>blink::GraphicsLayerUpdater::UpdateRecursive(blink::PaintLayer&amp;, blink::GraphicsLayerUpdater::UpdateType, blink::GraphicsLayerUpdater::UpdateContext&amp;, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (4 samples, 2.34%)</title><rect x="444.7" y="437" width="27.6" height="15.0" fill="rgb(249,187,36)" rx="2" ry="2" />
<text  x="447.74" y="447.5" >b..</text>
</g>
<g >
<title>cc::CompletionEvent::Wait() (1 samples, 0.58%)</title><rect x="389.5" y="645" width="6.9" height="15.0" fill="rgb(253,41,33)" rx="2" ry="2" />
<text  x="392.53" y="655.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (cc::ProxyMain::*)(std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt;), base::WeakPtr&lt;cc::ProxyMain&gt;, base::internal::PassedWrapper&lt;std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt; &gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (24 samples, 14.04%)</title><rect x="382.6" y="693" width="165.6" height="15.0" fill="rgb(239,9,42)" rx="2" ry="2" />
<text  x="385.63" y="703.5" >base::internal::Invok..</text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.58%)</title><rect x="499.9" y="501" width="6.9" height="15.0" fill="rgb(230,136,24)" rx="2" ry="2" />
<text  x="502.94" y="511.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_Impl_ConsoleLog(v8::internal::BuiltinArguments, v8::internal::Isolate*) (1 samples, 0.58%)</title><rect x="286.0" y="389" width="6.9" height="15.0" fill="rgb(242,137,44)" rx="2" ry="2" />
<text  x="289.02" y="399.5" ></text>
</g>
<g >
<title>mojo::InterfaceEndpointClient::Accept(mojo::Message*) (1 samples, 0.58%)</title><rect x="286.0" y="213" width="6.9" height="15.0" fill="rgb(231,12,26)" rx="2" ry="2" />
<text  x="289.02" y="223.5" ></text>
</g>
<g >
<title>v8::internal::String::Flatten(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::AllocationType) (1 samples, 0.58%)</title><rect x="230.8" y="277" width="6.9" height="15.0" fill="rgb(239,148,46)" rx="2" ry="2" />
<text  x="233.82" y="287.5" ></text>
</g>
<g >
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.58%)</title><rect x="486.1" y="421" width="6.9" height="15.0" fill="rgb(251,16,41)" rx="2" ry="2" />
<text  x="489.14" y="431.5" ></text>
</g>
<g >
<title>v8_inspector::(anonymous namespace)::ConsoleHelper::reportCall(v8_inspector::ConsoleAPIType) (1 samples, 0.58%)</title><rect x="286.0" y="341" width="6.9" height="15.0" fill="rgb(238,30,52)" rx="2" ry="2" />
<text  x="289.02" y="351.5" ></text>
</g>
<g >
<title>blink::Element::setAttribute(blink::QualifiedName const&amp;, WTF::AtomicString const&amp;) (1 samples, 0.58%)</title><rect x="313.6" y="517" width="6.9" height="15.0" fill="rgb(237,150,45)" rx="2" ry="2" />
<text  x="316.63" y="527.5" ></text>
</g>
<g >
<title>v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local&lt;v8::Value&gt;*) (5 samples, 2.92%)</title><rect x="203.2" y="549" width="34.5" height="15.0" fill="rgb(208,141,35)" rx="2" ry="2" />
<text  x="206.22" y="559.5" >v8..</text>
</g>
<g >
<title>CFAllocatorDeallocate (1 samples, 0.58%)</title><rect x="23.8" y="853" width="6.9" height="15.0" fill="rgb(206,111,53)" rx="2" ry="2" />
<text  x="26.80" y="863.5" ></text>
</g>
<g >
<title>_CFRunLoopFinished (2 samples, 1.17%)</title><rect x="1176.2" y="869" width="13.8" height="15.0" fill="rgb(231,225,24)" rx="2" ry="2" />
<text  x="1179.20" y="879.5" ></text>
</g>
<g >
<title>blink::Fullscreen::FullscreenElementForBindingFrom(blink::TreeScope&amp;) (1 samples, 0.58%)</title><rect x="541.3" y="469" width="6.9" height="15.0" fill="rgb(215,46,41)" rx="2" ry="2" />
<text  x="544.35" y="479.5" ></text>
</g>
<g >
<title>__CFArmNextTimerInMode (3 samples, 1.75%)</title><rect x="134.2" y="693" width="20.7" height="15.0" fill="rgb(251,132,2)" rx="2" ry="2" />
<text  x="137.21" y="703.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::Iter(base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt; const*) (4 samples, 2.34%)</title><rect x="631.1" y="677" width="27.6" height="15.0" fill="rgb(254,39,46)" rx="2" ry="2" />
<text  x="634.05" y="687.5" >b..</text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta) (171 samples, 100.00%)</title><rect x="10.0" y="933" width="1180.0" height="15.0" fill="rgb(254,220,11)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::Run(bool, base::TimeDelta)</text>
</g>
<g >
<title>__CFRepositionTimerInMode (4 samples, 2.34%)</title><rect x="127.3" y="709" width="27.6" height="15.0" fill="rgb(227,53,23)" rx="2" ry="2" />
<text  x="130.31" y="719.5" >_..</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="1031.3" y="709" width="6.9" height="15.0" fill="rgb(249,142,27)" rx="2" ry="2" />
<text  x="1034.29" y="719.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::ThreadCheckerImpl() (1 samples, 0.58%)</title><rect x="1003.7" y="581" width="6.9" height="15.0" fill="rgb(219,223,48)" rx="2" ry="2" />
<text  x="1006.68" y="591.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::Paint(blink::GraphicsContext::DisabledMode) (2 samples, 1.17%)</title><rect x="472.3" y="373" width="13.8" height="15.0" fill="rgb(243,203,24)" rx="2" ry="2" />
<text  x="475.34" y="383.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="658.7" y="645" width="6.9" height="15.0" fill="rgb(248,106,36)" rx="2" ry="2" />
<text  x="661.65" y="655.5" ></text>
</g>
<g >
<title>blink::LayoutVideo::UpdatePlayer() (2 samples, 1.17%)</title><rect x="265.3" y="613" width="13.8" height="15.0" fill="rgb(239,192,48)" rx="2" ry="2" />
<text  x="268.32" y="623.5" ></text>
</g>
<g >
<title>__CFRunLoopDoObservers (5 samples, 2.92%)</title><rect x="79.0" y="837" width="34.5" height="15.0" fill="rgb(230,129,7)" rx="2" ry="2" />
<text  x="82.01" y="847.5" >__..</text>
</g>
<g >
<title>blink::TimerBase::RunInternal() (17 samples, 9.94%)</title><rect x="182.5" y="661" width="117.3" height="15.0" fill="rgb(234,151,37)" rx="2" ry="2" />
<text  x="185.51" y="671.5" >blink::TimerBa..</text>
</g>
<g >
<title>malloc (1 samples, 0.58%)</title><rect x="589.6" y="629" width="6.9" height="15.0" fill="rgb(209,131,32)" rx="2" ry="2" />
<text  x="592.65" y="639.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.58%)</title><rect x="499.9" y="517" width="6.9" height="15.0" fill="rgb(205,195,20)" rx="2" ry="2" />
<text  x="502.94" y="527.5" ></text>
</g>
<g >
<title>base::trace_event::BlameContext::Enter() (1 samples, 0.58%)</title><rect x="955.4" y="629" width="6.9" height="15.0" fill="rgb(230,154,12)" rx="2" ry="2" />
<text  x="958.38" y="639.5" ></text>
</g>
<g >
<title>content::LayerTreeView::DidUpdateLayers() (1 samples, 0.58%)</title><rect x="424.0" y="629" width="6.9" height="15.0" fill="rgb(210,100,52)" rx="2" ry="2" />
<text  x="427.04" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::TimeDomain::MoveReadyDelayedTasksToWorkQueues(base::sequence_manager::LazyNow*) (2 samples, 1.17%)</title><rect x="838.1" y="645" width="13.8" height="15.0" fill="rgb(243,78,20)" rx="2" ry="2" />
<text  x="841.07" y="655.5" ></text>
</g>
<g >
<title>__CFRunLoopModeIsEmpty (1 samples, 0.58%)</title><rect x="1176.2" y="853" width="6.9" height="15.0" fill="rgb(207,228,39)" rx="2" ry="2" />
<text  x="1179.20" y="863.5" ></text>
</g>
<g >
<title>blink::PersistentNodePtr&lt;(blink::ThreadAffinity)1, (blink::WeaknessPersistentConfiguration)1&gt;::Uninitialize() (1 samples, 0.58%)</title><rect x="258.4" y="597" width="6.9" height="15.0" fill="rgb(214,178,40)" rx="2" ry="2" />
<text  x="261.42" y="607.5" ></text>
</g>
<g >
<title>blink::FrameConsole::ReportMessageToClient(blink::mojom::ConsoleMessageSource, blink::mojom::ConsoleMessageLevel, WTF::String const&amp;, blink::SourceLocation*) (1 samples, 0.58%)</title><rect x="223.9" y="309" width="6.9" height="15.0" fill="rgb(253,131,49)" rx="2" ry="2" />
<text  x="226.92" y="319.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::~Iter() (2 samples, 1.17%)</title><rect x="900.2" y="645" width="13.8" height="15.0" fill="rgb(217,94,13)" rx="2" ry="2" />
<text  x="903.18" y="655.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::UpdateGraphicsLayerConfiguration(blink::PaintLayer const*) (1 samples, 0.58%)</title><rect x="444.7" y="405" width="6.9" height="15.0" fill="rgb(220,96,1)" rx="2" ry="2" />
<text  x="447.74" y="415.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="983.0" y="645" width="6.9" height="15.0" fill="rgb(239,200,20)" rx="2" ry="2" />
<text  x="985.98" y="655.5" ></text>
</g>
<g >
<title>blink::WebViewFrameWidget::UpdateLifecycle(blink::WebWidget::LifecycleUpdate, blink::WebWidget::LifecycleUpdateReason) (17 samples, 9.94%)</title><rect x="430.9" y="629" width="117.3" height="15.0" fill="rgb(210,21,20)" rx="2" ry="2" />
<text  x="433.94" y="639.5" >blink::WebView..</text>
</g>
<g >
<title>_platform_memcmp (1 samples, 0.58%)</title><rect x="727.7" y="597" width="6.9" height="15.0" fill="rgb(244,184,26)" rx="2" ry="2" />
<text  x="730.66" y="607.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle&lt;v8::internal::Object&gt;, v8::internal::Handle&lt;v8::internal::Object&gt;, int, v8::internal::Handle&lt;v8::internal::Object&gt;*) (5 samples, 2.92%)</title><rect x="203.2" y="533" width="34.5" height="15.0" fill="rgb(244,92,54)" rx="2" ry="2" />
<text  x="206.22" y="543.5" >v8..</text>
</g>
<g >
<title>blink::EventTarget::KeepEventInNode(blink::Event const&amp;) const (1 samples, 0.58%)</title><rect x="361.9" y="549" width="6.9" height="15.0" fill="rgb(207,30,23)" rx="2" ry="2" />
<text  x="364.93" y="559.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintFragmentWithPhase(blink::PaintPhase, blink::PaintLayerFragment const&amp;, blink::GraphicsContext&amp;, blink::ClipRect const&amp;, blink::PaintLayerPaintingInfo const&amp;, unsigned int) (1 samples, 0.58%)</title><rect x="472.3" y="277" width="6.9" height="15.0" fill="rgb(254,95,24)" rx="2" ry="2" />
<text  x="475.34" y="287.5" ></text>
</g>
<g >
<title>IPC::(anonymous namespace)::ChannelAssociatedGroupController::SendMessage(mojo::Message*) (1 samples, 0.58%)</title><rect x="286.0" y="181" width="6.9" height="15.0" fill="rgb(236,22,15)" rx="2" ry="2" />
<text  x="289.02" y="191.5" ></text>
</g>
<g >
<title>_kernelrpc_mach_port_insert_member_trap (7 samples, 4.09%)</title><rect x="1127.9" y="821" width="48.3" height="15.0" fill="rgb(215,0,14)" rx="2" ry="2" />
<text  x="1130.89" y="831.5" >_ker..</text>
</g>
<g >
<title>blink::probe::UserCallback::UserCallback(blink::ExecutionContext*, char const*, WTF::AtomicString const&amp;, bool, blink::EventTarget*) (2 samples, 1.17%)</title><rect x="341.2" y="565" width="13.8" height="15.0" fill="rgb(208,3,6)" rx="2" ry="2" />
<text  x="344.23" y="575.5" ></text>
</g>
<g >
<title>tiny_malloc_should_clear (1 samples, 0.58%)</title><rect x="244.6" y="405" width="6.9" height="15.0" fill="rgb(214,133,46)" rx="2" ry="2" />
<text  x="247.62" y="415.5" ></text>
</g>
<g >
<title>blink::NormalPageArena::PromptlyFreeObject(blink::HeapObjectHeader*) (1 samples, 0.58%)</title><rect x="279.1" y="629" width="6.9" height="15.0" fill="rgb(240,3,24)" rx="2" ry="2" />
<text  x="282.12" y="639.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.58%)</title><rect x="603.5" y="597" width="6.9" height="15.0" fill="rgb(220,122,8)" rx="2" ry="2" />
<text  x="606.45" y="607.5" ></text>
</g>
<g >
<title>blink::scheduler::FrameSchedulerImpl::GetTaskRunner(blink::TaskType) (1 samples, 0.58%)</title><rect x="244.6" y="549" width="6.9" height="15.0" fill="rgb(211,32,51)" rx="2" ry="2" />
<text  x="247.62" y="559.5" ></text>
</g>
<g >
<title>v8::internal::ReadOnlyRoots::CheckType(v8::internal::RootIndex) const (1 samples, 0.58%)</title><rect x="237.7" y="565" width="6.9" height="15.0" fill="rgb(238,170,13)" rx="2" ry="2" />
<text  x="240.72" y="575.5" ></text>
</g>
<g >
<title>__CFSetApplyFunction_block_invoke (1 samples, 0.58%)</title><rect x="113.5" y="789" width="6.9" height="15.0" fill="rgb(236,191,47)" rx="2" ry="2" />
<text  x="116.51" y="799.5" ></text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.58%)</title><rect x="617.3" y="629" width="6.9" height="15.0" fill="rgb(224,72,42)" rx="2" ry="2" />
<text  x="620.25" y="639.5" ></text>
</g>
<g >
<title>base::Lock::CheckHeldAndUnmark() (1 samples, 0.58%)</title><rect x="803.6" y="677" width="6.9" height="15.0" fill="rgb(245,174,53)" rx="2" ry="2" />
<text  x="806.57" y="687.5" ></text>
</g>
<g >
<title>mach_msg (1 samples, 0.58%)</title><rect x="286.0" y="53" width="6.9" height="15.0" fill="rgb(243,29,22)" rx="2" ry="2" />
<text  x="289.02" y="63.5" ></text>
</g>
<g >
<title>blink::RTCDataChannel::ScheduledEventTimerFired(blink::TimerBase*) (1 samples, 0.58%)</title><rect x="286.0" y="645" width="6.9" height="15.0" fill="rgb(224,57,23)" rx="2" ry="2" />
<text  x="289.02" y="655.5" ></text>
</g>
<g >
<title>blink::LocalFrameView::PushPaintArtifactToCompositor() (1 samples, 0.58%)</title><rect x="486.1" y="517" width="6.9" height="15.0" fill="rgb(208,225,26)" rx="2" ry="2" />
<text  x="489.14" y="527.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintLayerContents(blink::GraphicsContext&amp;, blink::PaintLayerPaintingInfo const&amp;, unsigned int) (2 samples, 1.17%)</title><rect x="472.3" y="309" width="13.8" height="15.0" fill="rgb(254,119,5)" rx="2" ry="2" />
<text  x="475.34" y="319.5" ></text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (3 samples, 1.75%)</title><rect x="203.2" y="437" width="20.7" height="15.0" fill="rgb(235,28,12)" rx="2" ry="2" />
<text  x="206.22" y="447.5" ></text>
</g>
<g >
<title>blink::FrameConsole::ReportMessageToClient(blink::mojom::ConsoleMessageSource, blink::mojom::ConsoleMessageLevel, WTF::String const&amp;, blink::SourceLocation*) (1 samples, 0.58%)</title><rect x="286.0" y="277" width="6.9" height="15.0" fill="rgb(249,26,33)" rx="2" ry="2" />
<text  x="289.02" y="287.5" ></text>
</g>
<g >
<title>trace_event_internal::AddTraceEvent(char, unsigned char const*, char const*, char const*, unsigned long long, base::trace_event::TraceArguments*, unsigned int) (1 samples, 0.58%)</title><rect x="955.4" y="613" width="6.9" height="15.0" fill="rgb(223,5,24)" rx="2" ry="2" />
<text  x="958.38" y="623.5" ></text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (cc::ProxyMain::*)(), base::WeakPtr&lt;cc::ProxyMain&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (1 samples, 0.58%)</title><rect x="375.7" y="693" width="6.9" height="15.0" fill="rgb(220,105,34)" rx="2" ry="2" />
<text  x="378.73" y="703.5" ></text>
</g>
<g >
<title>invocation function for block in base::MessagePumpCFRunLoopBase::PreWaitObserver(__CFRunLoopObserver*, unsigned long, void*) (1 samples, 0.58%)</title><rect x="99.7" y="773" width="6.9" height="15.0" fill="rgb(220,169,22)" rx="2" ry="2" />
<text  x="102.71" y="783.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (2 samples, 1.17%)</title><rect x="265.3" y="421" width="13.8" height="15.0" fill="rgb(244,183,41)" rx="2" ry="2" />
<text  x="268.32" y="431.5" ></text>
</g>
<g >
<title>blink::scheduler::MainThreadTaskQueue::OnTaskCompleted(base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming*, base::sequence_manager::LazyNow*) (17 samples, 9.94%)</title><rect x="672.5" y="661" width="117.3" height="15.0" fill="rgb(223,137,1)" rx="2" ry="2" />
<text  x="675.46" y="671.5" >blink::schedul..</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="907.1" y="613" width="6.9" height="15.0" fill="rgb(234,140,29)" rx="2" ry="2" />
<text  x="910.08" y="623.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::PaintContents(blink::GraphicsLayer const*, blink::GraphicsContext&amp;, unsigned int, blink::IntRect const&amp;) const (2 samples, 1.17%)</title><rect x="472.3" y="341" width="13.8" height="15.0" fill="rgb(222,15,2)" rx="2" ry="2" />
<text  x="475.34" y="351.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.58%)</title><rect x="499.9" y="421" width="6.9" height="15.0" fill="rgb(250,55,29)" rx="2" ry="2" />
<text  x="502.94" y="431.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.58%)</title><rect x="824.3" y="677" width="6.9" height="15.0" fill="rgb(211,174,5)" rx="2" ry="2" />
<text  x="827.27" y="687.5" ></text>
</g>
<g >
<title>service_manager::Main(service_manager::MainParams const&amp;) (171 samples, 100.00%)</title><rect x="10.0" y="997" width="1180.0" height="15.0" fill="rgb(224,100,33)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" >service_manager::Main(service_manager::MainParams const&amp;)</text>
</g>
<g >
<title>CFArrayGetFirstIndexOfValue (1 samples, 0.58%)</title><rect x="127.3" y="693" width="6.9" height="15.0" fill="rgb(214,65,28)" rx="2" ry="2" />
<text  x="130.31" y="703.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="175.6" y="709" width="6.9" height="15.0" fill="rgb(244,12,44)" rx="2" ry="2" />
<text  x="178.61" y="719.5" ></text>
</g>
<g >
<title>blink::LocalFrame::GetTaskRunner(blink::TaskType) (1 samples, 0.58%)</title><rect x="244.6" y="565" width="6.9" height="15.0" fill="rgb(212,63,42)" rx="2" ry="2" />
<text  x="247.62" y="575.5" ></text>
</g>
<g >
<title>blink::LayoutImage::Paint(blink::PaintInfo const&amp;) const (1 samples, 0.58%)</title><rect x="472.3" y="261" width="6.9" height="15.0" fill="rgb(235,131,38)" rx="2" ry="2" />
<text  x="475.34" y="271.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="893.3" y="613" width="6.9" height="15.0" fill="rgb(252,95,20)" rx="2" ry="2" />
<text  x="896.27" y="623.5" ></text>
</g>
<g >
<title>cc::RecordingSource::DetermineIfSolidColor() (1 samples, 0.58%)</title><rect x="410.2" y="565" width="6.9" height="15.0" fill="rgb(244,113,24)" rx="2" ry="2" />
<text  x="413.23" y="575.5" ></text>
</g>
<g >
<title>v8::internal::CheckObjectType(unsigned long, unsigned long, unsigned long) (1 samples, 0.58%)</title><rect x="210.1" y="405" width="6.9" height="15.0" fill="rgb(245,83,22)" rx="2" ry="2" />
<text  x="213.12" y="415.5" ></text>
</g>
<g >
<title>void blink::ForAllGraphicsLayers&lt;blink::LocalFrameView::RunPaintLifecyclePhase()::$_15&gt;(blink::GraphicsLayer&amp;, blink::LocalFrameView::RunPaintLifecyclePhase()::$_15 const&amp;) (1 samples, 0.58%)</title><rect x="499.9" y="469" width="6.9" height="15.0" fill="rgb(244,136,51)" rx="2" ry="2" />
<text  x="502.94" y="479.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.58%)</title><rect x="989.9" y="613" width="6.9" height="15.0" fill="rgb(234,19,33)" rx="2" ry="2" />
<text  x="992.88" y="623.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.58%)</title><rect x="644.9" y="629" width="6.9" height="15.0" fill="rgb(253,134,34)" rx="2" ry="2" />
<text  x="647.85" y="639.5" ></text>
</g>
<g >
<title>blink::scheduler::IdleHelper::EndIdlePeriod() (1 samples, 0.58%)</title><rect x="796.7" y="661" width="6.9" height="15.0" fill="rgb(253,133,29)" rx="2" ry="2" />
<text  x="799.67" y="671.5" ></text>
</g>
<g >
<title>blink::Node::DebugName() const (1 samples, 0.58%)</title><rect x="534.4" y="389" width="6.9" height="15.0" fill="rgb(250,173,16)" rx="2" ry="2" />
<text  x="537.44" y="399.5" ></text>
</g>
<g >
<title>blink::Node::IsFrameOwnerElement() const (1 samples, 0.58%)</title><rect x="465.4" y="373" width="6.9" height="15.0" fill="rgb(250,91,15)" rx="2" ry="2" />
<text  x="468.44" y="383.5" ></text>
</g>
<g >
<title>base::TaskRunner::PostTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;) (1 samples, 0.58%)</title><rect x="382.6" y="645" width="6.9" height="15.0" fill="rgb(206,223,21)" rx="2" ry="2" />
<text  x="385.63" y="655.5" ></text>
</g>
<g >
<title>blink::BoxPainter::PaintBoxDecorationBackgroundWithRect(blink::PaintInfo const&amp;, blink::PhysicalRect const&amp;, blink::DisplayItemClient const&amp;) (1 samples, 0.58%)</title><rect x="472.3" y="181" width="6.9" height="15.0" fill="rgb(240,135,6)" rx="2" ry="2" />
<text  x="475.34" y="191.5" ></text>
</g>
<g >
<title>blink::HeapObjectHeader::FromInnerAddress(void const*) (1 samples, 0.58%)</title><rect x="348.1" y="533" width="6.9" height="15.0" fill="rgb(216,202,45)" rx="2" ry="2" />
<text  x="351.13" y="543.5" ></text>
</g>
<g >
<title>blink::RangeInputType::SanitizeValue(WTF::String const&amp;) const (1 samples, 0.58%)</title><rect x="327.4" y="501" width="6.9" height="15.0" fill="rgb(226,185,2)" rx="2" ry="2" />
<text  x="330.43" y="511.5" ></text>
</g>
<g >
<title>blink::GraphicsLayerUpdater::Update(blink::PaintLayer&amp;, WTF::Vector&lt;blink::PaintLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (4 samples, 2.34%)</title><rect x="444.7" y="469" width="27.6" height="15.0" fill="rgb(248,34,28)" rx="2" ry="2" />
<text  x="447.74" y="479.5" >b..</text>
</g>
<g >
<title>blink::ScrollingCoordinator::FrameScrollerIsDirty(blink::LocalFrameView*) const (1 samples, 0.58%)</title><rect x="493.0" y="501" width="6.9" height="15.0" fill="rgb(214,141,34)" rx="2" ry="2" />
<text  x="496.04" y="511.5" ></text>
</g>
<g >
<title>blink::PaintLayer::SetNeedsCompositingInputsUpdateInternal() (2 samples, 1.17%)</title><rect x="265.3" y="565" width="13.8" height="15.0" fill="rgb(216,194,9)" rx="2" ry="2" />
<text  x="268.32" y="575.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 1.17%)</title><rect x="472.3" y="405" width="13.8" height="15.0" fill="rgb(235,114,32)" rx="2" ry="2" />
<text  x="475.34" y="415.5" ></text>
</g>
<g >
<title>operator new(unsigned long) (1 samples, 0.58%)</title><rect x="589.6" y="645" width="6.9" height="15.0" fill="rgb(223,187,14)" rx="2" ry="2" />
<text  x="592.65" y="655.5" ></text>
</g>
<g >
<title>base::WorkIdProvider::IncrementWorkId() (1 samples, 0.58%)</title><rect x="555.1" y="709" width="6.9" height="15.0" fill="rgb(221,135,50)" rx="2" ry="2" />
<text  x="558.15" y="719.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (3 samples, 1.75%)</title><rect x="506.8" y="453" width="20.7" height="15.0" fill="rgb(205,189,41)" rx="2" ry="2" />
<text  x="509.84" y="463.5" ></text>
</g>
<g >
<title>blink::EventDispatcher::EventDispatcher(blink::Node&amp;, blink::Event&amp;) (1 samples, 0.58%)</title><rect x="361.9" y="645" width="6.9" height="15.0" fill="rgb(230,120,45)" rx="2" ry="2" />
<text  x="364.93" y="655.5" ></text>
</g>
<g >
<title>base::internal::WeakReferenceOwner::GetRef() const (1 samples, 0.58%)</title><rect x="686.3" y="645" width="6.9" height="15.0" fill="rgb(246,49,23)" rx="2" ry="2" />
<text  x="689.26" y="655.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 1.17%)</title><rect x="154.9" y="693" width="13.8" height="15.0" fill="rgb(208,139,35)" rx="2" ry="2" />
<text  x="157.91" y="703.5" ></text>
</g>
<g >
<title>blink::FindObjectVisualRectNeedingUpdateScope::~FindObjectVisualRectNeedingUpdateScope() (1 samples, 0.58%)</title><rect x="520.6" y="357" width="6.9" height="15.0" fill="rgb(215,160,17)" rx="2" ry="2" />
<text  x="523.64" y="367.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (3 samples, 1.75%)</title><rect x="506.8" y="469" width="20.7" height="15.0" fill="rgb(224,203,53)" rx="2" ry="2" />
<text  x="509.84" y="479.5" ></text>
</g>
<g >
<title>blink::ReplacedPainter::Paint(blink::PaintInfo const&amp;) (1 samples, 0.58%)</title><rect x="479.2" y="197" width="6.9" height="15.0" fill="rgb(253,165,24)" rx="2" ry="2" />
<text  x="482.24" y="207.5" ></text>
</g>
<g >
<title>base::debug::SetCrashKeyString(base::debug::CrashKeyString*, base::BasicStringPiece&lt;std::__Cr::basic_string&lt;char, std::__Cr::char_traits&lt;char&gt;, std::__Cr::allocator&lt;char&gt; &gt; &gt;) (1 samples, 0.58%)</title><rect x="941.6" y="629" width="6.9" height="15.0" fill="rgb(212,98,47)" rx="2" ry="2" />
<text  x="944.58" y="639.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::CreateTaskRunner(unsigned char) const (1 samples, 0.58%)</title><rect x="244.6" y="517" width="6.9" height="15.0" fill="rgb(252,138,36)" rx="2" ry="2" />
<text  x="247.62" y="527.5" ></text>
</g>
<g >
<title>non-virtual thunk to content::RenderWidget::DidCommitCompositorFrame() (1 samples, 0.58%)</title><rect x="403.3" y="613" width="6.9" height="15.0" fill="rgb(206,62,53)" rx="2" ry="2" />
<text  x="406.33" y="623.5" ></text>
</g>
<g >
<title>base::PlatformThread::CurrentRef() (1 samples, 0.58%)</title><rect x="596.5" y="613" width="7.0" height="15.0" fill="rgb(246,158,53)" rx="2" ry="2" />
<text  x="599.55" y="623.5" ></text>
</g>
<g >
<title>malloc_zone_malloc (1 samples, 0.58%)</title><rect x="244.6" y="469" width="6.9" height="15.0" fill="rgb(248,120,32)" rx="2" ry="2" />
<text  x="247.62" y="479.5" ></text>
</g>
<g >
<title>_platform_strlen (1 samples, 0.58%)</title><rect x="306.7" y="453" width="6.9" height="15.0" fill="rgb(239,111,17)" rx="2" ry="2" />
<text  x="309.73" y="463.5" ></text>
</g>
<g >
<title>Builtins_CreateUnmappedArgumentsHandler (1 samples, 0.58%)</title><rect x="210.1" y="421" width="6.9" height="15.0" fill="rgb(220,68,47)" rx="2" ry="2" />
<text  x="213.12" y="431.5" ></text>
</g>
<g >
<title>content::RenderFrameImpl::ShouldReportDetailedMessageForSource(blink::WebString const&amp;) (1 samples, 0.58%)</title><rect x="223.9" y="277" width="6.9" height="15.0" fill="rgb(237,97,4)" rx="2" ry="2" />
<text  x="226.92" y="287.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.58%)</title><rect x="589.6" y="581" width="6.9" height="15.0" fill="rgb(238,120,21)" rx="2" ry="2" />
<text  x="592.65" y="591.5" ></text>
</g>
<g >
<title>IPC::(anonymous namespace)::ChannelAssociatedGroupController::Endpoint::SendMessage(mojo::Message*) (1 samples, 0.58%)</title><rect x="286.0" y="197" width="6.9" height="15.0" fill="rgb(215,95,42)" rx="2" ry="2" />
<text  x="289.02" y="207.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.58%)</title><rect x="886.4" y="645" width="6.9" height="15.0" fill="rgb(213,118,12)" rx="2" ry="2" />
<text  x="889.37" y="655.5" ></text>
</g>
<g >
<title>Builtins_InterpreterEntryTrampoline (1 samples, 0.58%)</title><rect x="286.0" y="437" width="6.9" height="15.0" fill="rgb(253,23,51)" rx="2" ry="2" />
<text  x="289.02" y="447.5" ></text>
</g>
<g >
<title>blink::InputType::InRangeChanged() const (1 samples, 0.58%)</title><rect x="320.5" y="469" width="6.9" height="15.0" fill="rgb(230,21,48)" rx="2" ry="2" />
<text  x="323.53" y="479.5" ></text>
</g>
<g >
<title>blink::paint_property_tree_printer::UpdateDebugNames(blink::LayoutObject const&amp;, blink::ObjectPaintProperties&amp;) (1 samples, 0.58%)</title><rect x="534.4" y="437" width="6.9" height="15.0" fill="rgb(215,119,9)" rx="2" ry="2" />
<text  x="537.44" y="447.5" ></text>
</g>
<g >
<title>blink::CompositedLayerMapping::UpdateGraphicsLayerConfiguration(blink::PaintLayer const*) (2 samples, 1.17%)</title><rect x="458.5" y="389" width="13.8" height="15.0" fill="rgb(233,41,12)" rx="2" ry="2" />
<text  x="461.54" y="399.5" ></text>
</g>
<g >
<title>CFRunLoopTimerSetNextFireDate (5 samples, 2.92%)</title><rect x="120.4" y="725" width="34.5" height="15.0" fill="rgb(242,224,37)" rx="2" ry="2" />
<text  x="123.41" y="735.5" >CF..</text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.58%)</title><rect x="644.9" y="597" width="6.9" height="15.0" fill="rgb(236,137,21)" rx="2" ry="2" />
<text  x="647.85" y="607.5" ></text>
</g>
<g >
<title>__CFRunLoopModeIsEmpty (1 samples, 0.58%)</title><rect x="1038.2" y="837" width="6.9" height="15.0" fill="rgb(248,126,22)" rx="2" ry="2" />
<text  x="1041.19" y="847.5" ></text>
</g>
<g >
<title>void base::internal::InvokeHelper&lt;true, void&gt;::MakeItSo&lt;void (cc::ProxyMain::*)(std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt;), base::WeakPtr&lt;cc::ProxyMain&gt;, std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt; &gt;(void (cc::ProxyMain::*&amp;&amp;)(std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt;), base::WeakPtr&lt;cc::ProxyMain&gt;&amp;&amp;, std::__Cr::unique_ptr&lt;cc::BeginMainFrameAndCommitState, std::__Cr::default_delete&lt;cc::BeginMainFrameAndCommitState&gt; &gt;&amp;&amp;) (24 samples, 14.04%)</title><rect x="382.6" y="677" width="165.6" height="15.0" fill="rgb(244,150,44)" rx="2" ry="2" />
<text  x="385.63" y="687.5" >void base::internal::..</text>
</g>
<g >
<title>blink::PaintPropertyTreeBuilder::UpdateForChildren() (1 samples, 0.58%)</title><rect x="527.5" y="453" width="6.9" height="15.0" fill="rgb(230,109,4)" rx="2" ry="2" />
<text  x="530.54" y="463.5" ></text>
</g>
<g >
<title>base::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope::ScopedAllowBaseSyncPrimitivesOutsideBlockingScope() (1 samples, 0.58%)</title><rect x="389.5" y="629" width="6.9" height="15.0" fill="rgb(251,200,13)" rx="2" ry="2" />
<text  x="392.53" y="639.5" ></text>
</g>
<g >
<title>blink::DOMWindowPerformance* blink::Supplementable&lt;blink::LocalDOMWindow&gt;::RequireSupplement&lt;blink::DOMWindowPerformance&gt;() const (1 samples, 0.58%)</title><rect x="355.0" y="597" width="6.9" height="15.0" fill="rgb(242,62,30)" rx="2" ry="2" />
<text  x="358.03" y="607.5" ></text>
</g>
<g >
<title>blink::HTMLInputElement::setValue(WTF::String const&amp;, blink::TextFieldEventBehavior, blink::TextControlSetValueSelection) (2 samples, 1.17%)</title><rect x="320.5" y="517" width="13.8" height="15.0" fill="rgb(244,1,20)" rx="2" ry="2" />
<text  x="323.53" y="527.5" ></text>
</g>
<g >
<title>all (171 samples, 100%)</title><rect x="10.0" y="1093" width="1180.0" height="15.0" fill="rgb(221,52,32)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>WTF::CurrentThread() (1 samples, 0.58%)</title><rect x="196.3" y="645" width="6.9" height="15.0" fill="rgb(252,7,51)" rx="2" ry="2" />
<text  x="199.32" y="655.5" ></text>
</g>
<g >
<title>cc::DisplayItemList::GetColorIfSolidInRect(gfx::Rect const&amp;, unsigned int*, int) (1 samples, 0.58%)</title><rect x="410.2" y="549" width="6.9" height="15.0" fill="rgb(213,33,12)" rx="2" ry="2" />
<text  x="413.23" y="559.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.58%)</title><rect x="286.0" y="133" width="6.9" height="15.0" fill="rgb(214,219,27)" rx="2" ry="2" />
<text  x="289.02" y="143.5" ></text>
</g>
<g >
<title>v8_inspector::(anonymous namespace)::ConsoleHelper::reportCall(v8_inspector::ConsoleAPIType) (2 samples, 1.17%)</title><rect x="223.9" y="373" width="13.8" height="15.0" fill="rgb(225,150,20)" rx="2" ry="2" />
<text  x="226.92" y="383.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (3 samples, 1.75%)</title><rect x="506.8" y="437" width="20.7" height="15.0" fill="rgb(227,174,53)" rx="2" ry="2" />
<text  x="509.84" y="447.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.58%)</title><rect x="845.0" y="613" width="6.9" height="15.0" fill="rgb(228,59,38)" rx="2" ry="2" />
<text  x="847.97" y="623.5" ></text>
</g>
<g >
<title>blink::V8Function::InvokeAndReportException(blink::bindings::V8ValueOrScriptWrappableAdapter, WTF::Vector&lt;blink::ScriptValue, 0u, WTF::PartitionAllocator&gt; const&amp;) (6 samples, 3.51%)</title><rect x="203.2" y="597" width="41.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="206.22" y="607.5" >bli..</text>
</g>
<g >
<title>blink::JSEventHandler::InvokeInternal(blink::EventTarget&amp;, blink::Event&amp;, v8::Local&lt;v8::Value&gt;) (1 samples, 0.58%)</title><rect x="286.0" y="565" width="6.9" height="15.0" fill="rgb(251,35,53)" rx="2" ry="2" />
<text  x="289.02" y="575.5" ></text>
</g>
<g >
<title>void blink::RootScrollerController::ForAllNonThrottledLocalControllers&lt;blink::RootScrollerController::PerformRootScrollerSelection()::$_0&gt;(blink::RootScrollerController::PerformRootScrollerSelection()::$_0 const&amp;) (1 samples, 0.58%)</title><rect x="541.3" y="501" width="6.9" height="15.0" fill="rgb(243,203,38)" rx="2" ry="2" />
<text  x="544.35" y="511.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 1.17%)</title><rect x="472.3" y="437" width="13.8" height="15.0" fill="rgb(243,229,0)" rx="2" ry="2" />
<text  x="475.34" y="447.5" ></text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::PreWaitObserver(__CFRunLoopObserver*, unsigned long, void*) (1 samples, 0.58%)</title><rect x="99.7" y="805" width="6.9" height="15.0" fill="rgb(227,66,51)" rx="2" ry="2" />
<text  x="102.71" y="815.5" ></text>
</g>
<g >
<title>blink::GCInfoTable::GCInfoFromIndex(unsigned int) (1 samples, 0.58%)</title><rect x="279.1" y="613" width="6.9" height="15.0" fill="rgb(244,197,54)" rx="2" ry="2" />
<text  x="282.12" y="623.5" ></text>
</g>
<g >
<title>__CFRunLoopServiceMachPort (7 samples, 4.09%)</title><rect x="1045.1" y="837" width="48.3" height="15.0" fill="rgb(237,117,50)" rx="2" ry="2" />
<text  x="1048.09" y="847.5" >__CF..</text>
</g>
<g >
<title>base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*) (171 samples, 100.00%)</title><rect x="10.0" y="917" width="1180.0" height="15.0" fill="rgb(214,12,26)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*)</text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::main_thread_only() (1 samples, 0.58%)</title><rect x="665.6" y="661" width="6.9" height="15.0" fill="rgb(217,63,54)" rx="2" ry="2" />
<text  x="668.56" y="671.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoIdleWork() (1 samples, 0.58%)</title><rect x="99.7" y="757" width="6.9" height="15.0" fill="rgb(228,10,21)" rx="2" ry="2" />
<text  x="102.71" y="767.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::TaskRunner::PostDelayedTask(base::Location const&amp;, base::OnceCallback&lt;void ()&gt;, base::TimeDelta) (1 samples, 0.58%)</title><rect x="382.6" y="629" width="6.9" height="15.0" fill="rgb(240,199,3)" rx="2" ry="2" />
<text  x="385.63" y="639.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::EnsureValidIndex() (1 samples, 0.58%)</title><rect x="582.7" y="661" width="6.9" height="15.0" fill="rgb(246,127,30)" rx="2" ry="2" />
<text  x="585.75" y="671.5" ></text>
</g>
<g >
<title>base::MessagePumpKqueue::ScheduleWork() (1 samples, 0.58%)</title><rect x="286.0" y="85" width="6.9" height="15.0" fill="rgb(221,75,42)" rx="2" ry="2" />
<text  x="289.02" y="95.5" ></text>
</g>
<g >
<title>base::SequenceCheckerImpl::CalledOnValidSequence() const (1 samples, 0.58%)</title><rect x="631.1" y="645" width="6.9" height="15.0" fill="rgb(219,119,45)" rx="2" ry="2" />
<text  x="634.05" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (1 samples, 0.58%)</title><rect x="168.7" y="693" width="6.9" height="15.0" fill="rgb(231,12,33)" rx="2" ry="2" />
<text  x="171.71" y="703.5" ></text>
</g>
<g >
<title>content::RendererMain(content::MainFunctionParams const&amp;) (171 samples, 100.00%)</title><rect x="10.0" y="965" width="1180.0" height="15.0" fill="rgb(252,84,25)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >content::RendererMain(content::MainFunctionParams const&amp;)</text>
</g>
<g >
<title>gettimeofday (1 samples, 0.58%)</title><rect x="16.9" y="853" width="6.9" height="15.0" fill="rgb(207,174,0)" rx="2" ry="2" />
<text  x="19.90" y="863.5" ></text>
</g>
<g >
<title>blink::MediaControlTimelineElement::RenderBarSegments() (1 samples, 0.58%)</title><rect x="299.8" y="565" width="6.9" height="15.0" fill="rgb(236,199,50)" rx="2" ry="2" />
<text  x="302.82" y="575.5" ></text>
</g>
<g >
<title>blink::InputTypeView::AttributeChanged() (1 samples, 0.58%)</title><rect x="313.6" y="437" width="6.9" height="15.0" fill="rgb(233,139,54)" rx="2" ry="2" />
<text  x="316.63" y="447.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursivelyInternal(WTF::Vector&lt;blink::GraphicsLayer*, 0u, WTF::PartitionAllocator&gt;&amp;) (2 samples, 1.17%)</title><rect x="472.3" y="421" width="13.8" height="15.0" fill="rgb(205,7,37)" rx="2" ry="2" />
<text  x="475.34" y="431.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (29 samples, 16.96%)</title><rect x="831.2" y="709" width="200.1" height="15.0" fill="rgb(236,38,12)" rx="2" ry="2" />
<text  x="834.17" y="719.5" >non-virtual thunk to base:..</text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::erase(base::internal::HeapHandle) (1 samples, 0.58%)</title><rect x="1024.4" y="629" width="6.9" height="15.0" fill="rgb(226,146,35)" rx="2" ry="2" />
<text  x="1027.39" y="639.5" ></text>
</g>
<g >
<title>blink::EventTarget::DispatchEventInternal(blink::Event&amp;) (1 samples, 0.58%)</title><rect x="286.0" y="629" width="6.9" height="15.0" fill="rgb(205,75,19)" rx="2" ry="2" />
<text  x="289.02" y="639.5" ></text>
</g>
<g >
<title>__commpage_gettimeofday (1 samples, 0.58%)</title><rect x="65.2" y="821" width="6.9" height="15.0" fill="rgb(224,227,53)" rx="2" ry="2" />
<text  x="68.20" y="831.5" ></text>
</g>
<g >
<title>base::subtle::RefCountedThreadSafeBase::AddRef() const (1 samples, 0.58%)</title><rect x="679.4" y="629" width="6.9" height="15.0" fill="rgb(225,135,19)" rx="2" ry="2" />
<text  x="682.36" y="639.5" ></text>
</g>
<g >
<title>mach_port_insert_member (7 samples, 4.09%)</title><rect x="1127.9" y="837" width="48.3" height="15.0" fill="rgb(221,88,31)" rx="2" ry="2" />
<text  x="1130.89" y="847.5" >mach..</text>
</g>
<g >
<title>base::debug::ScopedLockAcquireActivity::ScopedLockAcquireActivity(void const*, base::internal::LockImpl const*) (1 samples, 0.58%)</title><rect x="175.6" y="677" width="6.9" height="15.0" fill="rgb(222,43,26)" rx="2" ry="2" />
<text  x="178.61" y="687.5" ></text>
</g>
<g >
<title>blink::MemberBase&lt;blink::EventTarget, (blink::TracenessMemberConfiguration)0&gt;::MemberBase(blink::EventTarget*) (1 samples, 0.58%)</title><rect x="341.2" y="549" width="6.9" height="15.0" fill="rgb(227,24,29)" rx="2" ry="2" />
<text  x="344.23" y="559.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.58%)</title><rect x="927.8" y="581" width="6.9" height="15.0" fill="rgb(231,178,8)" rx="2" ry="2" />
<text  x="930.78" y="591.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ConsoleLog(int, unsigned long*, v8::internal::Isolate*) (1 samples, 0.58%)</title><rect x="286.0" y="405" width="6.9" height="15.0" fill="rgb(237,204,36)" rx="2" ry="2" />
<text  x="289.02" y="415.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintBackgroundForFragments(WTF::Vector&lt;blink::PaintLayerFragment, 1u, WTF::PartitionAllocator&gt; const&amp;, blink::GraphicsContext&amp;, blink::PaintLayerPaintingInfo const&amp;, unsigned int) (1 samples, 0.58%)</title><rect x="472.3" y="293" width="6.9" height="15.0" fill="rgb(224,60,10)" rx="2" ry="2" />
<text  x="475.34" y="303.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyDidProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (33 samples, 19.30%)</title><rect x="575.8" y="693" width="227.8" height="15.0" fill="rgb(239,154,14)" rx="2" ry="2" />
<text  x="578.85" y="703.5" >base::sequence_manager::intern..</text>
</g>
<g >
<title>WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::StringAppend&lt;WTF::String, char const*&gt;, WTF::String&gt;, char const*&gt;::length() const (1 samples, 0.58%)</title><rect x="306.7" y="485" width="6.9" height="15.0" fill="rgb(215,157,3)" rx="2" ry="2" />
<text  x="309.73" y="495.5" ></text>
</g>
<g >
<title>base::internal::IntrusiveHeap&lt;base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&gt;::MoveHoleUpAndFillWithElement(unsigned long, base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder&amp;&amp;) (1 samples, 0.58%)</title><rect x="831.2" y="597" width="6.9" height="15.0" fill="rgb(251,181,51)" rx="2" ry="2" />
<text  x="834.17" y="607.5" ></text>
</g>
<g >
<title>v8::Function::Call(v8::Local&lt;v8::Context&gt;, v8::Local&lt;v8::Value&gt;, int, v8::Local&lt;v8::Value&gt;*) (1 samples, 0.58%)</title><rect x="286.0" y="517" width="6.9" height="15.0" fill="rgb(213,185,42)" rx="2" ry="2" />
<text  x="289.02" y="527.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkQueueSets::OnQueuesFrontTaskChanged(base::sequence_manager::internal::WorkQueue*) (1 samples, 0.58%)</title><rect x="1024.4" y="645" width="6.9" height="15.0" fill="rgb(215,104,43)" rx="2" ry="2" />
<text  x="1027.39" y="655.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::sequence_manager::TaskTimeObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::GetCurrent() const (1 samples, 0.58%)</title><rect x="914.0" y="645" width="6.9" height="15.0" fill="rgb(238,36,39)" rx="2" ry="2" />
<text  x="916.98" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (2 samples, 1.17%)</title><rect x="154.9" y="709" width="13.8" height="15.0" fill="rgb(222,216,44)" rx="2" ry="2" />
<text  x="157.91" y="719.5" ></text>
</g>
<g >
<title>blink::WebViewFrameWidget::EndUpdateLayers() (1 samples, 0.58%)</title><rect x="424.0" y="613" width="6.9" height="15.0" fill="rgb(241,47,4)" rx="2" ry="2" />
<text  x="427.04" y="623.5" ></text>
</g>
<g >
<title>base::subtle::TimeTicksNowIgnoringOverride() (1 samples, 0.58%)</title><rect x="955.4" y="597" width="6.9" height="15.0" fill="rgb(209,63,2)" rx="2" ry="2" />
<text  x="958.38" y="607.5" ></text>
</g>
<g >
<title>mach_msg_trap (6 samples, 3.51%)</title><rect x="1052.0" y="805" width="41.4" height="15.0" fill="rgb(224,98,40)" rx="2" ry="2" />
<text  x="1054.99" y="815.5" >mac..</text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, v8::internal::(anonymous namespace)::InvokeParams const&amp;) (5 samples, 2.92%)</title><rect x="203.2" y="517" width="34.5" height="15.0" fill="rgb(254,210,44)" rx="2" ry="2" />
<text  x="206.22" y="527.5" >v8..</text>
</g>
<g >
<title>mach_absolute_time (1 samples, 0.58%)</title><rect x="16.9" y="821" width="6.9" height="15.0" fill="rgb(212,147,36)" rx="2" ry="2" />
<text  x="19.90" y="831.5" ></text>
</g>
<g >
<title>ChromeMain (171 samples, 100.00%)</title><rect x="10.0" y="1029" width="1180.0" height="15.0" fill="rgb(222,153,15)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >ChromeMain</text>
</g>
<g >
<title>base::RunLoop::RunWithTimeout(base::TimeDelta) (171 samples, 100.00%)</title><rect x="10.0" y="949" width="1180.0" height="15.0" fill="rgb(208,171,0)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >base::RunLoop::RunWithTimeout(base::TimeDelta)</text>
</g>
<g >
<title>base::ScopedDeferTaskPosting::Set(base::ScopedDeferTaskPosting*) (1 samples, 0.58%)</title><rect x="382.6" y="581" width="6.9" height="15.0" fill="rgb(253,102,6)" rx="2" ry="2" />
<text  x="385.63" y="591.5" ></text>
</g>
<g >
<title>blink::RuleFeatureSet::CollectInvalidationSetsForPseudoClass(blink::InvalidationLists&amp;, blink::Element&amp;, blink::CSSSelector::PseudoType) const (1 samples, 0.58%)</title><rect x="320.5" y="421" width="6.9" height="15.0" fill="rgb(205,147,33)" rx="2" ry="2" />
<text  x="323.53" y="431.5" ></text>
</g>
<g >
<title>void blink::PaintController::CreateAndAppend&lt;blink::DrawingDisplayItem, blink::DisplayItemClient const&amp;, blink::DisplayItem::Type const&amp;, sk_sp&lt;cc::PaintOpBuffer const&gt;, bool&amp;&gt;(blink::DisplayItemClient const&amp;&amp;&amp;, blink::DisplayItem::Type const&amp;&amp;&amp;, sk_sp&lt;cc::PaintOpBuffer const&gt;&amp;&amp;, bool&amp;&amp;&amp;) (1 samples, 0.58%)</title><rect x="472.3" y="149" width="6.9" height="15.0" fill="rgb(237,26,15)" rx="2" ry="2" />
<text  x="475.34" y="159.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.58%)</title><rect x="631.1" y="629" width="6.9" height="15.0" fill="rgb(251,89,37)" rx="2" ry="2" />
<text  x="634.05" y="639.5" ></text>
</g>
<g >
<title>blink::WebViewImpl::EndCommitCompositorFrame() (1 samples, 0.58%)</title><rect x="396.4" y="597" width="6.9" height="15.0" fill="rgb(241,21,52)" rx="2" ry="2" />
<text  x="399.43" y="607.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::main_thread_only() (1 samples, 0.58%)</title><rect x="175.6" y="725" width="6.9" height="15.0" fill="rgb(227,122,14)" rx="2" ry="2" />
<text  x="178.61" y="735.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Lock() (1 samples, 0.58%)</title><rect x="817.4" y="677" width="6.9" height="15.0" fill="rgb(229,62,2)" rx="2" ry="2" />
<text  x="820.37" y="687.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::WalkInternal(blink::LayoutObject const&amp;, blink::PrePaintTreeWalk::PrePaintTreeWalkContext&amp;) (1 samples, 0.58%)</title><rect x="520.6" y="389" width="6.9" height="15.0" fill="rgb(227,34,13)" rx="2" ry="2" />
<text  x="523.64" y="399.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::WorkDeduplicator::OnWorkStarted() (1 samples, 0.58%)</title><rect x="1031.3" y="725" width="6.9" height="15.0" fill="rgb(254,37,38)" rx="2" ry="2" />
<text  x="1034.29" y="735.5" ></text>
</g>
<g >
<title>WTF::HashTable&lt;void const*, void const*, WTF::IdentityExtractor, WTF::PtrHash&lt;void const&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::PartitionAllocator&gt;::Expand(void const**) (1 samples, 0.58%)</title><rect x="486.1" y="453" width="6.9" height="15.0" fill="rgb(225,71,37)" rx="2" ry="2" />
<text  x="489.14" y="463.5" ></text>
</g>
<g >
<title>base::mac::CallWithEHFrame(void () block_pointer) (1 samples, 0.58%)</title><rect x="92.8" y="789" width="6.9" height="15.0" fill="rgb(222,73,21)" rx="2" ry="2" />
<text  x="95.81" y="799.5" ></text>
</g>
<g >
<title>blink::PaintLayerCompositor::UpdateIfNeeded(blink::DocumentLifecycle::LifecycleState, blink::CompositingReasonsStats&amp;) (5 samples, 2.92%)</title><rect x="437.8" y="485" width="34.5" height="15.0" fill="rgb(237,81,35)" rx="2" ry="2" />
<text  x="440.84" y="495.5" >bl..</text>
</g>
<g >
<title>v8_inspector::(anonymous namespace)::ConsoleHelper::reportCall(v8_inspector::ConsoleAPIType, std::__Cr::vector&lt;v8::Local&lt;v8::Value&gt;, std::__Cr::allocator&lt;v8::Local&lt;v8::Value&gt; &gt; &gt; const&amp;) (1 samples, 0.58%)</title><rect x="286.0" y="325" width="6.9" height="15.0" fill="rgb(235,22,4)" rx="2" ry="2" />
<text  x="289.02" y="335.5" ></text>
</g>
<g >
<title>blink::ImagePainter::Paint(blink::PaintInfo const&amp;) (1 samples, 0.58%)</title><rect x="479.2" y="229" width="6.9" height="15.0" fill="rgb(211,37,53)" rx="2" ry="2" />
<text  x="482.24" y="239.5" ></text>
</g>
<g >
<title>blink::ThreadState::FreePersistentNode(blink::PersistentRegion*, blink::PersistentNode*) (1 samples, 0.58%)</title><rect x="258.4" y="581" width="6.9" height="15.0" fill="rgb(243,24,20)" rx="2" ry="2" />
<text  x="261.42" y="591.5" ></text>
</g>
<g >
<title>blink::DOMWindowPerformance::performance(blink::LocalDOMWindow&amp;) (1 samples, 0.58%)</title><rect x="355.0" y="613" width="6.9" height="15.0" fill="rgb(242,87,45)" rx="2" ry="2" />
<text  x="358.03" y="623.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_Impl_ConsoleLog(v8::internal::BuiltinArguments, v8::internal::Isolate*) (2 samples, 1.17%)</title><rect x="223.9" y="421" width="13.8" height="15.0" fill="rgb(250,163,45)" rx="2" ry="2" />
<text  x="226.92" y="431.5" ></text>
</g>
<g >
<title>blink::scheduler::TaskQueueThrottler::IsThrottled(base::sequence_manager::TaskQueue*) const (1 samples, 0.58%)</title><rect x="769.1" y="613" width="6.9" height="15.0" fill="rgb(205,79,1)" rx="2" ry="2" />
<text  x="772.06" y="623.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.58%)</title><rect x="382.6" y="613" width="6.9" height="15.0" fill="rgb(240,200,48)" rx="2" ry="2" />
<text  x="385.63" y="623.5" ></text>
</g>
<g >
<title>base::Lock::CheckUnheldAndMark() (1 samples, 0.58%)</title><rect x="693.2" y="613" width="6.9" height="15.0" fill="rgb(232,182,54)" rx="2" ry="2" />
<text  x="696.16" y="623.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintForegroundForFragmentsWithPhase(blink::PaintPhase, WTF::Vector&lt;blink::PaintLayerFragment, 1u, WTF::PartitionAllocator&gt; const&amp;, blink::GraphicsContext&amp;, blink::PaintLayerPaintingInfo const&amp;, unsigned int) (1 samples, 0.58%)</title><rect x="479.2" y="277" width="6.9" height="15.0" fill="rgb(232,101,51)" rx="2" ry="2" />
<text  x="482.24" y="287.5" ></text>
</g>
<g >
<title>blink::PaintLayer::GetCompositedLayerMapping() const (1 samples, 0.58%)</title><rect x="493.0" y="469" width="6.9" height="15.0" fill="rgb(207,107,37)" rx="2" ry="2" />
<text  x="496.04" y="479.5" ></text>
</g>
<g >
<title>content::mojom::FrameHostProxy::DidAddMessageToConsole(blink::mojom::ConsoleMessageLevel, std::__Cr::basic_string&lt;unsigned short, base::string16_internals::string16_char_traits, std::__Cr::allocator&lt;unsigned short&gt; &gt; const&amp;, int, std::__Cr::basic_string&lt;unsigned short, base::string16_internals::string16_char_traits, std::__Cr::allocator&lt;unsigned short&gt; &gt; const&amp;) (1 samples, 0.58%)</title><rect x="286.0" y="229" width="6.9" height="15.0" fill="rgb(249,40,31)" rx="2" ry="2" />
<text  x="289.02" y="239.5" ></text>
</g>
<g >
<title>base::MessagePumpNSRunLoop::DoRun(base::MessagePump::Delegate*) (171 samples, 100.00%)</title><rect x="10.0" y="901" width="1180.0" height="15.0" fill="rgb(206,55,29)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >base::MessagePumpNSRunLoop::DoRun(base::MessagePump::Delegate*)</text>
</g>
<g >
<title>v8::TryCatch::TryCatch(v8::Isolate*) (1 samples, 0.58%)</title><rect x="237.7" y="581" width="6.9" height="15.0" fill="rgb(220,103,25)" rx="2" ry="2" />
<text  x="240.72" y="591.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::main_thread_only() const (1 samples, 0.58%)</title><rect x="983.0" y="661" width="6.9" height="15.0" fill="rgb(216,146,17)" rx="2" ry="2" />
<text  x="985.98" y="671.5" ></text>
</g>
<g >
<title>base::internal::WeakReference::IsValid() const (1 samples, 0.58%)</title><rect x="1003.7" y="613" width="6.9" height="15.0" fill="rgb(208,111,19)" rx="2" ry="2" />
<text  x="1006.68" y="623.5" ></text>
</g>
<g >
<title>base::RunLoop::Delegate::ShouldQuitWhenIdle() (1 samples, 0.58%)</title><rect x="99.7" y="709" width="6.9" height="15.0" fill="rgb(253,29,24)" rx="2" ry="2" />
<text  x="102.71" y="719.5" ></text>
</g>
<g >
<title>base::allocator::MallocZoneFunctionsToReplaceDefault()::$_1::__invoke(_malloc_zone_t*, unsigned long) (1 samples, 0.58%)</title><rect x="644.9" y="581" width="6.9" height="15.0" fill="rgb(220,151,23)" rx="2" ry="2" />
<text  x="647.85" y="591.5" ></text>
</g>
<g >
<title>blink::PaintPropertyTreeBuilder::UpdateForSelf() (1 samples, 0.58%)</title><rect x="534.4" y="453" width="6.9" height="15.0" fill="rgb(227,194,41)" rx="2" ry="2" />
<text  x="537.44" y="463.5" ></text>
</g>
<g >
<title>v8_inspector::toProtocolString(v8::Isolate*, v8::Local&lt;v8::String&gt;) (1 samples, 0.58%)</title><rect x="230.8" y="309" width="6.9" height="15.0" fill="rgb(209,224,27)" rx="2" ry="2" />
<text  x="233.82" y="319.5" ></text>
</g>
<g >
<title>&lt;Unknown Address&gt; (1 samples, 0.58%)</title><rect x="1031.3" y="693" width="6.9" height="15.0" fill="rgb(230,205,37)" rx="2" ry="2" />
<text  x="1034.29" y="703.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (4 samples, 2.34%)</title><rect x="803.6" y="693" width="27.6" height="15.0" fill="rgb(211,181,31)" rx="2" ry="2" />
<text  x="806.57" y="703.5" >b..</text>
</g>
<g >
<title>v8::String::Write(v8::Isolate*, unsigned short*, int, int, int) const (1 samples, 0.58%)</title><rect x="230.8" y="293" width="6.9" height="15.0" fill="rgb(244,26,13)" rx="2" ry="2" />
<text  x="233.82" y="303.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::ProgressEventTimerFired(blink::TimerBase*) (2 samples, 1.17%)</title><rect x="265.3" y="645" width="13.8" height="15.0" fill="rgb(215,142,6)" rx="2" ry="2" />
<text  x="268.32" y="655.5" ></text>
</g>
<g >
<title>free (1 samples, 0.58%)</title><rect x="900.2" y="613" width="6.9" height="15.0" fill="rgb(211,33,1)" rx="2" ry="2" />
<text  x="903.18" y="623.5" ></text>
</g>
<g >
<title>base::Lock::~Lock() (1 samples, 0.58%)</title><rect x="686.3" y="613" width="6.9" height="15.0" fill="rgb(211,218,31)" rx="2" ry="2" />
<text  x="689.26" y="623.5" ></text>
</g>
<g >
<title>content::ContentMainRunnerImpl::Run(bool) (171 samples, 100.00%)</title><rect x="10.0" y="981" width="1180.0" height="15.0" fill="rgb(236,110,3)" rx="2" ry="2" />
<text  x="13.00" y="991.5" >content::ContentMainRunnerImpl::Run(bool)</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 1.17%)</title><rect x="920.9" y="597" width="13.8" height="15.0" fill="rgb(234,117,28)" rx="2" ry="2" />
<text  x="923.88" y="607.5" ></text>
</g>
<g >
<title>blink::HTMLMediaElement::currentTime() const (1 samples, 0.58%)</title><rect x="299.8" y="549" width="6.9" height="15.0" fill="rgb(238,93,13)" rx="2" ry="2" />
<text  x="302.82" y="559.5" ></text>
</g>
<g >
<title>blink::Node::HandleLocalEvents(blink::Event&amp;) (8 samples, 4.68%)</title><rect x="299.8" y="613" width="55.2" height="15.0" fill="rgb(243,72,27)" rx="2" ry="2" />
<text  x="302.82" y="623.5" >blink..</text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (5 samples, 2.92%)</title><rect x="506.8" y="485" width="34.5" height="15.0" fill="rgb(212,193,0)" rx="2" ry="2" />
<text  x="509.84" y="495.5" >bl..</text>
</g>
<g >
<title>base::internal::Invoker&lt;base::internal::BindState&lt;void (blink::TimerBase::*)(), base::WeakPtr&lt;blink::TimerBase&gt; &gt;, void ()&gt;::RunOnce(base::internal::BindStateBase*) (17 samples, 9.94%)</title><rect x="182.5" y="677" width="117.3" height="15.0" fill="rgb(226,212,3)" rx="2" ry="2" />
<text  x="185.51" y="687.5" >base::internal..</text>
</g>
<g >
<title>blink::PaintLayer::GetScrollingCoordinator() (1 samples, 0.58%)</title><rect x="444.7" y="373" width="6.9" height="15.0" fill="rgb(215,86,10)" rx="2" ry="2" />
<text  x="447.74" y="383.5" ></text>
</g>
<g >
<title>base::Lock::AssertAcquired() const (1 samples, 0.58%)</title><rect x="562.0" y="661" width="6.9" height="15.0" fill="rgb(206,205,16)" rx="2" ry="2" />
<text  x="565.05" y="671.5" ></text>
</g>
<g >
<title>blink::WebString::length() const (1 samples, 0.58%)</title><rect x="223.9" y="261" width="6.9" height="15.0" fill="rgb(213,132,24)" rx="2" ry="2" />
<text  x="226.92" y="271.5" ></text>
</g>
<g >
<title>_pthread_mutex_unlock_init_slow (1 samples, 0.58%)</title><rect x="10.0" y="853" width="6.9" height="15.0" fill="rgb(239,135,44)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>blink::PrePaintTreeWalk::Walk(blink::LayoutObject const&amp;) (2 samples, 1.17%)</title><rect x="506.8" y="373" width="13.8" height="15.0" fill="rgb(253,99,15)" rx="2" ry="2" />
<text  x="509.84" y="383.5" ></text>
</g>
<g >
<title>mk_timer_arm (3 samples, 1.75%)</title><rect x="134.2" y="677" width="20.7" height="15.0" fill="rgb(219,189,49)" rx="2" ry="2" />
<text  x="137.21" y="687.5" ></text>
</g>
<g >
<title>WTF::HashTable&lt;blink::DisplayItemClient const*, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::PartitionAllocator&gt;::Rehash(unsigned int, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;*) (1 samples, 0.58%)</title><rect x="472.3" y="69" width="6.9" height="15.0" fill="rgb(216,193,30)" rx="2" ry="2" />
<text  x="475.34" y="79.5" ></text>
</g>
<g >
<title>CFAbsoluteTimeGetCurrent (4 samples, 2.34%)</title><rect x="51.4" y="837" width="27.6" height="15.0" fill="rgb(247,13,20)" rx="2" ry="2" />
<text  x="54.40" y="847.5" >C..</text>
</g>
<g >
<title>blink::LocalFrameView::UpdateLifecyclePhasesInternal(blink::DocumentLifecycle::LifecycleState) (16 samples, 9.36%)</title><rect x="437.8" y="549" width="110.4" height="15.0" fill="rgb(217,54,12)" rx="2" ry="2" />
<text  x="440.84" y="559.5" >blink::LocalF..</text>
</g>
<g >
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.58%)</title><rect x="948.5" y="613" width="6.9" height="15.0" fill="rgb(224,143,16)" rx="2" ry="2" />
<text  x="951.48" y="623.5" ></text>
</g>
<g >
<title>blink::PaintArtifactCompositor::Update(scoped_refptr&lt;blink::PaintArtifact const&gt;, blink::PaintArtifactCompositor::ViewportProperties const&amp;, blink::PaintArtifactCompositor::Settings const&amp;) (1 samples, 0.58%)</title><rect x="486.1" y="501" width="6.9" height="15.0" fill="rgb(213,180,41)" rx="2" ry="2" />
<text  x="489.14" y="511.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::PostTask(base::sequence_manager::internal::PostedTask) (1 samples, 0.58%)</title><rect x="286.0" y="117" width="6.9" height="15.0" fill="rgb(208,173,10)" rx="2" ry="2" />
<text  x="289.02" y="127.5" ></text>
</g>
<g >
<title>blink::GraphicsLayer::PaintRecursively() (2 samples, 1.17%)</title><rect x="472.3" y="501" width="13.8" height="15.0" fill="rgb(247,69,41)" rx="2" ry="2" />
<text  x="475.34" y="511.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.58%)</title><rect x="914.0" y="597" width="6.9" height="15.0" fill="rgb(209,71,51)" rx="2" ry="2" />
<text  x="916.98" y="607.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::is_end() const (1 samples, 0.58%)</title><rect x="893.3" y="629" width="6.9" height="15.0" fill="rgb(236,160,29)" rx="2" ry="2" />
<text  x="896.27" y="639.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintFragmentWithPhase(blink::PaintPhase, blink::PaintLayerFragment const&amp;, blink::GraphicsContext&amp;, blink::ClipRect const&amp;, blink::PaintLayerPaintingInfo const&amp;, unsigned int) (1 samples, 0.58%)</title><rect x="479.2" y="261" width="6.9" height="15.0" fill="rgb(215,21,41)" rx="2" ry="2" />
<text  x="482.24" y="271.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::ConsoleCall(v8::internal::Isolate*, v8::internal::BuiltinArguments&amp;, void (v8::debug::ConsoleDelegate::*)(v8::debug::ConsoleCallArguments const&amp;, v8::debug::ConsoleContext const&amp;)) (2 samples, 1.17%)</title><rect x="223.9" y="405" width="13.8" height="15.0" fill="rgb(219,137,19)" rx="2" ry="2" />
<text  x="226.92" y="415.5" ></text>
</g>
<g >
<title>v8::internal::Builtin_ConsoleLog(int, unsigned long*, v8::internal::Isolate*) (2 samples, 1.17%)</title><rect x="223.9" y="437" width="13.8" height="15.0" fill="rgb(246,3,39)" rx="2" ry="2" />
<text  x="226.92" y="447.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::NotifyWillProcessTask(base::PendingTask const&amp;) (1 samples, 0.58%)</title><rect x="955.4" y="645" width="6.9" height="15.0" fill="rgb(226,53,39)" rx="2" ry="2" />
<text  x="958.38" y="655.5" ></text>
</g>
<g >
<title>cc::ProxyMain::SendCommitRequestToImplThreadIfNeeded(cc::ProxyMain::CommitPipelineStage) (2 samples, 1.17%)</title><rect x="265.3" y="469" width="13.8" height="15.0" fill="rgb(212,196,31)" rx="2" ry="2" />
<text  x="268.32" y="479.5" ></text>
</g>
<g >
<title>blink::V8EventHandlerNonNull::InvokeWithoutRunnabilityCheck(blink::bindings::V8ValueOrScriptWrappableAdapter, WTF::Vector&lt;blink::ScriptValue, 0u, WTF::PartitionAllocator&gt; const&amp;) (1 samples, 0.58%)</title><rect x="286.0" y="549" width="6.9" height="15.0" fill="rgb(230,68,8)" rx="2" ry="2" />
<text  x="289.02" y="559.5" ></text>
</g>
<g >
<title>base::TaskToken::GetForCurrentThread() (1 samples, 0.58%)</title><rect x="658.7" y="613" width="6.9" height="15.0" fill="rgb(246,159,43)" rx="2" ry="2" />
<text  x="661.65" y="623.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::SequenceManagerImpl::TakeTask() (1 samples, 0.58%)</title><rect x="168.7" y="709" width="6.9" height="15.0" fill="rgb(223,121,35)" rx="2" ry="2" />
<text  x="171.71" y="719.5" ></text>
</g>
<g >
<title>non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork() (124 samples, 72.51%)</title><rect x="182.5" y="741" width="855.7" height="15.0" fill="rgb(238,219,34)" rx="2" ry="2" />
<text  x="185.51" y="751.5" >non-virtual thunk to base::sequence_manager::internal::ThreadControllerWithMessagePumpImpl::DoWork()</text>
</g>
<g >
<title>blink::scheduler::MainThreadSchedulerImpl::OnTaskCompleted(base::WeakPtr&lt;blink::scheduler::MainThreadTaskQueue&gt;, base::sequence_manager::Task const&amp;, base::sequence_manager::TaskQueue::TaskTiming*, base::sequence_manager::LazyNow*) (14 samples, 8.19%)</title><rect x="693.2" y="645" width="96.6" height="15.0" fill="rgb(242,139,48)" rx="2" ry="2" />
<text  x="696.16" y="655.5" >blink::sche..</text>
</g>
<g >
<title>void blink::(anonymous namespace)::SetDebugName&lt;blink::TransformPaintPropertyNode&gt;(blink::TransformPaintPropertyNode const*, WTF::String const&amp;, blink::LayoutObject const&amp;) (1 samples, 0.58%)</title><rect x="534.4" y="421" width="6.9" height="15.0" fill="rgb(224,53,18)" rx="2" ry="2" />
<text  x="537.44" y="431.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::SequenceManagerImpl::NotifyWillProcessTask(base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask*, base::sequence_manager::LazyNow*) (17 samples, 9.94%)</title><rect x="865.7" y="661" width="117.3" height="15.0" fill="rgb(235,172,42)" rx="2" ry="2" />
<text  x="868.67" y="671.5" >base::sequence..</text>
</g>
<g >
<title>Builtins_JSEntry (5 samples, 2.92%)</title><rect x="203.2" y="501" width="34.5" height="15.0" fill="rgb(252,115,45)" rx="2" ry="2" />
<text  x="206.22" y="511.5" >Bu..</text>
</g>
<g >
<title>WTF::HashTable&lt;blink::DisplayItemClient const*, WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;, WTF::KeyValuePairKeyExtractor, WTF::PtrHash&lt;blink::DisplayItemClient const&gt;, WTF::HashMapValueTraits&lt;WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::HashTraits&lt;WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt; &gt;, WTF::HashTraits&lt;blink::DisplayItemClient const*&gt;, WTF::PartitionAllocator&gt;::Expand(WTF::KeyValuePair&lt;blink::DisplayItemClient const*, WTF::Vector&lt;unsigned long, 0u, WTF::PartitionAllocator&gt; &gt;*) (1 samples, 0.58%)</title><rect x="472.3" y="85" width="6.9" height="15.0" fill="rgb(216,34,34)" rx="2" ry="2" />
<text  x="475.34" y="95.5" ></text>
</g>
<g >
<title>blink::GCTaskObserver::DidProcessTask(base::PendingTask const&amp;) (1 samples, 0.58%)</title><rect x="789.8" y="677" width="6.9" height="15.0" fill="rgb(241,209,43)" rx="2" ry="2" />
<text  x="792.77" y="687.5" ></text>
</g>
<g >
<title>blink::PaintLayerPainter::PaintForegroundForFragments(WTF::Vector&lt;blink::PaintLayerFragment, 1u, WTF::PartitionAllocator&gt; const&amp;, blink::GraphicsContext&amp;, blink::PaintLayerPaintingInfo const&amp;, bool, bool, unsigned int) (1 samples, 0.58%)</title><rect x="479.2" y="293" width="6.9" height="15.0" fill="rgb(249,170,6)" rx="2" ry="2" />
<text  x="482.24" y="303.5" ></text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (2 samples, 1.17%)</title><rect x="989.9" y="645" width="13.8" height="15.0" fill="rgb(253,221,14)" rx="2" ry="2" />
<text  x="992.88" y="655.5" ></text>
</g>
<g >
<title>blink::DOMTimer::Fired() (6 samples, 3.51%)</title><rect x="203.2" y="645" width="41.4" height="15.0" fill="rgb(221,87,15)" rx="2" ry="2" />
<text  x="206.22" y="655.5" >bli..</text>
</g>
<g >
<title>blink::WebViewFrameWidget::EndCommitCompositorFrame() (1 samples, 0.58%)</title><rect x="396.4" y="613" width="6.9" height="15.0" fill="rgb(238,229,0)" rx="2" ry="2" />
<text  x="399.43" y="623.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1 samples, 0.58%)</title><rect x="286.0" y="421" width="6.9" height="15.0" fill="rgb(231,158,15)" rx="2" ry="2" />
<text  x="289.02" y="431.5" ></text>
</g>
<g >
<title>blink::LayoutReplaced::Paint(blink::PaintInfo const&amp;) const (1 samples, 0.58%)</title><rect x="479.2" y="213" width="6.9" height="15.0" fill="rgb(223,184,52)" rx="2" ry="2" />
<text  x="482.24" y="223.5" ></text>
</g>
<g >
<title>blink::Event::InitEventPath(blink::Node&amp;) (1 samples, 0.58%)</title><rect x="361.9" y="629" width="6.9" height="15.0" fill="rgb(210,123,39)" rx="2" ry="2" />
<text  x="364.93" y="639.5" ></text>
</g>
<g >
<title>base::internal::CallbackBase::IsCancelled() const (1 samples, 0.58%)</title><rect x="1003.7" y="645" width="6.9" height="15.0" fill="rgb(246,156,28)" rx="2" ry="2" />
<text  x="1006.68" y="655.5" ></text>
</g>
<g >
<title>base::sequence_manager::internal::TaskQueueImpl::MoveReadyDelayedTasksToWorkQueue(base::sequence_manager::LazyNow*) (1 samples, 0.58%)</title><rect x="845.0" y="629" width="6.9" height="15.0" fill="rgb(218,77,13)" rx="2" ry="2" />
<text  x="847.97" y="639.5" ></text>
</g>
<g >
<title>blink::HeapAllocator::FreeVectorBacking(void*) (1 samples, 0.58%)</title><rect x="279.1" y="645" width="6.9" height="15.0" fill="rgb(223,64,28)" rx="2" ry="2" />
<text  x="282.12" y="655.5" ></text>
</g>
<g >
<title>blink::scheduler::IdleHelper::DidProcessTask(base::PendingTask const&amp;) (1 samples, 0.58%)</title><rect x="796.7" y="677" width="6.9" height="15.0" fill="rgb(254,204,24)" rx="2" ry="2" />
<text  x="799.67" y="687.5" ></text>
</g>
<g >
<title>blink::MediaControlsImpl::OnTimeUpdate() (5 samples, 2.92%)</title><rect x="306.7" y="565" width="34.5" height="15.0" fill="rgb(218,132,12)" rx="2" ry="2" />
<text  x="309.73" y="575.5" >bl..</text>
</g>
<g >
<title>base::ThreadCheckerImpl::CalledOnValidThread() const (1 samples, 0.58%)</title><rect x="168.7" y="645" width="6.9" height="15.0" fill="rgb(226,149,35)" rx="2" ry="2" />
<text  x="171.71" y="655.5" ></text>
</g>
<g >
<title>SkNoDrawCanvas::SkNoDrawCanvas(int, int) (1 samples, 0.58%)</title><rect x="410.2" y="517" width="6.9" height="15.0" fill="rgb(242,98,28)" rx="2" ry="2" />
<text  x="413.23" y="527.5" ></text>
</g>
<g >
<title>blink::LayoutBoxModelObject::PushMappingToContainer(blink::LayoutBoxModelObject const*, blink::LayoutGeometryMap&amp;) const (1 samples, 0.58%)</title><rect x="437.8" y="373" width="6.9" height="15.0" fill="rgb(224,189,24)" rx="2" ry="2" />
<text  x="440.84" y="383.5" ></text>
</g>
<g >
<title>blink::BoxPainter::PaintBoxDecorationBackground(blink::PaintInfo const&amp;, blink::PhysicalOffset const&amp;) (1 samples, 0.58%)</title><rect x="472.3" y="197" width="6.9" height="15.0" fill="rgb(224,3,49)" rx="2" ry="2" />
<text  x="475.34" y="207.5" ></text>
</g>
<g >
<title>media::PaintCanvasVideoRenderer::ResetCache() (1 samples, 0.58%)</title><rect x="548.2" y="661" width="6.9" height="15.0" fill="rgb(247,212,10)" rx="2" ry="2" />
<text  x="551.25" y="671.5" ></text>
</g>
<g >
<title>base::ThreadLocalStorage::Slot::Get() const (1 samples, 0.58%)</title><rect x="1003.7" y="549" width="6.9" height="15.0" fill="rgb(215,11,47)" rx="2" ry="2" />
<text  x="1006.68" y="559.5" ></text>
</g>
<g >
<title>blink::PaintLayer::RenderingContextRoot() (1 samples, 0.58%)</title><rect x="451.6" y="373" width="6.9" height="15.0" fill="rgb(230,30,35)" rx="2" ry="2" />
<text  x="454.64" y="383.5" ></text>
</g>
<g >
<title>base::internal::LockImpl::Unlock() (1 samples, 0.58%)</title><rect x="624.2" y="645" width="6.9" height="15.0" fill="rgb(224,149,49)" rx="2" ry="2" />
<text  x="627.15" y="655.5" ></text>
</g>
<g >
<title>base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter::operator!=(base::ObserverList&lt;base::TaskObserver, false, true, base::internal::UncheckedObserverAdapter&gt;::Iter const&amp;) const (1 samples, 0.58%)</title><rect x="893.3" y="645" width="6.9" height="15.0" fill="rgb(220,208,31)" rx="2" ry="2" />
<text  x="896.27" y="655.5" ></text>
</g>
<g >
<title>WTF::HashTable&lt;void const*, void const*, WTF::IdentityExtractor, WTF::PtrHash&lt;void const&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::HashTraits&lt;void const*&gt;, WTF::PartitionAllocator&gt;::Rehash(unsigned int, void const**) (1 samples, 0.58%)</title><rect x="486.1" y="437" width="6.9" height="15.0" fill="rgb(212,139,2)" rx="2" ry="2" />
<text  x="489.14" y="447.5" ></text>
</g>
<g >
<title>blink::MainThreadDebugger::consoleAPIMessage(int, v8::Isolate::MessageErrorLevel, v8_inspector::StringView const&amp;, v8_inspector::StringView const&amp;, unsigned int, unsigned int, v8_inspector::V8StackTrace*) (1 samples, 0.58%)</title><rect x="223.9" y="325" width="6.9" height="15.0" fill="rgb(206,32,1)" rx="2" ry="2" />
<text  x="226.92" y="335.5" ></text>
</g>
<g >
<title>blink::RootScrollerController::PerformRootScrollerSelection() (1 samples, 0.58%)</title><rect x="541.3" y="517" width="6.9" height="15.0" fill="rgb(251,49,54)" rx="2" ry="2" />
<text  x="544.35" y="527.5" ></text>
</g>
<g >
<title>base::Histogram::bucket_count() const (1 samples, 0.58%)</title><rect x="741.5" y="549" width="6.9" height="15.0" fill="rgb(242,147,22)" rx="2" ry="2" />
<text  x="744.46" y="559.5" ></text>
</g>
<g >
<title>blink::EventPath::EventPath(blink::Node&amp;, blink::Event*) (1 samples, 0.58%)</title><rect x="361.9" y="597" width="6.9" height="15.0" fill="rgb(222,61,2)" rx="2" ry="2" />
<text  x="364.93" y="607.5" ></text>
</g>
<g >
<title>base::debug::GlobalActivityTracker::ScopedThreadActivity::~ScopedThreadActivity() (1 samples, 0.58%)</title><rect x="927.8" y="565" width="6.9" height="15.0" fill="rgb(234,129,5)" rx="2" ry="2" />
<text  x="930.78" y="575.5" ></text>
</g>
</g>
</svg>
